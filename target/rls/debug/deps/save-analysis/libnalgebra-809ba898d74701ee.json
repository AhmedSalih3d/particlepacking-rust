{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0","program":"/home/aras/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","nalgebra","--edition=2018","/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","codegen-units=16","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"matrixmultiply\"","--cfg","feature=\"rand_distr\"","--cfg","feature=\"std\"","-C","metadata=809ba898d74701ee","-C","extra-filename=-809ba898d74701ee","--out-dir","/home/aras/rustlearn/target/rls/debug/deps","-L","dependency=/home/aras/rustlearn/target/rls/debug/deps","--extern","approx=/home/aras/rustlearn/target/rls/debug/deps/libapprox-42ee2ce1a78f82d4.rmeta","--extern","generic_array=/home/aras/rustlearn/target/rls/debug/deps/libgeneric_array-e9b5ebf8a9cd7c18.rmeta","--extern","matrixmultiply=/home/aras/rustlearn/target/rls/debug/deps/libmatrixmultiply-546020438c28ddc3.rmeta","--extern","num_complex=/home/aras/rustlearn/target/rls/debug/deps/libnum_complex-f10120f684f69718.rmeta","--extern","num_rational=/home/aras/rustlearn/target/rls/debug/deps/libnum_rational-6bc474e79d84a758.rmeta","--extern","num_traits=/home/aras/rustlearn/target/rls/debug/deps/libnum_traits-27c2c1570a0718fa.rmeta","--extern","rand=/home/aras/rustlearn/target/rls/debug/deps/librand-2ab2569fac5b10aa.rmeta","--extern","rand_distr=/home/aras/rustlearn/target/rls/debug/deps/librand_distr-e9edd4f32f58d5b7.rmeta","--extern","simba=/home/aras/rustlearn/target/rls/debug/deps/libsimba-7076be2b77365e09.rmeta","--extern","typenum=/home/aras/rustlearn/target/rls/debug/deps/libtypenum-535d1fbed7152f66.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/aras/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/aras/rustlearn/target/rls/debug/deps/libnalgebra-809ba898d74701ee.rmeta"},"prelude":{"crate_id":{"name":"nalgebra","disambiguator":[18423461101130185835,13084083578528544857]},"crate_root":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src","external_crates":[{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15682290646506683676,14718567046286836371]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[13518982493124233533,12391336102434922224]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7248215118149796407,5784829660206374225]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17708477222956396348,13233362623726710952]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8402686647371542786,4893528090212846480]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12429915295247123903,16936150619785298801]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3561444793845825560,808161116134598189]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15626283292208498598,10979253865745053481]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[9878202165149462890,17449959146959421140]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[749461474745232681,11698756817203002328]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[3051499033766592682,13434072314992821142]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5967091660134880975,16425511823645009085]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10102111148853945701,5773407069226950463]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7496764460755907832,13683447438519276603]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":15,"id":{"name":"approx","disambiguator":[8710915253234298933,13421068084908787187]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":16,"id":{"name":"num_traits","disambiguator":[8532797407131341094,7047414297344885843]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":17,"id":{"name":"libm","disambiguator":[1672023287679746798,1873560880948542178]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":18,"id":{"name":"matrixmultiply","disambiguator":[16516609523839146635,11095813925375373047]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":19,"id":{"name":"rawpointer","disambiguator":[3815218893293380722,10221623559801654467]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":20,"id":{"name":"rand_distr","disambiguator":[14845371407029060132,14236184783789721133]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","num":21,"id":{"name":"rand","disambiguator":[8329668702243182635,14078648299966923138]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":22,"id":{"name":"rand_core","disambiguator":[352460841300911646,18270201916894968607]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":23,"id":{"name":"getrandom","disambiguator":[2113358124298831736,7976328512176251888]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":24,"id":{"name":"cfg_if","disambiguator":[3269097660327064459,10254072770541892496]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":25,"id":{"name":"libc","disambiguator":[3374919866542441586,9755479211890641576]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":26,"id":{"name":"rand_chacha","disambiguator":[14719274229164936679,6013814909859868034]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","num":27,"id":{"name":"ppv_lite86","disambiguator":[15821550559517207561,13593335489326819063]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","num":28,"id":{"name":"simba","disambiguator":[12980947456798731159,16923101024512208234]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","num":29,"id":{"name":"num_complex","disambiguator":[13938144255780514473,11028851249050586786]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","num":30,"id":{"name":"paste","disambiguator":[7009860797704014754,18210284978701276867]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","num":31,"id":{"name":"proc_macro_hack","disambiguator":[8760754799964367462,5900792106580319916]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","num":32,"id":{"name":"paste_impl","disambiguator":[749238408305989767,5072717050182152839]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","num":33,"id":{"name":"generic_array","disambiguator":[12591057264546668726,14136051324459424049]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","num":34,"id":{"name":"typenum","disambiguator":[5690291568102631972,9961999252013637660]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","num":35,"id":{"name":"num_rational","disambiguator":[14814710394345355093,14516748260390584213]}},{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","num":36,"id":{"name":"num_integer","disambiguator":[2194837165289373897,16139785221029272305]}}],"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":0,"byte_end":14797,"line_start":1,"line_end":542,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs","byte_start":15503,"byte_end":15504,"line_start":40,"line_end":40,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"MatrixSum, SquareMatrix, Matrix, VectorSum, Vector, RowVector","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs","byte_start":15503,"byte_end":15504,"line_start":40,"line_end":40,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Norm","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs","byte_start":15503,"byte_end":15504,"line_start":40,"line_end":40,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Scalar","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs","byte_start":15503,"byte_end":15504,"line_start":40,"line_end":40,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Normed, Unit","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs","byte_start":15503,"byte_end":15504,"line_start":40,"line_end":40,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"DefaultAllocator","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs","byte_start":15503,"byte_end":15504,"line_start":40,"line_end":40,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"DimName, DimSub, U3, Dim, Dynamic, U1, DimDiff, U2","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs","byte_start":15503,"byte_end":15504,"line_start":40,"line_end":40,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"RowVectorN, Matrix3, Matrix2x3, DMatrix, Vector2, Matrix2, Vector4, Vector1, MatrixN, MatrixMN, Matrix4, Vector3, VectorN","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs","byte_start":15503,"byte_end":15504,"line_start":40,"line_end":40,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"DVectorSlice, VectorSliceN, MatrixSliceMutMN, DVectorSliceMut, MatrixSliceMN","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs","byte_start":15503,"byte_end":15504,"line_start":40,"line_end":40,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"ArrayStorage","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs","byte_start":15503,"byte_end":15504,"line_start":40,"line_end":40,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"SliceStorage, MatrixSlice, SliceStorageMut, MatrixSliceMut","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs","byte_start":15503,"byte_end":15504,"line_start":40,"line_end":40,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"VecStorage","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":3907},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs","byte_start":504169,"byte_end":504185,"line_start":89,"line_end":89,"column_start":34,"column_end":50},"alias_span":null,"name":"AbstractRotation","value":"","parent":{"krate":0,"index":3883}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs","byte_start":504209,"byte_end":504210,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Point","parent":{"krate":0,"index":3883}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs","byte_start":504209,"byte_end":504210,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Point3, Point2","parent":{"krate":0,"index":3883}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs","byte_start":504209,"byte_end":504210,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Rotation","parent":{"krate":0,"index":3883}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs","byte_start":504209,"byte_end":504210,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Rotation3, Rotation2","parent":{"krate":0,"index":3883}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs","byte_start":504209,"byte_end":504210,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Quaternion, UnitQuaternion","parent":{"krate":0,"index":3883}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs","byte_start":504209,"byte_end":504210,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"UnitComplex","parent":{"krate":0,"index":3883}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs","byte_start":504209,"byte_end":504210,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Translation","parent":{"krate":0,"index":3883}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs","byte_start":504209,"byte_end":504210,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Translation2, Translation3","parent":{"krate":0,"index":3883}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs","byte_start":504209,"byte_end":504210,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Isometry","parent":{"krate":0,"index":3883}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs","byte_start":504209,"byte_end":504210,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"IsometryMatrix3","parent":{"krate":0,"index":3883}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs","byte_start":504209,"byte_end":504210,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Similarity","parent":{"krate":0,"index":3883}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs","byte_start":504209,"byte_end":504210,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":3883}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs","byte_start":504209,"byte_end":504210,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"TCategoryMul, Transform, TCategory, TProjective, SuperTCategoryOf, SubTCategoryOf, TAffine, TGeneral","parent":{"krate":0,"index":3883}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs","byte_start":504209,"byte_end":504210,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Projective3","parent":{"krate":0,"index":3883}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs","byte_start":504209,"byte_end":504210,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Reflection","parent":{"krate":0,"index":3883}},{"kind":"Use","ref_id":{"krate":0,"index":6940},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs","byte_start":504680,"byte_end":504693,"line_start":115,"line_end":115,"column_start":29,"column_end":42},"alias_span":null,"name":"Orthographic3","value":"","parent":{"krate":0,"index":3883}},{"kind":"Use","ref_id":{"krate":0,"index":7014},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs","byte_start":504722,"byte_end":504734,"line_start":116,"line_end":116,"column_start":28,"column_end":40},"alias_span":null,"name":"Perspective3","value":"","parent":{"krate":0,"index":3883}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs","byte_start":1028319,"byte_end":1028320,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"Bidiagonal","parent":{"krate":0,"index":7080}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs","byte_start":1028319,"byte_end":1028320,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7080}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs","byte_start":1028319,"byte_end":1028320,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7080}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs","byte_start":1028319,"byte_end":1028320,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7080}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs","byte_start":1028319,"byte_end":1028320,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"Hessenberg","parent":{"krate":0,"index":7080}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs","byte_start":1028319,"byte_end":1028320,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"LU","parent":{"krate":0,"index":7080}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs","byte_start":1028319,"byte_end":1028320,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"PermutationSequence","parent":{"krate":0,"index":7080}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs","byte_start":1028319,"byte_end":1028320,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7080}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs","byte_start":1028319,"byte_end":1028320,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7080}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs","byte_start":1028319,"byte_end":1028320,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7080}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs","byte_start":1028319,"byte_end":1028320,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7080}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs","byte_start":1028319,"byte_end":1028320,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"SymmetricTridiagonal","parent":{"krate":0,"index":7080}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4278,"byte_end":4279,"line_start":135,"line_end":135,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"DimName, U3, DefaultAllocator, Dim, storage, U1, VectorSliceN, Matrix, Norm, U2, VectorN, Scalar, Unit, allocator, dimension, constraint, Vector, Normed, MatrixMN, RowVectorN","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4278,"byte_end":4279,"line_start":135,"line_end":135,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Point","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4278,"byte_end":4279,"line_start":135,"line_end":135,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4537,"byte_end":4541,"line_start":144,"line_end":144,"column_start":9,"column_end":13},"alias_span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4545,"byte_end":4549,"line_start":144,"line_end":144,"column_start":17,"column_end":21},"name":"core","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":29,"index":471},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4712,"byte_end":4719,"line_start":152,"line_end":152,"column_start":22,"column_end":29},"alias_span":null,"name":"Complex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":143},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4750,"byte_end":4759,"line_start":154,"line_end":154,"column_start":5,"column_end":14},"alias_span":null,"name":"ClosedAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":149},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4761,"byte_end":4770,"line_start":154,"line_end":154,"column_start":16,"column_end":25},"alias_span":null,"name":"ClosedDiv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":147},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4772,"byte_end":4781,"line_start":154,"line_end":154,"column_start":27,"column_end":36},"alias_span":null,"name":"ClosedMul","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":145},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4783,"byte_end":4792,"line_start":154,"line_end":154,"column_start":38,"column_end":47},"alias_span":null,"name":"ClosedSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":71},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4794,"byte_end":4806,"line_start":154,"line_end":154,"column_start":49,"column_end":61},"alias_span":null,"name":"ComplexField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":166},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4808,"byte_end":4813,"line_start":154,"line_end":154,"column_start":63,"column_end":68},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":28},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4815,"byte_end":4824,"line_start":154,"line_end":154,"column_start":70,"column_end":79},"alias_span":null,"name":"RealField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":216},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4851,"byte_end":4859,"line_start":156,"line_end":156,"column_start":23,"column_end":31},"alias_span":null,"name":"SimdBool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":283},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4861,"byte_end":4877,"line_start":156,"line_end":156,"column_start":33,"column_end":49},"alias_span":null,"name":"SimdComplexField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":360},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4879,"byte_end":4893,"line_start":156,"line_end":156,"column_start":51,"column_end":65},"alias_span":null,"name":"SimdPartialOrd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":387},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4895,"byte_end":4908,"line_start":156,"line_end":156,"column_start":67,"column_end":80},"alias_span":null,"name":"SimdRealField","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":0,"byte_end":14797,"line_start":1,"line_end":542,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":3883},{"krate":0,"index":7080},{"krate":0,"index":7954},{"krate":0,"index":7955},{"krate":0,"index":7956},{"krate":0,"index":7957},{"krate":0,"index":7958},{"krate":0,"index":7959},{"krate":0,"index":7963},{"krate":0,"index":7967},{"krate":0,"index":7968},{"krate":0,"index":7969},{"krate":0,"index":7977},{"krate":0,"index":7982},{"krate":0,"index":7984},{"krate":0,"index":7986},{"krate":0,"index":7988},{"krate":0,"index":7990},{"krate":0,"index":7992},{"krate":0,"index":7994},{"krate":0,"index":7996},{"krate":0,"index":8000},{"krate":0,"index":8004},{"krate":0,"index":8008},{"krate":0,"index":8010},{"krate":0,"index":8012},{"krate":0,"index":8014},{"krate":0,"index":8016},{"krate":0,"index":8018},{"krate":0,"index":8021},{"krate":0,"index":8024},{"krate":0,"index":8027},{"krate":0,"index":8030},{"krate":0,"index":8033},{"krate":0,"index":8036},{"krate":0,"index":8039},{"krate":0,"index":8042},{"krate":0,"index":8045},{"krate":0,"index":8048},{"krate":0,"index":8051},{"krate":0,"index":8054},{"krate":0,"index":8057}],"decl_id":null,"docs":"# nalgebra","sig":null,"attributes":[{"value":"!\n# nalgebra\n\n**nalgebra** is a linear algebra library written for Rust targeting:\n\n* General-purpose linear algebra (still lacks a lot of features…)\n* Real-time computer graphics.\n* Real-time computer physics.\n\n## Using **nalgebra**\nYou will need the last stable build of the [rust compiler](https://www.rust-lang.org)\nand the official package manager: [cargo](https://github.com/rust-lang/cargo).\n\nSimply add the following to your `Cargo.toml` file:\n\n```.ignore\n[dependencies]\nnalgebra = \"0.18\"\n```\n\n\nMost useful functionalities of **nalgebra** are grouped in the root module `nalgebra::`.\n\nHowever, the recommended way to use **nalgebra** is to import types and traits\nexplicitly, and call free-functions using the `na::` prefix:\n\n```.rust\n#[macro_use]\nextern crate approx; // For the macro relative_eq!\nextern crate nalgebra as na;\nuse na::{Vector3, Rotation3};\n\nfn main() {\n    let axis  = Vector3::x_axis();\n    let angle = 1.57;\n    let b     = Rotation3::from_axis_angle(&axis, angle);\n\n    relative_eq!(b.axis().unwrap(), axis);\n    relative_eq!(b.angle(), angle);\n}\n```\n\n\n## Features\n**nalgebra** is meant to be a general-purpose, low-dimensional, linear algebra library, with\nan optimized set of tools for computer graphics and physics. Those features include:\n\n* A single parametrizable type `Matrix` for vectors, (square or rectangular) matrices, and slices\n  with dimensions known either at compile-time (using type-level integers) or at runtime.\n* Matrices and vectors with compile-time sizes are statically allocated while dynamic ones are\n  allocated on the heap.\n* Convenient aliases for low-dimensional matrices and vectors: `Vector1` to `Vector6` and\n  `Matrix1x1` to `Matrix6x6`, including rectangular matrices like `Matrix2x5`.\n* Points sizes known at compile time, and convenience aliases: `Point1` to `Point6`.\n* Translation (seen as a transformation that composes by multiplication): `Translation2`,\n  `Translation3`.\n* Rotation matrices: `Rotation2`, `Rotation3`.\n* Quaternions: `Quaternion`, `UnitQuaternion` (for 3D rotation).\n* Unit complex numbers can be used for 2D rotation: `UnitComplex`.\n* Algebraic entities with a norm equal to one: `Unit<T>`, e.g., `Unit<Vector3<f32>>`.\n* Isometries (translation ⨯ rotation): `Isometry2`, `Isometry3`\n* Similarity transformations (translation ⨯ rotation ⨯ uniform scale): `Similarity2`, `Similarity3`.\n* Affine transformations stored as a homogeneous matrix: `Affine2`, `Affine3`.\n* Projective (i.e. invertible) transformations stored as a homogeneous matrix: `Projective2`,\n  `Projective3`.\n* General transformations that does not have to be invertible, stored as a homogeneous matrix:\n  `Transform2`, `Transform3`.\n* 3D projections for computer graphics: `Perspective3`, `Orthographic3`.\n* Matrix factorizations: `Cholesky`, `QR`, `LU`, `FullPivLU`, `SVD`, `Schur`, `Hessenberg`, `SymmetricEigen`.\n* Insertion and removal of rows of columns of a matrix.\n*/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":0,"byte_end":2939,"line_start":1,"line_end":71,"column_start":1,"column_end":3}},{"value":"deny(non_camel_case_types)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":2990,"byte_end":3020,"line_start":77,"line_end":77,"column_start":1,"column_end":31}},{"value":"deny(unused_parens)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":3021,"byte_end":3044,"line_start":78,"line_end":78,"column_start":1,"column_end":24}},{"value":"deny(non_upper_case_globals)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":3045,"byte_end":3077,"line_start":79,"line_end":79,"column_start":1,"column_end":33}},{"value":"deny(unused_qualifications)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":3078,"byte_end":3109,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"deny(unused_results)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":3110,"byte_end":3134,"line_start":81,"line_end":81,"column_start":1,"column_end":25}},{"value":"deny(missing_docs)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":3135,"byte_end":3157,"line_start":82,"line_end":82,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"base","qualname":"::base","value":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":62},{"krate":0,"index":316},{"krate":0,"index":360},{"krate":0,"index":380},{"krate":0,"index":463},{"krate":0,"index":584},{"krate":0,"index":715},{"krate":0,"index":1005},{"krate":0,"index":1073},{"krate":0,"index":1204},{"krate":0,"index":1815},{"krate":0,"index":1919},{"krate":0,"index":2014},{"krate":0,"index":2065},{"krate":0,"index":2190},{"krate":0,"index":2238},{"krate":0,"index":2471},{"krate":0,"index":2627},{"krate":0,"index":2778},{"krate":0,"index":3213},{"krate":0,"index":3239},{"krate":0,"index":3396},{"krate":0,"index":3555},{"krate":0,"index":3595},{"krate":0,"index":3606},{"krate":0,"index":3668},{"krate":0,"index":3681},{"krate":0,"index":3755},{"krate":0,"index":3861},{"krate":0,"index":3872},{"krate":0,"index":3873},{"krate":0,"index":3874},{"krate":0,"index":3875},{"krate":0,"index":3876},{"krate":0,"index":3877},{"krate":0,"index":3878},{"krate":0,"index":3879},{"krate":0,"index":3880},{"krate":0,"index":3881},{"krate":0,"index":3882}],"decl_id":null,"docs":" [Reexported at the root of this crate.] Data structures for vector and matrix computations.\n","sig":null,"attributes":[{"value":"! [Reexported at the root of this crate.] Data structures for vector and matrix computations.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs","byte_start":14799,"byte_end":14894,"line_start":1,"line_end":1,"column_start":1,"column_end":96}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"allocator","qualname":"::base::allocator","value":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":29},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":48},{"krate":0,"index":54},{"krate":0,"index":58}],"decl_id":null,"docs":" Abstract definition of a matrix data storage allocator.\n","sig":null,"attributes":[{"value":"! Abstract definition of a matrix data storage allocator.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":15839,"byte_end":15898,"line_start":1,"line_end":1,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":21},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":16569,"byte_end":16578,"line_start":19,"line_end":19,"column_start":11,"column_end":20},"name":"Allocator","qualname":"::base::allocator::Allocator","value":"Allocator<N: Scalar, R: Dim, C: Dim = U1>: Any + Sized","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27}],"decl_id":null,"docs":" A matrix allocator of a memory buffer that may contain `R::to_usize() * C::to_usize()`\n elements of type `N`.","sig":null,"attributes":[{"value":"/ A matrix allocator of a memory buffer that may contain `R::to_usize() * C::to_usize()`","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":16140,"byte_end":16230,"line_start":10,"line_end":10,"column_start":1,"column_end":91}},{"value":"/ elements of type `N`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":16231,"byte_end":16256,"line_start":11,"line_end":11,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":16257,"byte_end":16260,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ An allocator is said to be:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":16261,"byte_end":16292,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/   − static:  if `R` and `C` both implement `DimName`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":16293,"byte_end":16352,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/   − dynamic: if either one (or both) of `R` or `C` is equal to `Dynamic`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":16353,"byte_end":16432,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":16433,"byte_end":16436,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Every allocator must be both static and dynamic. Though not all implementations may share the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":16437,"byte_end":16534,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"/ same `Buffer` type.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":16535,"byte_end":16558,"line_start":18,"line_end":18,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":25},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":16694,"byte_end":16700,"line_start":21,"line_end":21,"column_start":10,"column_end":16},"name":"Buffer","qualname":"::base::allocator::Allocator::Buffer","value":"type Buffer: ContiguousStorageMut<N, R, C> + Clone;","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" The type of buffer this allocator can instanciate.\n","sig":null,"attributes":[{"value":"/ The type of buffer this allocator can instanciate.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":16630,"byte_end":16684,"line_start":20,"line_end":20,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":16859,"byte_end":16881,"line_start":24,"line_end":24,"column_start":15,"column_end":37},"name":"allocate_uninitialized","qualname":"::base::allocator::Allocator::allocate_uninitialized","value":"fn (nrows: R, ncols: C) -> Self::Buffer","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" Allocates a buffer with the given number of rows and columns without initializing its content.\n","sig":null,"attributes":[{"value":"/ Allocates a buffer with the given number of rows and columns without initializing its content.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":16746,"byte_end":16844,"line_start":23,"line_end":23,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":17006,"byte_end":17028,"line_start":27,"line_end":27,"column_start":8,"column_end":30},"name":"allocate_from_iterator","qualname":"::base::allocator::Allocator::allocate_from_iterator","value":"fn <I> (nrows: R, ncols: C, iter: I) -> Self::Buffer","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" Allocates a buffer initialized with the content of the given iterator.\n","sig":null,"attributes":[{"value":"/ Allocates a buffer initialized with the content of the given iterator.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":16924,"byte_end":16998,"line_start":26,"line_end":26,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":29},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":17304,"byte_end":17315,"line_start":36,"line_end":36,"column_start":11,"column_end":22},"name":"Reallocator","qualname":"::base::allocator::Reallocator","value":"Reallocator<N: Scalar, RFrom: Dim, CFrom: Dim, RTo: Dim, CTo: Dim>: Allocator<N, RFrom, CFrom> + Allocator<N, RTo, CTo>","parent":null,"children":[{"krate":0,"index":35}],"decl_id":null,"docs":" A matrix reallocator. Changes the size of the memory buffer that initially contains (RFrom ×\n CFrom) elements to a smaller or larger size (RTo, CTo).\n","sig":null,"attributes":[{"value":"/ A matrix reallocator. Changes the size of the memory buffer that initially contains (RFrom ×","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":17136,"byte_end":17233,"line_start":34,"line_end":34,"column_start":1,"column_end":97}},{"value":"/ CFrom) elements to a smaller or larger size (RTo, CTo).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":17234,"byte_end":17293,"line_start":35,"line_end":35,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":17925,"byte_end":17940,"line_start":46,"line_end":46,"column_start":15,"column_end":30},"name":"reallocate_copy","qualname":"::base::allocator::Reallocator::reallocate_copy","value":"fn (nrows: RTo, ncols: CTo, buf: <Self as Allocator<N, RFrom, CFrom>>::Buffer) -> <Self as Allocator<N, RTo, CTo>>::Buffer","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Reallocates a buffer of shape `(RTo, CTo)`, possibly reusing a previously allocated buffer\n `buf`. Data stored by `buf` are linearly copied to the output:","sig":null,"attributes":[{"value":"/ Reallocates a buffer of shape `(RTo, CTo)`, possibly reusing a previously allocated buffer","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":17434,"byte_end":17528,"line_start":39,"line_end":39,"column_start":5,"column_end":99}},{"value":"/ `buf`. Data stored by `buf` are linearly copied to the output:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":17533,"byte_end":17599,"line_start":40,"line_end":40,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":17604,"byte_end":17607,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ * The copy is performed as if both were just arrays (without a matrix structure).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":17612,"byte_end":17697,"line_start":42,"line_end":42,"column_start":5,"column_end":90}},{"value":"/ * If `buf` is larger than the output size, then extra elements of `buf` are truncated.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":17702,"byte_end":17792,"line_start":43,"line_end":43,"column_start":5,"column_end":95}},{"value":"/ * If `buf` is smaller than the output size, then extra elements of the output are left","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":17797,"byte_end":17887,"line_start":44,"line_end":44,"column_start":5,"column_end":95}},{"value":"/ uninitialized.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":17892,"byte_end":17910,"line_start":45,"line_end":45,"column_start":5,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":36},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":18187,"byte_end":18197,"line_start":54,"line_end":54,"column_start":10,"column_end":20},"name":"SameShapeR","qualname":"::base::allocator::SameShapeR","value":"<ShapeConstraint as SameNumberOfRows<R1, R2>>::Representative","parent":null,"children":[],"decl_id":null,"docs":" The number of rows of the result of a componentwise operation on two matrices.\n","sig":null,"attributes":[{"value":"/ The number of rows of the result of a componentwise operation on two matrices.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":18095,"byte_end":18177,"line_start":53,"line_end":53,"column_start":1,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":39},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":18367,"byte_end":18377,"line_start":57,"line_end":57,"column_start":10,"column_end":20},"name":"SameShapeC","qualname":"::base::allocator::SameShapeC","value":"<ShapeConstraint as SameNumberOfColumns<C1, C2>>::Representative","parent":null,"children":[],"decl_id":null,"docs":" The number of columns of the result of a componentwise operation on two matrices.\n","sig":null,"attributes":[{"value":"/ The number of columns of the result of a componentwise operation on two matrices.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":18272,"byte_end":18357,"line_start":56,"line_end":56,"column_start":1,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":42},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":18565,"byte_end":18583,"line_start":61,"line_end":61,"column_start":11,"column_end":29},"name":"SameShapeAllocator","qualname":"::base::allocator::SameShapeAllocator","value":"SameShapeAllocator<N, R1, C1, R2, C2>: Allocator<N, R1, C1> + Allocator<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Restricts the given number of rows and columns to be respectively the same.\n","sig":null,"attributes":[{"value":"/ Restricts the given number of rows and columns to be respectively the same.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":18475,"byte_end":18554,"line_start":60,"line_end":60,"column_start":1,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":54},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":19256,"byte_end":19280,"line_start":87,"line_end":87,"column_start":11,"column_end":35},"name":"SameShapeVectorAllocator","qualname":"::base::allocator::SameShapeVectorAllocator","value":"SameShapeVectorAllocator<N, R1, R2>: Allocator<N, R1> + Allocator<N, SameShapeR<R1, R2>> +\nSameShapeAllocator<N, R1, U1, R2, U1>","parent":null,"children":[],"decl_id":null,"docs":" Restricts the given number of rows to be equal.\n","sig":null,"attributes":[{"value":"/ Restricts the given number of rows to be equal.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":19194,"byte_end":19245,"line_start":86,"line_end":86,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":20929,"byte_end":20935,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"icamax","qualname":"<Vector<N, D, S>>::icamax","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the largest complex or real absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the largest complex or real absolute value.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":20465,"byte_end":20560,"line_start":21,"line_end":21,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":20565,"byte_end":20568,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":20573,"byte_end":20588,"line_start":23,"line_end":23,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":20593,"byte_end":20596,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":20601,"byte_end":20608,"line_start":25,"line_end":25,"column_start":5,"column_end":12}},{"value":"/ # extern crate num_complex;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":20613,"byte_end":20644,"line_start":26,"line_end":26,"column_start":5,"column_end":36}},{"value":"/ # extern crate nalgebra;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":20649,"byte_end":20677,"line_start":27,"line_end":27,"column_start":5,"column_end":33}},{"value":"/ # use num_complex::Complex;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":20682,"byte_end":20713,"line_start":28,"line_end":28,"column_start":5,"column_end":36}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":20718,"byte_end":20746,"line_start":29,"line_end":29,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(Complex::new(11.0, 3.0), Complex::new(-15.0, 0.0), Complex::new(13.0, 5.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":20751,"byte_end":20854,"line_start":30,"line_end":30,"column_start":5,"column_end":108}},{"value":"/ assert_eq!(vec.icamax(), 2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":20859,"byte_end":20891,"line_start":31,"line_end":31,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":20896,"byte_end":20903,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":20908,"byte_end":20917,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":21728,"byte_end":21734,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"argmax","qualname":"<Vector<N, D, S>>::argmax","value":"fn (&self) -> (usize, N)","parent":null,"children":[],"decl_id":null,"docs":" Computes the index and value of the vector component with the largest value.","sig":null,"attributes":[{"value":"/ Computes the index and value of the vector component with the largest value.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":21441,"byte_end":21521,"line_start":54,"line_end":54,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":21526,"byte_end":21529,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":21534,"byte_end":21549,"line_start":56,"line_end":56,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":21554,"byte_end":21557,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":21562,"byte_end":21569,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":21574,"byte_end":21602,"line_start":59,"line_end":59,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":21607,"byte_end":21647,"line_start":60,"line_end":60,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.argmax(), (2, 13));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":21652,"byte_end":21690,"line_start":61,"line_end":61,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":21695,"byte_end":21702,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":21707,"byte_end":21716,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":22450,"byte_end":22454,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"imax","qualname":"<Vector<N, D, S>>::imax","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the largest value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the largest value.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":22181,"byte_end":22251,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":22256,"byte_end":22259,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":22264,"byte_end":22279,"line_start":84,"line_end":84,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":22284,"byte_end":22287,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":22292,"byte_end":22299,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":22304,"byte_end":22332,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":22337,"byte_end":22377,"line_start":88,"line_end":88,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.imax(), 2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":22382,"byte_end":22412,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":22417,"byte_end":22424,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":22429,"byte_end":22438,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":22787,"byte_end":22792,"line_start":106,"line_end":106,"column_start":12,"column_end":17},"name":"iamax","qualname":"<Vector<N, D, S>>::iamax","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the largest absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the largest absolute value.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":22508,"byte_end":22587,"line_start":96,"line_end":96,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":22592,"byte_end":22595,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":22600,"byte_end":22615,"line_start":98,"line_end":98,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":22620,"byte_end":22623,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":22628,"byte_end":22635,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":22640,"byte_end":22668,"line_start":101,"line_end":101,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":22673,"byte_end":22713,"line_start":102,"line_end":102,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.iamax(), 1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":22718,"byte_end":22749,"line_start":103,"line_end":103,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":22754,"byte_end":22761,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":22766,"byte_end":22775,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":23541,"byte_end":23547,"line_start":137,"line_end":137,"column_start":12,"column_end":18},"name":"argmin","qualname":"<Vector<N, D, S>>::argmin","value":"fn (&self) -> (usize, N)","parent":null,"children":[],"decl_id":null,"docs":" Computes the index and value of the vector component with the smallest value.","sig":null,"attributes":[{"value":"/ Computes the index and value of the vector component with the smallest value.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":23252,"byte_end":23333,"line_start":127,"line_end":127,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":23338,"byte_end":23341,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":23346,"byte_end":23361,"line_start":129,"line_end":129,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":23366,"byte_end":23369,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":23374,"byte_end":23381,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":23386,"byte_end":23414,"line_start":132,"line_end":132,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":23419,"byte_end":23459,"line_start":133,"line_end":133,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.argmin(), (1, -15));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":23464,"byte_end":23503,"line_start":134,"line_end":134,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":23508,"byte_end":23515,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":23520,"byte_end":23529,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":24264,"byte_end":24268,"line_start":165,"line_end":165,"column_start":12,"column_end":16},"name":"imin","qualname":"<Vector<N, D, S>>::imin","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the smallest value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the smallest value.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":23994,"byte_end":24065,"line_start":155,"line_end":155,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":24070,"byte_end":24073,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":24078,"byte_end":24093,"line_start":157,"line_end":157,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":24098,"byte_end":24101,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":24106,"byte_end":24113,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":24118,"byte_end":24146,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":24151,"byte_end":24191,"line_start":161,"line_end":161,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.imin(), 1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":24196,"byte_end":24226,"line_start":162,"line_end":162,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":24231,"byte_end":24238,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":24243,"byte_end":24252,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":24602,"byte_end":24607,"line_start":179,"line_end":179,"column_start":12,"column_end":17},"name":"iamin","qualname":"<Vector<N, D, S>>::iamin","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the smallest absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the smallest absolute value.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":24322,"byte_end":24402,"line_start":169,"line_end":169,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":24407,"byte_end":24410,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":24415,"byte_end":24430,"line_start":171,"line_end":171,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":24435,"byte_end":24438,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":24443,"byte_end":24450,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":24455,"byte_end":24483,"line_start":174,"line_end":174,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":24488,"byte_end":24528,"line_start":175,"line_end":175,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.iamin(), 0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":24533,"byte_end":24564,"line_start":176,"line_end":176,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":24569,"byte_end":24576,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":24581,"byte_end":24590,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":25801,"byte_end":25812,"line_start":217,"line_end":217,"column_start":12,"column_end":23},"name":"icamax_full","qualname":"<Matrix<N, R, C, S>>::icamax_full","value":"fn (&self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the matrix component with the largest absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the matrix component with the largest absolute value.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":25229,"byte_end":25308,"line_start":203,"line_end":203,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":25313,"byte_end":25316,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":25321,"byte_end":25336,"line_start":205,"line_end":205,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":25341,"byte_end":25344,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":25349,"byte_end":25356,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ # extern crate num_complex;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":25361,"byte_end":25392,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/ # extern crate nalgebra;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":25397,"byte_end":25425,"line_start":209,"line_end":209,"column_start":5,"column_end":33}},{"value":"/ # use num_complex::Complex;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":25430,"byte_end":25461,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":25466,"byte_end":25496,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix2x3::new(Complex::new(11.0, 1.0), Complex::new(-12.0, 2.0), Complex::new(13.0, 3.0),","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":25501,"byte_end":25605,"line_start":212,"line_end":212,"column_start":5,"column_end":109}},{"value":"/                          Complex::new(21.0, 43.0), Complex::new(22.0, 5.0), Complex::new(-23.0, 0.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":25610,"byte_end":25716,"line_start":213,"line_end":213,"column_start":5,"column_end":111}},{"value":"/ assert_eq!(mat.icamax_full(), (1, 0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":25721,"byte_end":25763,"line_start":214,"line_end":214,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":25768,"byte_end":25775,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":25780,"byte_end":25789,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":26783,"byte_end":26793,"line_start":250,"line_end":250,"column_start":12,"column_end":22},"name":"iamax_full","qualname":"<Matrix<N, R, C, S>>::iamax_full","value":"fn (&self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the matrix component with the largest absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the matrix component with the largest absolute value.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":26444,"byte_end":26523,"line_start":239,"line_end":239,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":26528,"byte_end":26531,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":26536,"byte_end":26551,"line_start":241,"line_end":241,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":26556,"byte_end":26559,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":26564,"byte_end":26571,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":26576,"byte_end":26606,"line_start":244,"line_end":244,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix2x3::new(11, -12, 13,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":26611,"byte_end":26652,"line_start":245,"line_end":245,"column_start":5,"column_end":46}},{"value":"/                          21, 22, -23);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":26657,"byte_end":26699,"line_start":246,"line_end":246,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(mat.iamax_full(), (1, 2));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":26704,"byte_end":26745,"line_start":247,"line_end":247,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":26750,"byte_end":26757,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":26762,"byte_end":26771,"line_start":249,"line_end":249,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":33791,"byte_end":33794,"line_start":438,"line_end":438,"column_start":12,"column_end":15},"name":"dot","qualname":"<Matrix<N, R, C, S>>::dot","value":"fn <R2, C2, SB> (&self, rhs: &Matrix<N, R2, C2, SB>) -> N","parent":null,"children":[],"decl_id":null,"docs":" The dot product between two vectors or matrices (seen as vectors).","sig":null,"attributes":[{"value":"/ The dot product between two vectors or matrices (seen as vectors).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":32883,"byte_end":32953,"line_start":414,"line_end":414,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":32958,"byte_end":32961,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This is equal to `self.transpose() * rhs`. For the sesquilinear complex dot product, use","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":32966,"byte_end":33058,"line_start":416,"line_end":416,"column_start":5,"column_end":97}},{"value":"/ `self.dotc(rhs)`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":33063,"byte_end":33084,"line_start":417,"line_end":417,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":33089,"byte_end":33092,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Note that this is **not** the matrix multiplication as in, e.g., numpy. For matrix","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":33097,"byte_end":33183,"line_start":419,"line_end":419,"column_start":5,"column_end":91}},{"value":"/ multiplication, use one of: `.gemm`, `.mul_to`, `.mul`, the `*` operator.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":33188,"byte_end":33265,"line_start":420,"line_end":420,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":33270,"byte_end":33273,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":33278,"byte_end":33293,"line_start":422,"line_end":422,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":33298,"byte_end":33301,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":33306,"byte_end":33313,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Matrix2x3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":33318,"byte_end":33359,"line_start":425,"line_end":425,"column_start":5,"column_end":46}},{"value":"/ let vec1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":33364,"byte_end":33407,"line_start":426,"line_end":426,"column_start":5,"column_end":48}},{"value":"/ let vec2 = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":33412,"byte_end":33455,"line_start":427,"line_end":427,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(vec1.dot(&vec2), 1.4);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":33460,"byte_end":33497,"line_start":428,"line_end":428,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":33502,"byte_end":33505,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ let mat1 = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":33510,"byte_end":33554,"line_start":430,"line_end":430,"column_start":5,"column_end":49}},{"value":"/                           4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":33559,"byte_end":33604,"line_start":431,"line_end":431,"column_start":5,"column_end":50}},{"value":"/ let mat2 = Matrix2x3::new(0.1, 0.2, 0.3,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":33609,"byte_end":33653,"line_start":432,"line_end":432,"column_start":5,"column_end":49}},{"value":"/                           0.4, 0.5, 0.6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":33658,"byte_end":33703,"line_start":433,"line_end":433,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(mat1.dot(&mat2), 9.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":33708,"byte_end":33745,"line_start":434,"line_end":434,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":33750,"byte_end":33757,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":33762,"byte_end":33765,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":33770,"byte_end":33779,"line_start":437,"line_end":437,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":34909,"byte_end":34913,"line_start":466,"line_end":466,"column_start":12,"column_end":16},"name":"dotc","qualname":"<Matrix<N, R, C, S>>::dotc","value":"fn <R2, C2, SB> (&self, rhs: &Matrix<N, R2, C2, SB>) -> N","parent":null,"children":[],"decl_id":null,"docs":" The conjugate-linear dot product between two vectors or matrices (seen as vectors).","sig":null,"attributes":[{"value":"/ The conjugate-linear dot product between two vectors or matrices (seen as vectors).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":34001,"byte_end":34088,"line_start":446,"line_end":446,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":34093,"byte_end":34096,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ This is equal to `self.adjoint() * rhs`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":34101,"byte_end":34145,"line_start":448,"line_end":448,"column_start":5,"column_end":49}},{"value":"/ For real vectors, this is identical to `self.dot(&rhs)`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":34150,"byte_end":34210,"line_start":449,"line_end":449,"column_start":5,"column_end":65}},{"value":"/ Note that this is **not** the matrix multiplication as in, e.g., numpy. For matrix","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":34215,"byte_end":34301,"line_start":450,"line_end":450,"column_start":5,"column_end":91}},{"value":"/ multiplication, use one of: `.gemm`, `.mul_to`, `.mul`, the `*` operator.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":34306,"byte_end":34383,"line_start":451,"line_end":451,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":34388,"byte_end":34391,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":34396,"byte_end":34411,"line_start":453,"line_end":453,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":34416,"byte_end":34419,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":34424,"byte_end":34431,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector2, Complex};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":34436,"byte_end":34475,"line_start":456,"line_end":456,"column_start":5,"column_end":44}},{"value":"/ let vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":34480,"byte_end":34556,"line_start":457,"line_end":457,"column_start":5,"column_end":81}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.4, 0.3), Complex::new(0.2, 0.1));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":34561,"byte_end":34637,"line_start":458,"line_end":458,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(vec1.dotc(&vec2), Complex::new(2.0, -1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":34642,"byte_end":34700,"line_start":459,"line_end":459,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":34705,"byte_end":34708,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ // Note that for complex vectors, we generally have:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":34713,"byte_end":34769,"line_start":461,"line_end":461,"column_start":5,"column_end":61}},{"value":"/ // vec1.dotc(&vec2) != vec2.dot(&vec2)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":34774,"byte_end":34816,"line_start":462,"line_end":462,"column_start":5,"column_end":47}},{"value":"/ assert_ne!(vec1.dotc(&vec2), vec1.dot(&vec2));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":34821,"byte_end":34871,"line_start":463,"line_end":463,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":34876,"byte_end":34883,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":34888,"byte_end":34897,"line_start":465,"line_end":465,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":35807,"byte_end":35813,"line_start":493,"line_end":493,"column_start":12,"column_end":18},"name":"tr_dot","qualname":"<Matrix<N, R, C, S>>::tr_dot","value":"fn <R2, C2, SB> (&self, rhs: &Matrix<N, R2, C2, SB>) -> N","parent":null,"children":[],"decl_id":null,"docs":" The dot product between the transpose of `self` and `rhs`.","sig":null,"attributes":[{"value":"/ The dot product between the transpose of `self` and `rhs`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":35161,"byte_end":35223,"line_start":475,"line_end":475,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":35228,"byte_end":35231,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":35236,"byte_end":35251,"line_start":477,"line_end":477,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":35256,"byte_end":35259,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":35264,"byte_end":35271,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, RowVector3, Matrix2x3, Matrix3x2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":35276,"byte_end":35340,"line_start":480,"line_end":480,"column_start":5,"column_end":69}},{"value":"/ let vec1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":35345,"byte_end":35388,"line_start":481,"line_end":481,"column_start":5,"column_end":48}},{"value":"/ let vec2 = RowVector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":35393,"byte_end":35439,"line_start":482,"line_end":482,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(vec1.tr_dot(&vec2), 1.4);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":35444,"byte_end":35484,"line_start":483,"line_end":483,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":35489,"byte_end":35492,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ let mat1 = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":35497,"byte_end":35541,"line_start":485,"line_end":485,"column_start":5,"column_end":49}},{"value":"/                           4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":35546,"byte_end":35591,"line_start":486,"line_end":486,"column_start":5,"column_end":50}},{"value":"/ let mat2 = Matrix3x2::new(0.1, 0.4,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":35596,"byte_end":35635,"line_start":487,"line_end":487,"column_start":5,"column_end":44}},{"value":"/                           0.2, 0.5,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":35640,"byte_end":35679,"line_start":488,"line_end":488,"column_start":5,"column_end":44}},{"value":"/                           0.3, 0.6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":35684,"byte_end":35724,"line_start":489,"line_end":489,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat1.tr_dot(&mat2), 9.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":35729,"byte_end":35769,"line_start":490,"line_end":490,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":35774,"byte_end":35781,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":35786,"byte_end":35795,"line_start":492,"line_end":492,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":37896,"byte_end":37901,"line_start":574,"line_end":574,"column_start":12,"column_end":17},"name":"axcpy","qualname":"<Vector<N, D, S>>::axcpy","value":"fn <D2, SB> (&mut self, a: N, x: &Vector<N, D2, SB>, c: N, b: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = a * x * c + b * self`.","sig":null,"attributes":[{"value":"/ Computes `self = a * x * c + b * self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":37476,"byte_end":37519,"line_start":560,"line_end":560,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":37524,"byte_end":37527,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ If `b` is zero, `self` is never read from.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":37532,"byte_end":37578,"line_start":562,"line_end":562,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":37583,"byte_end":37586,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":37591,"byte_end":37606,"line_start":564,"line_end":564,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":37611,"byte_end":37614,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":37619,"byte_end":37626,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":37631,"byte_end":37659,"line_start":567,"line_end":567,"column_start":5,"column_end":33}},{"value":"/ let mut vec1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":37664,"byte_end":37711,"line_start":568,"line_end":568,"column_start":5,"column_end":52}},{"value":"/ let vec2 = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":37716,"byte_end":37759,"line_start":569,"line_end":569,"column_start":5,"column_end":48}},{"value":"/ vec1.axcpy(5.0, &vec2, 2.0, 5.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":37764,"byte_end":37801,"line_start":570,"line_end":570,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(vec1, Vector3::new(6.0, 12.0, 18.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":37806,"byte_end":37858,"line_start":571,"line_end":571,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":37863,"byte_end":37870,"line_start":572,"line_end":572,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":37875,"byte_end":37884,"line_start":573,"line_end":573,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":38898,"byte_end":38902,"line_start":608,"line_end":608,"column_start":12,"column_end":16},"name":"axpy","qualname":"<Vector<N, D, S>>::axpy","value":"fn <D2, SB> (&mut self, a: N, x: &Vector<N, D2, SB>, b: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = a * x + b * self`.","sig":null,"attributes":[{"value":"/ Computes `self = a * x + b * self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":38487,"byte_end":38526,"line_start":594,"line_end":594,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":38531,"byte_end":38534,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ If `b` is zero, `self` is never read from.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":38539,"byte_end":38585,"line_start":596,"line_end":596,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":38590,"byte_end":38593,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":38598,"byte_end":38613,"line_start":598,"line_end":598,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":38618,"byte_end":38621,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":38626,"byte_end":38633,"line_start":600,"line_end":600,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":38638,"byte_end":38666,"line_start":601,"line_end":601,"column_start":5,"column_end":33}},{"value":"/ let mut vec1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":38671,"byte_end":38718,"line_start":602,"line_end":602,"column_start":5,"column_end":52}},{"value":"/ let vec2 = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":38723,"byte_end":38766,"line_start":603,"line_end":603,"column_start":5,"column_end":48}},{"value":"/ vec1.axpy(10.0, &vec2, 5.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":38771,"byte_end":38803,"line_start":604,"line_end":604,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(vec1, Vector3::new(6.0, 12.0, 18.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":38808,"byte_end":38860,"line_start":605,"line_end":605,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":38865,"byte_end":38872,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":38877,"byte_end":38886,"line_start":607,"line_end":607,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":39771,"byte_end":39775,"line_start":635,"line_end":635,"column_start":12,"column_end":16},"name":"gemv","qualname":"<Vector<N, D, S>>::gemv","value":"fn <R2, C2, D3, SB, SC> (&mut self, alpha: N, a: &Matrix<N, R2, C2, SB>, x: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * x + beta * self`, where `a` is a matrix, `x` a vector, and\n `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * x + beta * self`, where `a` is a matrix, `x` a vector, and","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":39190,"byte_end":39281,"line_start":618,"line_end":618,"column_start":5,"column_end":96}},{"value":"/ `alpha, beta` two scalars.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":39286,"byte_end":39316,"line_start":619,"line_end":619,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":39321,"byte_end":39324,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":39329,"byte_end":39373,"line_start":621,"line_end":621,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":39378,"byte_end":39381,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":39386,"byte_end":39401,"line_start":623,"line_end":623,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":39406,"byte_end":39409,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":39414,"byte_end":39421,"line_start":625,"line_end":625,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":39426,"byte_end":39465,"line_start":626,"line_end":626,"column_start":5,"column_end":44}},{"value":"/ let mut vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":39470,"byte_end":39512,"line_start":627,"line_end":627,"column_start":5,"column_end":47}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":39517,"byte_end":39555,"line_start":628,"line_end":628,"column_start":5,"column_end":43}},{"value":"/ let mat = Matrix2::new(1.0, 2.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":39560,"byte_end":39596,"line_start":629,"line_end":629,"column_start":5,"column_end":41}},{"value":"/                        3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":39601,"byte_end":39638,"line_start":630,"line_end":630,"column_start":5,"column_end":42}},{"value":"/ vec1.gemv(10.0, &mat, &vec2, 5.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":39643,"byte_end":39681,"line_start":631,"line_end":631,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(vec1, Vector2::new(10.0, 21.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":39686,"byte_end":39733,"line_start":632,"line_end":632,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":39738,"byte_end":39745,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":39750,"byte_end":39759,"line_start":634,"line_end":634,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":43099,"byte_end":43108,"line_start":742,"line_end":742,"column_start":12,"column_end":21},"name":"gemv_symm","qualname":"<Vector<N, D, S>>::gemv_symm","value":"fn <D2, D3, SB, SC> (&mut self, alpha: N, a: &SquareMatrix<N, D2, SB>, x: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * x + beta * self`, where `a` is a **symmetric** matrix, `x` a\n vector, and `alpha, beta` two scalars. DEPRECATED: use `sygemv` instead.\n","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * x + beta * self`, where `a` is a **symmetric** matrix, `x` a","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":42806,"byte_end":42899,"line_start":738,"line_end":738,"column_start":5,"column_end":98}},{"value":"/ vector, and `alpha, beta` two scalars. DEPRECATED: use `sygemv` instead.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":42904,"byte_end":42980,"line_start":739,"line_end":739,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":42985,"byte_end":42994,"line_start":740,"line_end":740,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This is renamed `sygemv` to match the original BLAS terminology.\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":42999,"byte_end":43087,"line_start":741,"line_end":741,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":44697,"byte_end":44703,"line_start":786,"line_end":786,"column_start":12,"column_end":18},"name":"sygemv","qualname":"<Vector<N, D, S>>::sygemv","value":"fn <D2, D3, SB, SC> (&mut self, alpha: N, a: &SquareMatrix<N, D2, SB>, x: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * x + beta * self`, where `a` is a **symmetric** matrix, `x` a\n vector, and `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * x + beta * self`, where `a` is a **symmetric** matrix, `x` a","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":43475,"byte_end":43568,"line_start":757,"line_end":757,"column_start":5,"column_end":98}},{"value":"/ vector, and `alpha, beta` two scalars.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":43573,"byte_end":43615,"line_start":758,"line_end":758,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":43620,"byte_end":43623,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ For hermitian matrices, use `.hegemv` instead.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":43628,"byte_end":43678,"line_start":760,"line_end":760,"column_start":5,"column_end":55}},{"value":"/ If `beta` is zero, `self` is never read. If `self` is read, only its lower-triangular part","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":43683,"byte_end":43777,"line_start":761,"line_end":761,"column_start":5,"column_end":99}},{"value":"/ (including the diagonal) is actually read.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":43782,"byte_end":43828,"line_start":762,"line_end":762,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":43833,"byte_end":43836,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":43841,"byte_end":43856,"line_start":764,"line_end":764,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":43861,"byte_end":43864,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":43869,"byte_end":43876,"line_start":766,"line_end":766,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":43881,"byte_end":43920,"line_start":767,"line_end":767,"column_start":5,"column_end":44}},{"value":"/ let mat = Matrix2::new(1.0, 2.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":43925,"byte_end":43961,"line_start":768,"line_end":768,"column_start":5,"column_end":41}},{"value":"/                        2.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":43966,"byte_end":44003,"line_start":769,"line_end":769,"column_start":5,"column_end":42}},{"value":"/ let mut vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":44008,"byte_end":44050,"line_start":770,"line_end":770,"column_start":5,"column_end":47}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":44055,"byte_end":44093,"line_start":771,"line_end":771,"column_start":5,"column_end":43}},{"value":"/ vec1.sygemv(10.0, &mat, &vec2, 5.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":44098,"byte_end":44138,"line_start":772,"line_end":772,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec1, Vector2::new(10.0, 20.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":44143,"byte_end":44190,"line_start":773,"line_end":773,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":44195,"byte_end":44198,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":44203,"byte_end":44206,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ // The matrix upper-triangular elements can be garbage because it is never","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":44211,"byte_end":44289,"line_start":776,"line_end":776,"column_start":5,"column_end":83}},{"value":"/ // read by this method. Therefore, it is not necessary for the caller to","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":44294,"byte_end":44370,"line_start":777,"line_end":777,"column_start":5,"column_end":81}},{"value":"/ // fill the matrix struct upper-triangle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":44375,"byte_end":44420,"line_start":778,"line_end":778,"column_start":5,"column_end":50}},{"value":"/ let mat = Matrix2::new(1.0, 9999999.9999999,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":44425,"byte_end":44473,"line_start":779,"line_end":779,"column_start":5,"column_end":53}},{"value":"/                        2.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":44478,"byte_end":44515,"line_start":780,"line_end":780,"column_start":5,"column_end":42}},{"value":"/ let mut vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":44520,"byte_end":44562,"line_start":781,"line_end":781,"column_start":5,"column_end":47}},{"value":"/ vec1.sygemv(10.0, &mat, &vec2, 5.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":44567,"byte_end":44607,"line_start":782,"line_end":782,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec1, Vector2::new(10.0, 20.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":44612,"byte_end":44659,"line_start":783,"line_end":783,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":44664,"byte_end":44671,"line_start":784,"line_end":784,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":44676,"byte_end":44685,"line_start":785,"line_end":785,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":46789,"byte_end":46795,"line_start":831,"line_end":831,"column_start":12,"column_end":18},"name":"hegemv","qualname":"<Vector<N, D, S>>::hegemv","value":"fn <D2, D3, SB, SC> (&mut self, alpha: N, a: &SquareMatrix<N, D2, SB>, x: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * x + beta * self`, where `a` is an **hermitian** matrix, `x` a\n vector, and `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * x + beta * self`, where `a` is an **hermitian** matrix, `x` a","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":45087,"byte_end":45181,"line_start":801,"line_end":801,"column_start":5,"column_end":99}},{"value":"/ vector, and `alpha, beta` two scalars.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":45186,"byte_end":45228,"line_start":802,"line_end":802,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":45233,"byte_end":45236,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read. If `self` is read, only its lower-triangular part","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":45241,"byte_end":45335,"line_start":804,"line_end":804,"column_start":5,"column_end":99}},{"value":"/ (including the diagonal) is actually read.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":45340,"byte_end":45386,"line_start":805,"line_end":805,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":45391,"byte_end":45394,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":45399,"byte_end":45414,"line_start":807,"line_end":807,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":45419,"byte_end":45422,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":45427,"byte_end":45434,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2, Complex};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":45439,"byte_end":45487,"line_start":810,"line_end":810,"column_start":5,"column_end":53}},{"value":"/ let mat = Matrix2::new(Complex::new(1.0, 0.0), Complex::new(2.0, -0.1),","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":45492,"byte_end":45567,"line_start":811,"line_end":811,"column_start":5,"column_end":80}},{"value":"/                        Complex::new(2.0, 1.0), Complex::new(4.0, 0.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":45572,"byte_end":45647,"line_start":812,"line_end":812,"column_start":5,"column_end":80}},{"value":"/ let mut vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":45652,"byte_end":45732,"line_start":813,"line_end":813,"column_start":5,"column_end":85}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.1, 0.2), Complex::new(0.3, 0.4));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":45737,"byte_end":45813,"line_start":814,"line_end":814,"column_start":5,"column_end":81}},{"value":"/ vec1.sygemv(Complex::new(10.0, 20.0), &mat, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":45818,"byte_end":45898,"line_start":815,"line_end":815,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(vec1, Vector2::new(Complex::new(-48.0, 44.0), Complex::new(-75.0, 110.0)));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":45903,"byte_end":45993,"line_start":816,"line_end":816,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":45998,"byte_end":46001,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":46006,"byte_end":46009,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ // The matrix upper-triangular elements can be garbage because it is never","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":46014,"byte_end":46092,"line_start":819,"line_end":819,"column_start":5,"column_end":83}},{"value":"/ // read by this method. Therefore, it is not necessary for the caller to","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":46097,"byte_end":46173,"line_start":820,"line_end":820,"column_start":5,"column_end":81}},{"value":"/ // fill the matrix struct upper-triangle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":46178,"byte_end":46223,"line_start":821,"line_end":821,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":46228,"byte_end":46231,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ let mat = Matrix2::new(Complex::new(1.0, 0.0), Complex::new(99999999.9, 999999999.9),","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":46236,"byte_end":46325,"line_start":823,"line_end":823,"column_start":5,"column_end":94}},{"value":"/                        Complex::new(2.0, 1.0), Complex::new(4.0, 0.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":46330,"byte_end":46405,"line_start":824,"line_end":824,"column_start":5,"column_end":80}},{"value":"/ let mut vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":46410,"byte_end":46490,"line_start":825,"line_end":825,"column_start":5,"column_end":85}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.1, 0.2), Complex::new(0.3, 0.4));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":46495,"byte_end":46571,"line_start":826,"line_end":826,"column_start":5,"column_end":81}},{"value":"/ vec1.sygemv(Complex::new(10.0, 20.0), &mat, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":46576,"byte_end":46656,"line_start":827,"line_end":827,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(vec1, Vector2::new(Complex::new(-48.0, 44.0), Complex::new(-75.0, 110.0)));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":46661,"byte_end":46751,"line_start":828,"line_end":828,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":46756,"byte_end":46763,"line_start":829,"line_end":829,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":46768,"byte_end":46777,"line_start":830,"line_end":830,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":49069,"byte_end":49076,"line_start":906,"line_end":906,"column_start":12,"column_end":19},"name":"gemv_tr","qualname":"<Vector<N, D, S>>::gemv_tr","value":"fn <R2, C2, D3, SB, SC> (&mut self, alpha: N, a: &Matrix<N, R2, C2, SB>, x: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a.transpose() * x + beta * self`, where `a` is a matrix, `x` a vector, and\n `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a.transpose() * x + beta * self`, where `a` is a matrix, `x` a vector, and","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":48414,"byte_end":48517,"line_start":887,"line_end":887,"column_start":5,"column_end":108}},{"value":"/ `alpha, beta` two scalars.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":48522,"byte_end":48552,"line_start":888,"line_end":888,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":48557,"byte_end":48560,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":48565,"byte_end":48609,"line_start":890,"line_end":890,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":48614,"byte_end":48617,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":48622,"byte_end":48637,"line_start":892,"line_end":892,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":48642,"byte_end":48645,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":48650,"byte_end":48657,"line_start":894,"line_end":894,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":48662,"byte_end":48701,"line_start":895,"line_end":895,"column_start":5,"column_end":44}},{"value":"/ let mat = Matrix2::new(1.0, 3.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":48706,"byte_end":48742,"line_start":896,"line_end":896,"column_start":5,"column_end":41}},{"value":"/                        2.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":48747,"byte_end":48784,"line_start":897,"line_end":897,"column_start":5,"column_end":42}},{"value":"/ let mut vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":48789,"byte_end":48831,"line_start":898,"line_end":898,"column_start":5,"column_end":47}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":48836,"byte_end":48874,"line_start":899,"line_end":899,"column_start":5,"column_end":43}},{"value":"/ let expected = mat.transpose() * vec2 * 10.0 + vec1 * 5.0;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":48879,"byte_end":48941,"line_start":900,"line_end":900,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":48946,"byte_end":48949,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ vec1.gemv_tr(10.0, &mat, &vec2, 5.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":48954,"byte_end":48995,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(vec1, expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":49000,"byte_end":49031,"line_start":903,"line_end":903,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":49036,"byte_end":49043,"line_start":904,"line_end":904,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":49048,"byte_end":49057,"line_start":905,"line_end":905,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":50419,"byte_end":50426,"line_start":941,"line_end":941,"column_start":12,"column_end":19},"name":"gemv_ad","qualname":"<Vector<N, D, S>>::gemv_ad","value":"fn <R2, C2, D3, SB, SC> (&mut self, alpha: N, a: &Matrix<N, R2, C2, SB>, x: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a.adjoint() * x + beta * self`, where `a` is a matrix, `x` a vector, and\n `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a.adjoint() * x + beta * self`, where `a` is a matrix, `x` a vector, and","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":49468,"byte_end":49569,"line_start":921,"line_end":921,"column_start":5,"column_end":106}},{"value":"/ `alpha, beta` two scalars.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":49574,"byte_end":49604,"line_start":922,"line_end":922,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":49609,"byte_end":49612,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ For real matrices, this is the same as `.gemv_tr`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":49617,"byte_end":49671,"line_start":924,"line_end":924,"column_start":5,"column_end":59}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":49676,"byte_end":49720,"line_start":925,"line_end":925,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":49725,"byte_end":49728,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":49733,"byte_end":49748,"line_start":927,"line_end":927,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":49753,"byte_end":49756,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":49761,"byte_end":49768,"line_start":929,"line_end":929,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2, Complex};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":49773,"byte_end":49821,"line_start":930,"line_end":930,"column_start":5,"column_end":53}},{"value":"/ let mat = Matrix2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0),","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":49826,"byte_end":49900,"line_start":931,"line_end":931,"column_start":5,"column_end":79}},{"value":"/                        Complex::new(5.0, 6.0), Complex::new(7.0, 8.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":49905,"byte_end":49980,"line_start":932,"line_end":932,"column_start":5,"column_end":80}},{"value":"/ let mut vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":49985,"byte_end":50065,"line_start":933,"line_end":933,"column_start":5,"column_end":85}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.1, 0.2), Complex::new(0.3, 0.4));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":50070,"byte_end":50146,"line_start":934,"line_end":934,"column_start":5,"column_end":81}},{"value":"/ let expected = mat.adjoint() * vec2 * Complex::new(10.0, 20.0) + vec1 * Complex::new(5.0, 15.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":50151,"byte_end":50251,"line_start":935,"line_end":935,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":50256,"byte_end":50259,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ vec1.gemv_ad(Complex::new(10.0, 20.0), &mat, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":50264,"byte_end":50345,"line_start":937,"line_end":937,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(vec1, expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":50350,"byte_end":50381,"line_start":938,"line_end":938,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":50386,"byte_end":50393,"line_start":939,"line_end":939,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":50398,"byte_end":50407,"line_start":940,"line_end":940,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":52367,"byte_end":52370,"line_start":1009,"line_end":1009,"column_start":12,"column_end":15},"name":"ger","qualname":"<Matrix<N, R1, C1, S>>::ger","value":"fn <D2, D3, SB, SC> (&mut self, alpha: N, x: &Vector<N, D2, SB>, y: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.transpose() + beta * self`.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.transpose() + beta * self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":51818,"byte_end":51880,"line_start":992,"line_end":992,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":51885,"byte_end":51888,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":51893,"byte_end":51937,"line_start":994,"line_end":994,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":51942,"byte_end":51945,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":51950,"byte_end":51965,"line_start":996,"line_end":996,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":51970,"byte_end":51973,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":51978,"byte_end":51985,"line_start":998,"line_end":998,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":51990,"byte_end":52040,"line_start":999,"line_end":999,"column_start":5,"column_end":55}},{"value":"/ let mut mat = Matrix2x3::repeat(4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":52045,"byte_end":52086,"line_start":1000,"line_end":1000,"column_start":5,"column_end":46}},{"value":"/ let vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":52091,"byte_end":52129,"line_start":1001,"line_end":1001,"column_start":5,"column_end":43}},{"value":"/ let vec2 = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":52134,"byte_end":52177,"line_start":1002,"line_end":1002,"column_start":5,"column_end":48}},{"value":"/ let expected = vec1 * vec2.transpose() * 10.0 + mat * 5.0;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":52182,"byte_end":52244,"line_start":1003,"line_end":1003,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":52249,"byte_end":52252,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ mat.ger(10.0, &vec1, &vec2, 5.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":52257,"byte_end":52294,"line_start":1005,"line_end":1005,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(mat, expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":52299,"byte_end":52329,"line_start":1006,"line_end":1006,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":52334,"byte_end":52341,"line_start":1007,"line_end":1007,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":52346,"byte_end":52355,"line_start":1008,"line_end":1008,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":53508,"byte_end":53512,"line_start":1042,"line_end":1042,"column_start":12,"column_end":16},"name":"gerc","qualname":"<Matrix<N, R1, C1, S>>::gerc","value":"fn <D2, D3, SB, SC> (&mut self, alpha: N, x: &Vector<N, D2, SB>, y: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.adjoint() + beta * self`.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.adjoint() + beta * self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":52715,"byte_end":52775,"line_start":1024,"line_end":1024,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":52780,"byte_end":52783,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":52788,"byte_end":52832,"line_start":1026,"line_end":1026,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":52837,"byte_end":52840,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":52845,"byte_end":52860,"line_start":1028,"line_end":1028,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":52865,"byte_end":52868,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":52873,"byte_end":52880,"line_start":1030,"line_end":1030,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":52885,"byte_end":52924,"line_start":1031,"line_end":1031,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2, Vector3, Complex};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":52929,"byte_end":52988,"line_start":1032,"line_end":1032,"column_start":5,"column_end":64}},{"value":"/ let mut mat = Matrix2x3::repeat(Complex::new(4.0, 5.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":52993,"byte_end":53053,"line_start":1033,"line_end":1033,"column_start":5,"column_end":65}},{"value":"/ let vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":53058,"byte_end":53134,"line_start":1034,"line_end":1034,"column_start":5,"column_end":81}},{"value":"/ let vec2 = Vector3::new(Complex::new(0.6, 0.5), Complex::new(0.4, 0.5), Complex::new(0.2, 0.1));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":53139,"byte_end":53239,"line_start":1035,"line_end":1035,"column_start":5,"column_end":105}},{"value":"/ let expected = vec1 * vec2.adjoint() * Complex::new(10.0, 20.0) + mat * Complex::new(5.0, 15.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":53244,"byte_end":53344,"line_start":1036,"line_end":1036,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":53349,"byte_end":53352,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ mat.gerc(Complex::new(10.0, 20.0), &vec1, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":53357,"byte_end":53435,"line_start":1038,"line_end":1038,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(mat, expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":53440,"byte_end":53470,"line_start":1039,"line_end":1039,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":53475,"byte_end":53482,"line_start":1040,"line_end":1040,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":53487,"byte_end":53496,"line_start":1041,"line_end":1041,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":54726,"byte_end":54730,"line_start":1079,"line_end":1079,"column_start":12,"column_end":16},"name":"gemm","qualname":"<Matrix<N, R1, C1, S>>::gemm","value":"fn <R2, C2, R3, C3, SB, SC> (&mut self, alpha: N, a: &Matrix<N, R2, C2, SB>, b: &Matrix<N, R3, C3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * b + beta * self`, where `a, b, self` are matrices.\n `alpha` and `beta` are scalar.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * b + beta * self`, where `a, b, self` are matrices.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":53897,"byte_end":53980,"line_start":1057,"line_end":1057,"column_start":5,"column_end":88}},{"value":"/ `alpha` and `beta` are scalar.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":53985,"byte_end":54019,"line_start":1058,"line_end":1058,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":54024,"byte_end":54027,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":54032,"byte_end":54076,"line_start":1060,"line_end":1060,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":54081,"byte_end":54084,"line_start":1061,"line_end":1061,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":54089,"byte_end":54104,"line_start":1062,"line_end":1062,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":54109,"byte_end":54112,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":54117,"byte_end":54124,"line_start":1064,"line_end":1064,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":54129,"byte_end":54168,"line_start":1065,"line_end":1065,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2x3, Matrix3x4, Matrix2x4};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":54173,"byte_end":54227,"line_start":1066,"line_end":1066,"column_start":5,"column_end":59}},{"value":"/ let mut mat1 = Matrix2x4::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":54232,"byte_end":54273,"line_start":1067,"line_end":1067,"column_start":5,"column_end":46}},{"value":"/ let mat2 = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":54278,"byte_end":54322,"line_start":1068,"line_end":1068,"column_start":5,"column_end":49}},{"value":"/                           4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":54327,"byte_end":54372,"line_start":1069,"line_end":1069,"column_start":5,"column_end":50}},{"value":"/ let mat3 = Matrix3x4::new(0.1, 0.2, 0.3, 0.4,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":54377,"byte_end":54426,"line_start":1070,"line_end":1070,"column_start":5,"column_end":54}},{"value":"/                           0.5, 0.6, 0.7, 0.8,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":54431,"byte_end":54480,"line_start":1071,"line_end":1071,"column_start":5,"column_end":54}},{"value":"/                           0.9, 1.0, 1.1, 1.2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":54485,"byte_end":54535,"line_start":1072,"line_end":1072,"column_start":5,"column_end":55}},{"value":"/ let expected = mat2 * mat3 * 10.0 + mat1 * 5.0;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":54540,"byte_end":54591,"line_start":1073,"line_end":1073,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":54596,"byte_end":54599,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ mat1.gemm(10.0, &mat2, &mat3, 5.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":54604,"byte_end":54643,"line_start":1075,"line_end":1075,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(mat1, expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":54648,"byte_end":54688,"line_start":1076,"line_end":1076,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":54693,"byte_end":54700,"line_start":1077,"line_end":1077,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":54705,"byte_end":54714,"line_start":1078,"line_end":1078,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":60850,"byte_end":60857,"line_start":1234,"line_end":1234,"column_start":12,"column_end":19},"name":"gemm_tr","qualname":"<Matrix<N, R1, C1, S>>::gemm_tr","value":"fn <R2, C2, R3, C3, SB, SC> (&mut self, alpha: N, a: &Matrix<N, R2, C2, SB>, b: &Matrix<N, R3, C3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a.transpose() * b + beta * self`, where `a, b, self` are matrices.\n `alpha` and `beta` are scalar.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a.transpose() * b + beta * self`, where `a, b, self` are matrices.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":59969,"byte_end":60064,"line_start":1211,"line_end":1211,"column_start":5,"column_end":100}},{"value":"/ `alpha` and `beta` are scalar.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":60069,"byte_end":60103,"line_start":1212,"line_end":1212,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":60108,"byte_end":60111,"line_start":1213,"line_end":1213,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":60116,"byte_end":60160,"line_start":1214,"line_end":1214,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":60165,"byte_end":60168,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":60173,"byte_end":60188,"line_start":1216,"line_end":1216,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":60193,"byte_end":60196,"line_start":1217,"line_end":1217,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":60201,"byte_end":60208,"line_start":1218,"line_end":1218,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":60213,"byte_end":60252,"line_start":1219,"line_end":1219,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3x2, Matrix3x4, Matrix2x4};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":60257,"byte_end":60311,"line_start":1220,"line_end":1220,"column_start":5,"column_end":59}},{"value":"/ let mut mat1 = Matrix2x4::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":60316,"byte_end":60357,"line_start":1221,"line_end":1221,"column_start":5,"column_end":46}},{"value":"/ let mat2 = Matrix3x2::new(1.0, 4.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":60362,"byte_end":60401,"line_start":1222,"line_end":1222,"column_start":5,"column_end":44}},{"value":"/                           2.0, 5.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":60406,"byte_end":60445,"line_start":1223,"line_end":1223,"column_start":5,"column_end":44}},{"value":"/                           3.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":60450,"byte_end":60490,"line_start":1224,"line_end":1224,"column_start":5,"column_end":45}},{"value":"/ let mat3 = Matrix3x4::new(0.1, 0.2, 0.3, 0.4,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":60495,"byte_end":60544,"line_start":1225,"line_end":1225,"column_start":5,"column_end":54}},{"value":"/                           0.5, 0.6, 0.7, 0.8,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":60549,"byte_end":60598,"line_start":1226,"line_end":1226,"column_start":5,"column_end":54}},{"value":"/                           0.9, 1.0, 1.1, 1.2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":60603,"byte_end":60653,"line_start":1227,"line_end":1227,"column_start":5,"column_end":55}},{"value":"/ let expected = mat2.transpose() * mat3 * 10.0 + mat1 * 5.0;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":60658,"byte_end":60721,"line_start":1228,"line_end":1228,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":60726,"byte_end":60729,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ mat1.gemm_tr(10.0, &mat2, &mat3, 5.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":60734,"byte_end":60776,"line_start":1230,"line_end":1230,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(mat1, expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":60781,"byte_end":60812,"line_start":1231,"line_end":1231,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":60817,"byte_end":60824,"line_start":1232,"line_end":1232,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":60829,"byte_end":60838,"line_start":1233,"line_end":1233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":63246,"byte_end":63253,"line_start":1296,"line_end":1296,"column_start":12,"column_end":19},"name":"gemm_ad","qualname":"<Matrix<N, R1, C1, S>>::gemm_ad","value":"fn <R2, C2, R3, C3, SB, SC> (&mut self, alpha: N, a: &Matrix<N, R2, C2, SB>, b: &Matrix<N, R3, C3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a.adjoint() * b + beta * self`, where `a, b, self` are matrices.\n `alpha` and `beta` are scalar.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a.adjoint() * b + beta * self`, where `a, b, self` are matrices.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":61935,"byte_end":62028,"line_start":1273,"line_end":1273,"column_start":5,"column_end":98}},{"value":"/ `alpha` and `beta` are scalar.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":62033,"byte_end":62067,"line_start":1274,"line_end":1274,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":62072,"byte_end":62075,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":62080,"byte_end":62124,"line_start":1276,"line_end":1276,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":62129,"byte_end":62132,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":62137,"byte_end":62152,"line_start":1278,"line_end":1278,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":62157,"byte_end":62160,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":62165,"byte_end":62172,"line_start":1280,"line_end":1280,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":62177,"byte_end":62216,"line_start":1281,"line_end":1281,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3x2, Matrix3x4, Matrix2x4, Complex};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":62221,"byte_end":62284,"line_start":1282,"line_end":1282,"column_start":5,"column_end":68}},{"value":"/ let mut mat1 = Matrix2x4::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":62289,"byte_end":62330,"line_start":1283,"line_end":1283,"column_start":5,"column_end":46}},{"value":"/ let mat2 = Matrix3x2::new(Complex::new(1.0, 4.0), Complex::new(7.0, 8.0),","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":62335,"byte_end":62412,"line_start":1284,"line_end":1284,"column_start":5,"column_end":82}},{"value":"/                           Complex::new(2.0, 5.0), Complex::new(9.0, 10.0),","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":62417,"byte_end":62495,"line_start":1285,"line_end":1285,"column_start":5,"column_end":83}},{"value":"/                           Complex::new(3.0, 6.0), Complex::new(11.0, 12.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":62500,"byte_end":62580,"line_start":1286,"line_end":1286,"column_start":5,"column_end":85}},{"value":"/ let mat3 = Matrix3x4::new(Complex::new(0.1, 1.3), Complex::new(0.2, 1.4), Complex::new(0.3, 1.5), Complex::new(0.4, 1.6),","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":62585,"byte_end":62710,"line_start":1287,"line_end":1287,"column_start":5,"column_end":130}},{"value":"/                           Complex::new(0.5, 1.7), Complex::new(0.6, 1.8), Complex::new(0.7, 1.9), Complex::new(0.8, 2.0),","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":62715,"byte_end":62840,"line_start":1288,"line_end":1288,"column_start":5,"column_end":130}},{"value":"/                           Complex::new(0.9, 2.1), Complex::new(1.0, 2.2), Complex::new(1.1, 2.3), Complex::new(1.2, 2.4));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":62845,"byte_end":62971,"line_start":1289,"line_end":1289,"column_start":5,"column_end":131}},{"value":"/ let expected = mat2.adjoint() * mat3 * Complex::new(10.0, 20.0) + mat1 * Complex::new(5.0, 15.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":62976,"byte_end":63077,"line_start":1290,"line_end":1290,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":63082,"byte_end":63085,"line_start":1291,"line_end":1291,"column_start":5,"column_end":8}},{"value":"/ mat1.gemm_ad(Complex::new(10.0, 20.0), &mat2, &mat3, Complex::new(5.0, 15.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":63090,"byte_end":63172,"line_start":1292,"line_end":1292,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(mat1, expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":63177,"byte_end":63208,"line_start":1293,"line_end":1293,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":63213,"byte_end":63220,"line_start":1294,"line_end":1294,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":63225,"byte_end":63234,"line_start":1295,"line_end":1295,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":66416,"byte_end":66424,"line_start":1392,"line_end":1392,"column_start":12,"column_end":20},"name":"ger_symm","qualname":"<Matrix<N, R1, C1, S>>::ger_symm","value":"fn <D2, D3, SB, SC> (&mut self, alpha: N, x: &Vector<N, D2, SB>, y: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a **symmetric**\n matrix.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a **symmetric**","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":65427,"byte_end":65521,"line_start":1371,"line_end":1371,"column_start":5,"column_end":99}},{"value":"/ matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":65526,"byte_end":65537,"line_start":1372,"line_end":1372,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":65542,"byte_end":65545,"line_start":1373,"line_end":1373,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read. The result is symmetric. Only the lower-triangular","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":65550,"byte_end":65645,"line_start":1374,"line_end":1374,"column_start":5,"column_end":100}},{"value":"/ (including the diagonal) part of `self` is read/written.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":65650,"byte_end":65710,"line_start":1375,"line_end":1375,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":65715,"byte_end":65718,"line_start":1376,"line_end":1376,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":65723,"byte_end":65738,"line_start":1377,"line_end":1377,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":65743,"byte_end":65746,"line_start":1378,"line_end":1378,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":65751,"byte_end":65758,"line_start":1379,"line_end":1379,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":65763,"byte_end":65802,"line_start":1380,"line_end":1380,"column_start":5,"column_end":44}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":65807,"byte_end":65845,"line_start":1381,"line_end":1381,"column_start":5,"column_end":43}},{"value":"/ let vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":65850,"byte_end":65888,"line_start":1382,"line_end":1382,"column_start":5,"column_end":43}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":65893,"byte_end":65931,"line_start":1383,"line_end":1383,"column_start":5,"column_end":43}},{"value":"/ let expected = vec1 * vec2.transpose() * 10.0 + mat * 5.0;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":65936,"byte_end":65998,"line_start":1384,"line_end":1384,"column_start":5,"column_end":67}},{"value":"/ mat.m12 = 99999.99999; // This component is on the upper-triangular part and will not be read/written.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":66003,"byte_end":66109,"line_start":1385,"line_end":1385,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":66114,"byte_end":66117,"line_start":1386,"line_end":1386,"column_start":5,"column_end":8}},{"value":"/ mat.ger_symm(10.0, &vec1, &vec2, 5.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":66122,"byte_end":66164,"line_start":1387,"line_end":1387,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(mat.lower_triangle(), expected.lower_triangle());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":66169,"byte_end":66233,"line_start":1388,"line_end":1388,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(mat.m12, 99999.99999); // This was untouched.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":66238,"byte_end":66298,"line_start":1389,"line_end":1389,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":66303,"byte_end":66312,"line_start":1390,"line_end":1390,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This is renamed `syger` to match the original BLAS terminology.\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":66317,"byte_end":66404,"line_start":1391,"line_end":1391,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":67720,"byte_end":67725,"line_start":1428,"line_end":1428,"column_start":12,"column_end":17},"name":"syger","qualname":"<Matrix<N, R1, C1, S>>::syger","value":"fn <D2, D3, SB, SC> (&mut self, alpha: N, x: &Vector<N, D2, SB>, y: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a **symmetric**\n matrix.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a **symmetric**","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":66763,"byte_end":66857,"line_start":1407,"line_end":1407,"column_start":5,"column_end":99}},{"value":"/ matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":66862,"byte_end":66873,"line_start":1408,"line_end":1408,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":66878,"byte_end":66881,"line_start":1409,"line_end":1409,"column_start":5,"column_end":8}},{"value":"/ For hermitian complex matrices, use `.hegerc` instead.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":66886,"byte_end":66944,"line_start":1410,"line_end":1410,"column_start":5,"column_end":63}},{"value":"/ If `beta` is zero, `self` is never read. The result is symmetric. Only the lower-triangular","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":66949,"byte_end":67044,"line_start":1411,"line_end":1411,"column_start":5,"column_end":100}},{"value":"/ (including the diagonal) part of `self` is read/written.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":67049,"byte_end":67109,"line_start":1412,"line_end":1412,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":67114,"byte_end":67117,"line_start":1413,"line_end":1413,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":67122,"byte_end":67137,"line_start":1414,"line_end":1414,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":67142,"byte_end":67145,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":67150,"byte_end":67157,"line_start":1416,"line_end":1416,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":67162,"byte_end":67201,"line_start":1417,"line_end":1417,"column_start":5,"column_end":44}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":67206,"byte_end":67244,"line_start":1418,"line_end":1418,"column_start":5,"column_end":43}},{"value":"/ let vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":67249,"byte_end":67287,"line_start":1419,"line_end":1419,"column_start":5,"column_end":43}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":67292,"byte_end":67330,"line_start":1420,"line_end":1420,"column_start":5,"column_end":43}},{"value":"/ let expected = vec1 * vec2.transpose() * 10.0 + mat * 5.0;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":67335,"byte_end":67397,"line_start":1421,"line_end":1421,"column_start":5,"column_end":67}},{"value":"/ mat.m12 = 99999.99999; // This component is on the upper-triangular part and will not be read/written.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":67402,"byte_end":67508,"line_start":1422,"line_end":1422,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":67513,"byte_end":67516,"line_start":1423,"line_end":1423,"column_start":5,"column_end":8}},{"value":"/ mat.syger(10.0, &vec1, &vec2, 5.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":67521,"byte_end":67560,"line_start":1424,"line_end":1424,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(mat.lower_triangle(), expected.lower_triangle());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":67565,"byte_end":67629,"line_start":1425,"line_end":1425,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(mat.m12, 99999.99999); // This was untouched.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":67634,"byte_end":67694,"line_start":1426,"line_end":1426,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":67699,"byte_end":67708,"line_start":1427,"line_end":1427,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":69183,"byte_end":69189,"line_start":1463,"line_end":1463,"column_start":12,"column_end":18},"name":"hegerc","qualname":"<Matrix<N, R1, C1, S>>::hegerc","value":"fn <D2, D3, SB, SC> (&mut self, alpha: N, x: &Vector<N, D2, SB>, y: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.adjoint() + beta * self`, where `self` is an **hermitian**\n matrix.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.adjoint() + beta * self`, where `self` is an **hermitian**","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":68072,"byte_end":68165,"line_start":1443,"line_end":1443,"column_start":5,"column_end":98}},{"value":"/ matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":68170,"byte_end":68181,"line_start":1444,"line_end":1444,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":68186,"byte_end":68189,"line_start":1445,"line_end":1445,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read. The result is symmetric. Only the lower-triangular","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":68194,"byte_end":68289,"line_start":1446,"line_end":1446,"column_start":5,"column_end":100}},{"value":"/ (including the diagonal) part of `self` is read/written.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":68294,"byte_end":68354,"line_start":1447,"line_end":1447,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":68359,"byte_end":68362,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":68367,"byte_end":68382,"line_start":1449,"line_end":1449,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":68387,"byte_end":68390,"line_start":1450,"line_end":1450,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":68395,"byte_end":68402,"line_start":1451,"line_end":1451,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2, Complex};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":68407,"byte_end":68455,"line_start":1452,"line_end":1452,"column_start":5,"column_end":53}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":68460,"byte_end":68498,"line_start":1453,"line_end":1453,"column_start":5,"column_end":43}},{"value":"/ let vec1 = Vector2::new(Complex::new(1.0, 3.0), Complex::new(2.0, 4.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":68503,"byte_end":68579,"line_start":1454,"line_end":1454,"column_start":5,"column_end":81}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.2, 0.4), Complex::new(0.1, 0.3));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":68584,"byte_end":68660,"line_start":1455,"line_end":1455,"column_start":5,"column_end":81}},{"value":"/ let expected = vec1 * vec2.adjoint() * Complex::new(10.0, 20.0) + mat * Complex::new(5.0, 15.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":68665,"byte_end":68765,"line_start":1456,"line_end":1456,"column_start":5,"column_end":105}},{"value":"/ mat.m12 = Complex::new(99999.99999, 88888.88888); // This component is on the upper-triangular part and will not be read/written.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":68770,"byte_end":68903,"line_start":1457,"line_end":1457,"column_start":5,"column_end":138}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":68908,"byte_end":68911,"line_start":1458,"line_end":1458,"column_start":5,"column_end":8}},{"value":"/ mat.hegerc(Complex::new(10.0, 20.0), &vec1, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":68916,"byte_end":68996,"line_start":1459,"line_end":1459,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(mat.lower_triangle(), expected.lower_triangle());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":69001,"byte_end":69065,"line_start":1460,"line_end":1460,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(mat.m12, Complex::new(99999.99999, 88888.88888)); // This was untouched.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":69070,"byte_end":69157,"line_start":1461,"line_end":1461,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":69162,"byte_end":69171,"line_start":1462,"line_end":1462,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":71120,"byte_end":71146,"line_start":1509,"line_end":1509,"column_start":12,"column_end":38},"name":"quadform_tr_with_workspace","qualname":"<SquareMatrix<N, D1, S>>::quadform_tr_with_workspace","value":"fn <D2, S2, R3, C3, S3, D4, S4> (&mut self, work: &mut Vector<N, D2, S2>, alpha: N, lhs: &Matrix<N, R3, C3, S3>, mid: &SquareMatrix<N, D4, S4>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.","sig":null,"attributes":[{"value":"/ Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":69704,"byte_end":69795,"line_start":1483,"line_end":1483,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":69800,"byte_end":69803,"line_start":1484,"line_end":1484,"column_start":5,"column_end":8}},{"value":"/ This uses the provided workspace `work` to avoid allocations for intermediate results.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":69808,"byte_end":69898,"line_start":1485,"line_end":1485,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":69903,"byte_end":69906,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":69911,"byte_end":69926,"line_start":1487,"line_end":1487,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":69931,"byte_end":69934,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":69939,"byte_end":69946,"line_start":1489,"line_end":1489,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":69951,"byte_end":69990,"line_start":1490,"line_end":1490,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{DMatrix, DVector};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":69995,"byte_end":70034,"line_start":1491,"line_end":1491,"column_start":5,"column_end":44}},{"value":"/ // Note that all those would also work with statically-sized matrices.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":70039,"byte_end":70113,"line_start":1492,"line_end":1492,"column_start":5,"column_end":79}},{"value":"/ // We use DMatrix/DVector since that's the only case where pre-allocating the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":70118,"byte_end":70199,"line_start":1493,"line_end":1493,"column_start":5,"column_end":86}},{"value":"/ // workspace is actually useful (assuming the same workspace is re-used for","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":70204,"byte_end":70283,"line_start":1494,"line_end":1494,"column_start":5,"column_end":84}},{"value":"/ // several computations) because it avoids repeated dynamic allocations.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":70288,"byte_end":70364,"line_start":1495,"line_end":1495,"column_start":5,"column_end":81}},{"value":"/ let mut mat = DMatrix::identity(2, 2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":70369,"byte_end":70411,"line_start":1496,"line_end":1496,"column_start":5,"column_end":47}},{"value":"/ let lhs = DMatrix::from_row_slice(2, 3, &[1.0, 2.0, 3.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":70416,"byte_end":70476,"line_start":1497,"line_end":1497,"column_start":5,"column_end":65}},{"value":"/                                           4.0, 5.0, 6.0]);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":70481,"byte_end":70543,"line_start":1498,"line_end":1498,"column_start":5,"column_end":67}},{"value":"/ let mid = DMatrix::from_row_slice(3, 3, &[0.1, 0.2, 0.3,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":70548,"byte_end":70608,"line_start":1499,"line_end":1499,"column_start":5,"column_end":65}},{"value":"/                                           0.5, 0.6, 0.7,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":70613,"byte_end":70673,"line_start":1500,"line_end":1500,"column_start":5,"column_end":65}},{"value":"/                                           0.9, 1.0, 1.1]);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":70678,"byte_end":70740,"line_start":1501,"line_end":1501,"column_start":5,"column_end":67}},{"value":"/ // The random shows that values on the workspace do not","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":70745,"byte_end":70804,"line_start":1502,"line_end":1502,"column_start":5,"column_end":64}},{"value":"/ // matter as they will be overwritten.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":70809,"byte_end":70851,"line_start":1503,"line_end":1503,"column_start":5,"column_end":47}},{"value":"/ let mut workspace = DVector::new_random(2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":70856,"byte_end":70903,"line_start":1504,"line_end":1504,"column_start":5,"column_end":52}},{"value":"/ let expected = &lhs * &mid * lhs.transpose() * 10.0 + &mat * 5.0;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":70908,"byte_end":70977,"line_start":1505,"line_end":1505,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":70982,"byte_end":70985,"line_start":1506,"line_end":1506,"column_start":5,"column_end":8}},{"value":"/ mat.quadform_tr_with_workspace(&mut workspace, 10.0, &lhs, &mid, 5.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":70990,"byte_end":71064,"line_start":1507,"line_end":1507,"column_start":5,"column_end":79}},{"value":"/ assert_relative_eq!(mat, expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":71069,"byte_end":71108,"line_start":1508,"line_end":1508,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":72907,"byte_end":72918,"line_start":1556,"line_end":1556,"column_start":12,"column_end":23},"name":"quadform_tr","qualname":"<SquareMatrix<N, D1, S>>::quadform_tr","value":"fn <R3, C3, S3, D4, S4> (&mut self, alpha: N, lhs: &Matrix<N, R3, C3, S3>, mid: &SquareMatrix<N, D4, S4>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.","sig":null,"attributes":[{"value":"/ Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":71941,"byte_end":72032,"line_start":1535,"line_end":1535,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":72037,"byte_end":72040,"line_start":1536,"line_end":1536,"column_start":5,"column_end":8}},{"value":"/ This allocates a workspace vector of dimension D1 for intermediate results.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":72045,"byte_end":72124,"line_start":1537,"line_end":1537,"column_start":5,"column_end":84}},{"value":"/ If `D1` is a type-level integer, then the allocation is performed on the stack.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":72129,"byte_end":72212,"line_start":1538,"line_end":1538,"column_start":5,"column_end":88}},{"value":"/ Use `.quadform_tr_with_workspace(...)` instead to avoid allocations.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":72217,"byte_end":72289,"line_start":1539,"line_end":1539,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":72294,"byte_end":72297,"line_start":1540,"line_end":1540,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":72302,"byte_end":72317,"line_start":1541,"line_end":1541,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":72322,"byte_end":72325,"line_start":1542,"line_end":1542,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":72330,"byte_end":72337,"line_start":1543,"line_end":1543,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":72342,"byte_end":72381,"line_start":1544,"line_end":1544,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2, Matrix3, Matrix2x3, Vector2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":72386,"byte_end":72445,"line_start":1545,"line_end":1545,"column_start":5,"column_end":64}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":72450,"byte_end":72488,"line_start":1546,"line_end":1546,"column_start":5,"column_end":43}},{"value":"/ let lhs = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":72493,"byte_end":72536,"line_start":1547,"line_end":1547,"column_start":5,"column_end":48}},{"value":"/                          4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":72541,"byte_end":72585,"line_start":1548,"line_end":1548,"column_start":5,"column_end":49}},{"value":"/ let mid = Matrix3::new(0.1, 0.2, 0.3,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":72590,"byte_end":72631,"line_start":1549,"line_end":1549,"column_start":5,"column_end":46}},{"value":"/                        0.5, 0.6, 0.7,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":72636,"byte_end":72677,"line_start":1550,"line_end":1550,"column_start":5,"column_end":46}},{"value":"/                        0.9, 1.0, 1.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":72682,"byte_end":72724,"line_start":1551,"line_end":1551,"column_start":5,"column_end":47}},{"value":"/ let expected = lhs * mid * lhs.transpose() * 10.0 + mat * 5.0;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":72729,"byte_end":72795,"line_start":1552,"line_end":1552,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":72800,"byte_end":72803,"line_start":1553,"line_end":1553,"column_start":5,"column_end":8}},{"value":"/ mat.quadform_tr(10.0, &lhs, &mid, 5.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":72808,"byte_end":72851,"line_start":1554,"line_end":1554,"column_start":5,"column_end":48}},{"value":"/ assert_relative_eq!(mat, expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":72856,"byte_end":72895,"line_start":1555,"line_end":1555,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":74933,"byte_end":74956,"line_start":1600,"line_end":1600,"column_start":12,"column_end":35},"name":"quadform_with_workspace","qualname":"<SquareMatrix<N, D1, S>>::quadform_with_workspace","value":"fn <D2, S2, D3, S3, R4, C4, S4> (&mut self, work: &mut Vector<N, D2, S2>, alpha: N, mid: &SquareMatrix<N, D3, S3>, rhs: &Matrix<N, R4, C4, S4>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.","sig":null,"attributes":[{"value":"/ Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":73498,"byte_end":73589,"line_start":1575,"line_end":1575,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":73594,"byte_end":73597,"line_start":1576,"line_end":1576,"column_start":5,"column_end":8}},{"value":"/ This uses the provided workspace `work` to avoid allocations for intermediate results.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":73602,"byte_end":73692,"line_start":1577,"line_end":1577,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":73697,"byte_end":73700,"line_start":1578,"line_end":1578,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":73705,"byte_end":73712,"line_start":1579,"line_end":1579,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":73717,"byte_end":73756,"line_start":1580,"line_end":1580,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{DMatrix, DVector};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":73761,"byte_end":73800,"line_start":1581,"line_end":1581,"column_start":5,"column_end":44}},{"value":"/ // Note that all those would also work with statically-sized matrices.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":73805,"byte_end":73879,"line_start":1582,"line_end":1582,"column_start":5,"column_end":79}},{"value":"/ // We use DMatrix/DVector since that's the only case where pre-allocating the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":73884,"byte_end":73965,"line_start":1583,"line_end":1583,"column_start":5,"column_end":86}},{"value":"/ // workspace is actually useful (assuming the same workspace is re-used for","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":73970,"byte_end":74049,"line_start":1584,"line_end":1584,"column_start":5,"column_end":84}},{"value":"/ // several computations) because it avoids repeated dynamic allocations.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":74054,"byte_end":74130,"line_start":1585,"line_end":1585,"column_start":5,"column_end":81}},{"value":"/ let mut mat = DMatrix::identity(2, 2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":74135,"byte_end":74177,"line_start":1586,"line_end":1586,"column_start":5,"column_end":47}},{"value":"/ let rhs = DMatrix::from_row_slice(3, 2, &[1.0, 2.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":74182,"byte_end":74237,"line_start":1587,"line_end":1587,"column_start":5,"column_end":60}},{"value":"/                                           3.0, 4.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":74242,"byte_end":74297,"line_start":1588,"line_end":1588,"column_start":5,"column_end":60}},{"value":"/                                           5.0, 6.0]);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":74302,"byte_end":74359,"line_start":1589,"line_end":1589,"column_start":5,"column_end":62}},{"value":"/ let mid = DMatrix::from_row_slice(3, 3, &[0.1, 0.2, 0.3,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":74364,"byte_end":74424,"line_start":1590,"line_end":1590,"column_start":5,"column_end":65}},{"value":"/                                           0.5, 0.6, 0.7,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":74429,"byte_end":74489,"line_start":1591,"line_end":1591,"column_start":5,"column_end":65}},{"value":"/                                           0.9, 1.0, 1.1]);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":74494,"byte_end":74556,"line_start":1592,"line_end":1592,"column_start":5,"column_end":67}},{"value":"/ // The random shows that values on the workspace do not","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":74561,"byte_end":74620,"line_start":1593,"line_end":1593,"column_start":5,"column_end":64}},{"value":"/ // matter as they will be overwritten.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":74625,"byte_end":74667,"line_start":1594,"line_end":1594,"column_start":5,"column_end":47}},{"value":"/ let mut workspace = DVector::new_random(3);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":74672,"byte_end":74719,"line_start":1595,"line_end":1595,"column_start":5,"column_end":52}},{"value":"/ let expected = rhs.transpose() * &mid * &rhs * 10.0 + &mat * 5.0;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":74724,"byte_end":74793,"line_start":1596,"line_end":1596,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":74798,"byte_end":74801,"line_start":1597,"line_end":1597,"column_start":5,"column_end":8}},{"value":"/ mat.quadform_with_workspace(&mut workspace, 10.0, &mid, &rhs, 5.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":74806,"byte_end":74877,"line_start":1598,"line_end":1598,"column_start":5,"column_end":76}},{"value":"/ assert_relative_eq!(mat, expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":74882,"byte_end":74921,"line_start":1599,"line_end":1599,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":76811,"byte_end":76819,"line_start":1649,"line_end":1649,"column_start":12,"column_end":20},"name":"quadform","qualname":"<SquareMatrix<N, D1, S>>::quadform","value":"fn <D2, S2, R3, C3, S3> (&mut self, alpha: N, mid: &SquareMatrix<N, D2, S2>, rhs: &Matrix<N, R3, C3, S3>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.","sig":null,"attributes":[{"value":"/ Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":75855,"byte_end":75946,"line_start":1629,"line_end":1629,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":75951,"byte_end":75954,"line_start":1630,"line_end":1630,"column_start":5,"column_end":8}},{"value":"/ This allocates a workspace vector of dimension D2 for intermediate results.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":75959,"byte_end":76038,"line_start":1631,"line_end":1631,"column_start":5,"column_end":84}},{"value":"/ If `D2` is a type-level integer, then the allocation is performed on the stack.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":76043,"byte_end":76126,"line_start":1632,"line_end":1632,"column_start":5,"column_end":88}},{"value":"/ Use `.quadform_with_workspace(...)` instead to avoid allocations.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":76131,"byte_end":76200,"line_start":1633,"line_end":1633,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":76205,"byte_end":76208,"line_start":1634,"line_end":1634,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":76213,"byte_end":76220,"line_start":1635,"line_end":1635,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":76225,"byte_end":76264,"line_start":1636,"line_end":1636,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2, Matrix3x2, Matrix3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":76269,"byte_end":76319,"line_start":1637,"line_end":1637,"column_start":5,"column_end":55}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":76324,"byte_end":76362,"line_start":1638,"line_end":1638,"column_start":5,"column_end":43}},{"value":"/ let rhs = Matrix3x2::new(1.0, 2.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":76367,"byte_end":76405,"line_start":1639,"line_end":1639,"column_start":5,"column_end":43}},{"value":"/                          3.0, 4.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":76410,"byte_end":76448,"line_start":1640,"line_end":1640,"column_start":5,"column_end":43}},{"value":"/                          5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":76453,"byte_end":76492,"line_start":1641,"line_end":1641,"column_start":5,"column_end":44}},{"value":"/ let mid = Matrix3::new(0.1, 0.2, 0.3,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":76497,"byte_end":76538,"line_start":1642,"line_end":1642,"column_start":5,"column_end":46}},{"value":"/                        0.5, 0.6, 0.7,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":76543,"byte_end":76584,"line_start":1643,"line_end":1643,"column_start":5,"column_end":46}},{"value":"/                        0.9, 1.0, 1.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":76589,"byte_end":76631,"line_start":1644,"line_end":1644,"column_start":5,"column_end":47}},{"value":"/ let expected = rhs.transpose() * mid * rhs * 10.0 + mat * 5.0;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":76636,"byte_end":76702,"line_start":1645,"line_end":1645,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":76707,"byte_end":76710,"line_start":1646,"line_end":1646,"column_start":5,"column_end":8}},{"value":"/ mat.quadform(10.0, &mid, &rhs, 5.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":76715,"byte_end":76755,"line_start":1647,"line_end":1647,"column_start":5,"column_end":45}},{"value":"/ assert_relative_eq!(mat, expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":76760,"byte_end":76799,"line_start":1648,"line_end":1648,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":316},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constraint","qualname":"::base::constraint","value":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":328},{"krate":0,"index":333},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":343},{"krate":0,"index":346},{"krate":0,"index":8060},{"krate":0,"index":8064},{"krate":0,"index":8067},{"krate":0,"index":8070},{"krate":0,"index":8073},{"krate":0,"index":8077},{"krate":0,"index":8080},{"krate":0,"index":8083},{"krate":0,"index":347},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":357}],"decl_id":null,"docs":" Compatibility constraints between matrix shapes, e.g., for addition or multiplication.\n","sig":null,"attributes":[{"value":"! Compatibility constraints between matrix shapes, e.g., for addition or multiplication.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":77411,"byte_end":77501,"line_start":1,"line_end":1,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":321},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":77630,"byte_end":77645,"line_start":6,"line_end":6,"column_start":12,"column_end":27},"name":"ShapeConstraint","qualname":"::base::constraint::ShapeConstraint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type used in `where` clauses for enforcing constraints.\n","sig":null,"attributes":[{"value":"/ A type used in `where` clauses for enforcing constraints.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":77557,"byte_end":77618,"line_start":5,"line_end":5,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":323},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":77706,"byte_end":77721,"line_start":9,"line_end":9,"column_start":11,"column_end":26},"name":"AreMultipliable","qualname":"::base::constraint::AreMultipliable","value":"AreMultipliable<R1: Dim, C1: Dim, R2: Dim, C2: Dim>: DimEq<C1, R2>","parent":null,"children":[],"decl_id":null,"docs":" Constraints `C1` and `R2` to be equivalent.\n","sig":null,"attributes":[{"value":"/ Constraints `C1` and `R2` to be equivalent.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":77648,"byte_end":77695,"line_start":8,"line_end":8,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":333},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":77974,"byte_end":77979,"line_start":17,"line_end":17,"column_start":11,"column_end":16},"name":"DimEq","qualname":"::base::constraint::DimEq","value":"DimEq<D1: Dim, D2: Dim>","parent":null,"children":[{"krate":0,"index":336}],"decl_id":null,"docs":" Constraints `D1` and `D2` to be equivalent.\n","sig":null,"attributes":[{"value":"/ Constraints `D1` and `D2` to be equivalent.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":77916,"byte_end":77963,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":336},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":78128,"byte_end":78142,"line_start":20,"line_end":20,"column_start":10,"column_end":24},"name":"Representative","qualname":"::base::constraint::DimEq::Representative","value":"type Representative: Dim;","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level\n constant.\n","sig":null,"attributes":[{"value":"/ This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":78004,"byte_end":78100,"line_start":18,"line_end":18,"column_start":5,"column_end":101}},{"value":"/ constant.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":78105,"byte_end":78118,"line_start":19,"line_end":19,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":8060},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":79375,"byte_end":79391,"line_start":63,"line_end":63,"column_start":5,"column_end":21},"name":"SameNumberOfRows","qualname":"::base::constraint::SameNumberOfRows","value":"SameNumberOfRows<D1: Dim, D2: Dim>: DimEq<D1, D2> + DimEq<D2, D1>","parent":null,"children":[{"krate":0,"index":8063}],"decl_id":null,"docs":"Constraints `D1` and `D2` to be equivalent. They are both assumed to be the number of rows of a matrix.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8073},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":79525,"byte_end":79544,"line_start":67,"line_end":67,"column_start":5,"column_end":24},"name":"SameNumberOfColumns","qualname":"::base::constraint::SameNumberOfColumns","value":"SameNumberOfColumns<D1: Dim, D2: Dim>: DimEq<D1, D2> + DimEq<D2, D1>","parent":null,"children":[{"krate":0,"index":8076}],"decl_id":null,"docs":"Constraints `D1` and `D2` to be equivalent. They are both assumed to be the number of columns of a matrix.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":347},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":79690,"byte_end":79703,"line_start":72,"line_end":72,"column_start":11,"column_end":24},"name":"SameDimension","qualname":"::base::constraint::SameDimension","value":"SameDimension<D1: Dim, D2: Dim>: SameNumberOfRows<D1, D2> + SameNumberOfColumns<D1, D2>","parent":null,"children":[{"krate":0,"index":350}],"decl_id":null,"docs":" Constraints D1 and D2 to be equivalent, where they both designate dimensions of algebraic\n entities (e.g. square matrices).\n","sig":null,"attributes":[{"value":"/ Constraints D1 and D2 to be equivalent, where they both designate dimensions of algebraic","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":79549,"byte_end":79642,"line_start":70,"line_end":70,"column_start":1,"column_end":94}},{"value":"/ entities (e.g. square matrices).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":79643,"byte_end":79679,"line_start":71,"line_end":71,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":350},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":79912,"byte_end":79926,"line_start":77,"line_end":77,"column_start":10,"column_end":24},"name":"Representative","qualname":"::base::constraint::SameDimension::Representative","value":"type Representative: Dim;","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level\n constant.\n","sig":null,"attributes":[{"value":"/ This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":79788,"byte_end":79884,"line_start":75,"line_end":75,"column_start":5,"column_end":101}},{"value":"/ constant.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":79889,"byte_end":79902,"line_start":76,"line_end":76,"column_start":5,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":360},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"coordinates","qualname":"::base::coordinates","value":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":8086},{"krate":0,"index":8107},{"krate":0,"index":8109},{"krate":0,"index":8101},{"krate":0,"index":8103},{"krate":0,"index":8098},{"krate":0,"index":8094},{"krate":0,"index":8091},{"krate":0,"index":8089},{"krate":0,"index":8112},{"krate":0,"index":8134},{"krate":0,"index":8136},{"krate":0,"index":8128},{"krate":0,"index":8130},{"krate":0,"index":8125},{"krate":0,"index":8121},{"krate":0,"index":8118},{"krate":0,"index":8116},{"krate":0,"index":8139},{"krate":0,"index":8162},{"krate":0,"index":8164},{"krate":0,"index":8156},{"krate":0,"index":8158},{"krate":0,"index":8153},{"krate":0,"index":8149},{"krate":0,"index":8146},{"krate":0,"index":8144},{"krate":0,"index":8167},{"krate":0,"index":8191},{"krate":0,"index":8193},{"krate":0,"index":8185},{"krate":0,"index":8187},{"krate":0,"index":8182},{"krate":0,"index":8178},{"krate":0,"index":8175},{"krate":0,"index":8173},{"krate":0,"index":8196},{"krate":0,"index":8221},{"krate":0,"index":8223},{"krate":0,"index":8215},{"krate":0,"index":8217},{"krate":0,"index":8212},{"krate":0,"index":8208},{"krate":0,"index":8205},{"krate":0,"index":8203},{"krate":0,"index":8226},{"krate":0,"index":8252},{"krate":0,"index":8254},{"krate":0,"index":8246},{"krate":0,"index":8248},{"krate":0,"index":8243},{"krate":0,"index":8239},{"krate":0,"index":8236},{"krate":0,"index":8234},{"krate":0,"index":8257},{"krate":0,"index":8281},{"krate":0,"index":8283},{"krate":0,"index":8275},{"krate":0,"index":8277},{"krate":0,"index":8272},{"krate":0,"index":8268},{"krate":0,"index":8265},{"krate":0,"index":8263},{"krate":0,"index":8286},{"krate":0,"index":8310},{"krate":0,"index":8312},{"krate":0,"index":8304},{"krate":0,"index":8306},{"krate":0,"index":8301},{"krate":0,"index":8297},{"krate":0,"index":8294},{"krate":0,"index":8292},{"krate":0,"index":8315},{"krate":0,"index":8341},{"krate":0,"index":8343},{"krate":0,"index":8335},{"krate":0,"index":8337},{"krate":0,"index":8332},{"krate":0,"index":8328},{"krate":0,"index":8325},{"krate":0,"index":8323},{"krate":0,"index":8346},{"krate":0,"index":8374},{"krate":0,"index":8376},{"krate":0,"index":8368},{"krate":0,"index":8370},{"krate":0,"index":8365},{"krate":0,"index":8361},{"krate":0,"index":8358},{"krate":0,"index":8356},{"krate":0,"index":8379},{"krate":0,"index":8409},{"krate":0,"index":8411},{"krate":0,"index":8403},{"krate":0,"index":8405},{"krate":0,"index":8400},{"krate":0,"index":8396},{"krate":0,"index":8393},{"krate":0,"index":8391},{"krate":0,"index":8414},{"krate":0,"index":8446},{"krate":0,"index":8448},{"krate":0,"index":8440},{"krate":0,"index":8442},{"krate":0,"index":8437},{"krate":0,"index":8433},{"krate":0,"index":8430},{"krate":0,"index":8428},{"krate":0,"index":8451},{"krate":0,"index":8477},{"krate":0,"index":8479},{"krate":0,"index":8471},{"krate":0,"index":8473},{"krate":0,"index":8468},{"krate":0,"index":8464},{"krate":0,"index":8461},{"krate":0,"index":8459},{"krate":0,"index":8482},{"krate":0,"index":8511},{"krate":0,"index":8513},{"krate":0,"index":8505},{"krate":0,"index":8507},{"krate":0,"index":8502},{"krate":0,"index":8498},{"krate":0,"index":8495},{"krate":0,"index":8493},{"krate":0,"index":8516},{"krate":0,"index":8548},{"krate":0,"index":8550},{"krate":0,"index":8542},{"krate":0,"index":8544},{"krate":0,"index":8539},{"krate":0,"index":8535},{"krate":0,"index":8532},{"krate":0,"index":8530},{"krate":0,"index":8553},{"krate":0,"index":8588},{"krate":0,"index":8590},{"krate":0,"index":8582},{"krate":0,"index":8584},{"krate":0,"index":8579},{"krate":0,"index":8575},{"krate":0,"index":8572},{"krate":0,"index":8570},{"krate":0,"index":8593},{"krate":0,"index":8631},{"krate":0,"index":8633},{"krate":0,"index":8625},{"krate":0,"index":8627},{"krate":0,"index":8622},{"krate":0,"index":8618},{"krate":0,"index":8615},{"krate":0,"index":8613},{"krate":0,"index":8636},{"krate":0,"index":8664},{"krate":0,"index":8666},{"krate":0,"index":8658},{"krate":0,"index":8660},{"krate":0,"index":8655},{"krate":0,"index":8651},{"krate":0,"index":8648},{"krate":0,"index":8646},{"krate":0,"index":8669},{"krate":0,"index":8701},{"krate":0,"index":8703},{"krate":0,"index":8695},{"krate":0,"index":8697},{"krate":0,"index":8692},{"krate":0,"index":8688},{"krate":0,"index":8685},{"krate":0,"index":8683},{"krate":0,"index":8706},{"krate":0,"index":8742},{"krate":0,"index":8744},{"krate":0,"index":8736},{"krate":0,"index":8738},{"krate":0,"index":8733},{"krate":0,"index":8729},{"krate":0,"index":8726},{"krate":0,"index":8724},{"krate":0,"index":8747},{"krate":0,"index":8787},{"krate":0,"index":8789},{"krate":0,"index":8781},{"krate":0,"index":8783},{"krate":0,"index":8778},{"krate":0,"index":8774},{"krate":0,"index":8771},{"krate":0,"index":8769},{"krate":0,"index":8792},{"krate":0,"index":8836},{"krate":0,"index":8838},{"krate":0,"index":8830},{"krate":0,"index":8832},{"krate":0,"index":8827},{"krate":0,"index":8823},{"krate":0,"index":8820},{"krate":0,"index":8818},{"krate":0,"index":8841},{"krate":0,"index":8871},{"krate":0,"index":8873},{"krate":0,"index":8865},{"krate":0,"index":8867},{"krate":0,"index":8862},{"krate":0,"index":8858},{"krate":0,"index":8855},{"krate":0,"index":8853},{"krate":0,"index":8876},{"krate":0,"index":8911},{"krate":0,"index":8913},{"krate":0,"index":8905},{"krate":0,"index":8907},{"krate":0,"index":8902},{"krate":0,"index":8898},{"krate":0,"index":8895},{"krate":0,"index":8893},{"krate":0,"index":8916},{"krate":0,"index":8956},{"krate":0,"index":8958},{"krate":0,"index":8950},{"krate":0,"index":8952},{"krate":0,"index":8947},{"krate":0,"index":8943},{"krate":0,"index":8940},{"krate":0,"index":8938},{"krate":0,"index":8961},{"krate":0,"index":9006},{"krate":0,"index":9008},{"krate":0,"index":9000},{"krate":0,"index":9002},{"krate":0,"index":8997},{"krate":0,"index":8993},{"krate":0,"index":8990},{"krate":0,"index":8988},{"krate":0,"index":9011},{"krate":0,"index":9061},{"krate":0,"index":9063},{"krate":0,"index":9055},{"krate":0,"index":9057},{"krate":0,"index":9052},{"krate":0,"index":9048},{"krate":0,"index":9045},{"krate":0,"index":9043},{"krate":0,"index":9066},{"krate":0,"index":9098},{"krate":0,"index":9100},{"krate":0,"index":9092},{"krate":0,"index":9094},{"krate":0,"index":9089},{"krate":0,"index":9085},{"krate":0,"index":9082},{"krate":0,"index":9080},{"krate":0,"index":9103},{"krate":0,"index":9141},{"krate":0,"index":9143},{"krate":0,"index":9135},{"krate":0,"index":9137},{"krate":0,"index":9132},{"krate":0,"index":9128},{"krate":0,"index":9125},{"krate":0,"index":9123},{"krate":0,"index":9146},{"krate":0,"index":9190},{"krate":0,"index":9192},{"krate":0,"index":9184},{"krate":0,"index":9186},{"krate":0,"index":9181},{"krate":0,"index":9177},{"krate":0,"index":9174},{"krate":0,"index":9172},{"krate":0,"index":9195},{"krate":0,"index":9245},{"krate":0,"index":9247},{"krate":0,"index":9239},{"krate":0,"index":9241},{"krate":0,"index":9236},{"krate":0,"index":9232},{"krate":0,"index":9229},{"krate":0,"index":9227},{"krate":0,"index":9250},{"krate":0,"index":9306},{"krate":0,"index":9308},{"krate":0,"index":9300},{"krate":0,"index":9302},{"krate":0,"index":9297},{"krate":0,"index":9293},{"krate":0,"index":9290},{"krate":0,"index":9288},{"krate":0,"index":9311},{"krate":0,"index":9316},{"krate":0,"index":9320},{"krate":0,"index":9325},{"krate":0,"index":9329},{"krate":0,"index":9334},{"krate":0,"index":9338},{"krate":0,"index":9343},{"krate":0,"index":9347},{"krate":0,"index":9352},{"krate":0,"index":9356},{"krate":0,"index":9361},{"krate":0,"index":9365},{"krate":0,"index":9370},{"krate":0,"index":9374},{"krate":0,"index":9379},{"krate":0,"index":9383},{"krate":0,"index":9388},{"krate":0,"index":9392},{"krate":0,"index":9397},{"krate":0,"index":9401},{"krate":0,"index":9406},{"krate":0,"index":9410},{"krate":0,"index":9415},{"krate":0,"index":9419},{"krate":0,"index":9424},{"krate":0,"index":9428},{"krate":0,"index":9433},{"krate":0,"index":9437},{"krate":0,"index":9442},{"krate":0,"index":9446},{"krate":0,"index":9451},{"krate":0,"index":9455},{"krate":0,"index":9460},{"krate":0,"index":9464},{"krate":0,"index":9469},{"krate":0,"index":9473},{"krate":0,"index":9478},{"krate":0,"index":9482},{"krate":0,"index":9487},{"krate":0,"index":9491},{"krate":0,"index":9496},{"krate":0,"index":9500},{"krate":0,"index":9505},{"krate":0,"index":9509},{"krate":0,"index":9514},{"krate":0,"index":9518},{"krate":0,"index":9523},{"krate":0,"index":9527},{"krate":0,"index":9532},{"krate":0,"index":9536},{"krate":0,"index":9541},{"krate":0,"index":9545},{"krate":0,"index":9550},{"krate":0,"index":9554},{"krate":0,"index":9559},{"krate":0,"index":9563},{"krate":0,"index":9568},{"krate":0,"index":9572},{"krate":0,"index":9577},{"krate":0,"index":9581},{"krate":0,"index":9586},{"krate":0,"index":9590},{"krate":0,"index":9595},{"krate":0,"index":9599},{"krate":0,"index":9604},{"krate":0,"index":9608},{"krate":0,"index":9613},{"krate":0,"index":9617},{"krate":0,"index":9622},{"krate":0,"index":9626},{"krate":0,"index":9631}],"decl_id":null,"docs":" Structures to which matrices and vector can be auto-dereferenced (through `Deref`) to access\n components using their names. For example, if `v` is a 3D vector, one can write `v.z` instead\n of `v[2]`.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80217,"byte_end":80240,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"! Structures to which matrices and vector can be auto-dereferenced (through `Deref`) to access","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80242,"byte_end":80338,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"! components using their names. For example, if `v` is a 3D vector, one can write `v.z` instead","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80339,"byte_end":80436,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"! of `v[2]`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80437,"byte_end":80451,"line_start":5,"line_end":5,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8086},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":81927,"byte_end":81928,"line_start":60,"line_end":60,"column_start":14,"column_end":15},"name":"X","qualname":"::base::coordinates::X","value":"X { x }","parent":null,"children":[{"krate":0,"index":8088}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8088},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":81930,"byte_end":81931,"line_start":60,"line_end":60,"column_start":17,"column_end":18},"name":"x","qualname":"::base::coordinates::X::x","value":"N","parent":{"krate":0,"index":8086},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8112},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":81947,"byte_end":81949,"line_start":61,"line_end":61,"column_start":14,"column_end":16},"name":"XY","qualname":"::base::coordinates::XY","value":"XY { x, y }","parent":null,"children":[{"krate":0,"index":8114},{"krate":0,"index":8115}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8114},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":81951,"byte_end":81952,"line_start":61,"line_end":61,"column_start":18,"column_end":19},"name":"x","qualname":"::base::coordinates::XY::x","value":"N","parent":{"krate":0,"index":8112},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8115},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":81954,"byte_end":81955,"line_start":61,"line_end":61,"column_start":21,"column_end":22},"name":"y","qualname":"::base::coordinates::XY::y","value":"N","parent":{"krate":0,"index":8112},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8139},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":81971,"byte_end":81974,"line_start":62,"line_end":62,"column_start":14,"column_end":17},"name":"XYZ","qualname":"::base::coordinates::XYZ","value":"XYZ { x, y, z }","parent":null,"children":[{"krate":0,"index":8141},{"krate":0,"index":8142},{"krate":0,"index":8143}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8141},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":81976,"byte_end":81977,"line_start":62,"line_end":62,"column_start":19,"column_end":20},"name":"x","qualname":"::base::coordinates::XYZ::x","value":"N","parent":{"krate":0,"index":8139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8142},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":81979,"byte_end":81980,"line_start":62,"line_end":62,"column_start":22,"column_end":23},"name":"y","qualname":"::base::coordinates::XYZ::y","value":"N","parent":{"krate":0,"index":8139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8143},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":81982,"byte_end":81983,"line_start":62,"line_end":62,"column_start":25,"column_end":26},"name":"z","qualname":"::base::coordinates::XYZ::z","value":"N","parent":{"krate":0,"index":8139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8167},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":81999,"byte_end":82003,"line_start":63,"line_end":63,"column_start":14,"column_end":18},"name":"XYZW","qualname":"::base::coordinates::XYZW","value":"XYZW { x, y, z, w }","parent":null,"children":[{"krate":0,"index":8169},{"krate":0,"index":8170},{"krate":0,"index":8171},{"krate":0,"index":8172}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8169},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82005,"byte_end":82006,"line_start":63,"line_end":63,"column_start":20,"column_end":21},"name":"x","qualname":"::base::coordinates::XYZW::x","value":"N","parent":{"krate":0,"index":8167},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8170},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82008,"byte_end":82009,"line_start":63,"line_end":63,"column_start":23,"column_end":24},"name":"y","qualname":"::base::coordinates::XYZW::y","value":"N","parent":{"krate":0,"index":8167},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8171},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82011,"byte_end":82012,"line_start":63,"line_end":63,"column_start":26,"column_end":27},"name":"z","qualname":"::base::coordinates::XYZW::z","value":"N","parent":{"krate":0,"index":8167},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8172},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82014,"byte_end":82015,"line_start":63,"line_end":63,"column_start":29,"column_end":30},"name":"w","qualname":"::base::coordinates::XYZW::w","value":"N","parent":{"krate":0,"index":8167},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8196},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82031,"byte_end":82036,"line_start":64,"line_end":64,"column_start":14,"column_end":19},"name":"XYZWA","qualname":"::base::coordinates::XYZWA","value":"XYZWA { x, y, z, w, a }","parent":null,"children":[{"krate":0,"index":8198},{"krate":0,"index":8199},{"krate":0,"index":8200},{"krate":0,"index":8201},{"krate":0,"index":8202}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8198},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82038,"byte_end":82039,"line_start":64,"line_end":64,"column_start":21,"column_end":22},"name":"x","qualname":"::base::coordinates::XYZWA::x","value":"N","parent":{"krate":0,"index":8196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8199},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82041,"byte_end":82042,"line_start":64,"line_end":64,"column_start":24,"column_end":25},"name":"y","qualname":"::base::coordinates::XYZWA::y","value":"N","parent":{"krate":0,"index":8196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8200},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82044,"byte_end":82045,"line_start":64,"line_end":64,"column_start":27,"column_end":28},"name":"z","qualname":"::base::coordinates::XYZWA::z","value":"N","parent":{"krate":0,"index":8196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8201},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82047,"byte_end":82048,"line_start":64,"line_end":64,"column_start":30,"column_end":31},"name":"w","qualname":"::base::coordinates::XYZWA::w","value":"N","parent":{"krate":0,"index":8196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8202},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82050,"byte_end":82051,"line_start":64,"line_end":64,"column_start":33,"column_end":34},"name":"a","qualname":"::base::coordinates::XYZWA::a","value":"N","parent":{"krate":0,"index":8196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8226},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82067,"byte_end":82073,"line_start":65,"line_end":65,"column_start":14,"column_end":20},"name":"XYZWAB","qualname":"::base::coordinates::XYZWAB","value":"XYZWAB { x, y, z, w, a, b }","parent":null,"children":[{"krate":0,"index":8228},{"krate":0,"index":8229},{"krate":0,"index":8230},{"krate":0,"index":8231},{"krate":0,"index":8232},{"krate":0,"index":8233}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8228},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82075,"byte_end":82076,"line_start":65,"line_end":65,"column_start":22,"column_end":23},"name":"x","qualname":"::base::coordinates::XYZWAB::x","value":"N","parent":{"krate":0,"index":8226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8229},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82078,"byte_end":82079,"line_start":65,"line_end":65,"column_start":25,"column_end":26},"name":"y","qualname":"::base::coordinates::XYZWAB::y","value":"N","parent":{"krate":0,"index":8226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8230},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82081,"byte_end":82082,"line_start":65,"line_end":65,"column_start":28,"column_end":29},"name":"z","qualname":"::base::coordinates::XYZWAB::z","value":"N","parent":{"krate":0,"index":8226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8231},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82084,"byte_end":82085,"line_start":65,"line_end":65,"column_start":31,"column_end":32},"name":"w","qualname":"::base::coordinates::XYZWAB::w","value":"N","parent":{"krate":0,"index":8226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8232},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82087,"byte_end":82088,"line_start":65,"line_end":65,"column_start":34,"column_end":35},"name":"a","qualname":"::base::coordinates::XYZWAB::a","value":"N","parent":{"krate":0,"index":8226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8233},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82090,"byte_end":82091,"line_start":65,"line_end":65,"column_start":37,"column_end":38},"name":"b","qualname":"::base::coordinates::XYZWAB::b","value":"N","parent":{"krate":0,"index":8226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8257},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82107,"byte_end":82111,"line_start":66,"line_end":66,"column_start":14,"column_end":18},"name":"IJKW","qualname":"::base::coordinates::IJKW","value":"IJKW { i, j, k, w }","parent":null,"children":[{"krate":0,"index":8259},{"krate":0,"index":8260},{"krate":0,"index":8261},{"krate":0,"index":8262}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8259},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82113,"byte_end":82114,"line_start":66,"line_end":66,"column_start":20,"column_end":21},"name":"i","qualname":"::base::coordinates::IJKW::i","value":"N","parent":{"krate":0,"index":8257},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8260},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82116,"byte_end":82117,"line_start":66,"line_end":66,"column_start":23,"column_end":24},"name":"j","qualname":"::base::coordinates::IJKW::j","value":"N","parent":{"krate":0,"index":8257},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8261},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82119,"byte_end":82120,"line_start":66,"line_end":66,"column_start":26,"column_end":27},"name":"k","qualname":"::base::coordinates::IJKW::k","value":"N","parent":{"krate":0,"index":8257},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8262},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82122,"byte_end":82123,"line_start":66,"line_end":66,"column_start":29,"column_end":30},"name":"w","qualname":"::base::coordinates::IJKW::w","value":"N","parent":{"krate":0,"index":8257},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8286},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82184,"byte_end":82188,"line_start":71,"line_end":71,"column_start":14,"column_end":18},"name":"M2x2","qualname":"::base::coordinates::M2x2","value":"M2x2 { m11, m21, m12, m22 }","parent":null,"children":[{"krate":0,"index":8288},{"krate":0,"index":8289},{"krate":0,"index":8290},{"krate":0,"index":8291}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8288},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82190,"byte_end":82193,"line_start":71,"line_end":71,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x2::m11","value":"N","parent":{"krate":0,"index":8286},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8289},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82195,"byte_end":82198,"line_start":71,"line_end":71,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x2::m21","value":"N","parent":{"krate":0,"index":8286},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8290},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82219,"byte_end":82222,"line_start":72,"line_end":72,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x2::m12","value":"N","parent":{"krate":0,"index":8286},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8291},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82224,"byte_end":82227,"line_start":72,"line_end":72,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x2::m22","value":"N","parent":{"krate":0,"index":8286},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8315},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82243,"byte_end":82247,"line_start":73,"line_end":73,"column_start":14,"column_end":18},"name":"M2x3","qualname":"::base::coordinates::M2x3","value":"M2x3 { m11, m21, m12, m22, m13, m23 }","parent":null,"children":[{"krate":0,"index":8317},{"krate":0,"index":8318},{"krate":0,"index":8319},{"krate":0,"index":8320},{"krate":0,"index":8321},{"krate":0,"index":8322}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8317},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82249,"byte_end":82252,"line_start":73,"line_end":73,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x3::m11","value":"N","parent":{"krate":0,"index":8315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8318},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82254,"byte_end":82257,"line_start":73,"line_end":73,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x3::m21","value":"N","parent":{"krate":0,"index":8315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8319},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82278,"byte_end":82281,"line_start":74,"line_end":74,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x3::m12","value":"N","parent":{"krate":0,"index":8315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8320},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82283,"byte_end":82286,"line_start":74,"line_end":74,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x3::m22","value":"N","parent":{"krate":0,"index":8315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8321},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82307,"byte_end":82310,"line_start":75,"line_end":75,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M2x3::m13","value":"N","parent":{"krate":0,"index":8315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8322},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82312,"byte_end":82315,"line_start":75,"line_end":75,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M2x3::m23","value":"N","parent":{"krate":0,"index":8315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8346},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82331,"byte_end":82335,"line_start":76,"line_end":76,"column_start":14,"column_end":18},"name":"M2x4","qualname":"::base::coordinates::M2x4","value":"M2x4 { m11, m21, m12, m22, m13, m23, m14, m24 }","parent":null,"children":[{"krate":0,"index":8348},{"krate":0,"index":8349},{"krate":0,"index":8350},{"krate":0,"index":8351},{"krate":0,"index":8352},{"krate":0,"index":8353},{"krate":0,"index":8354},{"krate":0,"index":8355}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8348},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82337,"byte_end":82340,"line_start":76,"line_end":76,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x4::m11","value":"N","parent":{"krate":0,"index":8346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8349},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82342,"byte_end":82345,"line_start":76,"line_end":76,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x4::m21","value":"N","parent":{"krate":0,"index":8346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8350},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82366,"byte_end":82369,"line_start":77,"line_end":77,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x4::m12","value":"N","parent":{"krate":0,"index":8346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8351},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82371,"byte_end":82374,"line_start":77,"line_end":77,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x4::m22","value":"N","parent":{"krate":0,"index":8346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8352},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82395,"byte_end":82398,"line_start":78,"line_end":78,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M2x4::m13","value":"N","parent":{"krate":0,"index":8346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8353},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82400,"byte_end":82403,"line_start":78,"line_end":78,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M2x4::m23","value":"N","parent":{"krate":0,"index":8346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8354},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82424,"byte_end":82427,"line_start":79,"line_end":79,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M2x4::m14","value":"N","parent":{"krate":0,"index":8346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8355},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82429,"byte_end":82432,"line_start":79,"line_end":79,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M2x4::m24","value":"N","parent":{"krate":0,"index":8346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8379},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82448,"byte_end":82452,"line_start":80,"line_end":80,"column_start":14,"column_end":18},"name":"M2x5","qualname":"::base::coordinates::M2x5","value":"M2x5 { m11, m21, m12, m22, m13, m23, m14, m24, m15, m25 }","parent":null,"children":[{"krate":0,"index":8381},{"krate":0,"index":8382},{"krate":0,"index":8383},{"krate":0,"index":8384},{"krate":0,"index":8385},{"krate":0,"index":8386},{"krate":0,"index":8387},{"krate":0,"index":8388},{"krate":0,"index":8389},{"krate":0,"index":8390}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8381},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82454,"byte_end":82457,"line_start":80,"line_end":80,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x5::m11","value":"N","parent":{"krate":0,"index":8379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8382},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82459,"byte_end":82462,"line_start":80,"line_end":80,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x5::m21","value":"N","parent":{"krate":0,"index":8379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8383},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82483,"byte_end":82486,"line_start":81,"line_end":81,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x5::m12","value":"N","parent":{"krate":0,"index":8379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8384},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82488,"byte_end":82491,"line_start":81,"line_end":81,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x5::m22","value":"N","parent":{"krate":0,"index":8379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8385},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82512,"byte_end":82515,"line_start":82,"line_end":82,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M2x5::m13","value":"N","parent":{"krate":0,"index":8379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8386},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82517,"byte_end":82520,"line_start":82,"line_end":82,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M2x5::m23","value":"N","parent":{"krate":0,"index":8379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8387},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82541,"byte_end":82544,"line_start":83,"line_end":83,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M2x5::m14","value":"N","parent":{"krate":0,"index":8379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8388},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82546,"byte_end":82549,"line_start":83,"line_end":83,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M2x5::m24","value":"N","parent":{"krate":0,"index":8379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8389},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82570,"byte_end":82573,"line_start":84,"line_end":84,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M2x5::m15","value":"N","parent":{"krate":0,"index":8379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8390},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82575,"byte_end":82578,"line_start":84,"line_end":84,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M2x5::m25","value":"N","parent":{"krate":0,"index":8379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8414},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82594,"byte_end":82598,"line_start":85,"line_end":85,"column_start":14,"column_end":18},"name":"M2x6","qualname":"::base::coordinates::M2x6","value":"M2x6 { m11, m21, m12, m22, m13, m23, m14, m24, m15, m25, m16, m26 }","parent":null,"children":[{"krate":0,"index":8416},{"krate":0,"index":8417},{"krate":0,"index":8418},{"krate":0,"index":8419},{"krate":0,"index":8420},{"krate":0,"index":8421},{"krate":0,"index":8422},{"krate":0,"index":8423},{"krate":0,"index":8424},{"krate":0,"index":8425},{"krate":0,"index":8426},{"krate":0,"index":8427}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8416},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82600,"byte_end":82603,"line_start":85,"line_end":85,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x6::m11","value":"N","parent":{"krate":0,"index":8414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8417},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82605,"byte_end":82608,"line_start":85,"line_end":85,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x6::m21","value":"N","parent":{"krate":0,"index":8414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8418},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82629,"byte_end":82632,"line_start":86,"line_end":86,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x6::m12","value":"N","parent":{"krate":0,"index":8414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8419},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82634,"byte_end":82637,"line_start":86,"line_end":86,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x6::m22","value":"N","parent":{"krate":0,"index":8414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8420},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82658,"byte_end":82661,"line_start":87,"line_end":87,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M2x6::m13","value":"N","parent":{"krate":0,"index":8414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8421},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82663,"byte_end":82666,"line_start":87,"line_end":87,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M2x6::m23","value":"N","parent":{"krate":0,"index":8414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8422},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82687,"byte_end":82690,"line_start":88,"line_end":88,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M2x6::m14","value":"N","parent":{"krate":0,"index":8414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8423},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82692,"byte_end":82695,"line_start":88,"line_end":88,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M2x6::m24","value":"N","parent":{"krate":0,"index":8414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8424},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82716,"byte_end":82719,"line_start":89,"line_end":89,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M2x6::m15","value":"N","parent":{"krate":0,"index":8414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8425},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82721,"byte_end":82724,"line_start":89,"line_end":89,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M2x6::m25","value":"N","parent":{"krate":0,"index":8414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8426},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82745,"byte_end":82748,"line_start":90,"line_end":90,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M2x6::m16","value":"N","parent":{"krate":0,"index":8414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8427},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82750,"byte_end":82753,"line_start":90,"line_end":90,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M2x6::m26","value":"N","parent":{"krate":0,"index":8414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8451},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82814,"byte_end":82818,"line_start":95,"line_end":95,"column_start":14,"column_end":18},"name":"M3x2","qualname":"::base::coordinates::M3x2","value":"M3x2 { m11, m21, m31, m12, m22, m32 }","parent":null,"children":[{"krate":0,"index":8453},{"krate":0,"index":8454},{"krate":0,"index":8455},{"krate":0,"index":8456},{"krate":0,"index":8457},{"krate":0,"index":8458}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8453},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82820,"byte_end":82823,"line_start":95,"line_end":95,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x2::m11","value":"N","parent":{"krate":0,"index":8451},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8454},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82825,"byte_end":82828,"line_start":95,"line_end":95,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x2::m21","value":"N","parent":{"krate":0,"index":8451},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8455},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82830,"byte_end":82833,"line_start":95,"line_end":95,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x2::m31","value":"N","parent":{"krate":0,"index":8451},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8456},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82854,"byte_end":82857,"line_start":96,"line_end":96,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x2::m12","value":"N","parent":{"krate":0,"index":8451},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8457},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82859,"byte_end":82862,"line_start":96,"line_end":96,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x2::m22","value":"N","parent":{"krate":0,"index":8451},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8458},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82864,"byte_end":82867,"line_start":96,"line_end":96,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x2::m32","value":"N","parent":{"krate":0,"index":8451},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8482},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82883,"byte_end":82887,"line_start":97,"line_end":97,"column_start":14,"column_end":18},"name":"M3x3","qualname":"::base::coordinates::M3x3","value":"M3x3 { m11, m21, m31, m12, m22, m32, m13, m23, m33 }","parent":null,"children":[{"krate":0,"index":8484},{"krate":0,"index":8485},{"krate":0,"index":8486},{"krate":0,"index":8487},{"krate":0,"index":8488},{"krate":0,"index":8489},{"krate":0,"index":8490},{"krate":0,"index":8491},{"krate":0,"index":8492}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8484},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82889,"byte_end":82892,"line_start":97,"line_end":97,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x3::m11","value":"N","parent":{"krate":0,"index":8482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8485},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82894,"byte_end":82897,"line_start":97,"line_end":97,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x3::m21","value":"N","parent":{"krate":0,"index":8482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8486},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82899,"byte_end":82902,"line_start":97,"line_end":97,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x3::m31","value":"N","parent":{"krate":0,"index":8482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8487},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82923,"byte_end":82926,"line_start":98,"line_end":98,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x3::m12","value":"N","parent":{"krate":0,"index":8482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8488},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82928,"byte_end":82931,"line_start":98,"line_end":98,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x3::m22","value":"N","parent":{"krate":0,"index":8482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8489},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82933,"byte_end":82936,"line_start":98,"line_end":98,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x3::m32","value":"N","parent":{"krate":0,"index":8482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8490},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82957,"byte_end":82960,"line_start":99,"line_end":99,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M3x3::m13","value":"N","parent":{"krate":0,"index":8482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8491},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82962,"byte_end":82965,"line_start":99,"line_end":99,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M3x3::m23","value":"N","parent":{"krate":0,"index":8482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8492},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82967,"byte_end":82970,"line_start":99,"line_end":99,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M3x3::m33","value":"N","parent":{"krate":0,"index":8482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8516},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82986,"byte_end":82990,"line_start":100,"line_end":100,"column_start":14,"column_end":18},"name":"M3x4","qualname":"::base::coordinates::M3x4","value":"M3x4 { m11, m21, m31, m12, m22, m32, m13, m23, m33, m14, m24, m34 }","parent":null,"children":[{"krate":0,"index":8518},{"krate":0,"index":8519},{"krate":0,"index":8520},{"krate":0,"index":8521},{"krate":0,"index":8522},{"krate":0,"index":8523},{"krate":0,"index":8524},{"krate":0,"index":8525},{"krate":0,"index":8526},{"krate":0,"index":8527},{"krate":0,"index":8528},{"krate":0,"index":8529}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8518},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82992,"byte_end":82995,"line_start":100,"line_end":100,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x4::m11","value":"N","parent":{"krate":0,"index":8516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8519},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":82997,"byte_end":83000,"line_start":100,"line_end":100,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x4::m21","value":"N","parent":{"krate":0,"index":8516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8520},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83002,"byte_end":83005,"line_start":100,"line_end":100,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x4::m31","value":"N","parent":{"krate":0,"index":8516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8521},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83026,"byte_end":83029,"line_start":101,"line_end":101,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x4::m12","value":"N","parent":{"krate":0,"index":8516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8522},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83031,"byte_end":83034,"line_start":101,"line_end":101,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x4::m22","value":"N","parent":{"krate":0,"index":8516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8523},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83036,"byte_end":83039,"line_start":101,"line_end":101,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x4::m32","value":"N","parent":{"krate":0,"index":8516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8524},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83060,"byte_end":83063,"line_start":102,"line_end":102,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M3x4::m13","value":"N","parent":{"krate":0,"index":8516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8525},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83065,"byte_end":83068,"line_start":102,"line_end":102,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M3x4::m23","value":"N","parent":{"krate":0,"index":8516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8526},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83070,"byte_end":83073,"line_start":102,"line_end":102,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M3x4::m33","value":"N","parent":{"krate":0,"index":8516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8527},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83094,"byte_end":83097,"line_start":103,"line_end":103,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M3x4::m14","value":"N","parent":{"krate":0,"index":8516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8528},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83099,"byte_end":83102,"line_start":103,"line_end":103,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M3x4::m24","value":"N","parent":{"krate":0,"index":8516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8529},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83104,"byte_end":83107,"line_start":103,"line_end":103,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M3x4::m34","value":"N","parent":{"krate":0,"index":8516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8553},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83123,"byte_end":83127,"line_start":104,"line_end":104,"column_start":14,"column_end":18},"name":"M3x5","qualname":"::base::coordinates::M3x5","value":"M3x5 { m11, m21, m31, m12, m22, m32, m13, m23, m33, m14, m24, m34, m15, m25, m35 }","parent":null,"children":[{"krate":0,"index":8555},{"krate":0,"index":8556},{"krate":0,"index":8557},{"krate":0,"index":8558},{"krate":0,"index":8559},{"krate":0,"index":8560},{"krate":0,"index":8561},{"krate":0,"index":8562},{"krate":0,"index":8563},{"krate":0,"index":8564},{"krate":0,"index":8565},{"krate":0,"index":8566},{"krate":0,"index":8567},{"krate":0,"index":8568},{"krate":0,"index":8569}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8555},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83129,"byte_end":83132,"line_start":104,"line_end":104,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x5::m11","value":"N","parent":{"krate":0,"index":8553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8556},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83134,"byte_end":83137,"line_start":104,"line_end":104,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x5::m21","value":"N","parent":{"krate":0,"index":8553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8557},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83139,"byte_end":83142,"line_start":104,"line_end":104,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x5::m31","value":"N","parent":{"krate":0,"index":8553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8558},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83163,"byte_end":83166,"line_start":105,"line_end":105,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x5::m12","value":"N","parent":{"krate":0,"index":8553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8559},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83168,"byte_end":83171,"line_start":105,"line_end":105,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x5::m22","value":"N","parent":{"krate":0,"index":8553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8560},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83173,"byte_end":83176,"line_start":105,"line_end":105,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x5::m32","value":"N","parent":{"krate":0,"index":8553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8561},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83197,"byte_end":83200,"line_start":106,"line_end":106,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M3x5::m13","value":"N","parent":{"krate":0,"index":8553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8562},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83202,"byte_end":83205,"line_start":106,"line_end":106,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M3x5::m23","value":"N","parent":{"krate":0,"index":8553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8563},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83207,"byte_end":83210,"line_start":106,"line_end":106,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M3x5::m33","value":"N","parent":{"krate":0,"index":8553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8564},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83231,"byte_end":83234,"line_start":107,"line_end":107,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M3x5::m14","value":"N","parent":{"krate":0,"index":8553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8565},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83236,"byte_end":83239,"line_start":107,"line_end":107,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M3x5::m24","value":"N","parent":{"krate":0,"index":8553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8566},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83241,"byte_end":83244,"line_start":107,"line_end":107,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M3x5::m34","value":"N","parent":{"krate":0,"index":8553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8567},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83265,"byte_end":83268,"line_start":108,"line_end":108,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M3x5::m15","value":"N","parent":{"krate":0,"index":8553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8568},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83270,"byte_end":83273,"line_start":108,"line_end":108,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M3x5::m25","value":"N","parent":{"krate":0,"index":8553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8569},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83275,"byte_end":83278,"line_start":108,"line_end":108,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M3x5::m35","value":"N","parent":{"krate":0,"index":8553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8593},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83294,"byte_end":83298,"line_start":109,"line_end":109,"column_start":14,"column_end":18},"name":"M3x6","qualname":"::base::coordinates::M3x6","value":"M3x6 { m11, m21, m31, m12, m22, m32, m13, m23, m33, m14, m24, m34, m15, m25, m35, m16, m26, m36 }","parent":null,"children":[{"krate":0,"index":8595},{"krate":0,"index":8596},{"krate":0,"index":8597},{"krate":0,"index":8598},{"krate":0,"index":8599},{"krate":0,"index":8600},{"krate":0,"index":8601},{"krate":0,"index":8602},{"krate":0,"index":8603},{"krate":0,"index":8604},{"krate":0,"index":8605},{"krate":0,"index":8606},{"krate":0,"index":8607},{"krate":0,"index":8608},{"krate":0,"index":8609},{"krate":0,"index":8610},{"krate":0,"index":8611},{"krate":0,"index":8612}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8595},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83300,"byte_end":83303,"line_start":109,"line_end":109,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x6::m11","value":"N","parent":{"krate":0,"index":8593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8596},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83305,"byte_end":83308,"line_start":109,"line_end":109,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x6::m21","value":"N","parent":{"krate":0,"index":8593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8597},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83310,"byte_end":83313,"line_start":109,"line_end":109,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x6::m31","value":"N","parent":{"krate":0,"index":8593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8598},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83334,"byte_end":83337,"line_start":110,"line_end":110,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x6::m12","value":"N","parent":{"krate":0,"index":8593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8599},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83339,"byte_end":83342,"line_start":110,"line_end":110,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x6::m22","value":"N","parent":{"krate":0,"index":8593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8600},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83344,"byte_end":83347,"line_start":110,"line_end":110,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x6::m32","value":"N","parent":{"krate":0,"index":8593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8601},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83368,"byte_end":83371,"line_start":111,"line_end":111,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M3x6::m13","value":"N","parent":{"krate":0,"index":8593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8602},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83373,"byte_end":83376,"line_start":111,"line_end":111,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M3x6::m23","value":"N","parent":{"krate":0,"index":8593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8603},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83378,"byte_end":83381,"line_start":111,"line_end":111,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M3x6::m33","value":"N","parent":{"krate":0,"index":8593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8604},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83402,"byte_end":83405,"line_start":112,"line_end":112,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M3x6::m14","value":"N","parent":{"krate":0,"index":8593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8605},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83407,"byte_end":83410,"line_start":112,"line_end":112,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M3x6::m24","value":"N","parent":{"krate":0,"index":8593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8606},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83412,"byte_end":83415,"line_start":112,"line_end":112,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M3x6::m34","value":"N","parent":{"krate":0,"index":8593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8607},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83436,"byte_end":83439,"line_start":113,"line_end":113,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M3x6::m15","value":"N","parent":{"krate":0,"index":8593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8608},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83441,"byte_end":83444,"line_start":113,"line_end":113,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M3x6::m25","value":"N","parent":{"krate":0,"index":8593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8609},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83446,"byte_end":83449,"line_start":113,"line_end":113,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M3x6::m35","value":"N","parent":{"krate":0,"index":8593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8610},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83470,"byte_end":83473,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M3x6::m16","value":"N","parent":{"krate":0,"index":8593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8611},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83475,"byte_end":83478,"line_start":114,"line_end":114,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M3x6::m26","value":"N","parent":{"krate":0,"index":8593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8612},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83480,"byte_end":83483,"line_start":114,"line_end":114,"column_start":30,"column_end":33},"name":"m36","qualname":"::base::coordinates::M3x6::m36","value":"N","parent":{"krate":0,"index":8593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8636},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83544,"byte_end":83548,"line_start":119,"line_end":119,"column_start":14,"column_end":18},"name":"M4x2","qualname":"::base::coordinates::M4x2","value":"M4x2 { m11, m21, m31, m41, m12, m22, m32, m42 }","parent":null,"children":[{"krate":0,"index":8638},{"krate":0,"index":8639},{"krate":0,"index":8640},{"krate":0,"index":8641},{"krate":0,"index":8642},{"krate":0,"index":8643},{"krate":0,"index":8644},{"krate":0,"index":8645}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8638},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83550,"byte_end":83553,"line_start":119,"line_end":119,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x2::m11","value":"N","parent":{"krate":0,"index":8636},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8639},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83555,"byte_end":83558,"line_start":119,"line_end":119,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x2::m21","value":"N","parent":{"krate":0,"index":8636},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8640},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83560,"byte_end":83563,"line_start":119,"line_end":119,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x2::m31","value":"N","parent":{"krate":0,"index":8636},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8641},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83565,"byte_end":83568,"line_start":119,"line_end":119,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x2::m41","value":"N","parent":{"krate":0,"index":8636},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8642},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83589,"byte_end":83592,"line_start":120,"line_end":120,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x2::m12","value":"N","parent":{"krate":0,"index":8636},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8643},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83594,"byte_end":83597,"line_start":120,"line_end":120,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x2::m22","value":"N","parent":{"krate":0,"index":8636},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8644},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83599,"byte_end":83602,"line_start":120,"line_end":120,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x2::m32","value":"N","parent":{"krate":0,"index":8636},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8645},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83604,"byte_end":83607,"line_start":120,"line_end":120,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x2::m42","value":"N","parent":{"krate":0,"index":8636},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8669},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83623,"byte_end":83627,"line_start":121,"line_end":121,"column_start":14,"column_end":18},"name":"M4x3","qualname":"::base::coordinates::M4x3","value":"M4x3 { m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43 }","parent":null,"children":[{"krate":0,"index":8671},{"krate":0,"index":8672},{"krate":0,"index":8673},{"krate":0,"index":8674},{"krate":0,"index":8675},{"krate":0,"index":8676},{"krate":0,"index":8677},{"krate":0,"index":8678},{"krate":0,"index":8679},{"krate":0,"index":8680},{"krate":0,"index":8681},{"krate":0,"index":8682}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8671},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83629,"byte_end":83632,"line_start":121,"line_end":121,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x3::m11","value":"N","parent":{"krate":0,"index":8669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8672},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83634,"byte_end":83637,"line_start":121,"line_end":121,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x3::m21","value":"N","parent":{"krate":0,"index":8669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8673},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83639,"byte_end":83642,"line_start":121,"line_end":121,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x3::m31","value":"N","parent":{"krate":0,"index":8669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8674},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83644,"byte_end":83647,"line_start":121,"line_end":121,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x3::m41","value":"N","parent":{"krate":0,"index":8669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8675},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83668,"byte_end":83671,"line_start":122,"line_end":122,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x3::m12","value":"N","parent":{"krate":0,"index":8669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8676},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83673,"byte_end":83676,"line_start":122,"line_end":122,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x3::m22","value":"N","parent":{"krate":0,"index":8669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8677},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83678,"byte_end":83681,"line_start":122,"line_end":122,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x3::m32","value":"N","parent":{"krate":0,"index":8669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8678},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83683,"byte_end":83686,"line_start":122,"line_end":122,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x3::m42","value":"N","parent":{"krate":0,"index":8669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8679},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83707,"byte_end":83710,"line_start":123,"line_end":123,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M4x3::m13","value":"N","parent":{"krate":0,"index":8669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8680},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83712,"byte_end":83715,"line_start":123,"line_end":123,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M4x3::m23","value":"N","parent":{"krate":0,"index":8669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8681},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83717,"byte_end":83720,"line_start":123,"line_end":123,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M4x3::m33","value":"N","parent":{"krate":0,"index":8669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8682},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83722,"byte_end":83725,"line_start":123,"line_end":123,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M4x3::m43","value":"N","parent":{"krate":0,"index":8669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8706},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83741,"byte_end":83745,"line_start":124,"line_end":124,"column_start":14,"column_end":18},"name":"M4x4","qualname":"::base::coordinates::M4x4","value":"M4x4 { m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43, m14, m24, m34, m44 }","parent":null,"children":[{"krate":0,"index":8708},{"krate":0,"index":8709},{"krate":0,"index":8710},{"krate":0,"index":8711},{"krate":0,"index":8712},{"krate":0,"index":8713},{"krate":0,"index":8714},{"krate":0,"index":8715},{"krate":0,"index":8716},{"krate":0,"index":8717},{"krate":0,"index":8718},{"krate":0,"index":8719},{"krate":0,"index":8720},{"krate":0,"index":8721},{"krate":0,"index":8722},{"krate":0,"index":8723}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8708},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83747,"byte_end":83750,"line_start":124,"line_end":124,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x4::m11","value":"N","parent":{"krate":0,"index":8706},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8709},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83752,"byte_end":83755,"line_start":124,"line_end":124,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x4::m21","value":"N","parent":{"krate":0,"index":8706},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8710},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83757,"byte_end":83760,"line_start":124,"line_end":124,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x4::m31","value":"N","parent":{"krate":0,"index":8706},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8711},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83762,"byte_end":83765,"line_start":124,"line_end":124,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x4::m41","value":"N","parent":{"krate":0,"index":8706},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8712},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83786,"byte_end":83789,"line_start":125,"line_end":125,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x4::m12","value":"N","parent":{"krate":0,"index":8706},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8713},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83791,"byte_end":83794,"line_start":125,"line_end":125,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x4::m22","value":"N","parent":{"krate":0,"index":8706},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8714},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83796,"byte_end":83799,"line_start":125,"line_end":125,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x4::m32","value":"N","parent":{"krate":0,"index":8706},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8715},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83801,"byte_end":83804,"line_start":125,"line_end":125,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x4::m42","value":"N","parent":{"krate":0,"index":8706},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8716},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83825,"byte_end":83828,"line_start":126,"line_end":126,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M4x4::m13","value":"N","parent":{"krate":0,"index":8706},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8717},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83830,"byte_end":83833,"line_start":126,"line_end":126,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M4x4::m23","value":"N","parent":{"krate":0,"index":8706},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8718},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83835,"byte_end":83838,"line_start":126,"line_end":126,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M4x4::m33","value":"N","parent":{"krate":0,"index":8706},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8719},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83840,"byte_end":83843,"line_start":126,"line_end":126,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M4x4::m43","value":"N","parent":{"krate":0,"index":8706},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8720},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83864,"byte_end":83867,"line_start":127,"line_end":127,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M4x4::m14","value":"N","parent":{"krate":0,"index":8706},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8721},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83869,"byte_end":83872,"line_start":127,"line_end":127,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M4x4::m24","value":"N","parent":{"krate":0,"index":8706},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8722},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83874,"byte_end":83877,"line_start":127,"line_end":127,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M4x4::m34","value":"N","parent":{"krate":0,"index":8706},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8723},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83879,"byte_end":83882,"line_start":127,"line_end":127,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M4x4::m44","value":"N","parent":{"krate":0,"index":8706},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8747},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83898,"byte_end":83902,"line_start":128,"line_end":128,"column_start":14,"column_end":18},"name":"M4x5","qualname":"::base::coordinates::M4x5","value":"M4x5 { m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43, m14, m24, m34, m44, m15, m25, m35, m45 }","parent":null,"children":[{"krate":0,"index":8749},{"krate":0,"index":8750},{"krate":0,"index":8751},{"krate":0,"index":8752},{"krate":0,"index":8753},{"krate":0,"index":8754},{"krate":0,"index":8755},{"krate":0,"index":8756},{"krate":0,"index":8757},{"krate":0,"index":8758},{"krate":0,"index":8759},{"krate":0,"index":8760},{"krate":0,"index":8761},{"krate":0,"index":8762},{"krate":0,"index":8763},{"krate":0,"index":8764},{"krate":0,"index":8765},{"krate":0,"index":8766},{"krate":0,"index":8767},{"krate":0,"index":8768}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8749},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83904,"byte_end":83907,"line_start":128,"line_end":128,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x5::m11","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8750},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83909,"byte_end":83912,"line_start":128,"line_end":128,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x5::m21","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8751},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83914,"byte_end":83917,"line_start":128,"line_end":128,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x5::m31","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8752},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83919,"byte_end":83922,"line_start":128,"line_end":128,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x5::m41","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8753},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83943,"byte_end":83946,"line_start":129,"line_end":129,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x5::m12","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8754},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83948,"byte_end":83951,"line_start":129,"line_end":129,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x5::m22","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8755},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83953,"byte_end":83956,"line_start":129,"line_end":129,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x5::m32","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8756},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83958,"byte_end":83961,"line_start":129,"line_end":129,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x5::m42","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8757},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83982,"byte_end":83985,"line_start":130,"line_end":130,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M4x5::m13","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8758},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83987,"byte_end":83990,"line_start":130,"line_end":130,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M4x5::m23","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8759},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83992,"byte_end":83995,"line_start":130,"line_end":130,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M4x5::m33","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8760},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":83997,"byte_end":84000,"line_start":130,"line_end":130,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M4x5::m43","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8761},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84021,"byte_end":84024,"line_start":131,"line_end":131,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M4x5::m14","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8762},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84026,"byte_end":84029,"line_start":131,"line_end":131,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M4x5::m24","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8763},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84031,"byte_end":84034,"line_start":131,"line_end":131,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M4x5::m34","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8764},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84036,"byte_end":84039,"line_start":131,"line_end":131,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M4x5::m44","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8765},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84060,"byte_end":84063,"line_start":132,"line_end":132,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M4x5::m15","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8766},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84065,"byte_end":84068,"line_start":132,"line_end":132,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M4x5::m25","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8767},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84070,"byte_end":84073,"line_start":132,"line_end":132,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M4x5::m35","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8768},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84075,"byte_end":84078,"line_start":132,"line_end":132,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M4x5::m45","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8792},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84094,"byte_end":84098,"line_start":133,"line_end":133,"column_start":14,"column_end":18},"name":"M4x6","qualname":"::base::coordinates::M4x6","value":"M4x6 { m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43, m14, m24, m34, m44, m15, m25, m35, m45, m16, m26, m36, m46 }","parent":null,"children":[{"krate":0,"index":8794},{"krate":0,"index":8795},{"krate":0,"index":8796},{"krate":0,"index":8797},{"krate":0,"index":8798},{"krate":0,"index":8799},{"krate":0,"index":8800},{"krate":0,"index":8801},{"krate":0,"index":8802},{"krate":0,"index":8803},{"krate":0,"index":8804},{"krate":0,"index":8805},{"krate":0,"index":8806},{"krate":0,"index":8807},{"krate":0,"index":8808},{"krate":0,"index":8809},{"krate":0,"index":8810},{"krate":0,"index":8811},{"krate":0,"index":8812},{"krate":0,"index":8813},{"krate":0,"index":8814},{"krate":0,"index":8815},{"krate":0,"index":8816},{"krate":0,"index":8817}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8794},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84100,"byte_end":84103,"line_start":133,"line_end":133,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x6::m11","value":"N","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8795},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84105,"byte_end":84108,"line_start":133,"line_end":133,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x6::m21","value":"N","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8796},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84110,"byte_end":84113,"line_start":133,"line_end":133,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x6::m31","value":"N","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8797},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84115,"byte_end":84118,"line_start":133,"line_end":133,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x6::m41","value":"N","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8798},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84139,"byte_end":84142,"line_start":134,"line_end":134,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x6::m12","value":"N","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8799},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84144,"byte_end":84147,"line_start":134,"line_end":134,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x6::m22","value":"N","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8800},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84149,"byte_end":84152,"line_start":134,"line_end":134,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x6::m32","value":"N","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8801},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84154,"byte_end":84157,"line_start":134,"line_end":134,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x6::m42","value":"N","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8802},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84178,"byte_end":84181,"line_start":135,"line_end":135,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M4x6::m13","value":"N","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8803},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84183,"byte_end":84186,"line_start":135,"line_end":135,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M4x6::m23","value":"N","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8804},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84188,"byte_end":84191,"line_start":135,"line_end":135,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M4x6::m33","value":"N","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8805},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84193,"byte_end":84196,"line_start":135,"line_end":135,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M4x6::m43","value":"N","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8806},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84217,"byte_end":84220,"line_start":136,"line_end":136,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M4x6::m14","value":"N","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8807},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84222,"byte_end":84225,"line_start":136,"line_end":136,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M4x6::m24","value":"N","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8808},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84227,"byte_end":84230,"line_start":136,"line_end":136,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M4x6::m34","value":"N","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8809},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84232,"byte_end":84235,"line_start":136,"line_end":136,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M4x6::m44","value":"N","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8810},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84256,"byte_end":84259,"line_start":137,"line_end":137,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M4x6::m15","value":"N","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8811},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84261,"byte_end":84264,"line_start":137,"line_end":137,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M4x6::m25","value":"N","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8812},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84266,"byte_end":84269,"line_start":137,"line_end":137,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M4x6::m35","value":"N","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8813},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84271,"byte_end":84274,"line_start":137,"line_end":137,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M4x6::m45","value":"N","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8814},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84295,"byte_end":84298,"line_start":138,"line_end":138,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M4x6::m16","value":"N","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8815},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84300,"byte_end":84303,"line_start":138,"line_end":138,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M4x6::m26","value":"N","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8816},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84305,"byte_end":84308,"line_start":138,"line_end":138,"column_start":30,"column_end":33},"name":"m36","qualname":"::base::coordinates::M4x6::m36","value":"N","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8817},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84310,"byte_end":84313,"line_start":138,"line_end":138,"column_start":35,"column_end":38},"name":"m46","qualname":"::base::coordinates::M4x6::m46","value":"N","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8841},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84374,"byte_end":84378,"line_start":143,"line_end":143,"column_start":14,"column_end":18},"name":"M5x2","qualname":"::base::coordinates::M5x2","value":"M5x2 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52 }","parent":null,"children":[{"krate":0,"index":8843},{"krate":0,"index":8844},{"krate":0,"index":8845},{"krate":0,"index":8846},{"krate":0,"index":8847},{"krate":0,"index":8848},{"krate":0,"index":8849},{"krate":0,"index":8850},{"krate":0,"index":8851},{"krate":0,"index":8852}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8843},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84380,"byte_end":84383,"line_start":143,"line_end":143,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x2::m11","value":"N","parent":{"krate":0,"index":8841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8844},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84385,"byte_end":84388,"line_start":143,"line_end":143,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x2::m21","value":"N","parent":{"krate":0,"index":8841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8845},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84390,"byte_end":84393,"line_start":143,"line_end":143,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x2::m31","value":"N","parent":{"krate":0,"index":8841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8846},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84395,"byte_end":84398,"line_start":143,"line_end":143,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x2::m41","value":"N","parent":{"krate":0,"index":8841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8847},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84400,"byte_end":84403,"line_start":143,"line_end":143,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x2::m51","value":"N","parent":{"krate":0,"index":8841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8848},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84424,"byte_end":84427,"line_start":144,"line_end":144,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x2::m12","value":"N","parent":{"krate":0,"index":8841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8849},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84429,"byte_end":84432,"line_start":144,"line_end":144,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x2::m22","value":"N","parent":{"krate":0,"index":8841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8850},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84434,"byte_end":84437,"line_start":144,"line_end":144,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x2::m32","value":"N","parent":{"krate":0,"index":8841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8851},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84439,"byte_end":84442,"line_start":144,"line_end":144,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x2::m42","value":"N","parent":{"krate":0,"index":8841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8852},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84444,"byte_end":84447,"line_start":144,"line_end":144,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x2::m52","value":"N","parent":{"krate":0,"index":8841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8876},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84463,"byte_end":84467,"line_start":145,"line_end":145,"column_start":14,"column_end":18},"name":"M5x3","qualname":"::base::coordinates::M5x3","value":"M5x3 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52, m13, m23, m33, m43, m53 }","parent":null,"children":[{"krate":0,"index":8878},{"krate":0,"index":8879},{"krate":0,"index":8880},{"krate":0,"index":8881},{"krate":0,"index":8882},{"krate":0,"index":8883},{"krate":0,"index":8884},{"krate":0,"index":8885},{"krate":0,"index":8886},{"krate":0,"index":8887},{"krate":0,"index":8888},{"krate":0,"index":8889},{"krate":0,"index":8890},{"krate":0,"index":8891},{"krate":0,"index":8892}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8878},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84469,"byte_end":84472,"line_start":145,"line_end":145,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x3::m11","value":"N","parent":{"krate":0,"index":8876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8879},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84474,"byte_end":84477,"line_start":145,"line_end":145,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x3::m21","value":"N","parent":{"krate":0,"index":8876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8880},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84479,"byte_end":84482,"line_start":145,"line_end":145,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x3::m31","value":"N","parent":{"krate":0,"index":8876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8881},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84484,"byte_end":84487,"line_start":145,"line_end":145,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x3::m41","value":"N","parent":{"krate":0,"index":8876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8882},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84489,"byte_end":84492,"line_start":145,"line_end":145,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x3::m51","value":"N","parent":{"krate":0,"index":8876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8883},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84513,"byte_end":84516,"line_start":146,"line_end":146,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x3::m12","value":"N","parent":{"krate":0,"index":8876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8884},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84518,"byte_end":84521,"line_start":146,"line_end":146,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x3::m22","value":"N","parent":{"krate":0,"index":8876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8885},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84523,"byte_end":84526,"line_start":146,"line_end":146,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x3::m32","value":"N","parent":{"krate":0,"index":8876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8886},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84528,"byte_end":84531,"line_start":146,"line_end":146,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x3::m42","value":"N","parent":{"krate":0,"index":8876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8887},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84533,"byte_end":84536,"line_start":146,"line_end":146,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x3::m52","value":"N","parent":{"krate":0,"index":8876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8888},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84557,"byte_end":84560,"line_start":147,"line_end":147,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M5x3::m13","value":"N","parent":{"krate":0,"index":8876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8889},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84562,"byte_end":84565,"line_start":147,"line_end":147,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M5x3::m23","value":"N","parent":{"krate":0,"index":8876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8890},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84567,"byte_end":84570,"line_start":147,"line_end":147,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M5x3::m33","value":"N","parent":{"krate":0,"index":8876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8891},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84572,"byte_end":84575,"line_start":147,"line_end":147,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M5x3::m43","value":"N","parent":{"krate":0,"index":8876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8892},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84577,"byte_end":84580,"line_start":147,"line_end":147,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M5x3::m53","value":"N","parent":{"krate":0,"index":8876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8916},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84596,"byte_end":84600,"line_start":148,"line_end":148,"column_start":14,"column_end":18},"name":"M5x4","qualname":"::base::coordinates::M5x4","value":"M5x4 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52, m13, m23, m33, m43, m53, m14, m24, m34, m44, m54 }","parent":null,"children":[{"krate":0,"index":8918},{"krate":0,"index":8919},{"krate":0,"index":8920},{"krate":0,"index":8921},{"krate":0,"index":8922},{"krate":0,"index":8923},{"krate":0,"index":8924},{"krate":0,"index":8925},{"krate":0,"index":8926},{"krate":0,"index":8927},{"krate":0,"index":8928},{"krate":0,"index":8929},{"krate":0,"index":8930},{"krate":0,"index":8931},{"krate":0,"index":8932},{"krate":0,"index":8933},{"krate":0,"index":8934},{"krate":0,"index":8935},{"krate":0,"index":8936},{"krate":0,"index":8937}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8918},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84602,"byte_end":84605,"line_start":148,"line_end":148,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x4::m11","value":"N","parent":{"krate":0,"index":8916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8919},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84607,"byte_end":84610,"line_start":148,"line_end":148,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x4::m21","value":"N","parent":{"krate":0,"index":8916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8920},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84612,"byte_end":84615,"line_start":148,"line_end":148,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x4::m31","value":"N","parent":{"krate":0,"index":8916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8921},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84617,"byte_end":84620,"line_start":148,"line_end":148,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x4::m41","value":"N","parent":{"krate":0,"index":8916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8922},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84622,"byte_end":84625,"line_start":148,"line_end":148,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x4::m51","value":"N","parent":{"krate":0,"index":8916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8923},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84646,"byte_end":84649,"line_start":149,"line_end":149,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x4::m12","value":"N","parent":{"krate":0,"index":8916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8924},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84651,"byte_end":84654,"line_start":149,"line_end":149,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x4::m22","value":"N","parent":{"krate":0,"index":8916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8925},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84656,"byte_end":84659,"line_start":149,"line_end":149,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x4::m32","value":"N","parent":{"krate":0,"index":8916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8926},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84661,"byte_end":84664,"line_start":149,"line_end":149,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x4::m42","value":"N","parent":{"krate":0,"index":8916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8927},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84666,"byte_end":84669,"line_start":149,"line_end":149,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x4::m52","value":"N","parent":{"krate":0,"index":8916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8928},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84690,"byte_end":84693,"line_start":150,"line_end":150,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M5x4::m13","value":"N","parent":{"krate":0,"index":8916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8929},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84695,"byte_end":84698,"line_start":150,"line_end":150,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M5x4::m23","value":"N","parent":{"krate":0,"index":8916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8930},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84700,"byte_end":84703,"line_start":150,"line_end":150,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M5x4::m33","value":"N","parent":{"krate":0,"index":8916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8931},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84705,"byte_end":84708,"line_start":150,"line_end":150,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M5x4::m43","value":"N","parent":{"krate":0,"index":8916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8932},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84710,"byte_end":84713,"line_start":150,"line_end":150,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M5x4::m53","value":"N","parent":{"krate":0,"index":8916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8933},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84734,"byte_end":84737,"line_start":151,"line_end":151,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M5x4::m14","value":"N","parent":{"krate":0,"index":8916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8934},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84739,"byte_end":84742,"line_start":151,"line_end":151,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M5x4::m24","value":"N","parent":{"krate":0,"index":8916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8935},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84744,"byte_end":84747,"line_start":151,"line_end":151,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M5x4::m34","value":"N","parent":{"krate":0,"index":8916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8936},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84749,"byte_end":84752,"line_start":151,"line_end":151,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M5x4::m44","value":"N","parent":{"krate":0,"index":8916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8937},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84754,"byte_end":84757,"line_start":151,"line_end":151,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M5x4::m54","value":"N","parent":{"krate":0,"index":8916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8961},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84773,"byte_end":84777,"line_start":152,"line_end":152,"column_start":14,"column_end":18},"name":"M5x5","qualname":"::base::coordinates::M5x5","value":"M5x5 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52, m13, m23, m33, m43, m53, m14, m24, m34, m44, m54, m15, m25, m35, m45, m55 }","parent":null,"children":[{"krate":0,"index":8963},{"krate":0,"index":8964},{"krate":0,"index":8965},{"krate":0,"index":8966},{"krate":0,"index":8967},{"krate":0,"index":8968},{"krate":0,"index":8969},{"krate":0,"index":8970},{"krate":0,"index":8971},{"krate":0,"index":8972},{"krate":0,"index":8973},{"krate":0,"index":8974},{"krate":0,"index":8975},{"krate":0,"index":8976},{"krate":0,"index":8977},{"krate":0,"index":8978},{"krate":0,"index":8979},{"krate":0,"index":8980},{"krate":0,"index":8981},{"krate":0,"index":8982},{"krate":0,"index":8983},{"krate":0,"index":8984},{"krate":0,"index":8985},{"krate":0,"index":8986},{"krate":0,"index":8987}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8963},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84779,"byte_end":84782,"line_start":152,"line_end":152,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x5::m11","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8964},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84784,"byte_end":84787,"line_start":152,"line_end":152,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x5::m21","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8965},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84789,"byte_end":84792,"line_start":152,"line_end":152,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x5::m31","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8966},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84794,"byte_end":84797,"line_start":152,"line_end":152,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x5::m41","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8967},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84799,"byte_end":84802,"line_start":152,"line_end":152,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x5::m51","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8968},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84823,"byte_end":84826,"line_start":153,"line_end":153,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x5::m12","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8969},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84828,"byte_end":84831,"line_start":153,"line_end":153,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x5::m22","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8970},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84833,"byte_end":84836,"line_start":153,"line_end":153,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x5::m32","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8971},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84838,"byte_end":84841,"line_start":153,"line_end":153,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x5::m42","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8972},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84843,"byte_end":84846,"line_start":153,"line_end":153,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x5::m52","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8973},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84867,"byte_end":84870,"line_start":154,"line_end":154,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M5x5::m13","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8974},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84872,"byte_end":84875,"line_start":154,"line_end":154,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M5x5::m23","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8975},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84877,"byte_end":84880,"line_start":154,"line_end":154,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M5x5::m33","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8976},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84882,"byte_end":84885,"line_start":154,"line_end":154,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M5x5::m43","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8977},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84887,"byte_end":84890,"line_start":154,"line_end":154,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M5x5::m53","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8978},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84911,"byte_end":84914,"line_start":155,"line_end":155,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M5x5::m14","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8979},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84916,"byte_end":84919,"line_start":155,"line_end":155,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M5x5::m24","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8980},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84921,"byte_end":84924,"line_start":155,"line_end":155,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M5x5::m34","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8981},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84926,"byte_end":84929,"line_start":155,"line_end":155,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M5x5::m44","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8982},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84931,"byte_end":84934,"line_start":155,"line_end":155,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M5x5::m54","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8983},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84955,"byte_end":84958,"line_start":156,"line_end":156,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M5x5::m15","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8984},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84960,"byte_end":84963,"line_start":156,"line_end":156,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M5x5::m25","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8985},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84965,"byte_end":84968,"line_start":156,"line_end":156,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M5x5::m35","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8986},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84970,"byte_end":84973,"line_start":156,"line_end":156,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M5x5::m45","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8987},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84975,"byte_end":84978,"line_start":156,"line_end":156,"column_start":40,"column_end":43},"name":"m55","qualname":"::base::coordinates::M5x5::m55","value":"N","parent":{"krate":0,"index":8961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9011},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":84994,"byte_end":84998,"line_start":157,"line_end":157,"column_start":14,"column_end":18},"name":"M5x6","qualname":"::base::coordinates::M5x6","value":"M5x6 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52, m13, m23, m33, m43, m53, m14, m24, m34, m44, m54, m15, m25, m35, m45, m55, m16, m26, m36, m46, m56 }","parent":null,"children":[{"krate":0,"index":9013},{"krate":0,"index":9014},{"krate":0,"index":9015},{"krate":0,"index":9016},{"krate":0,"index":9017},{"krate":0,"index":9018},{"krate":0,"index":9019},{"krate":0,"index":9020},{"krate":0,"index":9021},{"krate":0,"index":9022},{"krate":0,"index":9023},{"krate":0,"index":9024},{"krate":0,"index":9025},{"krate":0,"index":9026},{"krate":0,"index":9027},{"krate":0,"index":9028},{"krate":0,"index":9029},{"krate":0,"index":9030},{"krate":0,"index":9031},{"krate":0,"index":9032},{"krate":0,"index":9033},{"krate":0,"index":9034},{"krate":0,"index":9035},{"krate":0,"index":9036},{"krate":0,"index":9037},{"krate":0,"index":9038},{"krate":0,"index":9039},{"krate":0,"index":9040},{"krate":0,"index":9041},{"krate":0,"index":9042}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9013},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85000,"byte_end":85003,"line_start":157,"line_end":157,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x6::m11","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9014},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85005,"byte_end":85008,"line_start":157,"line_end":157,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x6::m21","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9015},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85010,"byte_end":85013,"line_start":157,"line_end":157,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x6::m31","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9016},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85015,"byte_end":85018,"line_start":157,"line_end":157,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x6::m41","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9017},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85020,"byte_end":85023,"line_start":157,"line_end":157,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x6::m51","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9018},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85044,"byte_end":85047,"line_start":158,"line_end":158,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x6::m12","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9019},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85049,"byte_end":85052,"line_start":158,"line_end":158,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x6::m22","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9020},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85054,"byte_end":85057,"line_start":158,"line_end":158,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x6::m32","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9021},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85059,"byte_end":85062,"line_start":158,"line_end":158,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x6::m42","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9022},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85064,"byte_end":85067,"line_start":158,"line_end":158,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x6::m52","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9023},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85088,"byte_end":85091,"line_start":159,"line_end":159,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M5x6::m13","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9024},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85093,"byte_end":85096,"line_start":159,"line_end":159,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M5x6::m23","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9025},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85098,"byte_end":85101,"line_start":159,"line_end":159,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M5x6::m33","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9026},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85103,"byte_end":85106,"line_start":159,"line_end":159,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M5x6::m43","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9027},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85108,"byte_end":85111,"line_start":159,"line_end":159,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M5x6::m53","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9028},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85132,"byte_end":85135,"line_start":160,"line_end":160,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M5x6::m14","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9029},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85137,"byte_end":85140,"line_start":160,"line_end":160,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M5x6::m24","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9030},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85142,"byte_end":85145,"line_start":160,"line_end":160,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M5x6::m34","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9031},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85147,"byte_end":85150,"line_start":160,"line_end":160,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M5x6::m44","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9032},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85152,"byte_end":85155,"line_start":160,"line_end":160,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M5x6::m54","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9033},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85176,"byte_end":85179,"line_start":161,"line_end":161,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M5x6::m15","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9034},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85181,"byte_end":85184,"line_start":161,"line_end":161,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M5x6::m25","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9035},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85186,"byte_end":85189,"line_start":161,"line_end":161,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M5x6::m35","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9036},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85191,"byte_end":85194,"line_start":161,"line_end":161,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M5x6::m45","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9037},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85196,"byte_end":85199,"line_start":161,"line_end":161,"column_start":40,"column_end":43},"name":"m55","qualname":"::base::coordinates::M5x6::m55","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9038},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85220,"byte_end":85223,"line_start":162,"line_end":162,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M5x6::m16","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9039},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85225,"byte_end":85228,"line_start":162,"line_end":162,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M5x6::m26","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9040},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85230,"byte_end":85233,"line_start":162,"line_end":162,"column_start":30,"column_end":33},"name":"m36","qualname":"::base::coordinates::M5x6::m36","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9041},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85235,"byte_end":85238,"line_start":162,"line_end":162,"column_start":35,"column_end":38},"name":"m46","qualname":"::base::coordinates::M5x6::m46","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9042},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85240,"byte_end":85243,"line_start":162,"line_end":162,"column_start":40,"column_end":43},"name":"m56","qualname":"::base::coordinates::M5x6::m56","value":"N","parent":{"krate":0,"index":9011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9066},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85305,"byte_end":85309,"line_start":168,"line_end":168,"column_start":14,"column_end":18},"name":"M6x2","qualname":"::base::coordinates::M6x2","value":"M6x2 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62 }","parent":null,"children":[{"krate":0,"index":9068},{"krate":0,"index":9069},{"krate":0,"index":9070},{"krate":0,"index":9071},{"krate":0,"index":9072},{"krate":0,"index":9073},{"krate":0,"index":9074},{"krate":0,"index":9075},{"krate":0,"index":9076},{"krate":0,"index":9077},{"krate":0,"index":9078},{"krate":0,"index":9079}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9068},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85311,"byte_end":85314,"line_start":168,"line_end":168,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x2::m11","value":"N","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9069},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85316,"byte_end":85319,"line_start":168,"line_end":168,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x2::m21","value":"N","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9070},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85321,"byte_end":85324,"line_start":168,"line_end":168,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x2::m31","value":"N","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9071},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85326,"byte_end":85329,"line_start":168,"line_end":168,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x2::m41","value":"N","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9072},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85331,"byte_end":85334,"line_start":168,"line_end":168,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x2::m51","value":"N","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9073},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85336,"byte_end":85339,"line_start":168,"line_end":168,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x2::m61","value":"N","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9074},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85360,"byte_end":85363,"line_start":169,"line_end":169,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x2::m12","value":"N","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9075},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85365,"byte_end":85368,"line_start":169,"line_end":169,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x2::m22","value":"N","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9076},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85370,"byte_end":85373,"line_start":169,"line_end":169,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x2::m32","value":"N","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9077},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85375,"byte_end":85378,"line_start":169,"line_end":169,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x2::m42","value":"N","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9078},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85380,"byte_end":85383,"line_start":169,"line_end":169,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x2::m52","value":"N","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9079},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85385,"byte_end":85388,"line_start":169,"line_end":169,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x2::m62","value":"N","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9103},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85404,"byte_end":85408,"line_start":170,"line_end":170,"column_start":14,"column_end":18},"name":"M6x3","qualname":"::base::coordinates::M6x3","value":"M6x3 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62, m13, m23, m33, m43, m53, m63 }","parent":null,"children":[{"krate":0,"index":9105},{"krate":0,"index":9106},{"krate":0,"index":9107},{"krate":0,"index":9108},{"krate":0,"index":9109},{"krate":0,"index":9110},{"krate":0,"index":9111},{"krate":0,"index":9112},{"krate":0,"index":9113},{"krate":0,"index":9114},{"krate":0,"index":9115},{"krate":0,"index":9116},{"krate":0,"index":9117},{"krate":0,"index":9118},{"krate":0,"index":9119},{"krate":0,"index":9120},{"krate":0,"index":9121},{"krate":0,"index":9122}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9105},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85410,"byte_end":85413,"line_start":170,"line_end":170,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x3::m11","value":"N","parent":{"krate":0,"index":9103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9106},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85415,"byte_end":85418,"line_start":170,"line_end":170,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x3::m21","value":"N","parent":{"krate":0,"index":9103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9107},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85420,"byte_end":85423,"line_start":170,"line_end":170,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x3::m31","value":"N","parent":{"krate":0,"index":9103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9108},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85425,"byte_end":85428,"line_start":170,"line_end":170,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x3::m41","value":"N","parent":{"krate":0,"index":9103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9109},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85430,"byte_end":85433,"line_start":170,"line_end":170,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x3::m51","value":"N","parent":{"krate":0,"index":9103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9110},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85435,"byte_end":85438,"line_start":170,"line_end":170,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x3::m61","value":"N","parent":{"krate":0,"index":9103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9111},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85459,"byte_end":85462,"line_start":171,"line_end":171,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x3::m12","value":"N","parent":{"krate":0,"index":9103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9112},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85464,"byte_end":85467,"line_start":171,"line_end":171,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x3::m22","value":"N","parent":{"krate":0,"index":9103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9113},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85469,"byte_end":85472,"line_start":171,"line_end":171,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x3::m32","value":"N","parent":{"krate":0,"index":9103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9114},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85474,"byte_end":85477,"line_start":171,"line_end":171,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x3::m42","value":"N","parent":{"krate":0,"index":9103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9115},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85479,"byte_end":85482,"line_start":171,"line_end":171,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x3::m52","value":"N","parent":{"krate":0,"index":9103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9116},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85484,"byte_end":85487,"line_start":171,"line_end":171,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x3::m62","value":"N","parent":{"krate":0,"index":9103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9117},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85508,"byte_end":85511,"line_start":172,"line_end":172,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M6x3::m13","value":"N","parent":{"krate":0,"index":9103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9118},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85513,"byte_end":85516,"line_start":172,"line_end":172,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M6x3::m23","value":"N","parent":{"krate":0,"index":9103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9119},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85518,"byte_end":85521,"line_start":172,"line_end":172,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M6x3::m33","value":"N","parent":{"krate":0,"index":9103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9120},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85523,"byte_end":85526,"line_start":172,"line_end":172,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M6x3::m43","value":"N","parent":{"krate":0,"index":9103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9121},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85528,"byte_end":85531,"line_start":172,"line_end":172,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M6x3::m53","value":"N","parent":{"krate":0,"index":9103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9122},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85533,"byte_end":85536,"line_start":172,"line_end":172,"column_start":45,"column_end":48},"name":"m63","qualname":"::base::coordinates::M6x3::m63","value":"N","parent":{"krate":0,"index":9103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9146},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85552,"byte_end":85556,"line_start":173,"line_end":173,"column_start":14,"column_end":18},"name":"M6x4","qualname":"::base::coordinates::M6x4","value":"M6x4 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62, m13, m23, m33, m43, m53, m63, m14, m24, m34, m44, m54, m64 }","parent":null,"children":[{"krate":0,"index":9148},{"krate":0,"index":9149},{"krate":0,"index":9150},{"krate":0,"index":9151},{"krate":0,"index":9152},{"krate":0,"index":9153},{"krate":0,"index":9154},{"krate":0,"index":9155},{"krate":0,"index":9156},{"krate":0,"index":9157},{"krate":0,"index":9158},{"krate":0,"index":9159},{"krate":0,"index":9160},{"krate":0,"index":9161},{"krate":0,"index":9162},{"krate":0,"index":9163},{"krate":0,"index":9164},{"krate":0,"index":9165},{"krate":0,"index":9166},{"krate":0,"index":9167},{"krate":0,"index":9168},{"krate":0,"index":9169},{"krate":0,"index":9170},{"krate":0,"index":9171}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9148},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85558,"byte_end":85561,"line_start":173,"line_end":173,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x4::m11","value":"N","parent":{"krate":0,"index":9146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9149},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85563,"byte_end":85566,"line_start":173,"line_end":173,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x4::m21","value":"N","parent":{"krate":0,"index":9146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9150},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85568,"byte_end":85571,"line_start":173,"line_end":173,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x4::m31","value":"N","parent":{"krate":0,"index":9146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9151},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85573,"byte_end":85576,"line_start":173,"line_end":173,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x4::m41","value":"N","parent":{"krate":0,"index":9146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9152},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85578,"byte_end":85581,"line_start":173,"line_end":173,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x4::m51","value":"N","parent":{"krate":0,"index":9146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9153},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85583,"byte_end":85586,"line_start":173,"line_end":173,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x4::m61","value":"N","parent":{"krate":0,"index":9146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9154},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85607,"byte_end":85610,"line_start":174,"line_end":174,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x4::m12","value":"N","parent":{"krate":0,"index":9146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9155},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85612,"byte_end":85615,"line_start":174,"line_end":174,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x4::m22","value":"N","parent":{"krate":0,"index":9146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9156},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85617,"byte_end":85620,"line_start":174,"line_end":174,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x4::m32","value":"N","parent":{"krate":0,"index":9146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9157},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85622,"byte_end":85625,"line_start":174,"line_end":174,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x4::m42","value":"N","parent":{"krate":0,"index":9146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9158},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85627,"byte_end":85630,"line_start":174,"line_end":174,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x4::m52","value":"N","parent":{"krate":0,"index":9146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9159},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85632,"byte_end":85635,"line_start":174,"line_end":174,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x4::m62","value":"N","parent":{"krate":0,"index":9146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9160},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85656,"byte_end":85659,"line_start":175,"line_end":175,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M6x4::m13","value":"N","parent":{"krate":0,"index":9146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9161},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85661,"byte_end":85664,"line_start":175,"line_end":175,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M6x4::m23","value":"N","parent":{"krate":0,"index":9146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9162},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85666,"byte_end":85669,"line_start":175,"line_end":175,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M6x4::m33","value":"N","parent":{"krate":0,"index":9146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9163},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85671,"byte_end":85674,"line_start":175,"line_end":175,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M6x4::m43","value":"N","parent":{"krate":0,"index":9146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9164},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85676,"byte_end":85679,"line_start":175,"line_end":175,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M6x4::m53","value":"N","parent":{"krate":0,"index":9146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9165},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85681,"byte_end":85684,"line_start":175,"line_end":175,"column_start":45,"column_end":48},"name":"m63","qualname":"::base::coordinates::M6x4::m63","value":"N","parent":{"krate":0,"index":9146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9166},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85705,"byte_end":85708,"line_start":176,"line_end":176,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M6x4::m14","value":"N","parent":{"krate":0,"index":9146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9167},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85710,"byte_end":85713,"line_start":176,"line_end":176,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M6x4::m24","value":"N","parent":{"krate":0,"index":9146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9168},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85715,"byte_end":85718,"line_start":176,"line_end":176,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M6x4::m34","value":"N","parent":{"krate":0,"index":9146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9169},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85720,"byte_end":85723,"line_start":176,"line_end":176,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M6x4::m44","value":"N","parent":{"krate":0,"index":9146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9170},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85725,"byte_end":85728,"line_start":176,"line_end":176,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M6x4::m54","value":"N","parent":{"krate":0,"index":9146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9171},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85730,"byte_end":85733,"line_start":176,"line_end":176,"column_start":45,"column_end":48},"name":"m64","qualname":"::base::coordinates::M6x4::m64","value":"N","parent":{"krate":0,"index":9146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9195},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85749,"byte_end":85753,"line_start":177,"line_end":177,"column_start":14,"column_end":18},"name":"M6x5","qualname":"::base::coordinates::M6x5","value":"M6x5 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62, m13, m23, m33, m43, m53, m63, m14, m24, m34, m44, m54, m64, m15, m25, m35, m45, m55, m65 }","parent":null,"children":[{"krate":0,"index":9197},{"krate":0,"index":9198},{"krate":0,"index":9199},{"krate":0,"index":9200},{"krate":0,"index":9201},{"krate":0,"index":9202},{"krate":0,"index":9203},{"krate":0,"index":9204},{"krate":0,"index":9205},{"krate":0,"index":9206},{"krate":0,"index":9207},{"krate":0,"index":9208},{"krate":0,"index":9209},{"krate":0,"index":9210},{"krate":0,"index":9211},{"krate":0,"index":9212},{"krate":0,"index":9213},{"krate":0,"index":9214},{"krate":0,"index":9215},{"krate":0,"index":9216},{"krate":0,"index":9217},{"krate":0,"index":9218},{"krate":0,"index":9219},{"krate":0,"index":9220},{"krate":0,"index":9221},{"krate":0,"index":9222},{"krate":0,"index":9223},{"krate":0,"index":9224},{"krate":0,"index":9225},{"krate":0,"index":9226}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9197},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85755,"byte_end":85758,"line_start":177,"line_end":177,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x5::m11","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9198},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85760,"byte_end":85763,"line_start":177,"line_end":177,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x5::m21","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9199},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85765,"byte_end":85768,"line_start":177,"line_end":177,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x5::m31","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9200},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85770,"byte_end":85773,"line_start":177,"line_end":177,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x5::m41","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9201},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85775,"byte_end":85778,"line_start":177,"line_end":177,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x5::m51","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9202},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85780,"byte_end":85783,"line_start":177,"line_end":177,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x5::m61","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9203},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85804,"byte_end":85807,"line_start":178,"line_end":178,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x5::m12","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9204},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85809,"byte_end":85812,"line_start":178,"line_end":178,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x5::m22","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9205},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85814,"byte_end":85817,"line_start":178,"line_end":178,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x5::m32","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9206},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85819,"byte_end":85822,"line_start":178,"line_end":178,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x5::m42","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9207},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85824,"byte_end":85827,"line_start":178,"line_end":178,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x5::m52","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9208},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85829,"byte_end":85832,"line_start":178,"line_end":178,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x5::m62","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9209},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85853,"byte_end":85856,"line_start":179,"line_end":179,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M6x5::m13","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9210},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85858,"byte_end":85861,"line_start":179,"line_end":179,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M6x5::m23","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9211},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85863,"byte_end":85866,"line_start":179,"line_end":179,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M6x5::m33","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9212},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85868,"byte_end":85871,"line_start":179,"line_end":179,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M6x5::m43","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9213},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85873,"byte_end":85876,"line_start":179,"line_end":179,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M6x5::m53","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9214},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85878,"byte_end":85881,"line_start":179,"line_end":179,"column_start":45,"column_end":48},"name":"m63","qualname":"::base::coordinates::M6x5::m63","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9215},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85902,"byte_end":85905,"line_start":180,"line_end":180,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M6x5::m14","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9216},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85907,"byte_end":85910,"line_start":180,"line_end":180,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M6x5::m24","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9217},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85912,"byte_end":85915,"line_start":180,"line_end":180,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M6x5::m34","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9218},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85917,"byte_end":85920,"line_start":180,"line_end":180,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M6x5::m44","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9219},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85922,"byte_end":85925,"line_start":180,"line_end":180,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M6x5::m54","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9220},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85927,"byte_end":85930,"line_start":180,"line_end":180,"column_start":45,"column_end":48},"name":"m64","qualname":"::base::coordinates::M6x5::m64","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9221},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85951,"byte_end":85954,"line_start":181,"line_end":181,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M6x5::m15","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9222},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85956,"byte_end":85959,"line_start":181,"line_end":181,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M6x5::m25","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9223},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85961,"byte_end":85964,"line_start":181,"line_end":181,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M6x5::m35","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9224},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85966,"byte_end":85969,"line_start":181,"line_end":181,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M6x5::m45","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9225},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85971,"byte_end":85974,"line_start":181,"line_end":181,"column_start":40,"column_end":43},"name":"m55","qualname":"::base::coordinates::M6x5::m55","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9226},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85976,"byte_end":85979,"line_start":181,"line_end":181,"column_start":45,"column_end":48},"name":"m65","qualname":"::base::coordinates::M6x5::m65","value":"N","parent":{"krate":0,"index":9195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9250},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":85995,"byte_end":85999,"line_start":182,"line_end":182,"column_start":14,"column_end":18},"name":"M6x6","qualname":"::base::coordinates::M6x6","value":"M6x6 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62, m13, m23, m33, m43, m53, m63, m14, m24, m34, m44, m54, m64, m15, m25, m35, m45, m55, m65, m16, m26, m36, m46, m56, m66 }","parent":null,"children":[{"krate":0,"index":9252},{"krate":0,"index":9253},{"krate":0,"index":9254},{"krate":0,"index":9255},{"krate":0,"index":9256},{"krate":0,"index":9257},{"krate":0,"index":9258},{"krate":0,"index":9259},{"krate":0,"index":9260},{"krate":0,"index":9261},{"krate":0,"index":9262},{"krate":0,"index":9263},{"krate":0,"index":9264},{"krate":0,"index":9265},{"krate":0,"index":9266},{"krate":0,"index":9267},{"krate":0,"index":9268},{"krate":0,"index":9269},{"krate":0,"index":9270},{"krate":0,"index":9271},{"krate":0,"index":9272},{"krate":0,"index":9273},{"krate":0,"index":9274},{"krate":0,"index":9275},{"krate":0,"index":9276},{"krate":0,"index":9277},{"krate":0,"index":9278},{"krate":0,"index":9279},{"krate":0,"index":9280},{"krate":0,"index":9281},{"krate":0,"index":9282},{"krate":0,"index":9283},{"krate":0,"index":9284},{"krate":0,"index":9285},{"krate":0,"index":9286},{"krate":0,"index":9287}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80812,"byte_end":80899,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80908,"byte_end":80969,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":80978,"byte_end":80988,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9252},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86001,"byte_end":86004,"line_start":182,"line_end":182,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x6::m11","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9253},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86006,"byte_end":86009,"line_start":182,"line_end":182,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x6::m21","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9254},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86011,"byte_end":86014,"line_start":182,"line_end":182,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x6::m31","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9255},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86016,"byte_end":86019,"line_start":182,"line_end":182,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x6::m41","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9256},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86021,"byte_end":86024,"line_start":182,"line_end":182,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x6::m51","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9257},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86026,"byte_end":86029,"line_start":182,"line_end":182,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x6::m61","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9258},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86050,"byte_end":86053,"line_start":183,"line_end":183,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x6::m12","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9259},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86055,"byte_end":86058,"line_start":183,"line_end":183,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x6::m22","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9260},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86060,"byte_end":86063,"line_start":183,"line_end":183,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x6::m32","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9261},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86065,"byte_end":86068,"line_start":183,"line_end":183,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x6::m42","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9262},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86070,"byte_end":86073,"line_start":183,"line_end":183,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x6::m52","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9263},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86075,"byte_end":86078,"line_start":183,"line_end":183,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x6::m62","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9264},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86099,"byte_end":86102,"line_start":184,"line_end":184,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M6x6::m13","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9265},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86104,"byte_end":86107,"line_start":184,"line_end":184,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M6x6::m23","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9266},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86109,"byte_end":86112,"line_start":184,"line_end":184,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M6x6::m33","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9267},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86114,"byte_end":86117,"line_start":184,"line_end":184,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M6x6::m43","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9268},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86119,"byte_end":86122,"line_start":184,"line_end":184,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M6x6::m53","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9269},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86124,"byte_end":86127,"line_start":184,"line_end":184,"column_start":45,"column_end":48},"name":"m63","qualname":"::base::coordinates::M6x6::m63","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9270},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86148,"byte_end":86151,"line_start":185,"line_end":185,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M6x6::m14","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9271},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86153,"byte_end":86156,"line_start":185,"line_end":185,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M6x6::m24","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9272},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86158,"byte_end":86161,"line_start":185,"line_end":185,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M6x6::m34","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9273},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86163,"byte_end":86166,"line_start":185,"line_end":185,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M6x6::m44","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9274},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86168,"byte_end":86171,"line_start":185,"line_end":185,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M6x6::m54","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9275},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86173,"byte_end":86176,"line_start":185,"line_end":185,"column_start":45,"column_end":48},"name":"m64","qualname":"::base::coordinates::M6x6::m64","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9276},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86197,"byte_end":86200,"line_start":186,"line_end":186,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M6x6::m15","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9277},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86202,"byte_end":86205,"line_start":186,"line_end":186,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M6x6::m25","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9278},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86207,"byte_end":86210,"line_start":186,"line_end":186,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M6x6::m35","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9279},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86212,"byte_end":86215,"line_start":186,"line_end":186,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M6x6::m45","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9280},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86217,"byte_end":86220,"line_start":186,"line_end":186,"column_start":40,"column_end":43},"name":"m55","qualname":"::base::coordinates::M6x6::m55","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9281},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86222,"byte_end":86225,"line_start":186,"line_end":186,"column_start":45,"column_end":48},"name":"m65","qualname":"::base::coordinates::M6x6::m65","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9282},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86246,"byte_end":86249,"line_start":187,"line_end":187,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M6x6::m16","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9283},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86251,"byte_end":86254,"line_start":187,"line_end":187,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M6x6::m26","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9284},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86256,"byte_end":86259,"line_start":187,"line_end":187,"column_start":30,"column_end":33},"name":"m36","qualname":"::base::coordinates::M6x6::m36","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9285},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86261,"byte_end":86264,"line_start":187,"line_end":187,"column_start":35,"column_end":38},"name":"m46","qualname":"::base::coordinates::M6x6::m46","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9286},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86266,"byte_end":86269,"line_start":187,"line_end":187,"column_start":40,"column_end":43},"name":"m56","qualname":"::base::coordinates::M6x6::m56","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9287},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/coordinates.rs","byte_start":86271,"byte_end":86274,"line_start":187,"line_end":187,"column_start":45,"column_end":48},"name":"m66","qualname":"::base::coordinates::M6x6::m66","value":"N","parent":{"krate":0,"index":9250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":380},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"default_allocator","qualname":"::base::default_allocator","value":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":410},{"krate":0,"index":417},{"krate":0,"index":424},{"krate":0,"index":431},{"krate":0,"index":437},{"krate":0,"index":443},{"krate":0,"index":448},{"krate":0,"index":453},{"krate":0,"index":458}],"decl_id":null,"docs":" The default matrix data storage allocator.","sig":null,"attributes":[{"value":"! The default matrix data storage allocator.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":87302,"byte_end":87348,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":87349,"byte_end":87352,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This will use stack-allocated buffers for matrices with dimensions known at compile-time, and","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":87353,"byte_end":87450,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"! heap-allocated buffers for matrices with at least one dimension unknown at compile-time.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":87451,"byte_end":87543,"line_start":4,"line_end":4,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":400},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":88294,"byte_end":88310,"line_start":34,"line_end":34,"column_start":12,"column_end":28},"name":"DefaultAllocator","qualname":"::base::default_allocator::DefaultAllocator","value":"","parent":null,"children":[],"decl_id":null,"docs":" An allocator based on `GenericArray` and `VecStorage` for statically-sized and dynamically-sized\n matrices respectively.\n","sig":null,"attributes":[{"value":"/ An allocator based on `GenericArray` and `VecStorage` for statically-sized and dynamically-sized","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":88155,"byte_end":88255,"line_start":32,"line_end":32,"column_start":1,"column_end":101}},{"value":"/ matrices respectively.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":88256,"byte_end":88282,"line_start":33,"line_end":33,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":463},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dimension","qualname":"::base::dimension","value":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":474},{"krate":0,"index":9635},{"krate":0,"index":9647},{"krate":0,"index":9646},{"krate":0,"index":9643},{"krate":0,"index":9644},{"krate":0,"index":9639},{"krate":0,"index":9640},{"krate":0,"index":9637},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":501},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":9649},{"krate":0,"index":9652},{"krate":0,"index":9656},{"krate":0,"index":9661},{"krate":0,"index":9665},{"krate":0,"index":9669},{"krate":0,"index":9672},{"krate":0,"index":9676},{"krate":0,"index":9681},{"krate":0,"index":9684},{"krate":0,"index":9688},{"krate":0,"index":9693},{"krate":0,"index":9697},{"krate":0,"index":9701},{"krate":0,"index":9704},{"krate":0,"index":9708},{"krate":0,"index":9713},{"krate":0,"index":9716},{"krate":0,"index":9720},{"krate":0,"index":9725},{"krate":0,"index":9729},{"krate":0,"index":9733},{"krate":0,"index":9736},{"krate":0,"index":9740},{"krate":0,"index":9745},{"krate":0,"index":9748},{"krate":0,"index":9752},{"krate":0,"index":9757},{"krate":0,"index":9761},{"krate":0,"index":9765},{"krate":0,"index":9768},{"krate":0,"index":9772},{"krate":0,"index":9777},{"krate":0,"index":9780},{"krate":0,"index":9784},{"krate":0,"index":9789},{"krate":0,"index":9793},{"krate":0,"index":9797},{"krate":0,"index":9800},{"krate":0,"index":9804},{"krate":0,"index":9809},{"krate":0,"index":9812},{"krate":0,"index":9816},{"krate":0,"index":9821},{"krate":0,"index":9825},{"krate":0,"index":9829},{"krate":0,"index":9832},{"krate":0,"index":9836},{"krate":0,"index":512},{"krate":0,"index":516},{"krate":0,"index":9841},{"krate":0,"index":9855},{"krate":0,"index":9854},{"krate":0,"index":9852},{"krate":0,"index":9849},{"krate":0,"index":9846},{"krate":0,"index":9847},{"krate":0,"index":9843},{"krate":0,"index":9844},{"krate":0,"index":518},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":11127},{"krate":0,"index":11141},{"krate":0,"index":11140},{"krate":0,"index":11138},{"krate":0,"index":11135},{"krate":0,"index":11132},{"krate":0,"index":11133},{"krate":0,"index":11129},{"krate":0,"index":11130},{"krate":0,"index":9857},{"krate":0,"index":9861},{"krate":0,"index":9864},{"krate":0,"index":9866},{"krate":0,"index":11143},{"krate":0,"index":11157},{"krate":0,"index":11156},{"krate":0,"index":11154},{"krate":0,"index":11151},{"krate":0,"index":11148},{"krate":0,"index":11149},{"krate":0,"index":11145},{"krate":0,"index":11146},{"krate":0,"index":9867},{"krate":0,"index":9871},{"krate":0,"index":9874},{"krate":0,"index":9876},{"krate":0,"index":11159},{"krate":0,"index":11173},{"krate":0,"index":11172},{"krate":0,"index":11170},{"krate":0,"index":11167},{"krate":0,"index":11164},{"krate":0,"index":11165},{"krate":0,"index":11161},{"krate":0,"index":11162},{"krate":0,"index":9877},{"krate":0,"index":9881},{"krate":0,"index":9884},{"krate":0,"index":9886},{"krate":0,"index":11175},{"krate":0,"index":11189},{"krate":0,"index":11188},{"krate":0,"index":11186},{"krate":0,"index":11183},{"krate":0,"index":11180},{"krate":0,"index":11181},{"krate":0,"index":11177},{"krate":0,"index":11178},{"krate":0,"index":9887},{"krate":0,"index":9891},{"krate":0,"index":9894},{"krate":0,"index":9896},{"krate":0,"index":11191},{"krate":0,"index":11205},{"krate":0,"index":11204},{"krate":0,"index":11202},{"krate":0,"index":11199},{"krate":0,"index":11196},{"krate":0,"index":11197},{"krate":0,"index":11193},{"krate":0,"index":11194},{"krate":0,"index":9897},{"krate":0,"index":9901},{"krate":0,"index":9904},{"krate":0,"index":9906},{"krate":0,"index":11207},{"krate":0,"index":11221},{"krate":0,"index":11220},{"krate":0,"index":11218},{"krate":0,"index":11215},{"krate":0,"index":11212},{"krate":0,"index":11213},{"krate":0,"index":11209},{"krate":0,"index":11210},{"krate":0,"index":9907},{"krate":0,"index":9911},{"krate":0,"index":9914},{"krate":0,"index":9916},{"krate":0,"index":11223},{"krate":0,"index":11237},{"krate":0,"index":11236},{"krate":0,"index":11234},{"krate":0,"index":11231},{"krate":0,"index":11228},{"krate":0,"index":11229},{"krate":0,"index":11225},{"krate":0,"index":11226},{"krate":0,"index":9917},{"krate":0,"index":9921},{"krate":0,"index":9924},{"krate":0,"index":9926},{"krate":0,"index":11239},{"krate":0,"index":11253},{"krate":0,"index":11252},{"krate":0,"index":11250},{"krate":0,"index":11247},{"krate":0,"index":11244},{"krate":0,"index":11245},{"krate":0,"index":11241},{"krate":0,"index":11242},{"krate":0,"index":9927},{"krate":0,"index":9931},{"krate":0,"index":9934},{"krate":0,"index":9936},{"krate":0,"index":11255},{"krate":0,"index":11269},{"krate":0,"index":11268},{"krate":0,"index":11266},{"krate":0,"index":11263},{"krate":0,"index":11260},{"krate":0,"index":11261},{"krate":0,"index":11257},{"krate":0,"index":11258},{"krate":0,"index":9937},{"krate":0,"index":9941},{"krate":0,"index":9944},{"krate":0,"index":9946},{"krate":0,"index":11271},{"krate":0,"index":11285},{"krate":0,"index":11284},{"krate":0,"index":11282},{"krate":0,"index":11279},{"krate":0,"index":11276},{"krate":0,"index":11277},{"krate":0,"index":11273},{"krate":0,"index":11274},{"krate":0,"index":9947},{"krate":0,"index":9951},{"krate":0,"index":9954},{"krate":0,"index":9956},{"krate":0,"index":11287},{"krate":0,"index":11301},{"krate":0,"index":11300},{"krate":0,"index":11298},{"krate":0,"index":11295},{"krate":0,"index":11292},{"krate":0,"index":11293},{"krate":0,"index":11289},{"krate":0,"index":11290},{"krate":0,"index":9957},{"krate":0,"index":9961},{"krate":0,"index":9964},{"krate":0,"index":9966},{"krate":0,"index":11303},{"krate":0,"index":11317},{"krate":0,"index":11316},{"krate":0,"index":11314},{"krate":0,"index":11311},{"krate":0,"index":11308},{"krate":0,"index":11309},{"krate":0,"index":11305},{"krate":0,"index":11306},{"krate":0,"index":9967},{"krate":0,"index":9971},{"krate":0,"index":9974},{"krate":0,"index":9976},{"krate":0,"index":11319},{"krate":0,"index":11333},{"krate":0,"index":11332},{"krate":0,"index":11330},{"krate":0,"index":11327},{"krate":0,"index":11324},{"krate":0,"index":11325},{"krate":0,"index":11321},{"krate":0,"index":11322},{"krate":0,"index":9977},{"krate":0,"index":9981},{"krate":0,"index":9984},{"krate":0,"index":9986},{"krate":0,"index":11335},{"krate":0,"index":11349},{"krate":0,"index":11348},{"krate":0,"index":11346},{"krate":0,"index":11343},{"krate":0,"index":11340},{"krate":0,"index":11341},{"krate":0,"index":11337},{"krate":0,"index":11338},{"krate":0,"index":9987},{"krate":0,"index":9991},{"krate":0,"index":9994},{"krate":0,"index":9996},{"krate":0,"index":11351},{"krate":0,"index":11365},{"krate":0,"index":11364},{"krate":0,"index":11362},{"krate":0,"index":11359},{"krate":0,"index":11356},{"krate":0,"index":11357},{"krate":0,"index":11353},{"krate":0,"index":11354},{"krate":0,"index":9997},{"krate":0,"index":10001},{"krate":0,"index":10004},{"krate":0,"index":10006},{"krate":0,"index":11367},{"krate":0,"index":11381},{"krate":0,"index":11380},{"krate":0,"index":11378},{"krate":0,"index":11375},{"krate":0,"index":11372},{"krate":0,"index":11373},{"krate":0,"index":11369},{"krate":0,"index":11370},{"krate":0,"index":10007},{"krate":0,"index":10011},{"krate":0,"index":10014},{"krate":0,"index":10016},{"krate":0,"index":11383},{"krate":0,"index":11397},{"krate":0,"index":11396},{"krate":0,"index":11394},{"krate":0,"index":11391},{"krate":0,"index":11388},{"krate":0,"index":11389},{"krate":0,"index":11385},{"krate":0,"index":11386},{"krate":0,"index":10017},{"krate":0,"index":10021},{"krate":0,"index":10024},{"krate":0,"index":10026},{"krate":0,"index":11399},{"krate":0,"index":11413},{"krate":0,"index":11412},{"krate":0,"index":11410},{"krate":0,"index":11407},{"krate":0,"index":11404},{"krate":0,"index":11405},{"krate":0,"index":11401},{"krate":0,"index":11402},{"krate":0,"index":10027},{"krate":0,"index":10031},{"krate":0,"index":10034},{"krate":0,"index":10036},{"krate":0,"index":11415},{"krate":0,"index":11429},{"krate":0,"index":11428},{"krate":0,"index":11426},{"krate":0,"index":11423},{"krate":0,"index":11420},{"krate":0,"index":11421},{"krate":0,"index":11417},{"krate":0,"index":11418},{"krate":0,"index":10037},{"krate":0,"index":10041},{"krate":0,"index":10044},{"krate":0,"index":10046},{"krate":0,"index":11431},{"krate":0,"index":11445},{"krate":0,"index":11444},{"krate":0,"index":11442},{"krate":0,"index":11439},{"krate":0,"index":11436},{"krate":0,"index":11437},{"krate":0,"index":11433},{"krate":0,"index":11434},{"krate":0,"index":10047},{"krate":0,"index":10051},{"krate":0,"index":10054},{"krate":0,"index":10056},{"krate":0,"index":11447},{"krate":0,"index":11461},{"krate":0,"index":11460},{"krate":0,"index":11458},{"krate":0,"index":11455},{"krate":0,"index":11452},{"krate":0,"index":11453},{"krate":0,"index":11449},{"krate":0,"index":11450},{"krate":0,"index":10057},{"krate":0,"index":10061},{"krate":0,"index":10064},{"krate":0,"index":10066},{"krate":0,"index":11463},{"krate":0,"index":11477},{"krate":0,"index":11476},{"krate":0,"index":11474},{"krate":0,"index":11471},{"krate":0,"index":11468},{"krate":0,"index":11469},{"krate":0,"index":11465},{"krate":0,"index":11466},{"krate":0,"index":10067},{"krate":0,"index":10071},{"krate":0,"index":10074},{"krate":0,"index":10076},{"krate":0,"index":11479},{"krate":0,"index":11493},{"krate":0,"index":11492},{"krate":0,"index":11490},{"krate":0,"index":11487},{"krate":0,"index":11484},{"krate":0,"index":11485},{"krate":0,"index":11481},{"krate":0,"index":11482},{"krate":0,"index":10077},{"krate":0,"index":10081},{"krate":0,"index":10084},{"krate":0,"index":10086},{"krate":0,"index":11495},{"krate":0,"index":11509},{"krate":0,"index":11508},{"krate":0,"index":11506},{"krate":0,"index":11503},{"krate":0,"index":11500},{"krate":0,"index":11501},{"krate":0,"index":11497},{"krate":0,"index":11498},{"krate":0,"index":10087},{"krate":0,"index":10091},{"krate":0,"index":10094},{"krate":0,"index":10096},{"krate":0,"index":11511},{"krate":0,"index":11525},{"krate":0,"index":11524},{"krate":0,"index":11522},{"krate":0,"index":11519},{"krate":0,"index":11516},{"krate":0,"index":11517},{"krate":0,"index":11513},{"krate":0,"index":11514},{"krate":0,"index":10097},{"krate":0,"index":10101},{"krate":0,"index":10104},{"krate":0,"index":10106},{"krate":0,"index":11527},{"krate":0,"index":11541},{"krate":0,"index":11540},{"krate":0,"index":11538},{"krate":0,"index":11535},{"krate":0,"index":11532},{"krate":0,"index":11533},{"krate":0,"index":11529},{"krate":0,"index":11530},{"krate":0,"index":10107},{"krate":0,"index":10111},{"krate":0,"index":10114},{"krate":0,"index":10116},{"krate":0,"index":11543},{"krate":0,"index":11557},{"krate":0,"index":11556},{"krate":0,"index":11554},{"krate":0,"index":11551},{"krate":0,"index":11548},{"krate":0,"index":11549},{"krate":0,"index":11545},{"krate":0,"index":11546},{"krate":0,"index":10117},{"krate":0,"index":10121},{"krate":0,"index":10124},{"krate":0,"index":10126},{"krate":0,"index":11559},{"krate":0,"index":11573},{"krate":0,"index":11572},{"krate":0,"index":11570},{"krate":0,"index":11567},{"krate":0,"index":11564},{"krate":0,"index":11565},{"krate":0,"index":11561},{"krate":0,"index":11562},{"krate":0,"index":10127},{"krate":0,"index":10131},{"krate":0,"index":10134},{"krate":0,"index":10136},{"krate":0,"index":11575},{"krate":0,"index":11589},{"krate":0,"index":11588},{"krate":0,"index":11586},{"krate":0,"index":11583},{"krate":0,"index":11580},{"krate":0,"index":11581},{"krate":0,"index":11577},{"krate":0,"index":11578},{"krate":0,"index":10137},{"krate":0,"index":10141},{"krate":0,"index":10144},{"krate":0,"index":10146},{"krate":0,"index":11591},{"krate":0,"index":11605},{"krate":0,"index":11604},{"krate":0,"index":11602},{"krate":0,"index":11599},{"krate":0,"index":11596},{"krate":0,"index":11597},{"krate":0,"index":11593},{"krate":0,"index":11594},{"krate":0,"index":10147},{"krate":0,"index":10151},{"krate":0,"index":10154},{"krate":0,"index":10156},{"krate":0,"index":11607},{"krate":0,"index":11621},{"krate":0,"index":11620},{"krate":0,"index":11618},{"krate":0,"index":11615},{"krate":0,"index":11612},{"krate":0,"index":11613},{"krate":0,"index":11609},{"krate":0,"index":11610},{"krate":0,"index":10157},{"krate":0,"index":10161},{"krate":0,"index":10164},{"krate":0,"index":10166},{"krate":0,"index":11623},{"krate":0,"index":11637},{"krate":0,"index":11636},{"krate":0,"index":11634},{"krate":0,"index":11631},{"krate":0,"index":11628},{"krate":0,"index":11629},{"krate":0,"index":11625},{"krate":0,"index":11626},{"krate":0,"index":10167},{"krate":0,"index":10171},{"krate":0,"index":10174},{"krate":0,"index":10176},{"krate":0,"index":11639},{"krate":0,"index":11653},{"krate":0,"index":11652},{"krate":0,"index":11650},{"krate":0,"index":11647},{"krate":0,"index":11644},{"krate":0,"index":11645},{"krate":0,"index":11641},{"krate":0,"index":11642},{"krate":0,"index":10177},{"krate":0,"index":10181},{"krate":0,"index":10184},{"krate":0,"index":10186},{"krate":0,"index":11655},{"krate":0,"index":11669},{"krate":0,"index":11668},{"krate":0,"index":11666},{"krate":0,"index":11663},{"krate":0,"index":11660},{"krate":0,"index":11661},{"krate":0,"index":11657},{"krate":0,"index":11658},{"krate":0,"index":10187},{"krate":0,"index":10191},{"krate":0,"index":10194},{"krate":0,"index":10196},{"krate":0,"index":11671},{"krate":0,"index":11685},{"krate":0,"index":11684},{"krate":0,"index":11682},{"krate":0,"index":11679},{"krate":0,"index":11676},{"krate":0,"index":11677},{"krate":0,"index":11673},{"krate":0,"index":11674},{"krate":0,"index":10197},{"krate":0,"index":10201},{"krate":0,"index":10204},{"krate":0,"index":10206},{"krate":0,"index":11687},{"krate":0,"index":11701},{"krate":0,"index":11700},{"krate":0,"index":11698},{"krate":0,"index":11695},{"krate":0,"index":11692},{"krate":0,"index":11693},{"krate":0,"index":11689},{"krate":0,"index":11690},{"krate":0,"index":10207},{"krate":0,"index":10211},{"krate":0,"index":10214},{"krate":0,"index":10216},{"krate":0,"index":11703},{"krate":0,"index":11717},{"krate":0,"index":11716},{"krate":0,"index":11714},{"krate":0,"index":11711},{"krate":0,"index":11708},{"krate":0,"index":11709},{"krate":0,"index":11705},{"krate":0,"index":11706},{"krate":0,"index":10217},{"krate":0,"index":10221},{"krate":0,"index":10224},{"krate":0,"index":10226},{"krate":0,"index":11719},{"krate":0,"index":11733},{"krate":0,"index":11732},{"krate":0,"index":11730},{"krate":0,"index":11727},{"krate":0,"index":11724},{"krate":0,"index":11725},{"krate":0,"index":11721},{"krate":0,"index":11722},{"krate":0,"index":10227},{"krate":0,"index":10231},{"krate":0,"index":10234},{"krate":0,"index":10236},{"krate":0,"index":11735},{"krate":0,"index":11749},{"krate":0,"index":11748},{"krate":0,"index":11746},{"krate":0,"index":11743},{"krate":0,"index":11740},{"krate":0,"index":11741},{"krate":0,"index":11737},{"krate":0,"index":11738},{"krate":0,"index":10237},{"krate":0,"index":10241},{"krate":0,"index":10244},{"krate":0,"index":10246},{"krate":0,"index":11751},{"krate":0,"index":11765},{"krate":0,"index":11764},{"krate":0,"index":11762},{"krate":0,"index":11759},{"krate":0,"index":11756},{"krate":0,"index":11757},{"krate":0,"index":11753},{"krate":0,"index":11754},{"krate":0,"index":10247},{"krate":0,"index":10251},{"krate":0,"index":10254},{"krate":0,"index":10256},{"krate":0,"index":11767},{"krate":0,"index":11781},{"krate":0,"index":11780},{"krate":0,"index":11778},{"krate":0,"index":11775},{"krate":0,"index":11772},{"krate":0,"index":11773},{"krate":0,"index":11769},{"krate":0,"index":11770},{"krate":0,"index":10257},{"krate":0,"index":10261},{"krate":0,"index":10264},{"krate":0,"index":10266},{"krate":0,"index":11783},{"krate":0,"index":11797},{"krate":0,"index":11796},{"krate":0,"index":11794},{"krate":0,"index":11791},{"krate":0,"index":11788},{"krate":0,"index":11789},{"krate":0,"index":11785},{"krate":0,"index":11786},{"krate":0,"index":10267},{"krate":0,"index":10271},{"krate":0,"index":10274},{"krate":0,"index":10276},{"krate":0,"index":11799},{"krate":0,"index":11813},{"krate":0,"index":11812},{"krate":0,"index":11810},{"krate":0,"index":11807},{"krate":0,"index":11804},{"krate":0,"index":11805},{"krate":0,"index":11801},{"krate":0,"index":11802},{"krate":0,"index":10277},{"krate":0,"index":10281},{"krate":0,"index":10284},{"krate":0,"index":10286},{"krate":0,"index":11815},{"krate":0,"index":11829},{"krate":0,"index":11828},{"krate":0,"index":11826},{"krate":0,"index":11823},{"krate":0,"index":11820},{"krate":0,"index":11821},{"krate":0,"index":11817},{"krate":0,"index":11818},{"krate":0,"index":10287},{"krate":0,"index":10291},{"krate":0,"index":10294},{"krate":0,"index":10296},{"krate":0,"index":11831},{"krate":0,"index":11845},{"krate":0,"index":11844},{"krate":0,"index":11842},{"krate":0,"index":11839},{"krate":0,"index":11836},{"krate":0,"index":11837},{"krate":0,"index":11833},{"krate":0,"index":11834},{"krate":0,"index":10297},{"krate":0,"index":10301},{"krate":0,"index":10304},{"krate":0,"index":10306},{"krate":0,"index":11847},{"krate":0,"index":11861},{"krate":0,"index":11860},{"krate":0,"index":11858},{"krate":0,"index":11855},{"krate":0,"index":11852},{"krate":0,"index":11853},{"krate":0,"index":11849},{"krate":0,"index":11850},{"krate":0,"index":10307},{"krate":0,"index":10311},{"krate":0,"index":10314},{"krate":0,"index":10316},{"krate":0,"index":11863},{"krate":0,"index":11877},{"krate":0,"index":11876},{"krate":0,"index":11874},{"krate":0,"index":11871},{"krate":0,"index":11868},{"krate":0,"index":11869},{"krate":0,"index":11865},{"krate":0,"index":11866},{"krate":0,"index":10317},{"krate":0,"index":10321},{"krate":0,"index":10324},{"krate":0,"index":10326},{"krate":0,"index":11879},{"krate":0,"index":11893},{"krate":0,"index":11892},{"krate":0,"index":11890},{"krate":0,"index":11887},{"krate":0,"index":11884},{"krate":0,"index":11885},{"krate":0,"index":11881},{"krate":0,"index":11882},{"krate":0,"index":10327},{"krate":0,"index":10331},{"krate":0,"index":10334},{"krate":0,"index":10336},{"krate":0,"index":11895},{"krate":0,"index":11909},{"krate":0,"index":11908},{"krate":0,"index":11906},{"krate":0,"index":11903},{"krate":0,"index":11900},{"krate":0,"index":11901},{"krate":0,"index":11897},{"krate":0,"index":11898},{"krate":0,"index":10337},{"krate":0,"index":10341},{"krate":0,"index":10344},{"krate":0,"index":10346},{"krate":0,"index":11911},{"krate":0,"index":11925},{"krate":0,"index":11924},{"krate":0,"index":11922},{"krate":0,"index":11919},{"krate":0,"index":11916},{"krate":0,"index":11917},{"krate":0,"index":11913},{"krate":0,"index":11914},{"krate":0,"index":10347},{"krate":0,"index":10351},{"krate":0,"index":10354},{"krate":0,"index":10356},{"krate":0,"index":11927},{"krate":0,"index":11941},{"krate":0,"index":11940},{"krate":0,"index":11938},{"krate":0,"index":11935},{"krate":0,"index":11932},{"krate":0,"index":11933},{"krate":0,"index":11929},{"krate":0,"index":11930},{"krate":0,"index":10357},{"krate":0,"index":10361},{"krate":0,"index":10364},{"krate":0,"index":10366},{"krate":0,"index":11943},{"krate":0,"index":11957},{"krate":0,"index":11956},{"krate":0,"index":11954},{"krate":0,"index":11951},{"krate":0,"index":11948},{"krate":0,"index":11949},{"krate":0,"index":11945},{"krate":0,"index":11946},{"krate":0,"index":10367},{"krate":0,"index":10371},{"krate":0,"index":10374},{"krate":0,"index":10376},{"krate":0,"index":11959},{"krate":0,"index":11973},{"krate":0,"index":11972},{"krate":0,"index":11970},{"krate":0,"index":11967},{"krate":0,"index":11964},{"krate":0,"index":11965},{"krate":0,"index":11961},{"krate":0,"index":11962},{"krate":0,"index":10377},{"krate":0,"index":10381},{"krate":0,"index":10384},{"krate":0,"index":10386},{"krate":0,"index":11975},{"krate":0,"index":11989},{"krate":0,"index":11988},{"krate":0,"index":11986},{"krate":0,"index":11983},{"krate":0,"index":11980},{"krate":0,"index":11981},{"krate":0,"index":11977},{"krate":0,"index":11978},{"krate":0,"index":10387},{"krate":0,"index":10391},{"krate":0,"index":10394},{"krate":0,"index":10396},{"krate":0,"index":11991},{"krate":0,"index":12005},{"krate":0,"index":12004},{"krate":0,"index":12002},{"krate":0,"index":11999},{"krate":0,"index":11996},{"krate":0,"index":11997},{"krate":0,"index":11993},{"krate":0,"index":11994},{"krate":0,"index":10397},{"krate":0,"index":10401},{"krate":0,"index":10404},{"krate":0,"index":10406},{"krate":0,"index":12007},{"krate":0,"index":12021},{"krate":0,"index":12020},{"krate":0,"index":12018},{"krate":0,"index":12015},{"krate":0,"index":12012},{"krate":0,"index":12013},{"krate":0,"index":12009},{"krate":0,"index":12010},{"krate":0,"index":10407},{"krate":0,"index":10411},{"krate":0,"index":10414},{"krate":0,"index":10416},{"krate":0,"index":12023},{"krate":0,"index":12037},{"krate":0,"index":12036},{"krate":0,"index":12034},{"krate":0,"index":12031},{"krate":0,"index":12028},{"krate":0,"index":12029},{"krate":0,"index":12025},{"krate":0,"index":12026},{"krate":0,"index":10417},{"krate":0,"index":10421},{"krate":0,"index":10424},{"krate":0,"index":10426},{"krate":0,"index":12039},{"krate":0,"index":12053},{"krate":0,"index":12052},{"krate":0,"index":12050},{"krate":0,"index":12047},{"krate":0,"index":12044},{"krate":0,"index":12045},{"krate":0,"index":12041},{"krate":0,"index":12042},{"krate":0,"index":10427},{"krate":0,"index":10431},{"krate":0,"index":10434},{"krate":0,"index":10436},{"krate":0,"index":12055},{"krate":0,"index":12069},{"krate":0,"index":12068},{"krate":0,"index":12066},{"krate":0,"index":12063},{"krate":0,"index":12060},{"krate":0,"index":12061},{"krate":0,"index":12057},{"krate":0,"index":12058},{"krate":0,"index":10437},{"krate":0,"index":10441},{"krate":0,"index":10444},{"krate":0,"index":10446},{"krate":0,"index":12071},{"krate":0,"index":12085},{"krate":0,"index":12084},{"krate":0,"index":12082},{"krate":0,"index":12079},{"krate":0,"index":12076},{"krate":0,"index":12077},{"krate":0,"index":12073},{"krate":0,"index":12074},{"krate":0,"index":10447},{"krate":0,"index":10451},{"krate":0,"index":10454},{"krate":0,"index":10456},{"krate":0,"index":12087},{"krate":0,"index":12101},{"krate":0,"index":12100},{"krate":0,"index":12098},{"krate":0,"index":12095},{"krate":0,"index":12092},{"krate":0,"index":12093},{"krate":0,"index":12089},{"krate":0,"index":12090},{"krate":0,"index":10457},{"krate":0,"index":10461},{"krate":0,"index":10464},{"krate":0,"index":10466},{"krate":0,"index":12103},{"krate":0,"index":12117},{"krate":0,"index":12116},{"krate":0,"index":12114},{"krate":0,"index":12111},{"krate":0,"index":12108},{"krate":0,"index":12109},{"krate":0,"index":12105},{"krate":0,"index":12106},{"krate":0,"index":10467},{"krate":0,"index":10471},{"krate":0,"index":10474},{"krate":0,"index":10476},{"krate":0,"index":12119},{"krate":0,"index":12133},{"krate":0,"index":12132},{"krate":0,"index":12130},{"krate":0,"index":12127},{"krate":0,"index":12124},{"krate":0,"index":12125},{"krate":0,"index":12121},{"krate":0,"index":12122},{"krate":0,"index":10477},{"krate":0,"index":10481},{"krate":0,"index":10484},{"krate":0,"index":10486},{"krate":0,"index":12135},{"krate":0,"index":12149},{"krate":0,"index":12148},{"krate":0,"index":12146},{"krate":0,"index":12143},{"krate":0,"index":12140},{"krate":0,"index":12141},{"krate":0,"index":12137},{"krate":0,"index":12138},{"krate":0,"index":10487},{"krate":0,"index":10491},{"krate":0,"index":10494},{"krate":0,"index":10496},{"krate":0,"index":12151},{"krate":0,"index":12165},{"krate":0,"index":12164},{"krate":0,"index":12162},{"krate":0,"index":12159},{"krate":0,"index":12156},{"krate":0,"index":12157},{"krate":0,"index":12153},{"krate":0,"index":12154},{"krate":0,"index":10497},{"krate":0,"index":10501},{"krate":0,"index":10504},{"krate":0,"index":10506},{"krate":0,"index":12167},{"krate":0,"index":12181},{"krate":0,"index":12180},{"krate":0,"index":12178},{"krate":0,"index":12175},{"krate":0,"index":12172},{"krate":0,"index":12173},{"krate":0,"index":12169},{"krate":0,"index":12170},{"krate":0,"index":10507},{"krate":0,"index":10511},{"krate":0,"index":10514},{"krate":0,"index":10516},{"krate":0,"index":12183},{"krate":0,"index":12197},{"krate":0,"index":12196},{"krate":0,"index":12194},{"krate":0,"index":12191},{"krate":0,"index":12188},{"krate":0,"index":12189},{"krate":0,"index":12185},{"krate":0,"index":12186},{"krate":0,"index":10517},{"krate":0,"index":10521},{"krate":0,"index":10524},{"krate":0,"index":10526},{"krate":0,"index":12199},{"krate":0,"index":12213},{"krate":0,"index":12212},{"krate":0,"index":12210},{"krate":0,"index":12207},{"krate":0,"index":12204},{"krate":0,"index":12205},{"krate":0,"index":12201},{"krate":0,"index":12202},{"krate":0,"index":10527},{"krate":0,"index":10531},{"krate":0,"index":10534},{"krate":0,"index":10536},{"krate":0,"index":12215},{"krate":0,"index":12229},{"krate":0,"index":12228},{"krate":0,"index":12226},{"krate":0,"index":12223},{"krate":0,"index":12220},{"krate":0,"index":12221},{"krate":0,"index":12217},{"krate":0,"index":12218},{"krate":0,"index":10537},{"krate":0,"index":10541},{"krate":0,"index":10544},{"krate":0,"index":10546},{"krate":0,"index":12231},{"krate":0,"index":12245},{"krate":0,"index":12244},{"krate":0,"index":12242},{"krate":0,"index":12239},{"krate":0,"index":12236},{"krate":0,"index":12237},{"krate":0,"index":12233},{"krate":0,"index":12234},{"krate":0,"index":10547},{"krate":0,"index":10551},{"krate":0,"index":10554},{"krate":0,"index":10556},{"krate":0,"index":12247},{"krate":0,"index":12261},{"krate":0,"index":12260},{"krate":0,"index":12258},{"krate":0,"index":12255},{"krate":0,"index":12252},{"krate":0,"index":12253},{"krate":0,"index":12249},{"krate":0,"index":12250},{"krate":0,"index":10557},{"krate":0,"index":10561},{"krate":0,"index":10564},{"krate":0,"index":10566},{"krate":0,"index":12263},{"krate":0,"index":12277},{"krate":0,"index":12276},{"krate":0,"index":12274},{"krate":0,"index":12271},{"krate":0,"index":12268},{"krate":0,"index":12269},{"krate":0,"index":12265},{"krate":0,"index":12266},{"krate":0,"index":10567},{"krate":0,"index":10571},{"krate":0,"index":10574},{"krate":0,"index":10576},{"krate":0,"index":12279},{"krate":0,"index":12293},{"krate":0,"index":12292},{"krate":0,"index":12290},{"krate":0,"index":12287},{"krate":0,"index":12284},{"krate":0,"index":12285},{"krate":0,"index":12281},{"krate":0,"index":12282},{"krate":0,"index":10577},{"krate":0,"index":10581},{"krate":0,"index":10584},{"krate":0,"index":10586},{"krate":0,"index":12295},{"krate":0,"index":12309},{"krate":0,"index":12308},{"krate":0,"index":12306},{"krate":0,"index":12303},{"krate":0,"index":12300},{"krate":0,"index":12301},{"krate":0,"index":12297},{"krate":0,"index":12298},{"krate":0,"index":10587},{"krate":0,"index":10591},{"krate":0,"index":10594},{"krate":0,"index":10596},{"krate":0,"index":12311},{"krate":0,"index":12325},{"krate":0,"index":12324},{"krate":0,"index":12322},{"krate":0,"index":12319},{"krate":0,"index":12316},{"krate":0,"index":12317},{"krate":0,"index":12313},{"krate":0,"index":12314},{"krate":0,"index":10597},{"krate":0,"index":10601},{"krate":0,"index":10604},{"krate":0,"index":10606},{"krate":0,"index":12327},{"krate":0,"index":12341},{"krate":0,"index":12340},{"krate":0,"index":12338},{"krate":0,"index":12335},{"krate":0,"index":12332},{"krate":0,"index":12333},{"krate":0,"index":12329},{"krate":0,"index":12330},{"krate":0,"index":10607},{"krate":0,"index":10611},{"krate":0,"index":10614},{"krate":0,"index":10616},{"krate":0,"index":12343},{"krate":0,"index":12357},{"krate":0,"index":12356},{"krate":0,"index":12354},{"krate":0,"index":12351},{"krate":0,"index":12348},{"krate":0,"index":12349},{"krate":0,"index":12345},{"krate":0,"index":12346},{"krate":0,"index":10617},{"krate":0,"index":10621},{"krate":0,"index":10624},{"krate":0,"index":10626},{"krate":0,"index":12359},{"krate":0,"index":12373},{"krate":0,"index":12372},{"krate":0,"index":12370},{"krate":0,"index":12367},{"krate":0,"index":12364},{"krate":0,"index":12365},{"krate":0,"index":12361},{"krate":0,"index":12362},{"krate":0,"index":10627},{"krate":0,"index":10631},{"krate":0,"index":10634},{"krate":0,"index":10636},{"krate":0,"index":12375},{"krate":0,"index":12389},{"krate":0,"index":12388},{"krate":0,"index":12386},{"krate":0,"index":12383},{"krate":0,"index":12380},{"krate":0,"index":12381},{"krate":0,"index":12377},{"krate":0,"index":12378},{"krate":0,"index":10637},{"krate":0,"index":10641},{"krate":0,"index":10644},{"krate":0,"index":10646},{"krate":0,"index":12391},{"krate":0,"index":12405},{"krate":0,"index":12404},{"krate":0,"index":12402},{"krate":0,"index":12399},{"krate":0,"index":12396},{"krate":0,"index":12397},{"krate":0,"index":12393},{"krate":0,"index":12394},{"krate":0,"index":10647},{"krate":0,"index":10651},{"krate":0,"index":10654},{"krate":0,"index":10656},{"krate":0,"index":12407},{"krate":0,"index":12421},{"krate":0,"index":12420},{"krate":0,"index":12418},{"krate":0,"index":12415},{"krate":0,"index":12412},{"krate":0,"index":12413},{"krate":0,"index":12409},{"krate":0,"index":12410},{"krate":0,"index":10657},{"krate":0,"index":10661},{"krate":0,"index":10664},{"krate":0,"index":10666},{"krate":0,"index":12423},{"krate":0,"index":12437},{"krate":0,"index":12436},{"krate":0,"index":12434},{"krate":0,"index":12431},{"krate":0,"index":12428},{"krate":0,"index":12429},{"krate":0,"index":12425},{"krate":0,"index":12426},{"krate":0,"index":10667},{"krate":0,"index":10671},{"krate":0,"index":10674},{"krate":0,"index":10676},{"krate":0,"index":12439},{"krate":0,"index":12453},{"krate":0,"index":12452},{"krate":0,"index":12450},{"krate":0,"index":12447},{"krate":0,"index":12444},{"krate":0,"index":12445},{"krate":0,"index":12441},{"krate":0,"index":12442},{"krate":0,"index":10677},{"krate":0,"index":10681},{"krate":0,"index":10684},{"krate":0,"index":10686},{"krate":0,"index":12455},{"krate":0,"index":12469},{"krate":0,"index":12468},{"krate":0,"index":12466},{"krate":0,"index":12463},{"krate":0,"index":12460},{"krate":0,"index":12461},{"krate":0,"index":12457},{"krate":0,"index":12458},{"krate":0,"index":10687},{"krate":0,"index":10691},{"krate":0,"index":10694},{"krate":0,"index":10696},{"krate":0,"index":12471},{"krate":0,"index":12485},{"krate":0,"index":12484},{"krate":0,"index":12482},{"krate":0,"index":12479},{"krate":0,"index":12476},{"krate":0,"index":12477},{"krate":0,"index":12473},{"krate":0,"index":12474},{"krate":0,"index":10697},{"krate":0,"index":10701},{"krate":0,"index":10704},{"krate":0,"index":10706},{"krate":0,"index":12487},{"krate":0,"index":12501},{"krate":0,"index":12500},{"krate":0,"index":12498},{"krate":0,"index":12495},{"krate":0,"index":12492},{"krate":0,"index":12493},{"krate":0,"index":12489},{"krate":0,"index":12490},{"krate":0,"index":10707},{"krate":0,"index":10711},{"krate":0,"index":10714},{"krate":0,"index":10716},{"krate":0,"index":12503},{"krate":0,"index":12517},{"krate":0,"index":12516},{"krate":0,"index":12514},{"krate":0,"index":12511},{"krate":0,"index":12508},{"krate":0,"index":12509},{"krate":0,"index":12505},{"krate":0,"index":12506},{"krate":0,"index":10717},{"krate":0,"index":10721},{"krate":0,"index":10724},{"krate":0,"index":10726},{"krate":0,"index":12519},{"krate":0,"index":12533},{"krate":0,"index":12532},{"krate":0,"index":12530},{"krate":0,"index":12527},{"krate":0,"index":12524},{"krate":0,"index":12525},{"krate":0,"index":12521},{"krate":0,"index":12522},{"krate":0,"index":10727},{"krate":0,"index":10731},{"krate":0,"index":10734},{"krate":0,"index":10736},{"krate":0,"index":12535},{"krate":0,"index":12549},{"krate":0,"index":12548},{"krate":0,"index":12546},{"krate":0,"index":12543},{"krate":0,"index":12540},{"krate":0,"index":12541},{"krate":0,"index":12537},{"krate":0,"index":12538},{"krate":0,"index":10737},{"krate":0,"index":10741},{"krate":0,"index":10744},{"krate":0,"index":10746},{"krate":0,"index":12551},{"krate":0,"index":12565},{"krate":0,"index":12564},{"krate":0,"index":12562},{"krate":0,"index":12559},{"krate":0,"index":12556},{"krate":0,"index":12557},{"krate":0,"index":12553},{"krate":0,"index":12554},{"krate":0,"index":10747},{"krate":0,"index":10751},{"krate":0,"index":10754},{"krate":0,"index":10756},{"krate":0,"index":12567},{"krate":0,"index":12581},{"krate":0,"index":12580},{"krate":0,"index":12578},{"krate":0,"index":12575},{"krate":0,"index":12572},{"krate":0,"index":12573},{"krate":0,"index":12569},{"krate":0,"index":12570},{"krate":0,"index":10757},{"krate":0,"index":10761},{"krate":0,"index":10764},{"krate":0,"index":10766},{"krate":0,"index":12583},{"krate":0,"index":12597},{"krate":0,"index":12596},{"krate":0,"index":12594},{"krate":0,"index":12591},{"krate":0,"index":12588},{"krate":0,"index":12589},{"krate":0,"index":12585},{"krate":0,"index":12586},{"krate":0,"index":10767},{"krate":0,"index":10771},{"krate":0,"index":10774},{"krate":0,"index":10776},{"krate":0,"index":12599},{"krate":0,"index":12613},{"krate":0,"index":12612},{"krate":0,"index":12610},{"krate":0,"index":12607},{"krate":0,"index":12604},{"krate":0,"index":12605},{"krate":0,"index":12601},{"krate":0,"index":12602},{"krate":0,"index":10777},{"krate":0,"index":10781},{"krate":0,"index":10784},{"krate":0,"index":10786},{"krate":0,"index":12615},{"krate":0,"index":12629},{"krate":0,"index":12628},{"krate":0,"index":12626},{"krate":0,"index":12623},{"krate":0,"index":12620},{"krate":0,"index":12621},{"krate":0,"index":12617},{"krate":0,"index":12618},{"krate":0,"index":10787},{"krate":0,"index":10791},{"krate":0,"index":10794},{"krate":0,"index":10796},{"krate":0,"index":12631},{"krate":0,"index":12645},{"krate":0,"index":12644},{"krate":0,"index":12642},{"krate":0,"index":12639},{"krate":0,"index":12636},{"krate":0,"index":12637},{"krate":0,"index":12633},{"krate":0,"index":12634},{"krate":0,"index":10797},{"krate":0,"index":10801},{"krate":0,"index":10804},{"krate":0,"index":10806},{"krate":0,"index":12647},{"krate":0,"index":12661},{"krate":0,"index":12660},{"krate":0,"index":12658},{"krate":0,"index":12655},{"krate":0,"index":12652},{"krate":0,"index":12653},{"krate":0,"index":12649},{"krate":0,"index":12650},{"krate":0,"index":10807},{"krate":0,"index":10811},{"krate":0,"index":10814},{"krate":0,"index":10816},{"krate":0,"index":12663},{"krate":0,"index":12677},{"krate":0,"index":12676},{"krate":0,"index":12674},{"krate":0,"index":12671},{"krate":0,"index":12668},{"krate":0,"index":12669},{"krate":0,"index":12665},{"krate":0,"index":12666},{"krate":0,"index":10817},{"krate":0,"index":10821},{"krate":0,"index":10824},{"krate":0,"index":10826},{"krate":0,"index":12679},{"krate":0,"index":12693},{"krate":0,"index":12692},{"krate":0,"index":12690},{"krate":0,"index":12687},{"krate":0,"index":12684},{"krate":0,"index":12685},{"krate":0,"index":12681},{"krate":0,"index":12682},{"krate":0,"index":10827},{"krate":0,"index":10831},{"krate":0,"index":10834},{"krate":0,"index":10836},{"krate":0,"index":12695},{"krate":0,"index":12709},{"krate":0,"index":12708},{"krate":0,"index":12706},{"krate":0,"index":12703},{"krate":0,"index":12700},{"krate":0,"index":12701},{"krate":0,"index":12697},{"krate":0,"index":12698},{"krate":0,"index":10837},{"krate":0,"index":10841},{"krate":0,"index":10844},{"krate":0,"index":10846},{"krate":0,"index":12711},{"krate":0,"index":12725},{"krate":0,"index":12724},{"krate":0,"index":12722},{"krate":0,"index":12719},{"krate":0,"index":12716},{"krate":0,"index":12717},{"krate":0,"index":12713},{"krate":0,"index":12714},{"krate":0,"index":10847},{"krate":0,"index":10851},{"krate":0,"index":10854},{"krate":0,"index":10856},{"krate":0,"index":12727},{"krate":0,"index":12741},{"krate":0,"index":12740},{"krate":0,"index":12738},{"krate":0,"index":12735},{"krate":0,"index":12732},{"krate":0,"index":12733},{"krate":0,"index":12729},{"krate":0,"index":12730},{"krate":0,"index":10857},{"krate":0,"index":10861},{"krate":0,"index":10864},{"krate":0,"index":10866},{"krate":0,"index":12743},{"krate":0,"index":12757},{"krate":0,"index":12756},{"krate":0,"index":12754},{"krate":0,"index":12751},{"krate":0,"index":12748},{"krate":0,"index":12749},{"krate":0,"index":12745},{"krate":0,"index":12746},{"krate":0,"index":10867},{"krate":0,"index":10871},{"krate":0,"index":10874},{"krate":0,"index":10876},{"krate":0,"index":12759},{"krate":0,"index":12773},{"krate":0,"index":12772},{"krate":0,"index":12770},{"krate":0,"index":12767},{"krate":0,"index":12764},{"krate":0,"index":12765},{"krate":0,"index":12761},{"krate":0,"index":12762},{"krate":0,"index":10877},{"krate":0,"index":10881},{"krate":0,"index":10884},{"krate":0,"index":10886},{"krate":0,"index":12775},{"krate":0,"index":12789},{"krate":0,"index":12788},{"krate":0,"index":12786},{"krate":0,"index":12783},{"krate":0,"index":12780},{"krate":0,"index":12781},{"krate":0,"index":12777},{"krate":0,"index":12778},{"krate":0,"index":10887},{"krate":0,"index":10891},{"krate":0,"index":10894},{"krate":0,"index":10896},{"krate":0,"index":12791},{"krate":0,"index":12805},{"krate":0,"index":12804},{"krate":0,"index":12802},{"krate":0,"index":12799},{"krate":0,"index":12796},{"krate":0,"index":12797},{"krate":0,"index":12793},{"krate":0,"index":12794},{"krate":0,"index":10897},{"krate":0,"index":10901},{"krate":0,"index":10904},{"krate":0,"index":10906},{"krate":0,"index":12807},{"krate":0,"index":12821},{"krate":0,"index":12820},{"krate":0,"index":12818},{"krate":0,"index":12815},{"krate":0,"index":12812},{"krate":0,"index":12813},{"krate":0,"index":12809},{"krate":0,"index":12810},{"krate":0,"index":10907},{"krate":0,"index":10911},{"krate":0,"index":10914},{"krate":0,"index":10916},{"krate":0,"index":12823},{"krate":0,"index":12837},{"krate":0,"index":12836},{"krate":0,"index":12834},{"krate":0,"index":12831},{"krate":0,"index":12828},{"krate":0,"index":12829},{"krate":0,"index":12825},{"krate":0,"index":12826},{"krate":0,"index":10917},{"krate":0,"index":10921},{"krate":0,"index":10924},{"krate":0,"index":10926},{"krate":0,"index":12839},{"krate":0,"index":12853},{"krate":0,"index":12852},{"krate":0,"index":12850},{"krate":0,"index":12847},{"krate":0,"index":12844},{"krate":0,"index":12845},{"krate":0,"index":12841},{"krate":0,"index":12842},{"krate":0,"index":10927},{"krate":0,"index":10931},{"krate":0,"index":10934},{"krate":0,"index":10936},{"krate":0,"index":12855},{"krate":0,"index":12869},{"krate":0,"index":12868},{"krate":0,"index":12866},{"krate":0,"index":12863},{"krate":0,"index":12860},{"krate":0,"index":12861},{"krate":0,"index":12857},{"krate":0,"index":12858},{"krate":0,"index":10937},{"krate":0,"index":10941},{"krate":0,"index":10944},{"krate":0,"index":10946},{"krate":0,"index":12871},{"krate":0,"index":12885},{"krate":0,"index":12884},{"krate":0,"index":12882},{"krate":0,"index":12879},{"krate":0,"index":12876},{"krate":0,"index":12877},{"krate":0,"index":12873},{"krate":0,"index":12874},{"krate":0,"index":10947},{"krate":0,"index":10951},{"krate":0,"index":10954},{"krate":0,"index":10956},{"krate":0,"index":12887},{"krate":0,"index":12901},{"krate":0,"index":12900},{"krate":0,"index":12898},{"krate":0,"index":12895},{"krate":0,"index":12892},{"krate":0,"index":12893},{"krate":0,"index":12889},{"krate":0,"index":12890},{"krate":0,"index":10957},{"krate":0,"index":10961},{"krate":0,"index":10964},{"krate":0,"index":10966},{"krate":0,"index":12903},{"krate":0,"index":12917},{"krate":0,"index":12916},{"krate":0,"index":12914},{"krate":0,"index":12911},{"krate":0,"index":12908},{"krate":0,"index":12909},{"krate":0,"index":12905},{"krate":0,"index":12906},{"krate":0,"index":10967},{"krate":0,"index":10971},{"krate":0,"index":10974},{"krate":0,"index":10976},{"krate":0,"index":12919},{"krate":0,"index":12933},{"krate":0,"index":12932},{"krate":0,"index":12930},{"krate":0,"index":12927},{"krate":0,"index":12924},{"krate":0,"index":12925},{"krate":0,"index":12921},{"krate":0,"index":12922},{"krate":0,"index":10977},{"krate":0,"index":10981},{"krate":0,"index":10984},{"krate":0,"index":10986},{"krate":0,"index":12935},{"krate":0,"index":12949},{"krate":0,"index":12948},{"krate":0,"index":12946},{"krate":0,"index":12943},{"krate":0,"index":12940},{"krate":0,"index":12941},{"krate":0,"index":12937},{"krate":0,"index":12938},{"krate":0,"index":10987},{"krate":0,"index":10991},{"krate":0,"index":10994},{"krate":0,"index":10996},{"krate":0,"index":12951},{"krate":0,"index":12965},{"krate":0,"index":12964},{"krate":0,"index":12962},{"krate":0,"index":12959},{"krate":0,"index":12956},{"krate":0,"index":12957},{"krate":0,"index":12953},{"krate":0,"index":12954},{"krate":0,"index":10997},{"krate":0,"index":11001},{"krate":0,"index":11004},{"krate":0,"index":11006},{"krate":0,"index":12967},{"krate":0,"index":12981},{"krate":0,"index":12980},{"krate":0,"index":12978},{"krate":0,"index":12975},{"krate":0,"index":12972},{"krate":0,"index":12973},{"krate":0,"index":12969},{"krate":0,"index":12970},{"krate":0,"index":11007},{"krate":0,"index":11011},{"krate":0,"index":11014},{"krate":0,"index":11016},{"krate":0,"index":12983},{"krate":0,"index":12997},{"krate":0,"index":12996},{"krate":0,"index":12994},{"krate":0,"index":12991},{"krate":0,"index":12988},{"krate":0,"index":12989},{"krate":0,"index":12985},{"krate":0,"index":12986},{"krate":0,"index":11017},{"krate":0,"index":11021},{"krate":0,"index":11024},{"krate":0,"index":11026},{"krate":0,"index":12999},{"krate":0,"index":13013},{"krate":0,"index":13012},{"krate":0,"index":13010},{"krate":0,"index":13007},{"krate":0,"index":13004},{"krate":0,"index":13005},{"krate":0,"index":13001},{"krate":0,"index":13002},{"krate":0,"index":11027},{"krate":0,"index":11031},{"krate":0,"index":11034},{"krate":0,"index":11036},{"krate":0,"index":13015},{"krate":0,"index":13029},{"krate":0,"index":13028},{"krate":0,"index":13026},{"krate":0,"index":13023},{"krate":0,"index":13020},{"krate":0,"index":13021},{"krate":0,"index":13017},{"krate":0,"index":13018},{"krate":0,"index":11037},{"krate":0,"index":11041},{"krate":0,"index":11044},{"krate":0,"index":11046},{"krate":0,"index":13031},{"krate":0,"index":13045},{"krate":0,"index":13044},{"krate":0,"index":13042},{"krate":0,"index":13039},{"krate":0,"index":13036},{"krate":0,"index":13037},{"krate":0,"index":13033},{"krate":0,"index":13034},{"krate":0,"index":11047},{"krate":0,"index":11051},{"krate":0,"index":11054},{"krate":0,"index":11056},{"krate":0,"index":13047},{"krate":0,"index":13061},{"krate":0,"index":13060},{"krate":0,"index":13058},{"krate":0,"index":13055},{"krate":0,"index":13052},{"krate":0,"index":13053},{"krate":0,"index":13049},{"krate":0,"index":13050},{"krate":0,"index":11057},{"krate":0,"index":11061},{"krate":0,"index":11064},{"krate":0,"index":11066},{"krate":0,"index":13063},{"krate":0,"index":13077},{"krate":0,"index":13076},{"krate":0,"index":13074},{"krate":0,"index":13071},{"krate":0,"index":13068},{"krate":0,"index":13069},{"krate":0,"index":13065},{"krate":0,"index":13066},{"krate":0,"index":11067},{"krate":0,"index":11071},{"krate":0,"index":11074},{"krate":0,"index":11076},{"krate":0,"index":13079},{"krate":0,"index":13093},{"krate":0,"index":13092},{"krate":0,"index":13090},{"krate":0,"index":13087},{"krate":0,"index":13084},{"krate":0,"index":13085},{"krate":0,"index":13081},{"krate":0,"index":13082},{"krate":0,"index":11077},{"krate":0,"index":11081},{"krate":0,"index":11084},{"krate":0,"index":11086},{"krate":0,"index":13095},{"krate":0,"index":13109},{"krate":0,"index":13108},{"krate":0,"index":13106},{"krate":0,"index":13103},{"krate":0,"index":13100},{"krate":0,"index":13101},{"krate":0,"index":13097},{"krate":0,"index":13098},{"krate":0,"index":11087},{"krate":0,"index":11091},{"krate":0,"index":11094},{"krate":0,"index":11096},{"krate":0,"index":13111},{"krate":0,"index":13125},{"krate":0,"index":13124},{"krate":0,"index":13122},{"krate":0,"index":13119},{"krate":0,"index":13116},{"krate":0,"index":13117},{"krate":0,"index":13113},{"krate":0,"index":13114},{"krate":0,"index":11097},{"krate":0,"index":11101},{"krate":0,"index":11104},{"krate":0,"index":11106},{"krate":0,"index":13127},{"krate":0,"index":13141},{"krate":0,"index":13140},{"krate":0,"index":13138},{"krate":0,"index":13135},{"krate":0,"index":13132},{"krate":0,"index":13133},{"krate":0,"index":13129},{"krate":0,"index":13130},{"krate":0,"index":11107},{"krate":0,"index":11111},{"krate":0,"index":11114},{"krate":0,"index":11116},{"krate":0,"index":13143},{"krate":0,"index":13157},{"krate":0,"index":13156},{"krate":0,"index":13154},{"krate":0,"index":13151},{"krate":0,"index":13148},{"krate":0,"index":13149},{"krate":0,"index":13145},{"krate":0,"index":13146},{"krate":0,"index":11117},{"krate":0,"index":11121},{"krate":0,"index":11124},{"krate":0,"index":11126},{"krate":0,"index":528},{"krate":0,"index":537},{"krate":0,"index":548},{"krate":0,"index":558},{"krate":0,"index":566},{"krate":0,"index":570},{"krate":0,"index":576},{"krate":0,"index":581}],"decl_id":null,"docs":" Traits and tags for identifying the dimension of all algebraic entities.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":95631,"byte_end":95654,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"! Traits and tags for identifying the dimension of all algebraic entities.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":95656,"byte_end":95732,"line_start":3,"line_end":3,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":9635},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":96151,"byte_end":96158,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"Dynamic","qualname":"::base::dimension::Dynamic","value":"Dynamic {  }","parent":null,"children":[{"krate":0,"index":9636}],"decl_id":null,"docs":" Dim of dynamically-sized algebraic entities.\n","sig":null,"attributes":[{"value":"/ Dim of dynamically-sized algebraic entities.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":96046,"byte_end":96094,"line_start":16,"line_end":16,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":96263,"byte_end":96266,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<Dynamic>::new","value":"fn (value: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A dynamic size equal to `value`.\n","sig":null,"attributes":[{"value":"/ A dynamic size equal to `value`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":96201,"byte_end":96237,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":96242,"byte_end":96251,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":491},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":96867,"byte_end":96876,"line_start":51,"line_end":51,"column_start":11,"column_end":20},"name":"IsDynamic","qualname":"::base::dimension::IsDynamic","value":"IsDynamic","parent":null,"children":[],"decl_id":null,"docs":" Trait implemented by `Dynamic`.\n","sig":null,"attributes":[{"value":"/ Trait implemented by `Dynamic`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":96821,"byte_end":96856,"line_start":50,"line_end":50,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":492},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":96970,"byte_end":96984,"line_start":53,"line_end":53,"column_start":11,"column_end":25},"name":"IsNotStaticOne","qualname":"::base::dimension::IsNotStaticOne","value":"IsNotStaticOne","parent":null,"children":[],"decl_id":null,"docs":" Trait implemented by `Dynamic` and type-level integers different from `U1`.\n","sig":null,"attributes":[{"value":"/ Trait implemented by `Dynamic` and type-level integers different from `U1`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":96880,"byte_end":96959,"line_start":52,"line_end":52,"column_start":1,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":495},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97228,"byte_end":97231,"line_start":60,"line_end":60,"column_start":11,"column_end":14},"name":"Dim","qualname":"::base::dimension::Dim","value":"Dim: Any + Debug + Copy + PartialEq + Send + Sync","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500}],"decl_id":null,"docs":" Trait implemented by any type that can be used as a dimension. This includes type-level\n integers and `Dynamic` (for dimensions not known at compile-time).\n","sig":null,"attributes":[{"value":"/ Trait implemented by any type that can be used as a dimension. This includes type-level","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97055,"byte_end":97146,"line_start":58,"line_end":58,"column_start":1,"column_end":92}},{"value":"/ integers and `Dynamic` (for dimensions not known at compile-time).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97147,"byte_end":97217,"line_start":59,"line_end":59,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97309,"byte_end":97311,"line_start":62,"line_end":62,"column_start":8,"column_end":10},"name":"is","qualname":"::base::dimension::Dim::is","value":"fn <D> () -> bool","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97284,"byte_end":97301,"line_start":61,"line_end":61,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97513,"byte_end":97525,"line_start":68,"line_end":68,"column_start":8,"column_end":20},"name":"try_to_usize","qualname":"::base::dimension::Dim::try_to_usize","value":"fn () -> Option<usize>","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":" Gets the compile-time value of `Self`. Returns `None` if it is not known, i.e., if `Self =\n Dynamic`.\n","sig":null,"attributes":[{"value":"/ Gets the compile-time value of `Self`. Returns `None` if it is not known, i.e., if `Self =","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97393,"byte_end":97487,"line_start":66,"line_end":66,"column_start":5,"column_end":99}},{"value":"/ Dynamic`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97492,"byte_end":97505,"line_start":67,"line_end":67,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97683,"byte_end":97688,"line_start":72,"line_end":72,"column_start":8,"column_end":13},"name":"value","qualname":"::base::dimension::Dim::value","value":"fn (&self) -> usize","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":" Gets the run-time value of `self`. For type-level integers, this is the same as\n `Self::try_to_usize().unwrap()`.\n","sig":null,"attributes":[{"value":"/ Gets the run-time value of `self`. For type-level integers, this is the same as","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97551,"byte_end":97634,"line_start":70,"line_end":70,"column_start":5,"column_end":88}},{"value":"/ `Self::try_to_usize().unwrap()`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97639,"byte_end":97675,"line_start":71,"line_end":71,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97867,"byte_end":97877,"line_start":76,"line_end":76,"column_start":8,"column_end":18},"name":"from_usize","qualname":"::base::dimension::Dim::from_usize","value":"fn (dim: usize) -> Self","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":" Builds an instance of `Self` from a run-time value. Panics if `Self` is a type-level\n integer and `dim != Self::try_to_usize().unwrap()`.\n","sig":null,"attributes":[{"value":"/ Builds an instance of `Self` from a run-time value. Panics if `Self` is a type-level","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97711,"byte_end":97799,"line_start":74,"line_end":74,"column_start":5,"column_end":93}},{"value":"/ integer and `dim != Self::try_to_usize().unwrap()`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97804,"byte_end":97859,"line_start":75,"line_end":75,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":9649},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100432,"byte_end":100438,"line_start":184,"line_end":184,"column_start":45,"column_end":51},"name":"DimSum","qualname":"::base::dimension::DimSum","value":"<D1 as DimAdd<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9652},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100392,"byte_end":100398,"line_start":184,"line_end":184,"column_start":5,"column_end":11},"name":"DimAdd","qualname":"::base::dimension::DimAdd","value":"DimAdd<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":9654},{"krate":0,"index":9655}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9655},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100417,"byte_end":100420,"line_start":184,"line_end":184,"column_start":30,"column_end":33},"name":"add","qualname":"::base::dimension::DimAdd::add","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9652},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9669},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100444,"byte_end":100454,"line_start":184,"line_end":184,"column_start":57,"column_end":67},"name":"DimNameSum","qualname":"::base::dimension::DimNameSum","value":"<D1 as DimNameAdd<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9672},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100400,"byte_end":100410,"line_start":184,"line_end":184,"column_start":13,"column_end":23},"name":"DimNameAdd","qualname":"::base::dimension::DimNameAdd","value":"DimNameAdd<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":9674},{"krate":0,"index":9675}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9675},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100417,"byte_end":100420,"line_start":184,"line_end":184,"column_start":30,"column_end":33},"name":"add","qualname":"::base::dimension::DimNameAdd::add","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9672},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9681},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100509,"byte_end":100516,"line_start":185,"line_end":185,"column_start":45,"column_end":52},"name":"DimProd","qualname":"::base::dimension::DimProd","value":"<D1 as DimMul<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9684},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100469,"byte_end":100475,"line_start":185,"line_end":185,"column_start":5,"column_end":11},"name":"DimMul","qualname":"::base::dimension::DimMul","value":"DimMul<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":9686},{"krate":0,"index":9687}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9687},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100494,"byte_end":100497,"line_start":185,"line_end":185,"column_start":30,"column_end":33},"name":"mul","qualname":"::base::dimension::DimMul::mul","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9684},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9701},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100521,"byte_end":100532,"line_start":185,"line_end":185,"column_start":57,"column_end":68},"name":"DimNameProd","qualname":"::base::dimension::DimNameProd","value":"<D1 as DimNameMul<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9704},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100477,"byte_end":100487,"line_start":185,"line_end":185,"column_start":13,"column_end":23},"name":"DimNameMul","qualname":"::base::dimension::DimNameMul","value":"DimNameMul<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":9706},{"krate":0,"index":9707}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9707},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100494,"byte_end":100497,"line_start":185,"line_end":185,"column_start":30,"column_end":33},"name":"mul","qualname":"::base::dimension::DimNameMul::mul","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9713},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100587,"byte_end":100594,"line_start":186,"line_end":186,"column_start":45,"column_end":52},"name":"DimDiff","qualname":"::base::dimension::DimDiff","value":"<D1 as DimSub<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9716},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100547,"byte_end":100553,"line_start":186,"line_end":186,"column_start":5,"column_end":11},"name":"DimSub","qualname":"::base::dimension::DimSub","value":"DimSub<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":9718},{"krate":0,"index":9719}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9719},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100572,"byte_end":100575,"line_start":186,"line_end":186,"column_start":30,"column_end":33},"name":"sub","qualname":"::base::dimension::DimSub::sub","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9716},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9733},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100599,"byte_end":100610,"line_start":186,"line_end":186,"column_start":57,"column_end":68},"name":"DimNameDiff","qualname":"::base::dimension::DimNameDiff","value":"<D1 as DimNameSub<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9736},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100555,"byte_end":100565,"line_start":186,"line_end":186,"column_start":13,"column_end":23},"name":"DimNameSub","qualname":"::base::dimension::DimNameSub","value":"DimNameSub<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":9738},{"krate":0,"index":9739}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9739},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100572,"byte_end":100575,"line_start":186,"line_end":186,"column_start":30,"column_end":33},"name":"sub","qualname":"::base::dimension::DimNameSub::sub","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9736},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9745},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100665,"byte_end":100672,"line_start":187,"line_end":187,"column_start":45,"column_end":52},"name":"DimQuot","qualname":"::base::dimension::DimQuot","value":"<D1 as DimDiv<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9748},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100625,"byte_end":100631,"line_start":187,"line_end":187,"column_start":5,"column_end":11},"name":"DimDiv","qualname":"::base::dimension::DimDiv","value":"DimDiv<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":9750},{"krate":0,"index":9751}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9751},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100650,"byte_end":100653,"line_start":187,"line_end":187,"column_start":30,"column_end":33},"name":"div","qualname":"::base::dimension::DimDiv::div","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9765},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100677,"byte_end":100688,"line_start":187,"line_end":187,"column_start":57,"column_end":68},"name":"DimNameQuot","qualname":"::base::dimension::DimNameQuot","value":"<D1 as DimNameDiv<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9768},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100633,"byte_end":100643,"line_start":187,"line_end":187,"column_start":13,"column_end":23},"name":"DimNameDiv","qualname":"::base::dimension::DimNameDiv","value":"DimNameDiv<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":9770},{"krate":0,"index":9771}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9771},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100650,"byte_end":100653,"line_start":187,"line_end":187,"column_start":30,"column_end":33},"name":"div","qualname":"::base::dimension::DimNameDiv::div","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9768},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9777},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100743,"byte_end":100753,"line_start":188,"line_end":188,"column_start":45,"column_end":55},"name":"DimMinimum","qualname":"::base::dimension::DimMinimum","value":"<D1 as DimMin<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9780},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100703,"byte_end":100709,"line_start":188,"line_end":188,"column_start":5,"column_end":11},"name":"DimMin","qualname":"::base::dimension::DimMin","value":"DimMin<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":9782},{"krate":0,"index":9783}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9783},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100728,"byte_end":100731,"line_start":188,"line_end":188,"column_start":30,"column_end":33},"name":"min","qualname":"::base::dimension::DimMin::min","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9797},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100755,"byte_end":100769,"line_start":188,"line_end":188,"column_start":57,"column_end":71},"name":"DimNameMinimum","qualname":"::base::dimension::DimNameMinimum","value":"<D1 as DimNameMin<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9800},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100711,"byte_end":100721,"line_start":188,"line_end":188,"column_start":13,"column_end":23},"name":"DimNameMin","qualname":"::base::dimension::DimNameMin","value":"DimNameMin<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":9802},{"krate":0,"index":9803}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9803},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100728,"byte_end":100731,"line_start":188,"line_end":188,"column_start":30,"column_end":33},"name":"min","qualname":"::base::dimension::DimNameMin::min","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9800},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9809},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100824,"byte_end":100834,"line_start":189,"line_end":189,"column_start":45,"column_end":55},"name":"DimMaximum","qualname":"::base::dimension::DimMaximum","value":"<D1 as DimMax<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9812},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100784,"byte_end":100790,"line_start":189,"line_end":189,"column_start":5,"column_end":11},"name":"DimMax","qualname":"::base::dimension::DimMax","value":"DimMax<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":9814},{"krate":0,"index":9815}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9815},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100809,"byte_end":100812,"line_start":189,"line_end":189,"column_start":30,"column_end":33},"name":"max","qualname":"::base::dimension::DimMax::max","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9829},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100836,"byte_end":100850,"line_start":189,"line_end":189,"column_start":57,"column_end":71},"name":"DimNameMaximum","qualname":"::base::dimension::DimNameMaximum","value":"<D1 as DimNameMax<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9832},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100792,"byte_end":100802,"line_start":189,"line_end":189,"column_start":13,"column_end":23},"name":"DimNameMax","qualname":"::base::dimension::DimNameMax","value":"DimNameMax<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":9834},{"krate":0,"index":9835}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9835},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100809,"byte_end":100812,"line_start":189,"line_end":189,"column_start":30,"column_end":33},"name":"max","qualname":"::base::dimension::DimNameMax::max","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9832},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":512},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100933,"byte_end":100940,"line_start":193,"line_end":193,"column_start":11,"column_end":18},"name":"DimName","qualname":"::base::dimension::DimName","value":"DimName: Dim","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515}],"decl_id":null,"docs":" Trait implemented exclusively by type-level integers.\n","sig":null,"attributes":[{"value":"/ Trait implemented exclusively by type-level integers.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100865,"byte_end":100922,"line_start":192,"line_end":192,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":513},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100957,"byte_end":100962,"line_start":194,"line_end":194,"column_start":10,"column_end":15},"name":"Value","qualname":"::base::dimension::DimName::Value","value":"type Value: NamedDim<Name = Self>;","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":101059,"byte_end":101063,"line_start":197,"line_end":197,"column_start":8,"column_end":12},"name":"name","qualname":"::base::dimension::DimName::name","value":"fn () -> Self","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":" The name of this dimension, i.e., the singleton `Self`.\n","sig":null,"attributes":[{"value":"/ The name of this dimension, i.e., the singleton `Self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100992,"byte_end":101051,"line_start":196,"line_end":196,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":101183,"byte_end":101186,"line_start":202,"line_end":202,"column_start":8,"column_end":11},"name":"dim","qualname":"::base::dimension::DimName::dim","value":"fn () -> usize","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":" The value of this dimension.\n","sig":null,"attributes":[{"value":"/ The value of this dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":101129,"byte_end":101161,"line_start":200,"line_end":200,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":101166,"byte_end":101175,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":516},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":101251,"byte_end":101259,"line_start":207,"line_end":207,"column_start":11,"column_end":19},"name":"NamedDim","qualname":"::base::dimension::NamedDim","value":"NamedDim: Sized + Any + Unsigned","parent":null,"children":[{"krate":0,"index":517}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":517},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":101295,"byte_end":101299,"line_start":208,"line_end":208,"column_start":10,"column_end":14},"name":"Name","qualname":"::base::dimension::NamedDim::Name","value":"type Name: DimName<Value = Self>;","parent":{"krate":0,"index":516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9841},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":101510,"byte_end":101512,"line_start":214,"line_end":214,"column_start":12,"column_end":14},"name":"U1","qualname":"::base::dimension::U1","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension with a value of `1`.\n","sig":null,"attributes":[{"value":"/ A type level dimension with a value of `1`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":101327,"byte_end":101374,"line_start":211,"line_end":211,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":11127},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103073,"byte_end":103075,"line_start":291,"line_end":291,"column_start":5,"column_end":7},"name":"U0","qualname":"::base::dimension::U0","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11143},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103085,"byte_end":103087,"line_start":291,"line_end":291,"column_start":17,"column_end":19},"name":"U2","qualname":"::base::dimension::U2","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11159},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103089,"byte_end":103091,"line_start":291,"line_end":291,"column_start":21,"column_end":23},"name":"U3","qualname":"::base::dimension::U3","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11175},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103093,"byte_end":103095,"line_start":291,"line_end":291,"column_start":25,"column_end":27},"name":"U4","qualname":"::base::dimension::U4","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11191},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103097,"byte_end":103099,"line_start":291,"line_end":291,"column_start":29,"column_end":31},"name":"U5","qualname":"::base::dimension::U5","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11207},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103101,"byte_end":103103,"line_start":291,"line_end":291,"column_start":33,"column_end":35},"name":"U6","qualname":"::base::dimension::U6","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11223},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103105,"byte_end":103107,"line_start":291,"line_end":291,"column_start":37,"column_end":39},"name":"U7","qualname":"::base::dimension::U7","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11239},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103109,"byte_end":103111,"line_start":291,"line_end":291,"column_start":41,"column_end":43},"name":"U8","qualname":"::base::dimension::U8","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11255},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103113,"byte_end":103115,"line_start":291,"line_end":291,"column_start":45,"column_end":47},"name":"U9","qualname":"::base::dimension::U9","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11271},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103117,"byte_end":103120,"line_start":291,"line_end":291,"column_start":49,"column_end":52},"name":"U10","qualname":"::base::dimension::U10","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11287},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103122,"byte_end":103125,"line_start":291,"line_end":291,"column_start":54,"column_end":57},"name":"U11","qualname":"::base::dimension::U11","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11303},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103127,"byte_end":103130,"line_start":291,"line_end":291,"column_start":59,"column_end":62},"name":"U12","qualname":"::base::dimension::U12","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11319},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103132,"byte_end":103135,"line_start":291,"line_end":291,"column_start":64,"column_end":67},"name":"U13","qualname":"::base::dimension::U13","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11335},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103137,"byte_end":103140,"line_start":291,"line_end":291,"column_start":69,"column_end":72},"name":"U14","qualname":"::base::dimension::U14","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11351},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103142,"byte_end":103145,"line_start":291,"line_end":291,"column_start":74,"column_end":77},"name":"U15","qualname":"::base::dimension::U15","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11367},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103147,"byte_end":103150,"line_start":291,"line_end":291,"column_start":79,"column_end":82},"name":"U16","qualname":"::base::dimension::U16","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11383},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103152,"byte_end":103155,"line_start":291,"line_end":291,"column_start":84,"column_end":87},"name":"U17","qualname":"::base::dimension::U17","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11399},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103157,"byte_end":103160,"line_start":291,"line_end":291,"column_start":89,"column_end":92},"name":"U18","qualname":"::base::dimension::U18","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11415},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103166,"byte_end":103169,"line_start":292,"line_end":292,"column_start":5,"column_end":8},"name":"U19","qualname":"::base::dimension::U19","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11431},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103171,"byte_end":103174,"line_start":292,"line_end":292,"column_start":10,"column_end":13},"name":"U20","qualname":"::base::dimension::U20","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11447},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103176,"byte_end":103179,"line_start":292,"line_end":292,"column_start":15,"column_end":18},"name":"U21","qualname":"::base::dimension::U21","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11463},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103181,"byte_end":103184,"line_start":292,"line_end":292,"column_start":20,"column_end":23},"name":"U22","qualname":"::base::dimension::U22","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11479},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103186,"byte_end":103189,"line_start":292,"line_end":292,"column_start":25,"column_end":28},"name":"U23","qualname":"::base::dimension::U23","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11495},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103191,"byte_end":103194,"line_start":292,"line_end":292,"column_start":30,"column_end":33},"name":"U24","qualname":"::base::dimension::U24","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11511},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103196,"byte_end":103199,"line_start":292,"line_end":292,"column_start":35,"column_end":38},"name":"U25","qualname":"::base::dimension::U25","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11527},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103201,"byte_end":103204,"line_start":292,"line_end":292,"column_start":40,"column_end":43},"name":"U26","qualname":"::base::dimension::U26","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11543},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103206,"byte_end":103209,"line_start":292,"line_end":292,"column_start":45,"column_end":48},"name":"U27","qualname":"::base::dimension::U27","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11559},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103211,"byte_end":103214,"line_start":292,"line_end":292,"column_start":50,"column_end":53},"name":"U28","qualname":"::base::dimension::U28","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11575},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103216,"byte_end":103219,"line_start":292,"line_end":292,"column_start":55,"column_end":58},"name":"U29","qualname":"::base::dimension::U29","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11591},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103221,"byte_end":103224,"line_start":292,"line_end":292,"column_start":60,"column_end":63},"name":"U30","qualname":"::base::dimension::U30","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11607},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103226,"byte_end":103229,"line_start":292,"line_end":292,"column_start":65,"column_end":68},"name":"U31","qualname":"::base::dimension::U31","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11623},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103231,"byte_end":103234,"line_start":292,"line_end":292,"column_start":70,"column_end":73},"name":"U32","qualname":"::base::dimension::U32","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11639},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103236,"byte_end":103239,"line_start":292,"line_end":292,"column_start":75,"column_end":78},"name":"U33","qualname":"::base::dimension::U33","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11655},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103241,"byte_end":103244,"line_start":292,"line_end":292,"column_start":80,"column_end":83},"name":"U34","qualname":"::base::dimension::U34","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11671},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103246,"byte_end":103249,"line_start":292,"line_end":292,"column_start":85,"column_end":88},"name":"U35","qualname":"::base::dimension::U35","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11687},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103251,"byte_end":103254,"line_start":292,"line_end":292,"column_start":90,"column_end":93},"name":"U36","qualname":"::base::dimension::U36","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11703},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103256,"byte_end":103259,"line_start":292,"line_end":292,"column_start":95,"column_end":98},"name":"U37","qualname":"::base::dimension::U37","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11719},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103265,"byte_end":103268,"line_start":293,"line_end":293,"column_start":5,"column_end":8},"name":"U38","qualname":"::base::dimension::U38","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11735},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103270,"byte_end":103273,"line_start":293,"line_end":293,"column_start":10,"column_end":13},"name":"U39","qualname":"::base::dimension::U39","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11751},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103275,"byte_end":103278,"line_start":293,"line_end":293,"column_start":15,"column_end":18},"name":"U40","qualname":"::base::dimension::U40","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11767},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103280,"byte_end":103283,"line_start":293,"line_end":293,"column_start":20,"column_end":23},"name":"U41","qualname":"::base::dimension::U41","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11783},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103285,"byte_end":103288,"line_start":293,"line_end":293,"column_start":25,"column_end":28},"name":"U42","qualname":"::base::dimension::U42","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11799},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103290,"byte_end":103293,"line_start":293,"line_end":293,"column_start":30,"column_end":33},"name":"U43","qualname":"::base::dimension::U43","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11815},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103295,"byte_end":103298,"line_start":293,"line_end":293,"column_start":35,"column_end":38},"name":"U44","qualname":"::base::dimension::U44","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11831},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103300,"byte_end":103303,"line_start":293,"line_end":293,"column_start":40,"column_end":43},"name":"U45","qualname":"::base::dimension::U45","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11847},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103305,"byte_end":103308,"line_start":293,"line_end":293,"column_start":45,"column_end":48},"name":"U46","qualname":"::base::dimension::U46","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11863},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103310,"byte_end":103313,"line_start":293,"line_end":293,"column_start":50,"column_end":53},"name":"U47","qualname":"::base::dimension::U47","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11879},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103315,"byte_end":103318,"line_start":293,"line_end":293,"column_start":55,"column_end":58},"name":"U48","qualname":"::base::dimension::U48","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11895},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103320,"byte_end":103323,"line_start":293,"line_end":293,"column_start":60,"column_end":63},"name":"U49","qualname":"::base::dimension::U49","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11911},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103325,"byte_end":103328,"line_start":293,"line_end":293,"column_start":65,"column_end":68},"name":"U50","qualname":"::base::dimension::U50","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11927},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103330,"byte_end":103333,"line_start":293,"line_end":293,"column_start":70,"column_end":73},"name":"U51","qualname":"::base::dimension::U51","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11943},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103335,"byte_end":103338,"line_start":293,"line_end":293,"column_start":75,"column_end":78},"name":"U52","qualname":"::base::dimension::U52","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11959},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103340,"byte_end":103343,"line_start":293,"line_end":293,"column_start":80,"column_end":83},"name":"U53","qualname":"::base::dimension::U53","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11975},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103345,"byte_end":103348,"line_start":293,"line_end":293,"column_start":85,"column_end":88},"name":"U54","qualname":"::base::dimension::U54","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11991},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103350,"byte_end":103353,"line_start":293,"line_end":293,"column_start":90,"column_end":93},"name":"U55","qualname":"::base::dimension::U55","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12007},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103355,"byte_end":103358,"line_start":293,"line_end":293,"column_start":95,"column_end":98},"name":"U56","qualname":"::base::dimension::U56","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12023},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103364,"byte_end":103367,"line_start":294,"line_end":294,"column_start":5,"column_end":8},"name":"U57","qualname":"::base::dimension::U57","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12039},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103369,"byte_end":103372,"line_start":294,"line_end":294,"column_start":10,"column_end":13},"name":"U58","qualname":"::base::dimension::U58","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12055},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103374,"byte_end":103377,"line_start":294,"line_end":294,"column_start":15,"column_end":18},"name":"U59","qualname":"::base::dimension::U59","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12071},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103379,"byte_end":103382,"line_start":294,"line_end":294,"column_start":20,"column_end":23},"name":"U60","qualname":"::base::dimension::U60","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12087},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103384,"byte_end":103387,"line_start":294,"line_end":294,"column_start":25,"column_end":28},"name":"U61","qualname":"::base::dimension::U61","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12103},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103389,"byte_end":103392,"line_start":294,"line_end":294,"column_start":30,"column_end":33},"name":"U62","qualname":"::base::dimension::U62","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12119},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103394,"byte_end":103397,"line_start":294,"line_end":294,"column_start":35,"column_end":38},"name":"U63","qualname":"::base::dimension::U63","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12135},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103399,"byte_end":103402,"line_start":294,"line_end":294,"column_start":40,"column_end":43},"name":"U64","qualname":"::base::dimension::U64","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12151},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103404,"byte_end":103407,"line_start":294,"line_end":294,"column_start":45,"column_end":48},"name":"U65","qualname":"::base::dimension::U65","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12167},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103409,"byte_end":103412,"line_start":294,"line_end":294,"column_start":50,"column_end":53},"name":"U66","qualname":"::base::dimension::U66","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12183},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103414,"byte_end":103417,"line_start":294,"line_end":294,"column_start":55,"column_end":58},"name":"U67","qualname":"::base::dimension::U67","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12199},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103419,"byte_end":103422,"line_start":294,"line_end":294,"column_start":60,"column_end":63},"name":"U68","qualname":"::base::dimension::U68","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12215},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103424,"byte_end":103427,"line_start":294,"line_end":294,"column_start":65,"column_end":68},"name":"U69","qualname":"::base::dimension::U69","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12231},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103429,"byte_end":103432,"line_start":294,"line_end":294,"column_start":70,"column_end":73},"name":"U70","qualname":"::base::dimension::U70","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12247},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103434,"byte_end":103437,"line_start":294,"line_end":294,"column_start":75,"column_end":78},"name":"U71","qualname":"::base::dimension::U71","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12263},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103439,"byte_end":103442,"line_start":294,"line_end":294,"column_start":80,"column_end":83},"name":"U72","qualname":"::base::dimension::U72","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12279},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103444,"byte_end":103447,"line_start":294,"line_end":294,"column_start":85,"column_end":88},"name":"U73","qualname":"::base::dimension::U73","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12295},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103449,"byte_end":103452,"line_start":294,"line_end":294,"column_start":90,"column_end":93},"name":"U74","qualname":"::base::dimension::U74","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12311},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103454,"byte_end":103457,"line_start":294,"line_end":294,"column_start":95,"column_end":98},"name":"U75","qualname":"::base::dimension::U75","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12327},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103463,"byte_end":103466,"line_start":295,"line_end":295,"column_start":5,"column_end":8},"name":"U76","qualname":"::base::dimension::U76","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12343},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103468,"byte_end":103471,"line_start":295,"line_end":295,"column_start":10,"column_end":13},"name":"U77","qualname":"::base::dimension::U77","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12359},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103473,"byte_end":103476,"line_start":295,"line_end":295,"column_start":15,"column_end":18},"name":"U78","qualname":"::base::dimension::U78","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12375},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103478,"byte_end":103481,"line_start":295,"line_end":295,"column_start":20,"column_end":23},"name":"U79","qualname":"::base::dimension::U79","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12391},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103483,"byte_end":103486,"line_start":295,"line_end":295,"column_start":25,"column_end":28},"name":"U80","qualname":"::base::dimension::U80","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12407},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103488,"byte_end":103491,"line_start":295,"line_end":295,"column_start":30,"column_end":33},"name":"U81","qualname":"::base::dimension::U81","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12423},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103493,"byte_end":103496,"line_start":295,"line_end":295,"column_start":35,"column_end":38},"name":"U82","qualname":"::base::dimension::U82","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12439},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103498,"byte_end":103501,"line_start":295,"line_end":295,"column_start":40,"column_end":43},"name":"U83","qualname":"::base::dimension::U83","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12455},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103503,"byte_end":103506,"line_start":295,"line_end":295,"column_start":45,"column_end":48},"name":"U84","qualname":"::base::dimension::U84","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12471},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103508,"byte_end":103511,"line_start":295,"line_end":295,"column_start":50,"column_end":53},"name":"U85","qualname":"::base::dimension::U85","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12487},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103513,"byte_end":103516,"line_start":295,"line_end":295,"column_start":55,"column_end":58},"name":"U86","qualname":"::base::dimension::U86","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12503},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103518,"byte_end":103521,"line_start":295,"line_end":295,"column_start":60,"column_end":63},"name":"U87","qualname":"::base::dimension::U87","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12519},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103523,"byte_end":103526,"line_start":295,"line_end":295,"column_start":65,"column_end":68},"name":"U88","qualname":"::base::dimension::U88","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12535},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103528,"byte_end":103531,"line_start":295,"line_end":295,"column_start":70,"column_end":73},"name":"U89","qualname":"::base::dimension::U89","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12551},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103533,"byte_end":103536,"line_start":295,"line_end":295,"column_start":75,"column_end":78},"name":"U90","qualname":"::base::dimension::U90","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12567},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103538,"byte_end":103541,"line_start":295,"line_end":295,"column_start":80,"column_end":83},"name":"U91","qualname":"::base::dimension::U91","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12583},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103543,"byte_end":103546,"line_start":295,"line_end":295,"column_start":85,"column_end":88},"name":"U92","qualname":"::base::dimension::U92","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12599},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103548,"byte_end":103551,"line_start":295,"line_end":295,"column_start":90,"column_end":93},"name":"U93","qualname":"::base::dimension::U93","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12615},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103553,"byte_end":103556,"line_start":295,"line_end":295,"column_start":95,"column_end":98},"name":"U94","qualname":"::base::dimension::U94","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12631},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103562,"byte_end":103565,"line_start":296,"line_end":296,"column_start":5,"column_end":8},"name":"U95","qualname":"::base::dimension::U95","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12647},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103567,"byte_end":103570,"line_start":296,"line_end":296,"column_start":10,"column_end":13},"name":"U96","qualname":"::base::dimension::U96","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12663},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103572,"byte_end":103575,"line_start":296,"line_end":296,"column_start":15,"column_end":18},"name":"U97","qualname":"::base::dimension::U97","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12679},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103577,"byte_end":103580,"line_start":296,"line_end":296,"column_start":20,"column_end":23},"name":"U98","qualname":"::base::dimension::U98","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12695},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103582,"byte_end":103585,"line_start":296,"line_end":296,"column_start":25,"column_end":28},"name":"U99","qualname":"::base::dimension::U99","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12711},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103587,"byte_end":103591,"line_start":296,"line_end":296,"column_start":30,"column_end":34},"name":"U100","qualname":"::base::dimension::U100","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12727},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103593,"byte_end":103597,"line_start":296,"line_end":296,"column_start":36,"column_end":40},"name":"U101","qualname":"::base::dimension::U101","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12743},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103599,"byte_end":103603,"line_start":296,"line_end":296,"column_start":42,"column_end":46},"name":"U102","qualname":"::base::dimension::U102","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12759},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103605,"byte_end":103609,"line_start":296,"line_end":296,"column_start":48,"column_end":52},"name":"U103","qualname":"::base::dimension::U103","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12775},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103611,"byte_end":103615,"line_start":296,"line_end":296,"column_start":54,"column_end":58},"name":"U104","qualname":"::base::dimension::U104","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12791},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103617,"byte_end":103621,"line_start":296,"line_end":296,"column_start":60,"column_end":64},"name":"U105","qualname":"::base::dimension::U105","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12807},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103623,"byte_end":103627,"line_start":296,"line_end":296,"column_start":66,"column_end":70},"name":"U106","qualname":"::base::dimension::U106","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12823},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103629,"byte_end":103633,"line_start":296,"line_end":296,"column_start":72,"column_end":76},"name":"U107","qualname":"::base::dimension::U107","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12839},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103635,"byte_end":103639,"line_start":296,"line_end":296,"column_start":78,"column_end":82},"name":"U108","qualname":"::base::dimension::U108","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12855},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103641,"byte_end":103645,"line_start":296,"line_end":296,"column_start":84,"column_end":88},"name":"U109","qualname":"::base::dimension::U109","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12871},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103647,"byte_end":103651,"line_start":296,"line_end":296,"column_start":90,"column_end":94},"name":"U110","qualname":"::base::dimension::U110","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12887},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103657,"byte_end":103661,"line_start":297,"line_end":297,"column_start":5,"column_end":9},"name":"U111","qualname":"::base::dimension::U111","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12903},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103663,"byte_end":103667,"line_start":297,"line_end":297,"column_start":11,"column_end":15},"name":"U112","qualname":"::base::dimension::U112","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12919},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103669,"byte_end":103673,"line_start":297,"line_end":297,"column_start":17,"column_end":21},"name":"U113","qualname":"::base::dimension::U113","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12935},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103675,"byte_end":103679,"line_start":297,"line_end":297,"column_start":23,"column_end":27},"name":"U114","qualname":"::base::dimension::U114","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12951},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103681,"byte_end":103685,"line_start":297,"line_end":297,"column_start":29,"column_end":33},"name":"U115","qualname":"::base::dimension::U115","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12967},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103687,"byte_end":103691,"line_start":297,"line_end":297,"column_start":35,"column_end":39},"name":"U116","qualname":"::base::dimension::U116","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12983},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103693,"byte_end":103697,"line_start":297,"line_end":297,"column_start":41,"column_end":45},"name":"U117","qualname":"::base::dimension::U117","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12999},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103699,"byte_end":103703,"line_start":297,"line_end":297,"column_start":47,"column_end":51},"name":"U118","qualname":"::base::dimension::U118","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13015},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103705,"byte_end":103709,"line_start":297,"line_end":297,"column_start":53,"column_end":57},"name":"U119","qualname":"::base::dimension::U119","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13031},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103711,"byte_end":103715,"line_start":297,"line_end":297,"column_start":59,"column_end":63},"name":"U120","qualname":"::base::dimension::U120","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13047},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103717,"byte_end":103721,"line_start":297,"line_end":297,"column_start":65,"column_end":69},"name":"U121","qualname":"::base::dimension::U121","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13063},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103723,"byte_end":103727,"line_start":297,"line_end":297,"column_start":71,"column_end":75},"name":"U122","qualname":"::base::dimension::U122","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13079},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103729,"byte_end":103733,"line_start":297,"line_end":297,"column_start":77,"column_end":81},"name":"U123","qualname":"::base::dimension::U123","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13095},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103735,"byte_end":103739,"line_start":297,"line_end":297,"column_start":83,"column_end":87},"name":"U124","qualname":"::base::dimension::U124","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13111},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103741,"byte_end":103745,"line_start":297,"line_end":297,"column_start":89,"column_end":93},"name":"U125","qualname":"::base::dimension::U125","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13127},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103747,"byte_end":103751,"line_start":297,"line_end":297,"column_start":95,"column_end":99},"name":"U126","qualname":"::base::dimension::U126","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13143},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":103757,"byte_end":103761,"line_start":298,"line_end":298,"column_start":5,"column_end":9},"name":"U127","qualname":"::base::dimension::U127","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":102038,"byte_end":102065,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":584},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::base::iter","value":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":593},{"krate":0,"index":598},{"krate":0,"index":13159},{"krate":0,"index":13171},{"krate":0,"index":13178},{"krate":0,"index":13188},{"krate":0,"index":13195},{"krate":0,"index":13207},{"krate":0,"index":13214},{"krate":0,"index":13224},{"krate":0,"index":13231},{"krate":0,"index":13239},{"krate":0,"index":599},{"krate":0,"index":606},{"krate":0,"index":616},{"krate":0,"index":623},{"krate":0,"index":632},{"krate":0,"index":640},{"krate":0,"index":650},{"krate":0,"index":13246},{"krate":0,"index":13254},{"krate":0,"index":657},{"krate":0,"index":664},{"krate":0,"index":674},{"krate":0,"index":681},{"krate":0,"index":690},{"krate":0,"index":698},{"krate":0,"index":708}],"decl_id":null,"docs":" Matrix iterators.\n","sig":null,"attributes":[{"value":"! Matrix iterators.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":107387,"byte_end":107408,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":13159},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":112343,"byte_end":112353,"line_start":125,"line_end":125,"column_start":18,"column_end":28},"name":"MatrixIter","qualname":"::base::iter::MatrixIter","value":"MatrixIter {  }","parent":null,"children":[{"krate":0,"index":13165},{"krate":0,"index":13166},{"krate":0,"index":13167},{"krate":0,"index":13168},{"krate":0,"index":13169},{"krate":0,"index":13170}],"decl_id":null,"docs":" An iterator through a dense matrix with arbitrary strides matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through a dense matrix with arbitrary strides matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":107732,"byte_end":107801,"line_start":12,"line_end":12,"column_start":9,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":13195},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":112415,"byte_end":112428,"line_start":126,"line_end":126,"column_start":18,"column_end":31},"name":"MatrixIterMut","qualname":"::base::iter::MatrixIterMut","value":"MatrixIterMut {  }","parent":null,"children":[{"krate":0,"index":13201},{"krate":0,"index":13202},{"krate":0,"index":13203},{"krate":0,"index":13204},{"krate":0,"index":13205},{"krate":0,"index":13206}],"decl_id":null,"docs":" An iterator through a dense matrix with arbitrary strides matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through a dense matrix with arbitrary strides matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":107732,"byte_end":107801,"line_start":12,"line_end":12,"column_start":9,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":13231},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":112592,"byte_end":112599,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"RowIter","qualname":"::base::iter::RowIter","value":"RowIter {  }","parent":null,"children":[{"krate":0,"index":13237},{"krate":0,"index":13238}],"decl_id":null,"docs":" An iterator through the rows of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through the rows of a matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":112535,"byte_end":112580,"line_start":134,"line_end":134,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":623},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":113859,"byte_end":113869,"line_start":184,"line_end":184,"column_start":12,"column_end":22},"name":"RowIterMut","qualname":"::base::iter::RowIterMut","value":"RowIterMut {  }","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631}],"decl_id":null,"docs":" An iterator through the mutable rows of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through the mutable rows of a matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":113794,"byte_end":113847,"line_start":183,"line_end":183,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":13246},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":115372,"byte_end":115382,"line_start":247,"line_end":247,"column_start":12,"column_end":22},"name":"ColumnIter","qualname":"::base::iter::ColumnIter","value":"ColumnIter {  }","parent":null,"children":[{"krate":0,"index":13252},{"krate":0,"index":13253}],"decl_id":null,"docs":" An iterator through the columns of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through the columns of a matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":115312,"byte_end":115360,"line_start":246,"line_end":246,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":681},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":116664,"byte_end":116677,"line_start":298,"line_end":298,"column_start":12,"column_end":25},"name":"ColumnIterMut","qualname":"::base::iter::ColumnIterMut","value":"ColumnIterMut {  }","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689}],"decl_id":null,"docs":" An iterator through the mutable columns of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through the mutable columns of a matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":116596,"byte_end":116652,"line_start":297,"line_end":297,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":121012,"byte_end":121019,"line_start":121,"line_end":121,"column_start":12,"column_end":19},"name":"neg_mut","qualname":"<Matrix<N, R, C, S>>::neg_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Negates `self` in-place.\n","sig":null,"attributes":[{"value":"/ Negates `self` in-place.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":120958,"byte_end":120986,"line_start":119,"line_end":119,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":120991,"byte_end":121000,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":13281},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":132360,"byte_end":132366,"line_start":373,"line_end":373,"column_start":27,"column_end":33},"name":"add_to","qualname":"<Matrix<N, R1, C1, SA>>::add_to","value":"fn <R2, C2, SB, R3, C3, SC> (&self, rhs: &Matrix<N, R2, C2, SB>, out: &mut Matrix<N, R3, C3, SC>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":126814,"byte_end":126899,"line_start":255,"line_end":255,"column_start":13,"column_end":98}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":126912,"byte_end":126921,"line_start":256,"line_end":256,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13371},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":132590,"byte_end":132596,"line_start":376,"line_end":376,"column_start":27,"column_end":33},"name":"sub_to","qualname":"<Matrix<N, R1, C1, SA>>::sub_to","value":"fn <R2, C2, SB, R3, C3, SC> (&self, rhs: &Matrix<N, R2, C2, SB>, out: &mut Matrix<N, R3, C3, SC>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":126814,"byte_end":126899,"line_start":255,"line_end":255,"column_start":13,"column_end":98}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":126912,"byte_end":126921,"line_start":256,"line_end":256,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":142234,"byte_end":142240,"line_start":682,"line_end":682,"column_start":12,"column_end":18},"name":"tr_mul","qualname":"<Matrix<N, R1, C1, SA>>::tr_mul","value":"fn <R2, C2, SB> (&self, rhs: &Matrix<N, R2, C2, SB>) -> MatrixMN<N, C1, C2>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self.transpose() * rhs`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self.transpose() * rhs`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":142165,"byte_end":142208,"line_start":680,"line_end":680,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":142213,"byte_end":142222,"line_start":681,"line_end":681,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":142720,"byte_end":142726,"line_start":697,"line_end":697,"column_start":12,"column_end":18},"name":"ad_mul","qualname":"<Matrix<N, R1, C1, SA>>::ad_mul","value":"fn <R2, C2, SB> (&self, rhs: &Matrix<N, R2, C2, SB>) -> MatrixMN<N, C1, C2>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self.adjoint() * rhs`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self.adjoint() * rhs`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":142653,"byte_end":142694,"line_start":695,"line_end":695,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":142699,"byte_end":142708,"line_start":696,"line_end":696,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":144416,"byte_end":144425,"line_start":749,"line_end":749,"column_start":12,"column_end":21},"name":"tr_mul_to","qualname":"<Matrix<N, R1, C1, SA>>::tr_mul_to","value":"fn <R2, C2, SB, R3, C3, SC> (&self, rhs: &Matrix<N, R2, C2, SB>, out: &mut Matrix<N, R3, C3, SC>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self.transpose() * rhs` but stores the result into `out` to avoid\n allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self.transpose() * rhs` but stores the result into `out` to avoid","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":144285,"byte_end":144369,"line_start":746,"line_end":746,"column_start":5,"column_end":89}},{"value":"/ allocations.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":144374,"byte_end":144390,"line_start":747,"line_end":747,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":144395,"byte_end":144404,"line_start":748,"line_end":748,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":144922,"byte_end":144931,"line_start":764,"line_end":764,"column_start":12,"column_end":21},"name":"ad_mul_to","qualname":"<Matrix<N, R1, C1, SA>>::ad_mul_to","value":"fn <R2, C2, SB, R3, C3, SC> (&self, rhs: &Matrix<N, R2, C2, SB>, out: &mut Matrix<N, R3, C3, SC>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self.adjoint() * rhs` but stores the result into `out` to avoid\n allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self.adjoint() * rhs` but stores the result into `out` to avoid","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":144793,"byte_end":144875,"line_start":761,"line_end":761,"column_start":5,"column_end":87}},{"value":"/ allocations.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":144880,"byte_end":144896,"line_start":762,"line_end":762,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":144901,"byte_end":144910,"line_start":763,"line_end":763,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":145440,"byte_end":145446,"line_start":779,"line_end":779,"column_start":12,"column_end":18},"name":"mul_to","qualname":"<Matrix<N, R1, C1, SA>>::mul_to","value":"fn <R2, C2, SB, R3, C3, SC> (&self, rhs: &Matrix<N, R2, C2, SB>, out: &mut Matrix<N, R3, C3, SC>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self * rhs` but stores the result into `out` to avoid allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self * rhs` but stores the result into `out` to avoid allocations.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":145329,"byte_end":145414,"line_start":777,"line_end":777,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":145419,"byte_end":145428,"line_start":778,"line_end":778,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":145987,"byte_end":145996,"line_start":795,"line_end":795,"column_start":12,"column_end":21},"name":"kronecker","qualname":"<Matrix<N, R1, C1, SA>>::kronecker","value":"fn <R2, C2, SB> (&self, rhs: &Matrix<N, R2, C2, SB>) -> MatrixMN<N, DimProd<R1, R2>, DimProd<C1, C2>>","parent":null,"children":[],"decl_id":null,"docs":" The kronecker product of two matrices (aka. tensor product of the corresponding linear\n maps).\n","sig":null,"attributes":[{"value":"/ The kronecker product of two matrices (aka. tensor product of the corresponding linear","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":145870,"byte_end":145960,"line_start":793,"line_end":793,"column_start":5,"column_end":95}},{"value":"/ maps).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":145965,"byte_end":145975,"line_start":794,"line_end":794,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":147474,"byte_end":147484,"line_start":840,"line_end":840,"column_start":12,"column_end":22},"name":"add_scalar","qualname":"<Matrix<N, R, C, S>>::add_scalar","value":"fn (&self, rhs: N) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Adds a scalar to `self`.\n","sig":null,"attributes":[{"value":"/ Adds a scalar to `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":147362,"byte_end":147390,"line_start":837,"line_end":837,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":147395,"byte_end":147404,"line_start":838,"line_end":838,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use add_scalar_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":147409,"byte_end":147462,"line_start":839,"line_end":839,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":147744,"byte_end":147758,"line_start":851,"line_end":851,"column_start":12,"column_end":26},"name":"add_scalar_mut","qualname":"<Matrix<N, R, C, S>>::add_scalar_mut","value":"fn (&mut self, rhs: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a scalar to `self` in-place.\n","sig":null,"attributes":[{"value":"/ Adds a scalar to `self` in-place.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":147681,"byte_end":147718,"line_start":849,"line_end":849,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":147723,"byte_end":147732,"line_start":850,"line_end":850,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":148914,"byte_end":148918,"line_start":890,"line_end":890,"column_start":12,"column_end":16},"name":"amax","qualname":"<Matrix<N, R, C, S>>::amax","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Returns the absolute value of the component with the largest absolute value.\n # Example\n ```\n # use nalgebra::Vector3;\n assert_eq!(Vector3::new(-1.0, 2.0, 3.0).amax(), 3.0);\n assert_eq!(Vector3::new(-1.0, -2.0, -3.0).amax(), 3.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the absolute value of the component with the largest absolute value.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":148607,"byte_end":148687,"line_start":882,"line_end":882,"column_start":5,"column_end":85}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":148692,"byte_end":148705,"line_start":883,"line_end":883,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":148710,"byte_end":148717,"line_start":884,"line_end":884,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":148722,"byte_end":148750,"line_start":885,"line_end":885,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Vector3::new(-1.0, 2.0, 3.0).amax(), 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":148755,"byte_end":148812,"line_start":886,"line_end":886,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(Vector3::new(-1.0, -2.0, -3.0).amax(), 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":148817,"byte_end":148876,"line_start":887,"line_end":887,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":148881,"byte_end":148888,"line_start":888,"line_end":888,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":148893,"byte_end":148902,"line_start":889,"line_end":889,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":149482,"byte_end":149487,"line_start":910,"line_end":910,"column_start":12,"column_end":17},"name":"camax","qualname":"<Matrix<N, R, C, S>>::camax","value":"fn (&self) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" Returns the the 1-norm of the complex component with the largest 1-norm.\n # Example\n ```\n # use nalgebra::{Vector3, Complex};\n assert_eq!(Vector3::new(\n     Complex::new(-3.0, -2.0),\n     Complex::new(1.0, 2.0),\n     Complex::new(1.0, 3.0)).camax(), 5.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the the 1-norm of the complex component with the largest 1-norm.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":149136,"byte_end":149212,"line_start":900,"line_end":900,"column_start":5,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":149217,"byte_end":149230,"line_start":901,"line_end":901,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":149235,"byte_end":149242,"line_start":902,"line_end":902,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Complex};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":149247,"byte_end":149286,"line_start":903,"line_end":903,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(Vector3::new(","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":149291,"byte_end":149319,"line_start":904,"line_end":904,"column_start":5,"column_end":33}},{"value":"/     Complex::new(-3.0, -2.0),","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":149324,"byte_end":149357,"line_start":905,"line_end":905,"column_start":5,"column_end":38}},{"value":"/     Complex::new(1.0, 2.0),","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":149362,"byte_end":149393,"line_start":906,"line_end":906,"column_start":5,"column_end":36}},{"value":"/     Complex::new(1.0, 3.0)).camax(), 5.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":149398,"byte_end":149444,"line_start":907,"line_end":907,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":149449,"byte_end":149456,"line_start":908,"line_end":908,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":149461,"byte_end":149470,"line_start":909,"line_end":909,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":150036,"byte_end":150039,"line_start":929,"line_end":929,"column_start":12,"column_end":15},"name":"max","qualname":"<Matrix<N, R, C, S>>::max","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Returns the component with the largest value.\n # Example\n ```\n # use nalgebra::Vector3;\n assert_eq!(Vector3::new(-1.0, 2.0, 3.0).max(), 3.0);\n assert_eq!(Vector3::new(-1.0, -2.0, -3.0).max(), -1.0);\n assert_eq!(Vector3::new(5u32, 2, 3).max(), 5);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the component with the largest value.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":149706,"byte_end":149755,"line_start":920,"line_end":920,"column_start":5,"column_end":54}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":149760,"byte_end":149773,"line_start":921,"line_end":921,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":149778,"byte_end":149785,"line_start":922,"line_end":922,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":149790,"byte_end":149818,"line_start":923,"line_end":923,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Vector3::new(-1.0, 2.0, 3.0).max(), 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":149823,"byte_end":149879,"line_start":924,"line_end":924,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(Vector3::new(-1.0, -2.0, -3.0).max(), -1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":149884,"byte_end":149943,"line_start":925,"line_end":925,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(Vector3::new(5u32, 2, 3).max(), 5);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":149948,"byte_end":149998,"line_start":926,"line_end":926,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":150003,"byte_end":150010,"line_start":927,"line_end":927,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":150015,"byte_end":150024,"line_start":928,"line_end":928,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":150572,"byte_end":150576,"line_start":947,"line_end":947,"column_start":12,"column_end":16},"name":"amin","qualname":"<Matrix<N, R, C, S>>::amin","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Returns the absolute value of the component with the smallest absolute value.\n # Example\n ```\n # use nalgebra::Vector3;\n assert_eq!(Vector3::new(-1.0, 2.0, -3.0).amin(), 1.0);\n assert_eq!(Vector3::new(10.0, 2.0, 30.0).amin(), 2.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the absolute value of the component with the smallest absolute value.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":150264,"byte_end":150345,"line_start":939,"line_end":939,"column_start":5,"column_end":86}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":150350,"byte_end":150363,"line_start":940,"line_end":940,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":150368,"byte_end":150375,"line_start":941,"line_end":941,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":150380,"byte_end":150408,"line_start":942,"line_end":942,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Vector3::new(-1.0, 2.0, -3.0).amin(), 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":150413,"byte_end":150471,"line_start":943,"line_end":943,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Vector3::new(10.0, 2.0, 30.0).amin(), 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":150476,"byte_end":150534,"line_start":944,"line_end":944,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":150539,"byte_end":150546,"line_start":945,"line_end":945,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":150551,"byte_end":150560,"line_start":946,"line_end":946,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":151151,"byte_end":151156,"line_start":967,"line_end":967,"column_start":12,"column_end":17},"name":"camin","qualname":"<Matrix<N, R, C, S>>::camin","value":"fn (&self) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" Returns the the 1-norm of the complex component with the smallest 1-norm.\n # Example\n ```\n # use nalgebra::{Vector3, Complex};\n assert_eq!(Vector3::new(\n     Complex::new(-3.0, -2.0),\n     Complex::new(1.0, 2.0),\n     Complex::new(1.0, 3.0)).camin(), 3.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the the 1-norm of the complex component with the smallest 1-norm.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":150804,"byte_end":150881,"line_start":957,"line_end":957,"column_start":5,"column_end":82}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":150886,"byte_end":150899,"line_start":958,"line_end":958,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":150904,"byte_end":150911,"line_start":959,"line_end":959,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Complex};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":150916,"byte_end":150955,"line_start":960,"line_end":960,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(Vector3::new(","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":150960,"byte_end":150988,"line_start":961,"line_end":961,"column_start":5,"column_end":33}},{"value":"/     Complex::new(-3.0, -2.0),","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":150993,"byte_end":151026,"line_start":962,"line_end":962,"column_start":5,"column_end":38}},{"value":"/     Complex::new(1.0, 2.0),","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":151031,"byte_end":151062,"line_start":963,"line_end":963,"column_start":5,"column_end":36}},{"value":"/     Complex::new(1.0, 3.0)).camin(), 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":151067,"byte_end":151113,"line_start":964,"line_end":964,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":151118,"byte_end":151125,"line_start":965,"line_end":965,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":151130,"byte_end":151139,"line_start":966,"line_end":966,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":151781,"byte_end":151784,"line_start":989,"line_end":989,"column_start":12,"column_end":15},"name":"min","qualname":"<Matrix<N, R, C, S>>::min","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Returns the component with the smallest value.\n # Example\n ```\n # use nalgebra::Vector3;\n assert_eq!(Vector3::new(-1.0, 2.0, 3.0).min(), -1.0);\n assert_eq!(Vector3::new(1.0, 2.0, 3.0).min(), 1.0);\n assert_eq!(Vector3::new(5u32, 2, 3).min(), 2);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the component with the smallest value.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":151453,"byte_end":151503,"line_start":980,"line_end":980,"column_start":5,"column_end":55}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":151508,"byte_end":151521,"line_start":981,"line_end":981,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":151526,"byte_end":151533,"line_start":982,"line_end":982,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":151538,"byte_end":151566,"line_start":983,"line_end":983,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Vector3::new(-1.0, 2.0, 3.0).min(), -1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":151571,"byte_end":151628,"line_start":984,"line_end":984,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(Vector3::new(1.0, 2.0, 3.0).min(), 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":151633,"byte_end":151688,"line_start":985,"line_end":985,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(Vector3::new(5u32, 2, 3).min(), 2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":151693,"byte_end":151743,"line_start":986,"line_end":986,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":151748,"byte_end":151755,"line_start":987,"line_end":987,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":151760,"byte_end":151769,"line_start":988,"line_end":988,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1005},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"storage","qualname":"::base::storage","value":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","parent":null,"children":[{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1023},{"krate":0,"index":1027},{"krate":0,"index":1031},{"krate":0,"index":1035},{"krate":0,"index":1053},{"krate":0,"index":1065},{"krate":0,"index":1069}],"decl_id":null,"docs":" Abstract definition of a matrix data storage.\n","sig":null,"attributes":[{"value":"! Abstract definition of a matrix data storage.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":152007,"byte_end":152056,"line_start":1,"line_end":1,"column_start":1,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":1017},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":152421,"byte_end":152437,"line_start":15,"line_end":15,"column_start":10,"column_end":26},"name":"SameShapeStorage","qualname":"::base::storage::SameShapeStorage","value":"<DefaultAllocator as\nAllocator<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>>>::Buffer","parent":null,"children":[],"decl_id":null,"docs":" The data storage for the sum of two matrices with dimensions `(R1, C1)` and `(R2, C2)`.\n","sig":null,"attributes":[{"value":"/ The data storage for the sum of two matrices with dimensions `(R1, C1)` and `(R2, C2)`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":152320,"byte_end":152411,"line_start":14,"line_end":14,"column_start":1,"column_end":92}}]},{"kind":"Type","id":{"krate":0,"index":1023},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":152651,"byte_end":152656,"line_start":20,"line_end":20,"column_start":10,"column_end":15},"name":"Owned","qualname":"::base::storage::Owned","value":"<DefaultAllocator as Allocator<N, R, C>>::Buffer","parent":null,"children":[],"decl_id":null,"docs":" The owned data storage that can be allocated from `S`.\n","sig":null,"attributes":[{"value":"/ The owned data storage that can be allocated from `S`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":152583,"byte_end":152641,"line_start":19,"line_end":19,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":1027},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":152814,"byte_end":152821,"line_start":23,"line_end":23,"column_start":10,"column_end":17},"name":"RStride","qualname":"::base::storage::RStride","value":"<<DefaultAllocator as Allocator<N, R, C>>::Buffer as\nStorage<N, R, C>>::RStride","parent":null,"children":[],"decl_id":null,"docs":" The row-stride of the owned data storage for a buffer of dimension `(R, C)`.\n","sig":null,"attributes":[{"value":"/ The row-stride of the owned data storage for a buffer of dimension `(R, C)`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":152724,"byte_end":152804,"line_start":22,"line_end":22,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":1031},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":153017,"byte_end":153024,"line_start":27,"line_end":27,"column_start":10,"column_end":17},"name":"CStride","qualname":"::base::storage::CStride","value":"<<DefaultAllocator as Allocator<N, R, C>>::Buffer as\nStorage<N, R, C>>::CStride","parent":null,"children":[],"decl_id":null,"docs":" The column-stride of the owned data storage for a buffer of dimension `(R, C)`.\n","sig":null,"attributes":[{"value":"/ The column-stride of the owned data storage for a buffer of dimension `(R, C)`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":152924,"byte_end":153007,"line_start":26,"line_end":26,"column_start":1,"column_end":84}}]},{"kind":"Trait","id":{"krate":0,"index":1035},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":153689,"byte_end":153696,"line_start":39,"line_end":39,"column_start":18,"column_end":25},"name":"Storage","qualname":"::base::storage::Storage","value":"Storage<N: Scalar, R: Dim, C: Dim = U1>: Debug + Sized","parent":null,"children":[{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052}],"decl_id":null,"docs":" The trait shared by all matrix data storage.","sig":null,"attributes":[{"value":"/ The trait shared by all matrix data storage.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":153127,"byte_end":153175,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":153176,"byte_end":153179,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ FIXME: doc","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":153180,"byte_end":153194,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":153195,"byte_end":153198,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Note that `Self` must always have a number of elements compatible with the matrix length (given","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":153199,"byte_end":153298,"line_start":34,"line_end":34,"column_start":1,"column_end":100}},{"value":"/ by `R` and `C` if they are known at compile-time). For example, implementors of this trait","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":153299,"byte_end":153393,"line_start":35,"line_end":35,"column_start":1,"column_end":95}},{"value":"/ should **not** allow the user to modify the size of the underlying buffer with safe methods","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":153394,"byte_end":153489,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/ (for example the `VecStorage::data_mut` method is unsafe because the user could change the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":153490,"byte_end":153584,"line_start":37,"line_end":37,"column_start":1,"column_end":95}},{"value":"/ vector's size so that it no longer contains enough elements: this will lead to UB.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":153585,"byte_end":153671,"line_start":38,"line_end":38,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1039},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":153805,"byte_end":153812,"line_start":41,"line_end":41,"column_start":10,"column_end":17},"name":"RStride","qualname":"::base::storage::Storage::RStride","value":"type RStride: Dim;","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" The static stride of this storage's rows.\n","sig":null,"attributes":[{"value":"/ The static stride of this storage's rows.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":153750,"byte_end":153795,"line_start":40,"line_end":40,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":1040},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":153882,"byte_end":153889,"line_start":44,"line_end":44,"column_start":10,"column_end":17},"name":"CStride","qualname":"::base::storage::Storage::CStride","value":"type CStride: Dim;","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" The static stride of this storage's columns.\n","sig":null,"attributes":[{"value":"/ The static stride of this storage's columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":153824,"byte_end":153872,"line_start":43,"line_end":43,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":153937,"byte_end":153940,"line_start":47,"line_end":47,"column_start":8,"column_end":11},"name":"ptr","qualname":"::base::storage::Storage::ptr","value":"fn (&self) -> *const N","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" The matrix data pointer.\n","sig":null,"attributes":[{"value":"/ The matrix data pointer.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":153901,"byte_end":153929,"line_start":46,"line_end":46,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":154161,"byte_end":154166,"line_start":51,"line_end":51,"column_start":8,"column_end":13},"name":"shape","qualname":"::base::storage::Storage::shape","value":"fn (&self) -> (R, C)","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" The dimension of the matrix at run-time. Arr length of zero indicates the additive identity\n element of any dimension. Must be equal to `Self::dimension()` if it is not `None`.\n","sig":null,"attributes":[{"value":"/ The dimension of the matrix at run-time. Arr length of zero indicates the additive identity","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":153966,"byte_end":154061,"line_start":49,"line_end":49,"column_start":5,"column_end":100}},{"value":"/ element of any dimension. Must be equal to `Self::dimension()` if it is not `None`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":154066,"byte_end":154153,"line_start":50,"line_end":50,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":154368,"byte_end":154375,"line_start":56,"line_end":56,"column_start":8,"column_end":15},"name":"strides","qualname":"::base::storage::Storage::strides","value":"fn (&self) -> (Self::RStride, Self::CStride)","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" The spacing between consecutive row elements and consecutive column elements.","sig":null,"attributes":[{"value":"/ The spacing between consecutive row elements and consecutive column elements.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":154190,"byte_end":154271,"line_start":53,"line_end":53,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":154276,"byte_end":154279,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ For example this returns `(1, 5)` for a row-major matrix with 5 columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":154284,"byte_end":154360,"line_start":55,"line_end":55,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":154768,"byte_end":154780,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"linear_index","qualname":"::base::storage::Storage::linear_index","value":"fn (&self, irow: usize, icol: usize) -> usize","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Compute the index corresponding to the irow-th row and icol-th column of this matrix. The\n index must be such that the following holds:","sig":null,"attributes":[{"value":"/ Compute the index corresponding to the irow-th row and icol-th column of this matrix. The","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":154423,"byte_end":154516,"line_start":58,"line_end":58,"column_start":5,"column_end":98}},{"value":"/ index must be such that the following holds:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":154521,"byte_end":154569,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":154574,"byte_end":154577,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```.ignore","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":154582,"byte_end":154596,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/ let lindex = self.linear_index(irow, icol);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":154601,"byte_end":154648,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/ assert!(*self.get_unchecked(irow, icol) == *self.get_unchecked_linear(lindex)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":154653,"byte_end":154734,"line_start":63,"line_end":63,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":154739,"byte_end":154746,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":154751,"byte_end":154760,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":155055,"byte_end":155083,"line_start":74,"line_end":74,"column_start":15,"column_end":43},"name":"get_address_unchecked_linear","qualname":"::base::storage::Storage::get_address_unchecked_linear","value":"fn (&self, i: usize) -> *const N","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Gets the address of the i-th matrix component without performing bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets the address of the i-th matrix component without performing bound-checking.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":154942,"byte_end":155026,"line_start":72,"line_end":72,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":155031,"byte_end":155040,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":155286,"byte_end":155307,"line_start":80,"line_end":80,"column_start":15,"column_end":36},"name":"get_address_unchecked","qualname":"::base::storage::Storage::get_address_unchecked","value":"fn (&self, irow: usize, icol: usize) -> *const N","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Gets the address of the i-th matrix component without performing bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets the address of the i-th matrix component without performing bound-checking.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":155173,"byte_end":155257,"line_start":78,"line_end":78,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":155262,"byte_end":155271,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":155537,"byte_end":155557,"line_start":86,"line_end":86,"column_start":15,"column_end":35},"name":"get_unchecked_linear","qualname":"::base::storage::Storage::get_unchecked_linear","value":"fn (&self, i: usize) -> &N","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Retrieves a reference to the i-th element without bound-checking.\n","sig":null,"attributes":[{"value":"/ Retrieves a reference to the i-th element without bound-checking.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":155439,"byte_end":155508,"line_start":84,"line_end":84,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":155513,"byte_end":155522,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":155739,"byte_end":155752,"line_start":92,"line_end":92,"column_start":15,"column_end":28},"name":"get_unchecked","qualname":"::base::storage::Storage::get_unchecked","value":"fn (&self, irow: usize, icol: usize) -> &N","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Retrieves a reference to the i-th element without bound-checking.\n","sig":null,"attributes":[{"value":"/ Retrieves a reference to the i-th element without bound-checking.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":155641,"byte_end":155710,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":155715,"byte_end":155724,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":155950,"byte_end":155963,"line_start":97,"line_end":97,"column_start":8,"column_end":21},"name":"is_contiguous","qualname":"::base::storage::Storage::is_contiguous","value":"fn (&self) -> bool","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Indicates whether this data buffer stores its elements contiguously.\n","sig":null,"attributes":[{"value":"/ Indicates whether this data buffer stores its elements contiguously.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":155870,"byte_end":155942,"line_start":96,"line_end":96,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":156148,"byte_end":156156,"line_start":102,"line_end":102,"column_start":8,"column_end":16},"name":"as_slice","qualname":"::base::storage::Storage::as_slice","value":"fn (&self) -> &[N]","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Retrieves the data buffer as a contiguous slice.","sig":null,"attributes":[{"value":"/ Retrieves the data buffer as a contiguous slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":155985,"byte_end":156037,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":156042,"byte_end":156045,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ The matrix components may not be stored in a contiguous way, depending on the strides.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":156050,"byte_end":156140,"line_start":101,"line_end":101,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":156255,"byte_end":156265,"line_start":105,"line_end":105,"column_start":8,"column_end":18},"name":"into_owned","qualname":"::base::storage::Storage::into_owned","value":"fn (self) -> Owned<N, R, C>","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Builds a matrix data storage that does not contain any reference.\n","sig":null,"attributes":[{"value":"/ Builds a matrix data storage that does not contain any reference.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":156178,"byte_end":156247,"line_start":104,"line_end":104,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":156431,"byte_end":156442,"line_start":110,"line_end":110,"column_start":8,"column_end":19},"name":"clone_owned","qualname":"::base::storage::Storage::clone_owned","value":"fn (&self) -> Owned<N, R, C>","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Clones this data storage to one that does not contain any reference.\n","sig":null,"attributes":[{"value":"/ Clones this data storage to one that does not contain any reference.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":156351,"byte_end":156423,"line_start":109,"line_end":109,"column_start":5,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":1053},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":156890,"byte_end":156900,"line_start":120,"line_end":120,"column_start":18,"column_end":28},"name":"StorageMut","qualname":"::base::storage::StorageMut","value":"StorageMut<N: Scalar, R: Dim, C: Dim = U1>: Storage<N, R, C>","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064}],"decl_id":null,"docs":" Trait implemented by matrix data storage that can provide a mutable access to its elements.","sig":null,"attributes":[{"value":"/ Trait implemented by matrix data storage that can provide a mutable access to its elements.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":156527,"byte_end":156622,"line_start":115,"line_end":115,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":156623,"byte_end":156626,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ Note that a mutable access does not mean that the matrix owns its data. For example, a mutable","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":156627,"byte_end":156725,"line_start":117,"line_end":117,"column_start":1,"column_end":99}},{"value":"/ matrix slice can provide mutable access to its elements even if it does not own its data (it","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":156726,"byte_end":156822,"line_start":118,"line_end":118,"column_start":1,"column_end":97}},{"value":"/ contains only an internal reference to them).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":156823,"byte_end":156872,"line_start":119,"line_end":119,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":157001,"byte_end":157008,"line_start":122,"line_end":122,"column_start":8,"column_end":15},"name":"ptr_mut","qualname":"::base::storage::StorageMut::ptr_mut","value":"fn (&mut self) -> *mut N","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" The matrix mutable data pointer.\n","sig":null,"attributes":[{"value":"/ The matrix mutable data pointer.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":156957,"byte_end":156993,"line_start":121,"line_end":121,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":157157,"byte_end":157189,"line_start":126,"line_end":126,"column_start":15,"column_end":47},"name":"get_address_unchecked_linear_mut","qualname":"::base::storage::StorageMut::get_address_unchecked_linear_mut","value":"fn (&mut self, i: usize) -> *mut N","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Gets the mutable address of the i-th matrix component without performing bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets the mutable address of the i-th matrix component without performing bound-checking.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":157036,"byte_end":157128,"line_start":124,"line_end":124,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":157133,"byte_end":157142,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":157406,"byte_end":157431,"line_start":132,"line_end":132,"column_start":15,"column_end":40},"name":"get_address_unchecked_mut","qualname":"::base::storage::StorageMut::get_address_unchecked_mut","value":"fn (&mut self, irow: usize, icol: usize) -> *mut N","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Gets the mutable address of the i-th matrix component without performing bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets the mutable address of the i-th matrix component without performing bound-checking.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":157285,"byte_end":157377,"line_start":130,"line_end":130,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":157382,"byte_end":157391,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":157684,"byte_end":157708,"line_start":138,"line_end":138,"column_start":15,"column_end":39},"name":"get_unchecked_linear_mut","qualname":"::base::storage::StorageMut::get_unchecked_linear_mut","value":"fn (&mut self, i: usize) -> &mut N","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Retrieves a mutable reference to the i-th element without bound-checking.\n","sig":null,"attributes":[{"value":"/ Retrieves a mutable reference to the i-th element without bound-checking.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":157592,"byte_end":157669,"line_start":137,"line_end":137,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":157927,"byte_end":157944,"line_start":144,"line_end":144,"column_start":15,"column_end":32},"name":"get_unchecked_mut","qualname":"::base::storage::StorageMut::get_unchecked_mut","value":"fn (&mut self, irow: usize, icol: usize) -> &mut N","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Retrieves a mutable reference to the element at `(irow, icol)` without bound-checking.\n","sig":null,"attributes":[{"value":"/ Retrieves a mutable reference to the element at `(irow, icol)` without bound-checking.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":157808,"byte_end":157898,"line_start":142,"line_end":142,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":157903,"byte_end":157912,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":158162,"byte_end":158183,"line_start":150,"line_end":150,"column_start":15,"column_end":36},"name":"swap_unchecked_linear","qualname":"::base::storage::StorageMut::swap_unchecked_linear","value":"fn (&mut self, i1: usize, i2: usize) -> ()","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Swaps two elements using their linear index without bound-checking.\n","sig":null,"attributes":[{"value":"/ Swaps two elements using their linear index without bound-checking.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":158062,"byte_end":158133,"line_start":148,"line_end":148,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":158138,"byte_end":158147,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":158461,"byte_end":158475,"line_start":159,"line_end":159,"column_start":15,"column_end":29},"name":"swap_unchecked","qualname":"::base::storage::StorageMut::swap_unchecked","value":"fn (&mut self, row_col1: (usize, usize), row_col2: (usize, usize)) -> ()","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Swaps two elements without bound-checking.\n","sig":null,"attributes":[{"value":"/ Swaps two elements without bound-checking.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":158386,"byte_end":158432,"line_start":157,"line_end":157,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":158437,"byte_end":158446,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":158875,"byte_end":158887,"line_start":169,"line_end":169,"column_start":8,"column_end":20},"name":"as_mut_slice","qualname":"::base::storage::StorageMut::as_mut_slice","value":"fn (&mut self) -> &mut [N]","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Retrieves the mutable data buffer as a contiguous slice.","sig":null,"attributes":[{"value":"/ Retrieves the mutable data buffer as a contiguous slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":158724,"byte_end":158784,"line_start":166,"line_end":166,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":158789,"byte_end":158792,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Matrix components may not be contiguous, depending on its strides.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":158797,"byte_end":158867,"line_start":168,"line_end":168,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":1065},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":159246,"byte_end":159263,"line_start":177,"line_end":177,"column_start":18,"column_end":35},"name":"ContiguousStorage","qualname":"::base::storage::ContiguousStorage","value":"ContiguousStorage<N: Scalar, R: Dim, C: Dim = U1>: Storage<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" A matrix storage that is stored contiguously in memory.","sig":null,"attributes":[{"value":"/ A matrix storage that is stored contiguously in memory.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":158915,"byte_end":158974,"line_start":172,"line_end":172,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":158975,"byte_end":158978,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The storage requirement means that for any value of `i` in `[0, nrows * ncols[`, the value","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":158979,"byte_end":159073,"line_start":174,"line_end":174,"column_start":1,"column_end":95}},{"value":"/ `.get_unchecked_linear` returns one of the matrix component. This trait is unsafe because","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":159074,"byte_end":159167,"line_start":175,"line_end":175,"column_start":1,"column_end":94}},{"value":"/ failing to comply to this may cause Undefined Behaviors.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":159168,"byte_end":159228,"line_start":176,"line_end":176,"column_start":1,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":1069},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":159662,"byte_end":159682,"line_start":187,"line_end":187,"column_start":18,"column_end":38},"name":"ContiguousStorageMut","qualname":"::base::storage::ContiguousStorageMut","value":"ContiguousStorageMut<N: Scalar, R: Dim, C: Dim = U1>: ContiguousStorage<N, R, C> + StorageMut<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" A mutable matrix storage that is stored contiguously in memory.","sig":null,"attributes":[{"value":"/ A mutable matrix storage that is stored contiguously in memory.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":159323,"byte_end":159390,"line_start":182,"line_end":182,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":159391,"byte_end":159394,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ The storage requirement means that for any value of `i` in `[0, nrows * ncols[`, the value","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":159395,"byte_end":159489,"line_start":184,"line_end":184,"column_start":1,"column_end":95}},{"value":"/ `.get_unchecked_linear` returns one of the matrix component. This trait is unsafe because","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":159490,"byte_end":159583,"line_start":185,"line_end":185,"column_start":1,"column_end":94}},{"value":"/ failing to comply to this may cause Undefined Behaviors.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":159584,"byte_end":159644,"line_start":186,"line_end":186,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1085},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":160270,"byte_end":160278,"line_start":18,"line_end":18,"column_start":10,"column_end":18},"name":"MatrixNM","qualname":"::base::alias::MatrixNM","value":"Matrix<N, R, C, Owned<N, R, C>>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized column-major matrix with `R` rows and `C` columns.\n","sig":null,"attributes":[{"value":"/ A statically sized column-major matrix with `R` rows and `C` columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":160107,"byte_end":160180,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"deprecated(note =\n             \"This matrix name contains a typo. Use MatrixMN instead.\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":160181,"byte_end":160260,"line_start":17,"line_end":17,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":1089},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":160407,"byte_end":160415,"line_start":21,"line_end":21,"column_start":10,"column_end":18},"name":"MatrixMN","qualname":"::base::alias::MatrixMN","value":"Matrix<N, R, C, Owned<N, R, C>>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized column-major matrix with `R` rows and `C` columns.\n","sig":null,"attributes":[{"value":"/ A statically sized column-major matrix with `R` rows and `C` columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":160324,"byte_end":160397,"line_start":20,"line_end":20,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":1093},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":160547,"byte_end":160554,"line_start":24,"line_end":24,"column_start":10,"column_end":17},"name":"MatrixN","qualname":"::base::alias::MatrixN","value":"MatrixMN<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized column-major square matrix with `D` rows and columns.\n","sig":null,"attributes":[{"value":"/ A statically sized column-major square matrix with `D` rows and columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":160461,"byte_end":160537,"line_start":23,"line_end":23,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":1096},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":160685,"byte_end":160692,"line_start":28,"line_end":28,"column_start":10,"column_end":17},"name":"DMatrix","qualname":"::base::alias::DMatrix","value":"MatrixN<N, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" A dynamically sized column-major matrix.\n","sig":null,"attributes":[{"value":"/ A dynamically sized column-major matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":160583,"byte_end":160627,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"cfg(any (feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":160628,"byte_end":160675,"line_start":27,"line_end":27,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1098},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":160785,"byte_end":160792,"line_start":31,"line_end":31,"column_start":10,"column_end":17},"name":"Matrix1","qualname":"::base::alias::Matrix1","value":"MatrixN<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x1 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x1 square matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":160720,"byte_end":160775,"line_start":30,"line_end":30,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1100},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":160879,"byte_end":160886,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"name":"Matrix2","qualname":"::base::alias::Matrix2","value":"MatrixN<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x2 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x2 square matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":160814,"byte_end":160869,"line_start":32,"line_end":32,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1102},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":160973,"byte_end":160980,"line_start":35,"line_end":35,"column_start":10,"column_end":17},"name":"Matrix3","qualname":"::base::alias::Matrix3","value":"MatrixN<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x3 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x3 square matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":160908,"byte_end":160963,"line_start":34,"line_end":34,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1104},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":161067,"byte_end":161074,"line_start":37,"line_end":37,"column_start":10,"column_end":17},"name":"Matrix4","qualname":"::base::alias::Matrix4","value":"MatrixN<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x4 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x4 square matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":161002,"byte_end":161057,"line_start":36,"line_end":36,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1106},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":161161,"byte_end":161168,"line_start":39,"line_end":39,"column_start":10,"column_end":17},"name":"Matrix5","qualname":"::base::alias::Matrix5","value":"MatrixN<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x5 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x5 square matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":161096,"byte_end":161151,"line_start":38,"line_end":38,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1108},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":161255,"byte_end":161262,"line_start":41,"line_end":41,"column_start":10,"column_end":17},"name":"Matrix6","qualname":"::base::alias::Matrix6","value":"MatrixN<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x6 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x6 square matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":161190,"byte_end":161245,"line_start":40,"line_end":40,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1110},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":161343,"byte_end":161352,"line_start":44,"line_end":44,"column_start":10,"column_end":19},"name":"Matrix1x2","qualname":"::base::alias::Matrix1x2","value":"MatrixMN<N, U1, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x2 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":161285,"byte_end":161333,"line_start":43,"line_end":43,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1112},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":161437,"byte_end":161446,"line_start":46,"line_end":46,"column_start":10,"column_end":19},"name":"Matrix1x3","qualname":"::base::alias::Matrix1x3","value":"MatrixMN<N, U1, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x3 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":161379,"byte_end":161427,"line_start":45,"line_end":45,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1114},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":161531,"byte_end":161540,"line_start":48,"line_end":48,"column_start":10,"column_end":19},"name":"Matrix1x4","qualname":"::base::alias::Matrix1x4","value":"MatrixMN<N, U1, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x4 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":161473,"byte_end":161521,"line_start":47,"line_end":47,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1116},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":161625,"byte_end":161634,"line_start":50,"line_end":50,"column_start":10,"column_end":19},"name":"Matrix1x5","qualname":"::base::alias::Matrix1x5","value":"MatrixMN<N, U1, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x5 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":161567,"byte_end":161615,"line_start":49,"line_end":49,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1118},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":161719,"byte_end":161728,"line_start":52,"line_end":52,"column_start":10,"column_end":19},"name":"Matrix1x6","qualname":"::base::alias::Matrix1x6","value":"MatrixMN<N, U1, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x6 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":161661,"byte_end":161709,"line_start":51,"line_end":51,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1120},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":161814,"byte_end":161823,"line_start":55,"line_end":55,"column_start":10,"column_end":19},"name":"Matrix2x3","qualname":"::base::alias::Matrix2x3","value":"MatrixMN<N, U2, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x3 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":161756,"byte_end":161804,"line_start":54,"line_end":54,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1122},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":161908,"byte_end":161917,"line_start":57,"line_end":57,"column_start":10,"column_end":19},"name":"Matrix2x4","qualname":"::base::alias::Matrix2x4","value":"MatrixMN<N, U2, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x4 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":161850,"byte_end":161898,"line_start":56,"line_end":56,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1124},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":162002,"byte_end":162011,"line_start":59,"line_end":59,"column_start":10,"column_end":19},"name":"Matrix2x5","qualname":"::base::alias::Matrix2x5","value":"MatrixMN<N, U2, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x5 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":161944,"byte_end":161992,"line_start":58,"line_end":58,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1126},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":162096,"byte_end":162105,"line_start":61,"line_end":61,"column_start":10,"column_end":19},"name":"Matrix2x6","qualname":"::base::alias::Matrix2x6","value":"MatrixMN<N, U2, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x6 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":162038,"byte_end":162086,"line_start":60,"line_end":60,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1128},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":162191,"byte_end":162200,"line_start":64,"line_end":64,"column_start":10,"column_end":19},"name":"Matrix3x4","qualname":"::base::alias::Matrix3x4","value":"MatrixMN<N, U3, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x4 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":162133,"byte_end":162181,"line_start":63,"line_end":63,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1130},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":162285,"byte_end":162294,"line_start":66,"line_end":66,"column_start":10,"column_end":19},"name":"Matrix3x5","qualname":"::base::alias::Matrix3x5","value":"MatrixMN<N, U3, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x5 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":162227,"byte_end":162275,"line_start":65,"line_end":65,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1132},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":162379,"byte_end":162388,"line_start":68,"line_end":68,"column_start":10,"column_end":19},"name":"Matrix3x6","qualname":"::base::alias::Matrix3x6","value":"MatrixMN<N, U3, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x6 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":162321,"byte_end":162369,"line_start":67,"line_end":67,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1134},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":162474,"byte_end":162483,"line_start":71,"line_end":71,"column_start":10,"column_end":19},"name":"Matrix4x5","qualname":"::base::alias::Matrix4x5","value":"MatrixMN<N, U4, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x5 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":162416,"byte_end":162464,"line_start":70,"line_end":70,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1136},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":162568,"byte_end":162577,"line_start":73,"line_end":73,"column_start":10,"column_end":19},"name":"Matrix4x6","qualname":"::base::alias::Matrix4x6","value":"MatrixMN<N, U4, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x6 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":162510,"byte_end":162558,"line_start":72,"line_end":72,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1138},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":162663,"byte_end":162672,"line_start":76,"line_end":76,"column_start":10,"column_end":19},"name":"Matrix5x6","qualname":"::base::alias::Matrix5x6","value":"MatrixMN<N, U5, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x6 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":162605,"byte_end":162653,"line_start":75,"line_end":75,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1140},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":162758,"byte_end":162767,"line_start":79,"line_end":79,"column_start":10,"column_end":19},"name":"Matrix2x1","qualname":"::base::alias::Matrix2x1","value":"MatrixMN<N, U2, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x1 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":162700,"byte_end":162748,"line_start":78,"line_end":78,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1142},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":162852,"byte_end":162861,"line_start":81,"line_end":81,"column_start":10,"column_end":19},"name":"Matrix3x1","qualname":"::base::alias::Matrix3x1","value":"MatrixMN<N, U3, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x1 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":162794,"byte_end":162842,"line_start":80,"line_end":80,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1144},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":162946,"byte_end":162955,"line_start":83,"line_end":83,"column_start":10,"column_end":19},"name":"Matrix4x1","qualname":"::base::alias::Matrix4x1","value":"MatrixMN<N, U4, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x1 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":162888,"byte_end":162936,"line_start":82,"line_end":82,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1146},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":163040,"byte_end":163049,"line_start":85,"line_end":85,"column_start":10,"column_end":19},"name":"Matrix5x1","qualname":"::base::alias::Matrix5x1","value":"MatrixMN<N, U5, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x1 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":162982,"byte_end":163030,"line_start":84,"line_end":84,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1148},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":163134,"byte_end":163143,"line_start":87,"line_end":87,"column_start":10,"column_end":19},"name":"Matrix6x1","qualname":"::base::alias::Matrix6x1","value":"MatrixMN<N, U6, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x1 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":163076,"byte_end":163124,"line_start":86,"line_end":86,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1150},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":163229,"byte_end":163238,"line_start":90,"line_end":90,"column_start":10,"column_end":19},"name":"Matrix3x2","qualname":"::base::alias::Matrix3x2","value":"MatrixMN<N, U3, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x2 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":163171,"byte_end":163219,"line_start":89,"line_end":89,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1152},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":163323,"byte_end":163332,"line_start":92,"line_end":92,"column_start":10,"column_end":19},"name":"Matrix4x2","qualname":"::base::alias::Matrix4x2","value":"MatrixMN<N, U4, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x2 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":163265,"byte_end":163313,"line_start":91,"line_end":91,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1154},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":163417,"byte_end":163426,"line_start":94,"line_end":94,"column_start":10,"column_end":19},"name":"Matrix5x2","qualname":"::base::alias::Matrix5x2","value":"MatrixMN<N, U5, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x2 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":163359,"byte_end":163407,"line_start":93,"line_end":93,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1156},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":163511,"byte_end":163520,"line_start":96,"line_end":96,"column_start":10,"column_end":19},"name":"Matrix6x2","qualname":"::base::alias::Matrix6x2","value":"MatrixMN<N, U6, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x2 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":163453,"byte_end":163501,"line_start":95,"line_end":95,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1158},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":163606,"byte_end":163615,"line_start":99,"line_end":99,"column_start":10,"column_end":19},"name":"Matrix4x3","qualname":"::base::alias::Matrix4x3","value":"MatrixMN<N, U4, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x3 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":163548,"byte_end":163596,"line_start":98,"line_end":98,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1160},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":163700,"byte_end":163709,"line_start":101,"line_end":101,"column_start":10,"column_end":19},"name":"Matrix5x3","qualname":"::base::alias::Matrix5x3","value":"MatrixMN<N, U5, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x3 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":163642,"byte_end":163690,"line_start":100,"line_end":100,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1162},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":163794,"byte_end":163803,"line_start":103,"line_end":103,"column_start":10,"column_end":19},"name":"Matrix6x3","qualname":"::base::alias::Matrix6x3","value":"MatrixMN<N, U6, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x3 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":163736,"byte_end":163784,"line_start":102,"line_end":102,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1164},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":163889,"byte_end":163898,"line_start":106,"line_end":106,"column_start":10,"column_end":19},"name":"Matrix5x4","qualname":"::base::alias::Matrix5x4","value":"MatrixMN<N, U5, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x4 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":163831,"byte_end":163879,"line_start":105,"line_end":105,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1166},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":163983,"byte_end":163992,"line_start":108,"line_end":108,"column_start":10,"column_end":19},"name":"Matrix6x4","qualname":"::base::alias::Matrix6x4","value":"MatrixMN<N, U6, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x4 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":163925,"byte_end":163973,"line_start":107,"line_end":107,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1168},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":164078,"byte_end":164087,"line_start":111,"line_end":111,"column_start":10,"column_end":19},"name":"Matrix6x5","qualname":"::base::alias::Matrix6x5","value":"MatrixMN<N, U6, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x5 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":164020,"byte_end":164068,"line_start":110,"line_end":110,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1170},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":164249,"byte_end":164256,"line_start":122,"line_end":122,"column_start":10,"column_end":17},"name":"DVector","qualname":"::base::alias::DVector","value":"Matrix<N, Dynamic, U1, VecStorage<N, Dynamic, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A dynamically sized column vector.\n","sig":null,"attributes":[{"value":"/ A dynamically sized column vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":164153,"byte_end":164191,"line_start":120,"line_end":120,"column_start":1,"column_end":39}},{"value":"cfg(any (feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":164192,"byte_end":164239,"line_start":121,"line_end":121,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1172},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":164376,"byte_end":164383,"line_start":125,"line_end":125,"column_start":10,"column_end":17},"name":"VectorN","qualname":"::base::alias::VectorN","value":"MatrixMN<N, D, U1>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized D-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A statically sized D-dimensional column vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":164315,"byte_end":164366,"line_start":124,"line_end":124,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1175},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":164474,"byte_end":164481,"line_start":128,"line_end":128,"column_start":10,"column_end":17},"name":"Vector1","qualname":"::base::alias::Vector1","value":"VectorN<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 1-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 1-dimensional column vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":164413,"byte_end":164464,"line_start":127,"line_end":127,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1177},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":164564,"byte_end":164571,"line_start":130,"line_end":130,"column_start":10,"column_end":17},"name":"Vector2","qualname":"::base::alias::Vector2","value":"VectorN<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 2-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 2-dimensional column vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":164503,"byte_end":164554,"line_start":129,"line_end":129,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1179},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":164654,"byte_end":164661,"line_start":132,"line_end":132,"column_start":10,"column_end":17},"name":"Vector3","qualname":"::base::alias::Vector3","value":"VectorN<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 3-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 3-dimensional column vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":164593,"byte_end":164644,"line_start":131,"line_end":131,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1181},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":164744,"byte_end":164751,"line_start":134,"line_end":134,"column_start":10,"column_end":17},"name":"Vector4","qualname":"::base::alias::Vector4","value":"VectorN<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 4-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 4-dimensional column vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":164683,"byte_end":164734,"line_start":133,"line_end":133,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1183},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":164834,"byte_end":164841,"line_start":136,"line_end":136,"column_start":10,"column_end":17},"name":"Vector5","qualname":"::base::alias::Vector5","value":"VectorN<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 5-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 5-dimensional column vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":164773,"byte_end":164824,"line_start":135,"line_end":135,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1185},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":164924,"byte_end":164931,"line_start":138,"line_end":138,"column_start":10,"column_end":17},"name":"Vector6","qualname":"::base::alias::Vector6","value":"VectorN<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 6-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 6-dimensional column vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":164863,"byte_end":164914,"line_start":137,"line_end":137,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1187},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":165082,"byte_end":165092,"line_start":149,"line_end":149,"column_start":10,"column_end":20},"name":"RowDVector","qualname":"::base::alias::RowDVector","value":"Matrix<N, U1, Dynamic, VecStorage<N, U1, Dynamic>>","parent":null,"children":[],"decl_id":null,"docs":" A dynamically sized row vector.\n","sig":null,"attributes":[{"value":"/ A dynamically sized row vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":164989,"byte_end":165024,"line_start":147,"line_end":147,"column_start":1,"column_end":36}},{"value":"cfg(any (feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":165025,"byte_end":165072,"line_start":148,"line_end":148,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1189},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":165209,"byte_end":165219,"line_start":152,"line_end":152,"column_start":10,"column_end":20},"name":"RowVectorN","qualname":"::base::alias::RowVectorN","value":"MatrixMN<N, U1, D>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized D-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A statically sized D-dimensional row vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":165151,"byte_end":165199,"line_start":151,"line_end":151,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1192},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":165307,"byte_end":165317,"line_start":155,"line_end":155,"column_start":10,"column_end":20},"name":"RowVector1","qualname":"::base::alias::RowVector1","value":"RowVectorN<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 1-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 1-dimensional row vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":165249,"byte_end":165297,"line_start":154,"line_end":154,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1194},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":165400,"byte_end":165410,"line_start":157,"line_end":157,"column_start":10,"column_end":20},"name":"RowVector2","qualname":"::base::alias::RowVector2","value":"RowVectorN<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 2-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 2-dimensional row vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":165342,"byte_end":165390,"line_start":156,"line_end":156,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1196},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":165493,"byte_end":165503,"line_start":159,"line_end":159,"column_start":10,"column_end":20},"name":"RowVector3","qualname":"::base::alias::RowVector3","value":"RowVectorN<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 3-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 3-dimensional row vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":165435,"byte_end":165483,"line_start":158,"line_end":158,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1198},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":165586,"byte_end":165596,"line_start":161,"line_end":161,"column_start":10,"column_end":20},"name":"RowVector4","qualname":"::base::alias::RowVector4","value":"RowVectorN<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 4-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 4-dimensional row vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":165528,"byte_end":165576,"line_start":160,"line_end":160,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1200},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":165679,"byte_end":165689,"line_start":163,"line_end":163,"column_start":10,"column_end":20},"name":"RowVector5","qualname":"::base::alias::RowVector5","value":"RowVectorN<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 5-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 5-dimensional row vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":165621,"byte_end":165669,"line_start":162,"line_end":162,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1202},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":165772,"byte_end":165782,"line_start":165,"line_end":165,"column_start":10,"column_end":20},"name":"RowVector6","qualname":"::base::alias::RowVector6","value":"RowVectorN<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 6-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 6-dimensional row vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias.rs","byte_start":165714,"byte_end":165762,"line_start":164,"line_end":164,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1217},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":166077,"byte_end":166090,"line_start":13,"line_end":13,"column_start":10,"column_end":23},"name":"MatrixSliceMN","qualname":"::base::alias_slice::MatrixSliceMN","value":"Matrix<N, R, C, SliceStorage<'a, N, R, C, RStride, CStride>>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with `R` rows and `C` columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with `R` rows and `C` columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":166005,"byte_end":166067,"line_start":12,"line_end":12,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":1224},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":166268,"byte_end":166280,"line_start":17,"line_end":17,"column_start":10,"column_end":22},"name":"MatrixSliceN","qualname":"::base::alias_slice::MatrixSliceN","value":"MatrixSliceMN<'a, N, D, D, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with `D` rows and columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with `D` rows and columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":166200,"byte_end":166258,"line_start":16,"line_end":16,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":1230},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":166449,"byte_end":166461,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"DMatrixSlice","qualname":"::base::alias_slice::DMatrixSlice","value":"MatrixSliceN<'a, N, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice dynamic numbers of rows and columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice dynamic numbers of rows and columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":166371,"byte_end":166439,"line_start":20,"line_end":20,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":1235},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":166603,"byte_end":166615,"line_start":25,"line_end":25,"column_start":10,"column_end":22},"name":"MatrixSlice1","qualname":"::base::alias_slice::MatrixSlice1","value":"MatrixSliceN<'a, N, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x1 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":166557,"byte_end":166593,"line_start":24,"line_end":24,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1240},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":166746,"byte_end":166758,"line_start":28,"line_end":28,"column_start":10,"column_end":22},"name":"MatrixSlice2","qualname":"::base::alias_slice::MatrixSlice2","value":"MatrixSliceN<'a, N, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x2 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":166700,"byte_end":166736,"line_start":27,"line_end":27,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1245},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":166889,"byte_end":166901,"line_start":31,"line_end":31,"column_start":10,"column_end":22},"name":"MatrixSlice3","qualname":"::base::alias_slice::MatrixSlice3","value":"MatrixSliceN<'a, N, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x3 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":166843,"byte_end":166879,"line_start":30,"line_end":30,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1250},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":167032,"byte_end":167044,"line_start":34,"line_end":34,"column_start":10,"column_end":22},"name":"MatrixSlice4","qualname":"::base::alias_slice::MatrixSlice4","value":"MatrixSliceN<'a, N, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x4 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":166986,"byte_end":167022,"line_start":33,"line_end":33,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1255},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":167175,"byte_end":167187,"line_start":37,"line_end":37,"column_start":10,"column_end":22},"name":"MatrixSlice5","qualname":"::base::alias_slice::MatrixSlice5","value":"MatrixSliceN<'a, N, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x5 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":167129,"byte_end":167165,"line_start":36,"line_end":36,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1260},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":167318,"byte_end":167330,"line_start":40,"line_end":40,"column_start":10,"column_end":22},"name":"MatrixSlice6","qualname":"::base::alias_slice::MatrixSlice6","value":"MatrixSliceN<'a, N, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x6 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":167272,"byte_end":167308,"line_start":39,"line_end":39,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1265},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":167462,"byte_end":167476,"line_start":44,"line_end":44,"column_start":10,"column_end":24},"name":"MatrixSlice1x2","qualname":"::base::alias_slice::MatrixSlice1x2","value":"MatrixSliceMN<'a, N, U1, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x2 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":167416,"byte_end":167452,"line_start":43,"line_end":43,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1270},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":167612,"byte_end":167626,"line_start":47,"line_end":47,"column_start":10,"column_end":24},"name":"MatrixSlice1x3","qualname":"::base::alias_slice::MatrixSlice1x3","value":"MatrixSliceMN<'a, N, U1, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x3 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":167566,"byte_end":167602,"line_start":46,"line_end":46,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1275},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":167762,"byte_end":167776,"line_start":50,"line_end":50,"column_start":10,"column_end":24},"name":"MatrixSlice1x4","qualname":"::base::alias_slice::MatrixSlice1x4","value":"MatrixSliceMN<'a, N, U1, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x4 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":167716,"byte_end":167752,"line_start":49,"line_end":49,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1280},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":167912,"byte_end":167926,"line_start":53,"line_end":53,"column_start":10,"column_end":24},"name":"MatrixSlice1x5","qualname":"::base::alias_slice::MatrixSlice1x5","value":"MatrixSliceMN<'a, N, U1, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x5 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":167866,"byte_end":167902,"line_start":52,"line_end":52,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1285},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":168062,"byte_end":168076,"line_start":56,"line_end":56,"column_start":10,"column_end":24},"name":"MatrixSlice1x6","qualname":"::base::alias_slice::MatrixSlice1x6","value":"MatrixSliceMN<'a, N, U1, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x6 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":168016,"byte_end":168052,"line_start":55,"line_end":55,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1290},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":168213,"byte_end":168227,"line_start":60,"line_end":60,"column_start":10,"column_end":24},"name":"MatrixSlice2x1","qualname":"::base::alias_slice::MatrixSlice2x1","value":"MatrixSliceMN<'a, N, U2, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x1 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":168167,"byte_end":168203,"line_start":59,"line_end":59,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1295},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":168363,"byte_end":168377,"line_start":63,"line_end":63,"column_start":10,"column_end":24},"name":"MatrixSlice2x3","qualname":"::base::alias_slice::MatrixSlice2x3","value":"MatrixSliceMN<'a, N, U2, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x3 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":168317,"byte_end":168353,"line_start":62,"line_end":62,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1300},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":168513,"byte_end":168527,"line_start":66,"line_end":66,"column_start":10,"column_end":24},"name":"MatrixSlice2x4","qualname":"::base::alias_slice::MatrixSlice2x4","value":"MatrixSliceMN<'a, N, U2, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x4 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":168467,"byte_end":168503,"line_start":65,"line_end":65,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1305},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":168663,"byte_end":168677,"line_start":69,"line_end":69,"column_start":10,"column_end":24},"name":"MatrixSlice2x5","qualname":"::base::alias_slice::MatrixSlice2x5","value":"MatrixSliceMN<'a, N, U2, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x5 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":168617,"byte_end":168653,"line_start":68,"line_end":68,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1310},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":168813,"byte_end":168827,"line_start":72,"line_end":72,"column_start":10,"column_end":24},"name":"MatrixSlice2x6","qualname":"::base::alias_slice::MatrixSlice2x6","value":"MatrixSliceMN<'a, N, U2, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x6 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":168767,"byte_end":168803,"line_start":71,"line_end":71,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1315},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":168964,"byte_end":168978,"line_start":76,"line_end":76,"column_start":10,"column_end":24},"name":"MatrixSlice3x1","qualname":"::base::alias_slice::MatrixSlice3x1","value":"MatrixSliceMN<'a, N, U3, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x1 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":168918,"byte_end":168954,"line_start":75,"line_end":75,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1320},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":169114,"byte_end":169128,"line_start":79,"line_end":79,"column_start":10,"column_end":24},"name":"MatrixSlice3x2","qualname":"::base::alias_slice::MatrixSlice3x2","value":"MatrixSliceMN<'a, N, U3, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x2 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":169068,"byte_end":169104,"line_start":78,"line_end":78,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1325},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":169264,"byte_end":169278,"line_start":82,"line_end":82,"column_start":10,"column_end":24},"name":"MatrixSlice3x4","qualname":"::base::alias_slice::MatrixSlice3x4","value":"MatrixSliceMN<'a, N, U3, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x4 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":169218,"byte_end":169254,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1330},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":169414,"byte_end":169428,"line_start":85,"line_end":85,"column_start":10,"column_end":24},"name":"MatrixSlice3x5","qualname":"::base::alias_slice::MatrixSlice3x5","value":"MatrixSliceMN<'a, N, U3, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x5 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":169368,"byte_end":169404,"line_start":84,"line_end":84,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1335},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":169564,"byte_end":169578,"line_start":88,"line_end":88,"column_start":10,"column_end":24},"name":"MatrixSlice3x6","qualname":"::base::alias_slice::MatrixSlice3x6","value":"MatrixSliceMN<'a, N, U3, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x6 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":169518,"byte_end":169554,"line_start":87,"line_end":87,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1340},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":169715,"byte_end":169729,"line_start":92,"line_end":92,"column_start":10,"column_end":24},"name":"MatrixSlice4x1","qualname":"::base::alias_slice::MatrixSlice4x1","value":"MatrixSliceMN<'a, N, U4, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x1 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":169669,"byte_end":169705,"line_start":91,"line_end":91,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1345},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":169865,"byte_end":169879,"line_start":95,"line_end":95,"column_start":10,"column_end":24},"name":"MatrixSlice4x2","qualname":"::base::alias_slice::MatrixSlice4x2","value":"MatrixSliceMN<'a, N, U4, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x2 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":169819,"byte_end":169855,"line_start":94,"line_end":94,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1350},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":170015,"byte_end":170029,"line_start":98,"line_end":98,"column_start":10,"column_end":24},"name":"MatrixSlice4x3","qualname":"::base::alias_slice::MatrixSlice4x3","value":"MatrixSliceMN<'a, N, U4, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x3 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":169969,"byte_end":170005,"line_start":97,"line_end":97,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1355},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":170165,"byte_end":170179,"line_start":101,"line_end":101,"column_start":10,"column_end":24},"name":"MatrixSlice4x5","qualname":"::base::alias_slice::MatrixSlice4x5","value":"MatrixSliceMN<'a, N, U4, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x5 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":170119,"byte_end":170155,"line_start":100,"line_end":100,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1360},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":170315,"byte_end":170329,"line_start":104,"line_end":104,"column_start":10,"column_end":24},"name":"MatrixSlice4x6","qualname":"::base::alias_slice::MatrixSlice4x6","value":"MatrixSliceMN<'a, N, U4, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x6 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":170269,"byte_end":170305,"line_start":103,"line_end":103,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1365},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":170466,"byte_end":170480,"line_start":108,"line_end":108,"column_start":10,"column_end":24},"name":"MatrixSlice5x1","qualname":"::base::alias_slice::MatrixSlice5x1","value":"MatrixSliceMN<'a, N, U5, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x1 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":170420,"byte_end":170456,"line_start":107,"line_end":107,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1370},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":170616,"byte_end":170630,"line_start":111,"line_end":111,"column_start":10,"column_end":24},"name":"MatrixSlice5x2","qualname":"::base::alias_slice::MatrixSlice5x2","value":"MatrixSliceMN<'a, N, U5, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x2 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":170570,"byte_end":170606,"line_start":110,"line_end":110,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1375},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":170766,"byte_end":170780,"line_start":114,"line_end":114,"column_start":10,"column_end":24},"name":"MatrixSlice5x3","qualname":"::base::alias_slice::MatrixSlice5x3","value":"MatrixSliceMN<'a, N, U5, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x3 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":170720,"byte_end":170756,"line_start":113,"line_end":113,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1380},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":170916,"byte_end":170930,"line_start":117,"line_end":117,"column_start":10,"column_end":24},"name":"MatrixSlice5x4","qualname":"::base::alias_slice::MatrixSlice5x4","value":"MatrixSliceMN<'a, N, U5, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x4 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":170870,"byte_end":170906,"line_start":116,"line_end":116,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1385},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":171066,"byte_end":171080,"line_start":120,"line_end":120,"column_start":10,"column_end":24},"name":"MatrixSlice5x6","qualname":"::base::alias_slice::MatrixSlice5x6","value":"MatrixSliceMN<'a, N, U5, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x6 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":171020,"byte_end":171056,"line_start":119,"line_end":119,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1390},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":171217,"byte_end":171231,"line_start":124,"line_end":124,"column_start":10,"column_end":24},"name":"MatrixSlice6x1","qualname":"::base::alias_slice::MatrixSlice6x1","value":"MatrixSliceMN<'a, N, U6, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x1 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":171171,"byte_end":171207,"line_start":123,"line_end":123,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1395},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":171367,"byte_end":171381,"line_start":127,"line_end":127,"column_start":10,"column_end":24},"name":"MatrixSlice6x2","qualname":"::base::alias_slice::MatrixSlice6x2","value":"MatrixSliceMN<'a, N, U6, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x2 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":171321,"byte_end":171357,"line_start":126,"line_end":126,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1400},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":171517,"byte_end":171531,"line_start":130,"line_end":130,"column_start":10,"column_end":24},"name":"MatrixSlice6x3","qualname":"::base::alias_slice::MatrixSlice6x3","value":"MatrixSliceMN<'a, N, U6, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x3 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":171471,"byte_end":171507,"line_start":129,"line_end":129,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1405},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":171667,"byte_end":171681,"line_start":133,"line_end":133,"column_start":10,"column_end":24},"name":"MatrixSlice6x4","qualname":"::base::alias_slice::MatrixSlice6x4","value":"MatrixSliceMN<'a, N, U6, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x4 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":171621,"byte_end":171657,"line_start":132,"line_end":132,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1410},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":171817,"byte_end":171831,"line_start":136,"line_end":136,"column_start":10,"column_end":24},"name":"MatrixSlice6x5","qualname":"::base::alias_slice::MatrixSlice6x5","value":"MatrixSliceMN<'a, N, U6, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x5 matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":171771,"byte_end":171807,"line_start":135,"line_end":135,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1415},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":172017,"byte_end":172031,"line_start":140,"line_end":140,"column_start":10,"column_end":24},"name":"MatrixSlice1xX","qualname":"::base::alias_slice::MatrixSlice1xX","value":"MatrixSliceMN<'a, N, U1, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 1 row and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 1 row and a number of columns chosen at runtime.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":171922,"byte_end":172007,"line_start":139,"line_end":139,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":1420},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":172222,"byte_end":172236,"line_start":143,"line_end":143,"column_start":10,"column_end":24},"name":"MatrixSlice2xX","qualname":"::base::alias_slice::MatrixSlice2xX","value":"MatrixSliceMN<'a, N, U2, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 2 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 2 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":172126,"byte_end":172212,"line_start":142,"line_end":142,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1425},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":172427,"byte_end":172441,"line_start":146,"line_end":146,"column_start":10,"column_end":24},"name":"MatrixSlice3xX","qualname":"::base::alias_slice::MatrixSlice3xX","value":"MatrixSliceMN<'a, N, U3, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 3 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 3 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":172331,"byte_end":172417,"line_start":145,"line_end":145,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1430},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":172632,"byte_end":172646,"line_start":149,"line_end":149,"column_start":10,"column_end":24},"name":"MatrixSlice4xX","qualname":"::base::alias_slice::MatrixSlice4xX","value":"MatrixSliceMN<'a, N, U4, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 4 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 4 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":172536,"byte_end":172622,"line_start":148,"line_end":148,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1435},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":172837,"byte_end":172851,"line_start":152,"line_end":152,"column_start":10,"column_end":24},"name":"MatrixSlice5xX","qualname":"::base::alias_slice::MatrixSlice5xX","value":"MatrixSliceMN<'a, N, U5, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 5 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 5 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":172741,"byte_end":172827,"line_start":151,"line_end":151,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1440},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":173042,"byte_end":173056,"line_start":155,"line_end":155,"column_start":10,"column_end":24},"name":"MatrixSlice6xX","qualname":"::base::alias_slice::MatrixSlice6xX","value":"MatrixSliceMN<'a, N, U6, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 6 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 6 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":172946,"byte_end":173032,"line_start":154,"line_end":154,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1445},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":173247,"byte_end":173261,"line_start":159,"line_end":159,"column_start":10,"column_end":24},"name":"MatrixSliceXx1","qualname":"::base::alias_slice::MatrixSliceXx1","value":"MatrixSliceMN<'a, N, Dynamic, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 1 column.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 1 column.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":173152,"byte_end":173237,"line_start":158,"line_end":158,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":1450},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":173457,"byte_end":173471,"line_start":162,"line_end":162,"column_start":10,"column_end":24},"name":"MatrixSliceXx2","qualname":"::base::alias_slice::MatrixSliceXx2","value":"MatrixSliceMN<'a, N, Dynamic, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 2 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 2 columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":173361,"byte_end":173447,"line_start":161,"line_end":161,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1455},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":173667,"byte_end":173681,"line_start":165,"line_end":165,"column_start":10,"column_end":24},"name":"MatrixSliceXx3","qualname":"::base::alias_slice::MatrixSliceXx3","value":"MatrixSliceMN<'a, N, Dynamic, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 3 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 3 columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":173571,"byte_end":173657,"line_start":164,"line_end":164,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1460},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":173877,"byte_end":173891,"line_start":168,"line_end":168,"column_start":10,"column_end":24},"name":"MatrixSliceXx4","qualname":"::base::alias_slice::MatrixSliceXx4","value":"MatrixSliceMN<'a, N, Dynamic, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 4 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 4 columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":173781,"byte_end":173867,"line_start":167,"line_end":167,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1465},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":174087,"byte_end":174101,"line_start":171,"line_end":171,"column_start":10,"column_end":24},"name":"MatrixSliceXx5","qualname":"::base::alias_slice::MatrixSliceXx5","value":"MatrixSliceMN<'a, N, Dynamic, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 5 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 5 columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":173991,"byte_end":174077,"line_start":170,"line_end":170,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1470},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":174297,"byte_end":174311,"line_start":174,"line_end":174,"column_start":10,"column_end":24},"name":"MatrixSliceXx6","qualname":"::base::alias_slice::MatrixSliceXx6","value":"MatrixSliceMN<'a, N, Dynamic, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 6 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 6 columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":174201,"byte_end":174287,"line_start":173,"line_end":173,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1475},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":174462,"byte_end":174474,"line_start":178,"line_end":178,"column_start":10,"column_end":22},"name":"VectorSliceN","qualname":"::base::alias_slice::VectorSliceN","value":"Matrix<N, D, U1, SliceStorage<'a, N, D, U1, RStride, CStride>>","parent":null,"children":[],"decl_id":null,"docs":" A column vector slice with `D` rows.\n","sig":null,"attributes":[{"value":"/ A column vector slice with `D` rows.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":174412,"byte_end":174452,"line_start":177,"line_end":177,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1481},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":174655,"byte_end":174667,"line_start":182,"line_end":182,"column_start":10,"column_end":22},"name":"DVectorSlice","qualname":"::base::alias_slice::DVectorSlice","value":"VectorSliceN<'a, N, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column vector slice dynamic numbers of rows and columns.\n","sig":null,"attributes":[{"value":"/ A column vector slice dynamic numbers of rows and columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":174583,"byte_end":174645,"line_start":181,"line_end":181,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":1486},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":174802,"byte_end":174814,"line_start":186,"line_end":186,"column_start":10,"column_end":22},"name":"VectorSlice1","qualname":"::base::alias_slice::VectorSlice1","value":"VectorSliceN<'a, N, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 1D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 1D column vector slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":174763,"byte_end":174792,"line_start":185,"line_end":185,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1491},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":174938,"byte_end":174950,"line_start":189,"line_end":189,"column_start":10,"column_end":22},"name":"VectorSlice2","qualname":"::base::alias_slice::VectorSlice2","value":"VectorSliceN<'a, N, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 2D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 2D column vector slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":174899,"byte_end":174928,"line_start":188,"line_end":188,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1496},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":175074,"byte_end":175086,"line_start":192,"line_end":192,"column_start":10,"column_end":22},"name":"VectorSlice3","qualname":"::base::alias_slice::VectorSlice3","value":"VectorSliceN<'a, N, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 3D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 3D column vector slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":175035,"byte_end":175064,"line_start":191,"line_end":191,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1501},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":175210,"byte_end":175222,"line_start":195,"line_end":195,"column_start":10,"column_end":22},"name":"VectorSlice4","qualname":"::base::alias_slice::VectorSlice4","value":"VectorSliceN<'a, N, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 4D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 4D column vector slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":175171,"byte_end":175200,"line_start":194,"line_end":194,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1506},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":175346,"byte_end":175358,"line_start":198,"line_end":198,"column_start":10,"column_end":22},"name":"VectorSlice5","qualname":"::base::alias_slice::VectorSlice5","value":"VectorSliceN<'a, N, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 5D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 5D column vector slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":175307,"byte_end":175336,"line_start":197,"line_end":197,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1511},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":175482,"byte_end":175494,"line_start":201,"line_end":201,"column_start":10,"column_end":22},"name":"VectorSlice6","qualname":"::base::alias_slice::VectorSlice6","value":"VectorSliceN<'a, N, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 6D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 6D column vector slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":175443,"byte_end":175472,"line_start":200,"line_end":200,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1516},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":175718,"byte_end":175734,"line_start":212,"line_end":212,"column_start":10,"column_end":26},"name":"MatrixSliceMutMN","qualname":"::base::alias_slice::MatrixSliceMutMN","value":"Matrix<N, R, C, SliceStorageMut<'a, N, R, C, RStride, CStride>>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with `R` rows and `C` columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with `R` rows and `C` columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":175638,"byte_end":175708,"line_start":211,"line_end":211,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":1523},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":175923,"byte_end":175938,"line_start":216,"line_end":216,"column_start":10,"column_end":25},"name":"MatrixSliceMutN","qualname":"::base::alias_slice::MatrixSliceMutN","value":"MatrixSliceMutMN<'a, N, D, D, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with `D` rows and columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with `D` rows and columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":175847,"byte_end":175913,"line_start":215,"line_end":215,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":1529},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":176118,"byte_end":176133,"line_start":220,"line_end":220,"column_start":10,"column_end":25},"name":"DMatrixSliceMut","qualname":"::base::alias_slice::DMatrixSliceMut","value":"MatrixSliceMutN<'a, N, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice dynamic numbers of rows and columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice dynamic numbers of rows and columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":176032,"byte_end":176108,"line_start":219,"line_end":219,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":1534},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":176286,"byte_end":176301,"line_start":224,"line_end":224,"column_start":10,"column_end":25},"name":"MatrixSliceMut1","qualname":"::base::alias_slice::MatrixSliceMut1","value":"MatrixSliceMutN<'a, N, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x1 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":176232,"byte_end":176276,"line_start":223,"line_end":223,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1539},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":176443,"byte_end":176458,"line_start":227,"line_end":227,"column_start":10,"column_end":25},"name":"MatrixSliceMut2","qualname":"::base::alias_slice::MatrixSliceMut2","value":"MatrixSliceMutN<'a, N, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x2 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":176389,"byte_end":176433,"line_start":226,"line_end":226,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1544},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":176600,"byte_end":176615,"line_start":230,"line_end":230,"column_start":10,"column_end":25},"name":"MatrixSliceMut3","qualname":"::base::alias_slice::MatrixSliceMut3","value":"MatrixSliceMutN<'a, N, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x3 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":176546,"byte_end":176590,"line_start":229,"line_end":229,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1549},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":176757,"byte_end":176772,"line_start":233,"line_end":233,"column_start":10,"column_end":25},"name":"MatrixSliceMut4","qualname":"::base::alias_slice::MatrixSliceMut4","value":"MatrixSliceMutN<'a, N, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x4 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":176703,"byte_end":176747,"line_start":232,"line_end":232,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1554},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":176914,"byte_end":176929,"line_start":236,"line_end":236,"column_start":10,"column_end":25},"name":"MatrixSliceMut5","qualname":"::base::alias_slice::MatrixSliceMut5","value":"MatrixSliceMutN<'a, N, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x5 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":176860,"byte_end":176904,"line_start":235,"line_end":235,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1559},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":177071,"byte_end":177086,"line_start":239,"line_end":239,"column_start":10,"column_end":25},"name":"MatrixSliceMut6","qualname":"::base::alias_slice::MatrixSliceMut6","value":"MatrixSliceMutN<'a, N, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x6 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":177017,"byte_end":177061,"line_start":238,"line_end":238,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1564},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":177229,"byte_end":177246,"line_start":243,"line_end":243,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x2","qualname":"::base::alias_slice::MatrixSliceMut1x2","value":"MatrixSliceMutMN<'a, N, U1, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x2 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":177175,"byte_end":177219,"line_start":242,"line_end":242,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1569},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":177393,"byte_end":177410,"line_start":246,"line_end":246,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x3","qualname":"::base::alias_slice::MatrixSliceMut1x3","value":"MatrixSliceMutMN<'a, N, U1, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x3 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":177339,"byte_end":177383,"line_start":245,"line_end":245,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1574},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":177557,"byte_end":177574,"line_start":249,"line_end":249,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x4","qualname":"::base::alias_slice::MatrixSliceMut1x4","value":"MatrixSliceMutMN<'a, N, U1, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x4 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":177503,"byte_end":177547,"line_start":248,"line_end":248,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1579},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":177721,"byte_end":177738,"line_start":252,"line_end":252,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x5","qualname":"::base::alias_slice::MatrixSliceMut1x5","value":"MatrixSliceMutMN<'a, N, U1, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x5 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":177667,"byte_end":177711,"line_start":251,"line_end":251,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1584},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":177885,"byte_end":177902,"line_start":255,"line_end":255,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x6","qualname":"::base::alias_slice::MatrixSliceMut1x6","value":"MatrixSliceMutMN<'a, N, U1, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x6 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":177831,"byte_end":177875,"line_start":254,"line_end":254,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1589},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":178050,"byte_end":178067,"line_start":259,"line_end":259,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x1","qualname":"::base::alias_slice::MatrixSliceMut2x1","value":"MatrixSliceMutMN<'a, N, U2, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x1 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":177996,"byte_end":178040,"line_start":258,"line_end":258,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1594},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":178214,"byte_end":178231,"line_start":262,"line_end":262,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x3","qualname":"::base::alias_slice::MatrixSliceMut2x3","value":"MatrixSliceMutMN<'a, N, U2, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x3 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":178160,"byte_end":178204,"line_start":261,"line_end":261,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1599},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":178378,"byte_end":178395,"line_start":265,"line_end":265,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x4","qualname":"::base::alias_slice::MatrixSliceMut2x4","value":"MatrixSliceMutMN<'a, N, U2, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x4 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":178324,"byte_end":178368,"line_start":264,"line_end":264,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1604},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":178542,"byte_end":178559,"line_start":268,"line_end":268,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x5","qualname":"::base::alias_slice::MatrixSliceMut2x5","value":"MatrixSliceMutMN<'a, N, U2, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x5 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":178488,"byte_end":178532,"line_start":267,"line_end":267,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1609},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":178706,"byte_end":178723,"line_start":271,"line_end":271,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x6","qualname":"::base::alias_slice::MatrixSliceMut2x6","value":"MatrixSliceMutMN<'a, N, U2, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x6 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":178652,"byte_end":178696,"line_start":270,"line_end":270,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1614},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":178871,"byte_end":178888,"line_start":275,"line_end":275,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x1","qualname":"::base::alias_slice::MatrixSliceMut3x1","value":"MatrixSliceMutMN<'a, N, U3, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x1 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":178817,"byte_end":178861,"line_start":274,"line_end":274,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1619},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":179035,"byte_end":179052,"line_start":278,"line_end":278,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x2","qualname":"::base::alias_slice::MatrixSliceMut3x2","value":"MatrixSliceMutMN<'a, N, U3, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x2 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":178981,"byte_end":179025,"line_start":277,"line_end":277,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1624},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":179199,"byte_end":179216,"line_start":281,"line_end":281,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x4","qualname":"::base::alias_slice::MatrixSliceMut3x4","value":"MatrixSliceMutMN<'a, N, U3, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x4 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":179145,"byte_end":179189,"line_start":280,"line_end":280,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1629},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":179363,"byte_end":179380,"line_start":284,"line_end":284,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x5","qualname":"::base::alias_slice::MatrixSliceMut3x5","value":"MatrixSliceMutMN<'a, N, U3, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x5 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":179309,"byte_end":179353,"line_start":283,"line_end":283,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1634},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":179527,"byte_end":179544,"line_start":287,"line_end":287,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x6","qualname":"::base::alias_slice::MatrixSliceMut3x6","value":"MatrixSliceMutMN<'a, N, U3, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x6 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":179473,"byte_end":179517,"line_start":286,"line_end":286,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1639},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":179692,"byte_end":179709,"line_start":291,"line_end":291,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x1","qualname":"::base::alias_slice::MatrixSliceMut4x1","value":"MatrixSliceMutMN<'a, N, U4, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x1 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":179638,"byte_end":179682,"line_start":290,"line_end":290,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1644},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":179856,"byte_end":179873,"line_start":294,"line_end":294,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x2","qualname":"::base::alias_slice::MatrixSliceMut4x2","value":"MatrixSliceMutMN<'a, N, U4, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x2 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":179802,"byte_end":179846,"line_start":293,"line_end":293,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1649},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":180020,"byte_end":180037,"line_start":297,"line_end":297,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x3","qualname":"::base::alias_slice::MatrixSliceMut4x3","value":"MatrixSliceMutMN<'a, N, U4, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x3 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":179966,"byte_end":180010,"line_start":296,"line_end":296,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1654},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":180184,"byte_end":180201,"line_start":300,"line_end":300,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x5","qualname":"::base::alias_slice::MatrixSliceMut4x5","value":"MatrixSliceMutMN<'a, N, U4, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x5 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":180130,"byte_end":180174,"line_start":299,"line_end":299,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1659},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":180348,"byte_end":180365,"line_start":303,"line_end":303,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x6","qualname":"::base::alias_slice::MatrixSliceMut4x6","value":"MatrixSliceMutMN<'a, N, U4, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x6 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":180294,"byte_end":180338,"line_start":302,"line_end":302,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1664},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":180513,"byte_end":180530,"line_start":307,"line_end":307,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x1","qualname":"::base::alias_slice::MatrixSliceMut5x1","value":"MatrixSliceMutMN<'a, N, U5, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x1 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":180459,"byte_end":180503,"line_start":306,"line_end":306,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1669},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":180677,"byte_end":180694,"line_start":310,"line_end":310,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x2","qualname":"::base::alias_slice::MatrixSliceMut5x2","value":"MatrixSliceMutMN<'a, N, U5, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x2 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":180623,"byte_end":180667,"line_start":309,"line_end":309,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1674},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":180841,"byte_end":180858,"line_start":313,"line_end":313,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x3","qualname":"::base::alias_slice::MatrixSliceMut5x3","value":"MatrixSliceMutMN<'a, N, U5, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x3 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":180787,"byte_end":180831,"line_start":312,"line_end":312,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1679},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":181005,"byte_end":181022,"line_start":316,"line_end":316,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x4","qualname":"::base::alias_slice::MatrixSliceMut5x4","value":"MatrixSliceMutMN<'a, N, U5, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x4 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":180951,"byte_end":180995,"line_start":315,"line_end":315,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1684},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":181169,"byte_end":181186,"line_start":319,"line_end":319,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x6","qualname":"::base::alias_slice::MatrixSliceMut5x6","value":"MatrixSliceMutMN<'a, N, U5, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x6 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":181115,"byte_end":181159,"line_start":318,"line_end":318,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1689},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":181334,"byte_end":181351,"line_start":323,"line_end":323,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x1","qualname":"::base::alias_slice::MatrixSliceMut6x1","value":"MatrixSliceMutMN<'a, N, U6, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x1 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":181280,"byte_end":181324,"line_start":322,"line_end":322,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1694},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":181498,"byte_end":181515,"line_start":326,"line_end":326,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x2","qualname":"::base::alias_slice::MatrixSliceMut6x2","value":"MatrixSliceMutMN<'a, N, U6, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x2 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":181444,"byte_end":181488,"line_start":325,"line_end":325,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1699},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":181662,"byte_end":181679,"line_start":329,"line_end":329,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x3","qualname":"::base::alias_slice::MatrixSliceMut6x3","value":"MatrixSliceMutMN<'a, N, U6, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x3 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":181608,"byte_end":181652,"line_start":328,"line_end":328,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1704},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":181826,"byte_end":181843,"line_start":332,"line_end":332,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x4","qualname":"::base::alias_slice::MatrixSliceMut6x4","value":"MatrixSliceMutMN<'a, N, U6, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x4 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":181772,"byte_end":181816,"line_start":331,"line_end":331,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1709},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":181990,"byte_end":182007,"line_start":335,"line_end":335,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x5","qualname":"::base::alias_slice::MatrixSliceMut6x5","value":"MatrixSliceMutMN<'a, N, U6, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x5 mutable matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":181936,"byte_end":181980,"line_start":334,"line_end":334,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1714},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":182204,"byte_end":182221,"line_start":339,"line_end":339,"column_start":10,"column_end":27},"name":"MatrixSliceMut1xX","qualname":"::base::alias_slice::MatrixSliceMut1xX","value":"MatrixSliceMutMN<'a, N, U1, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 1 row and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 1 row and a number of columns chosen at runtime.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":182101,"byte_end":182194,"line_start":338,"line_end":338,"column_start":1,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":1719},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":182423,"byte_end":182440,"line_start":342,"line_end":342,"column_start":10,"column_end":27},"name":"MatrixSliceMut2xX","qualname":"::base::alias_slice::MatrixSliceMut2xX","value":"MatrixSliceMutMN<'a, N, U2, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 2 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 2 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":182319,"byte_end":182413,"line_start":341,"line_end":341,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1724},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":182642,"byte_end":182659,"line_start":345,"line_end":345,"column_start":10,"column_end":27},"name":"MatrixSliceMut3xX","qualname":"::base::alias_slice::MatrixSliceMut3xX","value":"MatrixSliceMutMN<'a, N, U3, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 3 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 3 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":182538,"byte_end":182632,"line_start":344,"line_end":344,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1729},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":182861,"byte_end":182878,"line_start":348,"line_end":348,"column_start":10,"column_end":27},"name":"MatrixSliceMut4xX","qualname":"::base::alias_slice::MatrixSliceMut4xX","value":"MatrixSliceMutMN<'a, N, U4, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 4 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 4 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":182757,"byte_end":182851,"line_start":347,"line_end":347,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1734},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":183080,"byte_end":183097,"line_start":351,"line_end":351,"column_start":10,"column_end":27},"name":"MatrixSliceMut5xX","qualname":"::base::alias_slice::MatrixSliceMut5xX","value":"MatrixSliceMutMN<'a, N, U5, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 5 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 5 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":182976,"byte_end":183070,"line_start":350,"line_end":350,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1739},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":183299,"byte_end":183316,"line_start":354,"line_end":354,"column_start":10,"column_end":27},"name":"MatrixSliceMut6xX","qualname":"::base::alias_slice::MatrixSliceMut6xX","value":"MatrixSliceMutMN<'a, N, U6, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 6 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 6 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":183195,"byte_end":183289,"line_start":353,"line_end":353,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1744},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":183518,"byte_end":183535,"line_start":358,"line_end":358,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx1","qualname":"::base::alias_slice::MatrixSliceMutXx1","value":"MatrixSliceMutMN<'a, N, Dynamic, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 1 column.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 1 column.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":183415,"byte_end":183508,"line_start":357,"line_end":357,"column_start":1,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":1749},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":183742,"byte_end":183759,"line_start":361,"line_end":361,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx2","qualname":"::base::alias_slice::MatrixSliceMutXx2","value":"MatrixSliceMutMN<'a, N, Dynamic, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 2 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 2 columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":183638,"byte_end":183732,"line_start":360,"line_end":360,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1754},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":183966,"byte_end":183983,"line_start":364,"line_end":364,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx3","qualname":"::base::alias_slice::MatrixSliceMutXx3","value":"MatrixSliceMutMN<'a, N, Dynamic, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 3 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 3 columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":183862,"byte_end":183956,"line_start":363,"line_end":363,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1759},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":184190,"byte_end":184207,"line_start":367,"line_end":367,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx4","qualname":"::base::alias_slice::MatrixSliceMutXx4","value":"MatrixSliceMutMN<'a, N, Dynamic, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 4 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 4 columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":184086,"byte_end":184180,"line_start":366,"line_end":366,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1764},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":184414,"byte_end":184431,"line_start":370,"line_end":370,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx5","qualname":"::base::alias_slice::MatrixSliceMutXx5","value":"MatrixSliceMutMN<'a, N, Dynamic, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 5 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 5 columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":184310,"byte_end":184404,"line_start":369,"line_end":369,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1769},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":184638,"byte_end":184655,"line_start":373,"line_end":373,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx6","qualname":"::base::alias_slice::MatrixSliceMutXx6","value":"MatrixSliceMutMN<'a, N, Dynamic, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 6 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 6 columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":184534,"byte_end":184628,"line_start":372,"line_end":372,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1774},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":184817,"byte_end":184832,"line_start":377,"line_end":377,"column_start":10,"column_end":25},"name":"VectorSliceMutN","qualname":"::base::alias_slice::VectorSliceMutN","value":"Matrix<N, D, U1, SliceStorageMut<'a, N, D, U1, RStride, CStride>>","parent":null,"children":[],"decl_id":null,"docs":" A mutable column vector slice with `D` rows.\n","sig":null,"attributes":[{"value":"/ A mutable column vector slice with `D` rows.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":184759,"byte_end":184807,"line_start":376,"line_end":376,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1780},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":185024,"byte_end":185039,"line_start":381,"line_end":381,"column_start":10,"column_end":25},"name":"DVectorSliceMut","qualname":"::base::alias_slice::DVectorSliceMut","value":"VectorSliceMutN<'a, N, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A mutable column vector slice dynamic numbers of rows and columns.\n","sig":null,"attributes":[{"value":"/ A mutable column vector slice dynamic numbers of rows and columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":184944,"byte_end":185014,"line_start":380,"line_end":380,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":1785},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":185185,"byte_end":185200,"line_start":385,"line_end":385,"column_start":10,"column_end":25},"name":"VectorSliceMut1","qualname":"::base::alias_slice::VectorSliceMut1","value":"VectorSliceMutN<'a, N, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 1D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 1D mutable column vector slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":185138,"byte_end":185175,"line_start":384,"line_end":384,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1790},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":185335,"byte_end":185350,"line_start":388,"line_end":388,"column_start":10,"column_end":25},"name":"VectorSliceMut2","qualname":"::base::alias_slice::VectorSliceMut2","value":"VectorSliceMutN<'a, N, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 2D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 2D mutable column vector slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":185288,"byte_end":185325,"line_start":387,"line_end":387,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1795},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":185485,"byte_end":185500,"line_start":391,"line_end":391,"column_start":10,"column_end":25},"name":"VectorSliceMut3","qualname":"::base::alias_slice::VectorSliceMut3","value":"VectorSliceMutN<'a, N, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 3D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 3D mutable column vector slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":185438,"byte_end":185475,"line_start":390,"line_end":390,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1800},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":185635,"byte_end":185650,"line_start":394,"line_end":394,"column_start":10,"column_end":25},"name":"VectorSliceMut4","qualname":"::base::alias_slice::VectorSliceMut4","value":"VectorSliceMutN<'a, N, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 4D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 4D mutable column vector slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":185588,"byte_end":185625,"line_start":393,"line_end":393,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1805},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":185785,"byte_end":185800,"line_start":397,"line_end":397,"column_start":10,"column_end":25},"name":"VectorSliceMut5","qualname":"::base::alias_slice::VectorSliceMut5","value":"VectorSliceMutN<'a, N, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 5D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 5D mutable column vector slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":185738,"byte_end":185775,"line_start":396,"line_end":396,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1810},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":185935,"byte_end":185950,"line_start":400,"line_end":400,"column_start":10,"column_end":25},"name":"VectorSliceMut6","qualname":"::base::alias_slice::VectorSliceMut6","value":"VectorSliceMutN<'a, N, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 6D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 6D mutable column vector slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/alias_slice.rs","byte_start":185888,"byte_end":185925,"line_start":399,"line_end":399,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1843},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":187105,"byte_end":187117,"line_start":37,"line_end":37,"column_start":12,"column_end":24},"name":"ArrayStorage","qualname":"::base::array_storage::ArrayStorage","value":"ArrayStorage {  }","parent":null,"children":[{"krate":0,"index":1847}],"decl_id":null,"docs":" A array-based statically sized matrix data storage.\n","sig":null,"attributes":[{"value":"/ A array-based statically sized matrix data storage.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":187027,"byte_end":187082,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":187083,"byte_end":187093,"line_start":36,"line_end":36,"column_start":1,"column_end":11}}]},{"kind":"Type","id":{"krate":0,"index":1848},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":187388,"byte_end":187399,"line_start":49,"line_end":49,"column_start":10,"column_end":21},"name":"MatrixArray","qualname":"::base::array_storage::MatrixArray","value":"ArrayStorage<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Renamed to [ArrayStorage].\n","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `ArrayStorage`\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":187298,"byte_end":187347,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/ Renamed to [ArrayStorage].","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":187348,"byte_end":187378,"line_start":48,"line_end":48,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1959},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":196025,"byte_end":196036,"line_start":30,"line_end":30,"column_start":12,"column_end":23},"name":"new_scaling","qualname":"<MatrixN<N, D>>::new_scaling","value":"fn (scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix that applies the same scaling factor on each dimension.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix that applies the same scaling factor on each dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":195907,"byte_end":195999,"line_start":28,"line_end":28,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":196004,"byte_end":196013,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1960},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":196318,"byte_end":196340,"line_start":39,"line_end":39,"column_start":12,"column_end":34},"name":"new_nonuniform_scaling","qualname":"<MatrixN<N, D>>::new_nonuniform_scaling","value":"fn <SB> (scaling: &Vector<N, DimNameDiff<D, U1>, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix that applies a distinct scaling factor for each dimension.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix that applies a distinct scaling factor for each dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":196197,"byte_end":196292,"line_start":37,"line_end":37,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":196297,"byte_end":196306,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1962},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":196744,"byte_end":196759,"line_start":54,"line_end":54,"column_start":12,"column_end":27},"name":"new_translation","qualname":"<MatrixN<N, D>>::new_translation","value":"fn <SB> (translation: &Vector<N, DimNameDiff<D, U1>, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix that applies a pure translation.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix that applies a pure translation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":196649,"byte_end":196718,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":196723,"byte_end":196732,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1966},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":197219,"byte_end":197231,"line_start":70,"line_end":70,"column_start":12,"column_end":24},"name":"new_rotation","qualname":"<Matrix3<N>>::new_rotation","value":"fn (angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 2 dimensional homogeneous rotation matrix from an angle in radian.\n","sig":null,"attributes":[{"value":"/ Builds a 2 dimensional homogeneous rotation matrix from an angle in radian.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":197114,"byte_end":197193,"line_start":68,"line_end":68,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":197198,"byte_end":197207,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1969},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":197537,"byte_end":197549,"line_start":80,"line_end":80,"column_start":12,"column_end":24},"name":"new_rotation","qualname":"<Matrix4<N>>::new_rotation","value":"fn (axisangle: Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","sig":null,"attributes":[{"value":"/ Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":197344,"byte_end":197436,"line_start":76,"line_end":76,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":197441,"byte_end":197444,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Returns the identity matrix if the given argument is zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":197449,"byte_end":197511,"line_start":78,"line_end":78,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":197516,"byte_end":197525,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1970},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":197838,"byte_end":197860,"line_start":88,"line_end":88,"column_start":12,"column_end":34},"name":"new_rotation_wrt_point","qualname":"<Matrix4<N>>::new_rotation_wrt_point","value":"fn (axisangle: Vector3<N>, pt: Point3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","sig":null,"attributes":[{"value":"/ Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":197645,"byte_end":197737,"line_start":84,"line_end":84,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":197742,"byte_end":197745,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Returns the identity matrix if the given argument is zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":197750,"byte_end":197812,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":197817,"byte_end":197826,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1971},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":198285,"byte_end":198301,"line_start":98,"line_end":98,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<Matrix4<N>>::from_scaled_axis","value":"fn (axisangle: Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","sig":null,"attributes":[{"value":"/ Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":198041,"byte_end":198133,"line_start":93,"line_end":93,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":198138,"byte_end":198141,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Returns the identity matrix if the given argument is zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":198146,"byte_end":198208,"line_start":95,"line_end":95,"column_start":5,"column_end":67}},{"value":"/ This is identical to `Self::new_rotation`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":198213,"byte_end":198259,"line_start":96,"line_end":96,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":198264,"byte_end":198273,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1972},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":198559,"byte_end":198576,"line_start":105,"line_end":105,"column_start":12,"column_end":29},"name":"from_euler_angles","qualname":"<Matrix4<N>>::from_euler_angles","value":"fn (roll: N, pitch: N, yaw: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new rotation from Euler angles.","sig":null,"attributes":[{"value":"/ Creates a new rotation from Euler angles.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":198410,"byte_end":198455,"line_start":102,"line_end":102,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":198460,"byte_end":198463,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ The primitive rotations are applied in order: 1 roll − 2 pitch − 3 yaw.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":198468,"byte_end":198547,"line_start":104,"line_end":104,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1973},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":198787,"byte_end":198802,"line_start":110,"line_end":110,"column_start":12,"column_end":27},"name":"from_axis_angle","qualname":"<Matrix4<N>>::from_axis_angle","value":"fn (axis: &Unit<Vector3<N>>, angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D homogeneous rotation matrix from an axis and a rotation angle.\n","sig":null,"attributes":[{"value":"/ Builds a 3D homogeneous rotation matrix from an axis and a rotation angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":198697,"byte_end":198775,"line_start":109,"line_end":109,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1974},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":199018,"byte_end":199034,"line_start":116,"line_end":116,"column_start":12,"column_end":28},"name":"new_orthographic","qualname":"<Matrix4<N>>::new_orthographic","value":"fn (left: N, right: N, bottom: N, top: N, znear: N, zfar: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix for an orthographic projection.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix for an orthographic projection.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":198924,"byte_end":198992,"line_start":114,"line_end":114,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":198997,"byte_end":199006,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1975},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":199284,"byte_end":199299,"line_start":122,"line_end":122,"column_start":12,"column_end":27},"name":"new_perspective","qualname":"<Matrix4<N>>::new_perspective","value":"fn (aspect: N, fovy: N, znear: N, zfar: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix for a perspective projection.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix for a perspective projection.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":199192,"byte_end":199258,"line_start":120,"line_end":120,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":199263,"byte_end":199272,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1976},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":199711,"byte_end":199723,"line_start":132,"line_end":132,"column_start":12,"column_end":24},"name":"face_towards","qualname":"<Matrix4<N>>::face_towards","value":"fn (eye: &Point3<N>, target: &Point3<N>, up: &Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an isometry that corresponds to the local frame of an observer standing at the\n point `eye` and looking toward `target`.","sig":null,"attributes":[{"value":"/ Creates an isometry that corresponds to the local frame of an observer standing at the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":199426,"byte_end":199516,"line_start":126,"line_end":126,"column_start":5,"column_end":95}},{"value":"/ point `eye` and looking toward `target`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":199521,"byte_end":199565,"line_start":127,"line_end":127,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":199570,"byte_end":199573,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `target - eye` to the positive `z` axis and the origin to the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":199578,"byte_end":199670,"line_start":129,"line_end":129,"column_start":5,"column_end":97}},{"value":"/ `eye`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":199675,"byte_end":199685,"line_start":130,"line_end":130,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":199690,"byte_end":199699,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1977},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":199989,"byte_end":200007,"line_start":138,"line_end":138,"column_start":12,"column_end":30},"name":"new_observer_frame","qualname":"<Matrix4<N>>::new_observer_frame","value":"fn (eye: &Point3<N>, target: &Point3<N>, up: &Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Deprecated: Use [Matrix4::face_towards] instead.\n","sig":null,"attributes":[{"value":"/ Deprecated: Use [Matrix4::face_towards] instead.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":199871,"byte_end":199923,"line_start":136,"line_end":136,"column_start":5,"column_end":57}},{"value":"deprecated(note = \"renamed to `face_towards`\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":199928,"byte_end":199977,"line_start":137,"line_end":137,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1978},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":200202,"byte_end":200212,"line_start":144,"line_end":144,"column_start":12,"column_end":22},"name":"look_at_rh","qualname":"<Matrix4<N>>::look_at_rh","value":"fn (eye: &Point3<N>, target: &Point3<N>, up: &Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a right-handed look-at view matrix.\n","sig":null,"attributes":[{"value":"/ Builds a right-handed look-at view matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":200130,"byte_end":200176,"line_start":142,"line_end":142,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":200181,"byte_end":200190,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1979},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":200429,"byte_end":200439,"line_start":150,"line_end":150,"column_start":12,"column_end":22},"name":"look_at_lh","qualname":"<Matrix4<N>>::look_at_lh","value":"fn (eye: &Point3<N>, target: &Point3<N>, up: &Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a left-handed look-at view matrix.\n","sig":null,"attributes":[{"value":"/ Builds a left-handed look-at view matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":200358,"byte_end":200403,"line_start":148,"line_end":148,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":200408,"byte_end":200417,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1984},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":200875,"byte_end":200889,"line_start":161,"line_end":161,"column_start":12,"column_end":26},"name":"append_scaling","qualname":"<SquareMatrix<N, D, S>>::append_scaling","value":"fn (&self, scaling: N) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to `self` followed by an uniform scaling factor.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to `self` followed by an uniform scaling factor.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":200701,"byte_end":200787,"line_start":158,"line_end":158,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":200792,"byte_end":200801,"line_start":159,"line_end":159,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use append_scaling_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":200806,"byte_end":200863,"line_start":160,"line_end":160,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1985},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":201296,"byte_end":201311,"line_start":174,"line_end":174,"column_start":12,"column_end":27},"name":"prepend_scaling","qualname":"<SquareMatrix<N, D, S>>::prepend_scaling","value":"fn (&self, scaling: N) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to an uniform scaling factor followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to an uniform scaling factor followed by `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":201121,"byte_end":201207,"line_start":171,"line_end":171,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":201212,"byte_end":201221,"line_start":172,"line_end":172,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use prepend_scaling_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":201226,"byte_end":201284,"line_start":173,"line_end":173,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1986},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":201732,"byte_end":201757,"line_start":187,"line_end":187,"column_start":12,"column_end":37},"name":"append_nonuniform_scaling","qualname":"<SquareMatrix<N, D, S>>::append_nonuniform_scaling","value":"fn <SB> (&self, scaling: &Vector<N, DimNameDiff<D, U1>, SB>) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to `self` followed by a non-uniform scaling factor.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to `self` followed by a non-uniform scaling factor.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":201544,"byte_end":201633,"line_start":184,"line_end":184,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":201638,"byte_end":201647,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use append_nonuniform_scaling_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":201652,"byte_end":201720,"line_start":186,"line_end":186,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1988},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":202293,"byte_end":202319,"line_start":204,"line_end":204,"column_start":12,"column_end":38},"name":"prepend_nonuniform_scaling","qualname":"<SquareMatrix<N, D, S>>::prepend_nonuniform_scaling","value":"fn <SB> (&self, scaling: &Vector<N, DimNameDiff<D, U1>, SB>) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to a non-uniform scaling factor followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to a non-uniform scaling factor followed by `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":202104,"byte_end":202193,"line_start":201,"line_end":201,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":202198,"byte_end":202207,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use prepend_nonuniform_scaling_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":202212,"byte_end":202281,"line_start":203,"line_end":203,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1990},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":202833,"byte_end":202851,"line_start":221,"line_end":221,"column_start":12,"column_end":30},"name":"append_translation","qualname":"<SquareMatrix<N, D, S>>::append_translation","value":"fn <SB> (&self, shift: &Vector<N, DimNameDiff<D, U1>, SB>) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to `self` followed by a translation.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to `self` followed by a translation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":202667,"byte_end":202741,"line_start":218,"line_end":218,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":202746,"byte_end":202755,"line_start":219,"line_end":219,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use append_translation_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":202760,"byte_end":202821,"line_start":220,"line_end":220,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1992},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":203331,"byte_end":203350,"line_start":235,"line_end":235,"column_start":12,"column_end":31},"name":"prepend_translation","qualname":"<SquareMatrix<N, D, S>>::prepend_translation","value":"fn <SB> (&self, shift: &Vector<N, DimNameDiff<D, U1>, SB>) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to a translation followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to a translation followed by `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":203164,"byte_end":203238,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":203243,"byte_end":203252,"line_start":233,"line_end":233,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use prepend_translation_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":203257,"byte_end":203319,"line_start":234,"line_end":234,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1998},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":203962,"byte_end":203980,"line_start":255,"line_end":255,"column_start":12,"column_end":30},"name":"append_scaling_mut","qualname":"<SquareMatrix<N, D, S>>::append_scaling_mut","value":"fn (&mut self, scaling: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place the transformation equal to `self` followed by an uniform scaling factor.\n","sig":null,"attributes":[{"value":"/ Computes in-place the transformation equal to `self` followed by an uniform scaling factor.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":203841,"byte_end":203936,"line_start":253,"line_end":253,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":203941,"byte_end":203950,"line_start":254,"line_end":254,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1999},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":204281,"byte_end":204300,"line_start":265,"line_end":265,"column_start":12,"column_end":31},"name":"prepend_scaling_mut","qualname":"<SquareMatrix<N, D, S>>::prepend_scaling_mut","value":"fn (&mut self, scaling: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place the transformation equal to an uniform scaling factor followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes in-place the transformation equal to an uniform scaling factor followed by `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":204160,"byte_end":204255,"line_start":263,"line_end":263,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":204260,"byte_end":204269,"line_start":264,"line_end":264,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2000},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":204607,"byte_end":204636,"line_start":275,"line_end":275,"column_start":12,"column_end":41},"name":"append_nonuniform_scaling_mut","qualname":"<SquareMatrix<N, D, S>>::append_nonuniform_scaling_mut","value":"fn <SB> (&mut self, scaling: &Vector<N, DimNameDiff<D, U1>, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place the transformation equal to `self` followed by a non-uniform scaling factor.\n","sig":null,"attributes":[{"value":"/ Computes in-place the transformation equal to `self` followed by a non-uniform scaling factor.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":204483,"byte_end":204581,"line_start":273,"line_end":273,"column_start":5,"column_end":103}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":204586,"byte_end":204595,"line_start":274,"line_end":274,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2002},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":205078,"byte_end":205108,"line_start":288,"line_end":288,"column_start":12,"column_end":42},"name":"prepend_nonuniform_scaling_mut","qualname":"<SquareMatrix<N, D, S>>::prepend_nonuniform_scaling_mut","value":"fn <SB> (&mut self, scaling: &Vector<N, DimNameDiff<D, U1>, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place the transformation equal to a non-uniform scaling factor followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes in-place the transformation equal to a non-uniform scaling factor followed by `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":204954,"byte_end":205052,"line_start":286,"line_end":286,"column_start":5,"column_end":103}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":205057,"byte_end":205066,"line_start":287,"line_end":287,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2004},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":205548,"byte_end":205570,"line_start":303,"line_end":303,"column_start":12,"column_end":34},"name":"append_translation_mut","qualname":"<SquareMatrix<N, D, S>>::append_translation_mut","value":"fn <SB> (&mut self, shift: &Vector<N, DimNameDiff<D, U1>, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to `self` followed by a translation.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to `self` followed by a translation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":205448,"byte_end":205522,"line_start":301,"line_end":301,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":205527,"byte_end":205536,"line_start":302,"line_end":302,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2006},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":206052,"byte_end":206075,"line_start":318,"line_end":318,"column_start":12,"column_end":35},"name":"prepend_translation_mut","qualname":"<SquareMatrix<N, D, S>>::prepend_translation_mut","value":"fn <SB> (&mut self, shift: &Vector<N, DimNameDiff<D, U1>, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to a translation followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to a translation followed by `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":205952,"byte_end":206026,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":206031,"byte_end":206040,"line_start":317,"line_end":317,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2012},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":207076,"byte_end":207092,"line_start":345,"line_end":345,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<SquareMatrix<N, D, S>>::transform_vector","value":"fn (&self, v: &VectorN<N, DimNameDiff<D, U1>>) -> VectorN<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Transforms the given vector, assuming the matrix `self` uses homogeneous coordinates.\n","sig":null,"attributes":[{"value":"/ Transforms the given vector, assuming the matrix `self` uses homogeneous coordinates.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":206961,"byte_end":207050,"line_start":343,"line_end":343,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":207055,"byte_end":207064,"line_start":344,"line_end":344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2013},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":207635,"byte_end":207650,"line_start":362,"line_end":362,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<SquareMatrix<N, D, S>>::transform_point","value":"fn (&self, pt: &Point<N, DimNameDiff<D, U1>>) -> Point<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Transforms the given point, assuming the matrix `self` uses homogeneous coordinates.\n","sig":null,"attributes":[{"value":"/ Transforms the given point, assuming the matrix `self` uses homogeneous coordinates.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":207521,"byte_end":207609,"line_start":360,"line_end":360,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":207614,"byte_end":207623,"line_start":361,"line_end":361,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2053},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":209296,"byte_end":209299,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"abs","qualname":"<Matrix<N, R, C, S>>::abs","value":"fn (&self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the component-wise absolute value.","sig":null,"attributes":[{"value":"/ Computes the component-wise absolute value.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":208989,"byte_end":209036,"line_start":19,"line_end":19,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":209041,"byte_end":209044,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":209049,"byte_end":209062,"line_start":21,"line_end":21,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":209067,"byte_end":209070,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":209075,"byte_end":209082,"line_start":23,"line_end":23,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":209087,"byte_end":209115,"line_start":24,"line_end":24,"column_start":5,"column_end":33}},{"value":"/ let a = Matrix2::new(0.0, 1.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":209120,"byte_end":209154,"line_start":25,"line_end":25,"column_start":5,"column_end":39}},{"value":"/                      -2.0, -3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":209159,"byte_end":209196,"line_start":26,"line_end":26,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(a.abs(), Matrix2::new(0.0, 1.0, 2.0, 3.0))","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":209201,"byte_end":209258,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":209263,"byte_end":209270,"line_start":28,"line_end":28,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":209275,"byte_end":209284,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":13644},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":214346,"byte_end":214359,"line_start":147,"line_end":147,"column_start":5,"column_end":18},"name":"component_mul","qualname":"<Matrix<N, R1, C1, SA>>::component_mul","value":"fn <R2, C2, SB> (&self, rhs: &Matrix<N, R2, C2, SB>) -> MatrixComponentOp<N, R1, C1, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":"\n    Componentwise matrix or vector multiplication.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":209970,"byte_end":209979,"line_start":51,"line_end":51,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13653},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":214402,"byte_end":214406,"line_start":147,"line_end":147,"column_start":61,"column_end":65},"name":"cmpy","qualname":"<Matrix<N, R1, C1, SA>>::cmpy","value":"fn <R2, C2, SB, R3, C3, SC> (&mut self, alpha: N, a: &Matrix<N, R2, C2, SB>, b: &Matrix<N, R3, C3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":"\n    Computes componentwise `self[i] = alpha * a[i] * b[i] + beta * self[i]`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":211086,"byte_end":211095,"line_start":77,"line_end":77,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13660},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":214380,"byte_end":214400,"line_start":147,"line_end":147,"column_start":39,"column_end":59},"name":"component_mul_assign","qualname":"<Matrix<N, R1, C1, SA>>::component_mul_assign","value":"fn <R2, C2, SB> (&mut self, rhs: &Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"\n    Inplace componentwise matrix or vector multiplication.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":212995,"byte_end":213004,"line_start":112,"line_end":112,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13664},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":214361,"byte_end":214378,"line_start":147,"line_end":147,"column_start":20,"column_end":37},"name":"component_mul_mut","qualname":"<Matrix<N, R1, C1, SA>>::component_mul_mut","value":"fn <R2, C2, SB> (&mut self, rhs: &Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"\n    Inplace componentwise matrix or vector multiplication.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":213805,"byte_end":213814,"line_start":132,"line_end":132,"column_start":13,"column_end":22}},{"value":"deprecated(note =\n             \"This is renamed using the `_assign` suffix instead of the `_mut` suffix.\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":213827,"byte_end":213923,"line_start":133,"line_end":133,"column_start":13,"column_end":109}}]},{"kind":"Method","id":{"krate":0,"index":13673},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":215519,"byte_end":215532,"line_start":192,"line_end":192,"column_start":5,"column_end":18},"name":"component_div","qualname":"<Matrix<N, R1, C1, SA>>::component_div","value":"fn <R2, C2, SB> (&self, rhs: &Matrix<N, R2, C2, SB>) -> MatrixComponentOp<N, R1, C1, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":"\n    Componentwise matrix or vector division.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":209970,"byte_end":209979,"line_start":51,"line_end":51,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13682},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":215575,"byte_end":215579,"line_start":192,"line_end":192,"column_start":61,"column_end":65},"name":"cdpy","qualname":"<Matrix<N, R1, C1, SA>>::cdpy","value":"fn <R2, C2, SB, R3, C3, SC> (&mut self, alpha: N, a: &Matrix<N, R2, C2, SB>, b: &Matrix<N, R3, C3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":"\n    Computes componentwise `self[i] = alpha * a[i] / b[i] + beta * self[i]`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":211086,"byte_end":211095,"line_start":77,"line_end":77,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13689},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":215553,"byte_end":215573,"line_start":192,"line_end":192,"column_start":39,"column_end":59},"name":"component_div_assign","qualname":"<Matrix<N, R1, C1, SA>>::component_div_assign","value":"fn <R2, C2, SB> (&mut self, rhs: &Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"\n    Inplace componentwise matrix or vector division.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":212995,"byte_end":213004,"line_start":112,"line_end":112,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13693},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":215534,"byte_end":215551,"line_start":192,"line_end":192,"column_start":20,"column_end":37},"name":"component_div_mut","qualname":"<Matrix<N, R1, C1, SA>>::component_div_mut","value":"fn <R2, C2, SB> (&mut self, rhs: &Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"\n    Inplace componentwise matrix or vector division.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":213805,"byte_end":213814,"line_start":132,"line_end":132,"column_start":13,"column_end":22}},{"value":"deprecated(note =\n             \"This is renamed using the `_assign` suffix instead of the `_mut` suffix.\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":213827,"byte_end":213923,"line_start":133,"line_end":133,"column_start":13,"column_end":109}}]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":217036,"byte_end":217039,"line_start":250,"line_end":250,"column_start":12,"column_end":15},"name":"inf","qualname":"<Matrix<N, R, C, S>>::inf","value":"fn (&self, other: &Self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the infimum (aka. componentwise min) of two matrices/vectors.\n","sig":null,"attributes":[{"value":"/ Computes the infimum (aka. componentwise min) of two matrices/vectors.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":216936,"byte_end":217010,"line_start":248,"line_end":248,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":217015,"byte_end":217024,"line_start":249,"line_end":249,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":217246,"byte_end":217249,"line_start":256,"line_end":256,"column_start":12,"column_end":15},"name":"sup","qualname":"<Matrix<N, R, C, S>>::sup","value":"fn (&self, other: &Self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the supremum (aka. componentwise max) of two matrices/vectors.\n","sig":null,"attributes":[{"value":"/ Computes the supremum (aka. componentwise max) of two matrices/vectors.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":217145,"byte_end":217220,"line_start":254,"line_end":254,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":217225,"byte_end":217234,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2064},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":217442,"byte_end":217449,"line_start":262,"line_end":262,"column_start":12,"column_end":19},"name":"inf_sup","qualname":"<Matrix<N, R, C, S>>::inf_sup","value":"fn (&self, other: &Self) -> (MatrixMN<N, R, C>, MatrixMN<N, R, C>)","parent":null,"children":[],"decl_id":null,"docs":" Computes the (infimum, supremum) of two matrices/vectors.\n","sig":null,"attributes":[{"value":"/ Computes the (infimum, supremum) of two matrices/vectors.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":217355,"byte_end":217416,"line_start":260,"line_end":260,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":217421,"byte_end":217430,"line_start":261,"line_end":261,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":218654,"byte_end":218679,"line_start":37,"line_end":37,"column_start":19,"column_end":44},"name":"new_uninitialized_generic","qualname":"<MatrixMN<N, R, C>>::new_uninitialized_generic","value":"fn (nrows: R, ncols: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new uninitialized matrix. If the matrix has a compile-time dimension, this panics\n if `nrows != R::to_usize()` or `ncols != C::to_usize()`.\n","sig":null,"attributes":[{"value":"/ Creates a new uninitialized matrix. If the matrix has a compile-time dimension, this panics","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":218461,"byte_end":218556,"line_start":34,"line_end":34,"column_start":5,"column_end":100}},{"value":"/ if `nrows != R::to_usize()` or `ncols != C::to_usize()`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":218561,"byte_end":218621,"line_start":35,"line_end":35,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":218626,"byte_end":218635,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":218884,"byte_end":218904,"line_start":43,"line_end":43,"column_start":12,"column_end":32},"name":"from_element_generic","qualname":"<MatrixMN<N, R, C>>::from_element_generic","value":"fn (nrows: R, ncols: C, elem: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with all its elements set to `elem`.\n","sig":null,"attributes":[{"value":"/ Creates a matrix with all its elements set to `elem`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":218801,"byte_end":218858,"line_start":41,"line_end":41,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":218863,"byte_end":218872,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":219215,"byte_end":219229,"line_start":52,"line_end":52,"column_start":12,"column_end":26},"name":"repeat_generic","qualname":"<MatrixMN<N, R, C>>::repeat_generic","value":"fn (nrows: R, ncols: C, elem: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with all its elements set to `elem`.","sig":null,"attributes":[{"value":"/ Creates a matrix with all its elements set to `elem`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":219084,"byte_end":219141,"line_start":48,"line_end":48,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":219146,"byte_end":219149,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Same as `from_element_generic`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":219154,"byte_end":219189,"line_start":50,"line_end":50,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":219194,"byte_end":219203,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":219487,"byte_end":219500,"line_start":59,"line_end":59,"column_start":12,"column_end":25},"name":"zeros_generic","qualname":"<MatrixMN<N, R, C>>::zeros_generic","value":"fn (nrows: R, ncols: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with all its elements set to 0.\n","sig":null,"attributes":[{"value":"/ Creates a matrix with all its elements set to 0.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":219409,"byte_end":219461,"line_start":57,"line_end":57,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":219466,"byte_end":219475,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":219724,"byte_end":219745,"line_start":68,"line_end":68,"column_start":12,"column_end":33},"name":"from_iterator_generic","qualname":"<MatrixMN<N, R, C>>::from_iterator_generic","value":"fn <I> (nrows: R, ncols: C, iter: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with all its elements filled by an iterator.\n","sig":null,"attributes":[{"value":"/ Creates a matrix with all its elements filled by an iterator.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":219633,"byte_end":219698,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":219703,"byte_end":219712,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":220192,"byte_end":220214,"line_start":81,"line_end":81,"column_start":12,"column_end":34},"name":"from_row_slice_generic","qualname":"<MatrixMN<N, R, C>>::from_row_slice_generic","value":"fn (nrows: R, ncols: C, slice: &[N]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with its elements filled with the components provided by a slice in\n row-major order.","sig":null,"attributes":[{"value":"/ Creates a matrix with its elements filled with the components provided by a slice in","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":219934,"byte_end":220022,"line_start":75,"line_end":75,"column_start":5,"column_end":93}},{"value":"/ row-major order.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":220027,"byte_end":220047,"line_start":76,"line_end":76,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":220052,"byte_end":220055,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ The order of elements in the slice must follow the usual mathematic writing, i.e.,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":220060,"byte_end":220146,"line_start":78,"line_end":78,"column_start":5,"column_end":91}},{"value":"/ row-by-row.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":220151,"byte_end":220166,"line_start":79,"line_end":79,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":220171,"byte_end":220180,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":220983,"byte_end":221008,"line_start":102,"line_end":102,"column_start":12,"column_end":37},"name":"from_column_slice_generic","qualname":"<MatrixMN<N, R, C>>::from_column_slice_generic","value":"fn (nrows: R, ncols: C, slice: &[N]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with its elements filled with the components provided by a slice. The\n components must have the same layout as the matrix data storage (i.e. column-major).\n","sig":null,"attributes":[{"value":"/ Creates a matrix with its elements filled with the components provided by a slice. The","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":220774,"byte_end":220864,"line_start":99,"line_end":99,"column_start":5,"column_end":95}},{"value":"/ components must have the same layout as the matrix data storage (i.e. column-major).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":220869,"byte_end":220957,"line_start":100,"line_end":100,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":220962,"byte_end":220971,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":221274,"byte_end":221289,"line_start":109,"line_end":109,"column_start":12,"column_end":27},"name":"from_fn_generic","qualname":"<MatrixMN<N, R, C>>::from_fn_generic","value":"fn <F> (nrows: R, ncols: C, mut f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix filled with the results of a function applied to each of its component\n coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a matrix filled with the results of a function applied to each of its component","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":221136,"byte_end":221227,"line_start":106,"line_end":106,"column_start":5,"column_end":96}},{"value":"/ coordinates.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":221232,"byte_end":221248,"line_start":107,"line_end":107,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":221253,"byte_end":221262,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":221892,"byte_end":221908,"line_start":129,"line_end":129,"column_start":12,"column_end":28},"name":"identity_generic","qualname":"<MatrixMN<N, R, C>>::identity_generic","value":"fn (nrows: R, ncols: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity matrix.","sig":null,"attributes":[{"value":"/ Creates a new identity matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":221657,"byte_end":221691,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":221696,"byte_end":221699,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If the matrix is not square, the largest square submatrix starting at index `(0, 0)` is set","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":221704,"byte_end":221799,"line_start":126,"line_end":126,"column_start":5,"column_end":100}},{"value":"/ to the identity matrix. All other entries are set to zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":221804,"byte_end":221866,"line_start":127,"line_end":127,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":221871,"byte_end":221880,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":222327,"byte_end":222356,"line_start":141,"line_end":141,"column_start":12,"column_end":41},"name":"from_diagonal_element_generic","qualname":"<MatrixMN<N, R, C>>::from_diagonal_element_generic","value":"fn (nrows: R, ncols: C, elt: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix with its diagonal filled with copies of `elt`.","sig":null,"attributes":[{"value":"/ Creates a new matrix with its diagonal filled with copies of `elt`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":222055,"byte_end":222126,"line_start":136,"line_end":136,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":222131,"byte_end":222134,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ If the matrix is not square, the largest square submatrix starting at index `(0, 0)` is set","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":222139,"byte_end":222234,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ to the identity matrix. All other entries are set to zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":222239,"byte_end":222301,"line_start":139,"line_end":139,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":222306,"byte_end":222315,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2122},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":222940,"byte_end":222969,"line_start":159,"line_end":159,"column_start":12,"column_end":41},"name":"from_partial_diagonal_generic","qualname":"<MatrixMN<N, R, C>>::from_partial_diagonal_generic","value":"fn (nrows: R, ncols: C, elts: &[N]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix that may be rectangular. The first `elts.len()` diagonal elements are\n filled with the content of `elts`. Others are set to 0.","sig":null,"attributes":[{"value":"/ Creates a new matrix that may be rectangular. The first `elts.len()` diagonal elements are","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":222663,"byte_end":222757,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ filled with the content of `elts`. Others are set to 0.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":222762,"byte_end":222821,"line_start":155,"line_end":155,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":222826,"byte_end":222829,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Panics if `elts.len()` is larger than the minimum among `nrows` and `ncols`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":222834,"byte_end":222914,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":222919,"byte_end":222928,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":224084,"byte_end":224093,"line_start":193,"line_end":193,"column_start":12,"column_end":21},"name":"from_rows","qualname":"<MatrixMN<N, R, C>>::from_rows","value":"fn <SB> (rows: &[Matrix<N, U1, C, SB>]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a new matrix from its rows.","sig":null,"attributes":[{"value":"/ Builds a new matrix from its rows.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":223408,"byte_end":223446,"line_start":176,"line_end":176,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":223451,"byte_end":223454,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Panics if not enough rows are provided (for statically-sized matrices), or if all rows do","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":223459,"byte_end":223552,"line_start":178,"line_end":178,"column_start":5,"column_end":98}},{"value":"/ not have the same dimensions.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":223557,"byte_end":223590,"line_start":179,"line_end":179,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":223595,"byte_end":223598,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":223603,"byte_end":223616,"line_start":181,"line_end":181,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":223621,"byte_end":223628,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{RowVector3, Matrix3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":223633,"byte_end":223675,"line_start":183,"line_end":183,"column_start":5,"column_end":47}},{"value":"/ # use std::iter;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":223680,"byte_end":223700,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":223705,"byte_end":223708,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::from_rows(&[ RowVector3::new(1.0, 2.0, 3.0),  RowVector3::new(4.0, 5.0, 6.0),  RowVector3::new(7.0, 8.0, 9.0) ]);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":223713,"byte_end":223847,"line_start":186,"line_end":186,"column_start":5,"column_end":139}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":223852,"byte_end":223855,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ assert!(m.m11 == 1.0 && m.m12 == 2.0 && m.m13 == 3.0 &&","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":223860,"byte_end":223919,"line_start":188,"line_end":188,"column_start":5,"column_end":64}},{"value":"/         m.m21 == 4.0 && m.m22 == 5.0 && m.m23 == 6.0 &&","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":223924,"byte_end":223983,"line_start":189,"line_end":189,"column_start":5,"column_end":64}},{"value":"/         m.m31 == 7.0 && m.m32 == 8.0 && m.m33 == 9.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":223988,"byte_end":224046,"line_start":190,"line_end":190,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":224051,"byte_end":224058,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":224063,"byte_end":224072,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2126},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":225549,"byte_end":225561,"line_start":235,"line_end":235,"column_start":12,"column_end":24},"name":"from_columns","qualname":"<MatrixMN<N, R, C>>::from_columns","value":"fn <SB> (columns: &[Vector<N, R, SB>]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a new matrix from its columns.","sig":null,"attributes":[{"value":"/ Builds a new matrix from its columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":224873,"byte_end":224914,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":224919,"byte_end":224922,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Panics if not enough columns are provided (for statically-sized matrices), or if all","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":224927,"byte_end":225015,"line_start":220,"line_end":220,"column_start":5,"column_end":93}},{"value":"/ columns do not have the same dimensions.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":225020,"byte_end":225064,"line_start":221,"line_end":221,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":225069,"byte_end":225072,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":225077,"byte_end":225090,"line_start":223,"line_end":223,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":225095,"byte_end":225102,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Matrix3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":225107,"byte_end":225146,"line_start":225,"line_end":225,"column_start":5,"column_end":44}},{"value":"/ # use std::iter;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":225151,"byte_end":225171,"line_start":226,"line_end":226,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":225176,"byte_end":225179,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::from_columns(&[ Vector3::new(1.0, 2.0, 3.0),  Vector3::new(4.0, 5.0, 6.0),  Vector3::new(7.0, 8.0, 9.0) ]);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":225184,"byte_end":225312,"line_start":228,"line_end":228,"column_start":5,"column_end":133}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":225317,"byte_end":225320,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ assert!(m.m11 == 1.0 && m.m12 == 4.0 && m.m13 == 7.0 &&","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":225325,"byte_end":225384,"line_start":230,"line_end":230,"column_start":5,"column_end":64}},{"value":"/         m.m21 == 2.0 && m.m22 == 5.0 && m.m23 == 8.0 &&","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":225389,"byte_end":225448,"line_start":231,"line_end":231,"column_start":5,"column_end":64}},{"value":"/         m.m31 == 3.0 && m.m32 == 6.0 && m.m33 == 9.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":225453,"byte_end":225511,"line_start":232,"line_end":232,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":225516,"byte_end":225523,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":225528,"byte_end":225537,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":226459,"byte_end":226477,"line_start":263,"line_end":263,"column_start":12,"column_end":30},"name":"new_random_generic","qualname":"<MatrixMN<N, R, C>>::new_random_generic","value":"fn (nrows: R, ncols: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix filled with random values.\n","sig":null,"attributes":[{"value":"/ Creates a matrix filled with random values.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":226358,"byte_end":226405,"line_start":260,"line_end":260,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":226410,"byte_end":226419,"line_start":261,"line_end":261,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":226424,"byte_end":226447,"line_start":262,"line_end":262,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":226736,"byte_end":226761,"line_start":272,"line_end":272,"column_start":12,"column_end":37},"name":"from_distribution_generic","qualname":"<MatrixMN<N, R, C>>::from_distribution_generic","value":"fn <Distr, G> (nrows: R, ncols: C, distribution: &Distr, rng: &mut G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix filled with random values from the given distribution.\n","sig":null,"attributes":[{"value":"/ Creates a matrix filled with random values from the given distribution.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":226635,"byte_end":226710,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":226715,"byte_end":226724,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2135},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227651,"byte_end":227667,"line_start":300,"line_end":300,"column_start":12,"column_end":28},"name":"from_vec_generic","qualname":"<MatrixMN<N, R, C>>::from_vec_generic","value":"fn (nrows: R, ncols: C, data: Vec<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix backed by a given `Vec`.","sig":null,"attributes":[{"value":"/ Creates a matrix backed by a given `Vec`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227004,"byte_end":227049,"line_start":281,"line_end":281,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227054,"byte_end":227057,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ The output matrix is filled column-by-column.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227062,"byte_end":227111,"line_start":283,"line_end":283,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227116,"byte_end":227119,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227124,"byte_end":227137,"line_start":285,"line_end":285,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227142,"byte_end":227149,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Dynamic, DMatrix, Matrix, U1};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227154,"byte_end":227205,"line_start":287,"line_end":287,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227210,"byte_end":227213,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let vec = vec![0, 1, 2, 3, 4, 5];","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227218,"byte_end":227255,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ let vec_ptr = vec.as_ptr();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227260,"byte_end":227291,"line_start":290,"line_end":290,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227296,"byte_end":227299,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ let matrix = Matrix::from_vec_generic(Dynamic::new(vec.len()), U1, vec);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227304,"byte_end":227380,"line_start":292,"line_end":292,"column_start":5,"column_end":81}},{"value":"/ let matrix_storage_ptr = matrix.data.as_vec().as_ptr();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227385,"byte_end":227444,"line_start":293,"line_end":293,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227449,"byte_end":227452,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ // `matrix` is backed by exactly the same `Vec` as it was constructed from.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227457,"byte_end":227536,"line_start":295,"line_end":295,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(matrix_storage_ptr, vec_ptr);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227541,"byte_end":227585,"line_start":296,"line_end":296,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227590,"byte_end":227597,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227602,"byte_end":227611,"line_start":298,"line_end":298,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227616,"byte_end":227639,"line_start":299,"line_end":299,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2139},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":228801,"byte_end":228814,"line_start":329,"line_end":329,"column_start":12,"column_end":25},"name":"from_diagonal","qualname":"<MatrixN<N, D>>::from_diagonal","value":"fn <SB> (diag: &Vector<N, D, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a square matrix with its diagonal set to `diag` and all other entries set to 0.","sig":null,"attributes":[{"value":"/ Creates a square matrix with its diagonal set to `diag` and all other entries set to 0.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227876,"byte_end":227967,"line_start":310,"line_end":310,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227972,"byte_end":227975,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227980,"byte_end":227993,"line_start":312,"line_end":312,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227998,"byte_end":228005,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, DVector, Matrix3, DMatrix};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":228010,"byte_end":228067,"line_start":314,"line_end":314,"column_start":5,"column_end":62}},{"value":"/ # use std::iter;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":228072,"byte_end":228092,"line_start":315,"line_end":315,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":228097,"byte_end":228100,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::from_diagonal(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":228105,"byte_end":228170,"line_start":317,"line_end":317,"column_start":5,"column_end":70}},{"value":"/ // The two additional arguments represent the matrix dimensions.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":228175,"byte_end":228243,"line_start":318,"line_end":318,"column_start":5,"column_end":73}},{"value":"/ let dm = DMatrix::from_diagonal(&DVector::from_row_slice(&[1.0, 2.0, 3.0]));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":228248,"byte_end":228328,"line_start":319,"line_end":319,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":228333,"byte_end":228336,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ assert!(m.m11 == 1.0 && m.m12 == 0.0 && m.m13 == 0.0 &&","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":228341,"byte_end":228400,"line_start":321,"line_end":321,"column_start":5,"column_end":64}},{"value":"/         m.m21 == 0.0 && m.m22 == 2.0 && m.m23 == 0.0 &&","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":228405,"byte_end":228464,"line_start":322,"line_end":322,"column_start":5,"column_end":64}},{"value":"/         m.m31 == 0.0 && m.m32 == 0.0 && m.m33 == 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":228469,"byte_end":228527,"line_start":323,"line_end":323,"column_start":5,"column_end":63}},{"value":"/ assert!(dm[(0, 0)] == 1.0 && dm[(0, 1)] == 0.0 && dm[(0, 2)] == 0.0 &&","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":228532,"byte_end":228606,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/         dm[(1, 0)] == 0.0 && dm[(1, 1)] == 2.0 && dm[(1, 2)] == 0.0 &&","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":228611,"byte_end":228685,"line_start":325,"line_end":325,"column_start":5,"column_end":79}},{"value":"/         dm[(2, 0)] == 0.0 && dm[(2, 1)] == 0.0 && dm[(2, 2)] == 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":228690,"byte_end":228763,"line_start":326,"line_end":326,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":228768,"byte_end":228775,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":228780,"byte_end":228789,"line_start":328,"line_end":328,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2178},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":256878,"byte_end":256879,"line_start":1016,"line_end":1016,"column_start":12,"column_end":13},"name":"x","qualname":"<VectorN<N, R>>::x","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its first component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its first component, and zero elsewhere.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":256778,"byte_end":256852,"line_start":1014,"line_end":1014,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":256857,"byte_end":256866,"line_start":1015,"line_end":1015,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2179},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":257200,"byte_end":257201,"line_start":1030,"line_end":1030,"column_start":12,"column_end":13},"name":"y","qualname":"<VectorN<N, R>>::y","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its second component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its second component, and zero elsewhere.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":257099,"byte_end":257174,"line_start":1028,"line_end":1028,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":257179,"byte_end":257188,"line_start":1029,"line_end":1029,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2180},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":257521,"byte_end":257522,"line_start":1044,"line_end":1044,"column_start":12,"column_end":13},"name":"z","qualname":"<VectorN<N, R>>::z","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its third component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its third component, and zero elsewhere.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":257421,"byte_end":257495,"line_start":1042,"line_end":1042,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":257500,"byte_end":257509,"line_start":1043,"line_end":1043,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2181},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":257843,"byte_end":257844,"line_start":1058,"line_end":1058,"column_start":12,"column_end":13},"name":"w","qualname":"<VectorN<N, R>>::w","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its fourth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its fourth component, and zero elsewhere.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":257742,"byte_end":257817,"line_start":1056,"line_end":1056,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":257822,"byte_end":257831,"line_start":1057,"line_end":1057,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2182},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":258164,"byte_end":258165,"line_start":1072,"line_end":1072,"column_start":12,"column_end":13},"name":"a","qualname":"<VectorN<N, R>>::a","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its fifth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its fifth component, and zero elsewhere.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":258064,"byte_end":258138,"line_start":1070,"line_end":1070,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":258143,"byte_end":258152,"line_start":1071,"line_end":1071,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2183},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":258485,"byte_end":258486,"line_start":1086,"line_end":1086,"column_start":12,"column_end":13},"name":"b","qualname":"<VectorN<N, R>>::b","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its sixth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its sixth component, and zero elsewhere.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":258385,"byte_end":258459,"line_start":1084,"line_end":1084,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":258464,"byte_end":258473,"line_start":1085,"line_end":1085,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2184},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":258811,"byte_end":258817,"line_start":1100,"line_end":1100,"column_start":12,"column_end":18},"name":"x_axis","qualname":"<VectorN<N, R>>::x_axis","value":"fn () -> Unit<Self>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its first component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its first component, and zero elsewhere.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":258706,"byte_end":258785,"line_start":1098,"line_end":1098,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":258790,"byte_end":258799,"line_start":1099,"line_end":1099,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2185},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":259060,"byte_end":259066,"line_start":1109,"line_end":1109,"column_start":12,"column_end":18},"name":"y_axis","qualname":"<VectorN<N, R>>::y_axis","value":"fn () -> Unit<Self>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its second component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its second component, and zero elsewhere.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":258954,"byte_end":259034,"line_start":1107,"line_end":1107,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":259039,"byte_end":259048,"line_start":1108,"line_end":1108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2186},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":259308,"byte_end":259314,"line_start":1118,"line_end":1118,"column_start":12,"column_end":18},"name":"z_axis","qualname":"<VectorN<N, R>>::z_axis","value":"fn () -> Unit<Self>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its third component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its third component, and zero elsewhere.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":259203,"byte_end":259282,"line_start":1116,"line_end":1116,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":259287,"byte_end":259296,"line_start":1117,"line_end":1117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2187},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":259557,"byte_end":259563,"line_start":1127,"line_end":1127,"column_start":12,"column_end":18},"name":"w_axis","qualname":"<VectorN<N, R>>::w_axis","value":"fn () -> Unit<Self>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its fourth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its fourth component, and zero elsewhere.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":259451,"byte_end":259531,"line_start":1125,"line_end":1125,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":259536,"byte_end":259545,"line_start":1126,"line_end":1126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2188},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":259805,"byte_end":259811,"line_start":1136,"line_end":1136,"column_start":12,"column_end":18},"name":"a_axis","qualname":"<VectorN<N, R>>::a_axis","value":"fn () -> Unit<Self>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its fifth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its fifth component, and zero elsewhere.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":259700,"byte_end":259779,"line_start":1134,"line_end":1134,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":259784,"byte_end":259793,"line_start":1135,"line_end":1135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2189},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":260053,"byte_end":260059,"line_start":1145,"line_end":1145,"column_start":12,"column_end":18},"name":"b_axis","qualname":"<VectorN<N, R>>::b_axis","value":"fn () -> Unit<Self>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its sixth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its sixth component, and zero elsewhere.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":259948,"byte_end":260027,"line_start":1143,"line_end":1143,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":260032,"byte_end":260041,"line_start":1144,"line_end":1144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2211},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":260968,"byte_end":261009,"line_start":19,"line_end":19,"column_start":19,"column_end":60},"name":"from_slice_with_strides_generic_unchecked","qualname":"<MatrixSliceMN>::from_slice_with_strides_generic_unchecked","value":"fn (data: &'a [N], start: usize, nrows: R, ncols: C, rstride: RStride, cstride: CStride) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates, without bound-checking, a matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates, without bound-checking, a matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":260556,"byte_end":260691,"line_start":14,"line_end":14,"column_start":5,"column_end":140}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":260696,"byte_end":260699,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because the input data array is not checked to contain enough elements.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":260704,"byte_end":260801,"line_start":16,"line_end":16,"column_start":5,"column_end":102}},{"value":"/ The generic types `R`, `C`, `RStride`, `CStride` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":260806,"byte_end":260935,"line_start":17,"line_end":17,"column_start":5,"column_end":134}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":260940,"byte_end":260949,"line_start":18,"line_end":18,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2212},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":261722,"byte_end":261753,"line_start":40,"line_end":40,"column_start":12,"column_end":43},"name":"from_slice_with_strides_generic","qualname":"<MatrixSliceMN>::from_slice_with_strides_generic","value":"fn (data: &'a [N], nrows: R, ncols: C, rstride: RStride, cstride: CStride) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":261371,"byte_end":261481,"line_start":35,"line_end":35,"column_start":5,"column_end":115}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":261486,"byte_end":261489,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Panics if the input data array dose not contain enough elements.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":261494,"byte_end":261562,"line_start":37,"line_end":37,"column_start":5,"column_end":73}},{"value":"/ The generic types `R`, `C`, `RStride`, `CStride` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":261567,"byte_end":261696,"line_start":38,"line_end":38,"column_start":5,"column_end":134}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":261701,"byte_end":261710,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":262996,"byte_end":263037,"line_start":70,"line_end":70,"column_start":19,"column_end":60},"name":"from_slice_with_strides_generic_unchecked","qualname":"<MatrixSliceMutMN>::from_slice_with_strides_generic_unchecked","value":"fn (data: &'a mut [N], start: usize, nrows: R, ncols: C, rstride: RStride, cstride: CStride) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates, without bound-checking, a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates, without bound-checking, a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":262576,"byte_end":262719,"line_start":65,"line_end":65,"column_start":5,"column_end":148}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":262724,"byte_end":262727,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because the input data array is not checked to contain enough elements.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":262732,"byte_end":262829,"line_start":67,"line_end":67,"column_start":5,"column_end":102}},{"value":"/ The generic types `R`, `C`, `RStride`, `CStride` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":262834,"byte_end":262963,"line_start":68,"line_end":68,"column_start":5,"column_end":134}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":262968,"byte_end":262977,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":263769,"byte_end":263800,"line_start":91,"line_end":91,"column_start":12,"column_end":43},"name":"from_slice_with_strides_generic","qualname":"<MatrixSliceMutMN>::from_slice_with_strides_generic","value":"fn (data: &'a mut [N], nrows: R, ncols: C, rstride: RStride, cstride: CStride) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":263410,"byte_end":263528,"line_start":86,"line_end":86,"column_start":5,"column_end":123}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":263533,"byte_end":263536,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Panics if the input data array dose not contain enough elements.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":263541,"byte_end":263609,"line_start":88,"line_end":88,"column_start":5,"column_end":73}},{"value":"/ The generic types `R`, `C`, `RStride`, `CStride` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":263614,"byte_end":263743,"line_start":89,"line_end":89,"column_start":5,"column_end":134}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":263748,"byte_end":263757,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2227},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":265983,"byte_end":266011,"line_start":141,"line_end":141,"column_start":19,"column_end":47},"name":"from_slice_generic_unchecked","qualname":"<MatrixSliceMN>::from_slice_generic_unchecked","value":"fn (data: &'a [N], start: usize, nrows: R, ncols: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates, without bound-checking, a matrix slice from an array and with dimensions specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates, without bound-checking, a matrix slice from an array and with dimensions specified by generic types instances.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":265602,"byte_end":265725,"line_start":136,"line_end":136,"column_start":5,"column_end":128}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":265730,"byte_end":265733,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because the input data array is not checked to contain enough elements.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":265738,"byte_end":265835,"line_start":138,"line_end":138,"column_start":5,"column_end":102}},{"value":"/ The generic types `R` and `C` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":265840,"byte_end":265950,"line_start":139,"line_end":139,"column_start":5,"column_end":115}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":265955,"byte_end":265964,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2228},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":266547,"byte_end":266565,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"name":"from_slice_generic","qualname":"<MatrixSliceMN>::from_slice_generic","value":"fn (data: &'a [N], nrows: R, ncols: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":266215,"byte_end":266325,"line_start":150,"line_end":150,"column_start":5,"column_end":115}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":266330,"byte_end":266333,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ Panics if the input data array dose not contain enough elements.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":266338,"byte_end":266406,"line_start":152,"line_end":152,"column_start":5,"column_end":73}},{"value":"/ The generic types `R` and `C` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":266411,"byte_end":266521,"line_start":153,"line_end":153,"column_start":5,"column_end":115}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":266526,"byte_end":266535,"line_start":154,"line_end":154,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2234},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":267158,"byte_end":267186,"line_start":166,"line_end":166,"column_start":19,"column_end":47},"name":"from_slice_generic_unchecked","qualname":"<MatrixSliceMutMN>::from_slice_generic_unchecked","value":"fn (data: &'a mut [N], start: usize, nrows: R, ncols: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates, without bound-checking, a mutable matrix slice from an array and with dimensions specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates, without bound-checking, a mutable matrix slice from an array and with dimensions specified by generic types instances.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":266769,"byte_end":266900,"line_start":161,"line_end":161,"column_start":5,"column_end":136}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":266905,"byte_end":266908,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because the input data array is not checked to contain enough elements.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":266913,"byte_end":267010,"line_start":163,"line_end":163,"column_start":5,"column_end":102}},{"value":"/ The generic types `R` and `C` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":267015,"byte_end":267125,"line_start":164,"line_end":164,"column_start":5,"column_end":115}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":267130,"byte_end":267139,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2235},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":267734,"byte_end":267752,"line_start":180,"line_end":180,"column_start":12,"column_end":30},"name":"from_slice_generic","qualname":"<MatrixSliceMutMN>::from_slice_generic","value":"fn (data: &'a mut [N], nrows: R, ncols: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":267394,"byte_end":267512,"line_start":175,"line_end":175,"column_start":5,"column_end":123}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":267517,"byte_end":267520,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Panics if the input data array dose not contain enough elements.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":267525,"byte_end":267593,"line_start":177,"line_end":177,"column_start":5,"column_end":73}},{"value":"/ The generic types `R` and `C` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":267598,"byte_end":267708,"line_start":178,"line_end":178,"column_start":5,"column_end":115}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":267713,"byte_end":267722,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2514},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":296244,"byte_end":296258,"line_start":24,"line_end":24,"column_start":12,"column_end":26},"name":"upper_triangle","qualname":"<Matrix<N, R, C, S>>::upper_triangle","value":"fn (&self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the upper triangular part of this matrix (including the diagonal).\n","sig":null,"attributes":[{"value":"/ Extracts the upper triangular part of this matrix (including the diagonal).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":296139,"byte_end":296218,"line_start":22,"line_end":22,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":296223,"byte_end":296232,"line_start":23,"line_end":23,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2515},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":296567,"byte_end":296581,"line_start":36,"line_end":36,"column_start":12,"column_end":26},"name":"lower_triangle","qualname":"<Matrix<N, R, C, S>>::lower_triangle","value":"fn (&self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the lower triangular part of this matrix (including the diagonal).\n","sig":null,"attributes":[{"value":"/ Extracts the lower triangular part of this matrix (including the diagonal).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":296462,"byte_end":296541,"line_start":34,"line_end":34,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":296546,"byte_end":296555,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2516},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":296922,"byte_end":296933,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"select_rows","qualname":"<Matrix<N, R, C, S>>::select_rows","value":"fn <'a, I> (&self, irows: I) -> MatrixMN<N, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix by extracting the given set of rows from `self`.\n","sig":null,"attributes":[{"value":"/ Creates a new matrix by extracting the given set of rows from `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":296785,"byte_end":296858,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"cfg(any (feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":296863,"byte_end":296910,"line_start":47,"line_end":47,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2519},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":298191,"byte_end":298205,"line_start":83,"line_end":83,"column_start":12,"column_end":26},"name":"select_columns","qualname":"<Matrix<N, R, C, S>>::select_columns","value":"fn <'a, I> (&self, icols: I) -> MatrixMN<N, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix by extracting the given set of columns from `self`.\n","sig":null,"attributes":[{"value":"/ Creates a new matrix by extracting the given set of columns from `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":298051,"byte_end":298127,"line_start":81,"line_end":81,"column_start":5,"column_end":81}},{"value":"cfg(any (feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":298132,"byte_end":298179,"line_start":82,"line_end":82,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2527},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":298924,"byte_end":298928,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"fill","qualname":"<Matrix<N, R, C, S>>::fill","value":"fn (&mut self, val: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of this matrix to `val`.\n","sig":null,"attributes":[{"value":"/ Sets all the elements of this matrix to `val`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":298848,"byte_end":298898,"line_start":103,"line_end":103,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":298903,"byte_end":298912,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2528},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":299111,"byte_end":299129,"line_start":113,"line_end":113,"column_start":12,"column_end":30},"name":"fill_with_identity","qualname":"<Matrix<N, R, C, S>>::fill_with_identity","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills `self` with the identity matrix.\n","sig":null,"attributes":[{"value":"/ Fills `self` with the identity matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":299043,"byte_end":299085,"line_start":111,"line_end":111,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":299090,"byte_end":299099,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2529},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":299344,"byte_end":299357,"line_start":123,"line_end":123,"column_start":12,"column_end":25},"name":"fill_diagonal","qualname":"<Matrix<N, R, C, S>>::fill_diagonal","value":"fn (&mut self, val: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets all the diagonal elements of this matrix to `val`.\n","sig":null,"attributes":[{"value":"/ Sets all the diagonal elements of this matrix to `val`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":299259,"byte_end":299318,"line_start":121,"line_end":121,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":299323,"byte_end":299332,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":299666,"byte_end":299674,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"name":"fill_row","qualname":"<Matrix<N, R, C, S>>::fill_row","value":"fn (&mut self, i: usize, val: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of the selected row to `val`.\n","sig":null,"attributes":[{"value":"/ Sets all the elements of the selected row to `val`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":299585,"byte_end":299640,"line_start":132,"line_end":132,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":299645,"byte_end":299654,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2531},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":299986,"byte_end":299997,"line_start":143,"line_end":143,"column_start":12,"column_end":23},"name":"fill_column","qualname":"<Matrix<N, R, C, S>>::fill_column","value":"fn (&mut self, j: usize, val: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of the selected column to `val`.\n","sig":null,"attributes":[{"value":"/ Sets all the elements of the selected column to `val`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":299902,"byte_end":299960,"line_start":141,"line_end":141,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":299965,"byte_end":299974,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2532},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":300326,"byte_end":300338,"line_start":152,"line_end":152,"column_start":12,"column_end":24},"name":"set_diagonal","qualname":"<Matrix<N, R, C, S>>::set_diagonal","value":"fn <R2, S2> (&mut self, diag: &Vector<N, R2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills the diagonal of this matrix with the content of the given vector.\n","sig":null,"attributes":[{"value":"/ Fills the diagonal of this matrix with the content of the given vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":300225,"byte_end":300300,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":300305,"byte_end":300314,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2535},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":301156,"byte_end":301176,"line_start":173,"line_end":173,"column_start":12,"column_end":32},"name":"set_partial_diagonal","qualname":"<Matrix<N, R, C, S>>::set_partial_diagonal","value":"fn (&mut self, diag: impl Iterator<Item = N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills the diagonal of this matrix with the content of the given iterator.","sig":null,"attributes":[{"value":"/ Fills the diagonal of this matrix with the content of the given iterator.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":300837,"byte_end":300914,"line_start":167,"line_end":167,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":300919,"byte_end":300922,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ This will fill as many diagonal elements as the iterator yields, up to the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":300927,"byte_end":301005,"line_start":169,"line_end":169,"column_start":5,"column_end":83}},{"value":"/ minimum of the number of rows and columns of `self`, and starting with the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":301010,"byte_end":301088,"line_start":170,"line_end":170,"column_start":5,"column_end":83}},{"value":"/ diagonal element at index (0, 0).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":301093,"byte_end":301130,"line_start":171,"line_end":171,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":301135,"byte_end":301144,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2537},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":301571,"byte_end":301578,"line_start":184,"line_end":184,"column_start":12,"column_end":19},"name":"set_row","qualname":"<Matrix<N, R, C, S>>::set_row","value":"fn <C2, S2> (&mut self, i: usize, row: &RowVector<N, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills the selected row of this matrix with the content of the given vector.\n","sig":null,"attributes":[{"value":"/ Fills the selected row of this matrix with the content of the given vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":301466,"byte_end":301545,"line_start":182,"line_end":182,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":301550,"byte_end":301559,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2540},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":301901,"byte_end":301911,"line_start":194,"line_end":194,"column_start":12,"column_end":22},"name":"set_column","qualname":"<Matrix<N, R, C, S>>::set_column","value":"fn <R2, S2> (&mut self, i: usize, column: &Vector<N, R2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills the selected column of this matrix with the content of the given vector.\n","sig":null,"attributes":[{"value":"/ Fills the selected column of this matrix with the content of the given vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":301793,"byte_end":301875,"line_start":192,"line_end":192,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":301880,"byte_end":301889,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2543},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":302559,"byte_end":302578,"line_start":210,"line_end":210,"column_start":12,"column_end":31},"name":"fill_lower_triangle","qualname":"<Matrix<N, R, C, S>>::fill_lower_triangle","value":"fn (&mut self, val: N, shift: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of the lower-triangular part of this matrix to `val`.","sig":null,"attributes":[{"value":"/ Sets all the elements of the lower-triangular part of this matrix to `val`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":302129,"byte_end":302208,"line_start":202,"line_end":202,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":302213,"byte_end":302216,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ The parameter `shift` allows some subdiagonals to be left untouched:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":302221,"byte_end":302293,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/ * If `shift = 0` then the diagonal is overwritten as well.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":302298,"byte_end":302360,"line_start":205,"line_end":205,"column_start":5,"column_end":67}},{"value":"/ * If `shift = 1` then the diagonal is left untouched.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":302365,"byte_end":302422,"line_start":206,"line_end":206,"column_start":5,"column_end":62}},{"value":"/ * If `shift > 1`, then the diagonal and the first `shift - 1` subdiagonals are left","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":302427,"byte_end":302514,"line_start":207,"line_end":207,"column_start":5,"column_end":92}},{"value":"/ untouched.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":302519,"byte_end":302533,"line_start":208,"line_end":208,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":302538,"byte_end":302547,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2544},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":303248,"byte_end":303267,"line_start":226,"line_end":226,"column_start":12,"column_end":31},"name":"fill_upper_triangle","qualname":"<Matrix<N, R, C, S>>::fill_upper_triangle","value":"fn (&mut self, val: N, shift: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of the lower-triangular part of this matrix to `val`.","sig":null,"attributes":[{"value":"/ Sets all the elements of the lower-triangular part of this matrix to `val`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":302814,"byte_end":302893,"line_start":218,"line_end":218,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":302898,"byte_end":302901,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ The parameter `shift` allows some superdiagonals to be left untouched:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":302906,"byte_end":302980,"line_start":220,"line_end":220,"column_start":5,"column_end":79}},{"value":"/ * If `shift = 0` then the diagonal is overwritten as well.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":302985,"byte_end":303047,"line_start":221,"line_end":221,"column_start":5,"column_end":67}},{"value":"/ * If `shift = 1` then the diagonal is left untouched.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":303052,"byte_end":303109,"line_start":222,"line_end":222,"column_start":5,"column_end":62}},{"value":"/ * If `shift > 1`, then the diagonal and the first `shift - 1` superdiagonals are left","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":303114,"byte_end":303203,"line_start":223,"line_end":223,"column_start":5,"column_end":94}},{"value":"/ untouched.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":303208,"byte_end":303222,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":303227,"byte_end":303236,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2545},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":303699,"byte_end":303708,"line_start":238,"line_end":238,"column_start":12,"column_end":21},"name":"swap_rows","qualname":"<Matrix<N, R, C, S>>::swap_rows","value":"fn (&mut self, irow1: usize, irow2: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Swaps two rows in-place.\n","sig":null,"attributes":[{"value":"/ Swaps two rows in-place.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":303645,"byte_end":303673,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":303678,"byte_end":303687,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2546},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":304114,"byte_end":304126,"line_start":252,"line_end":252,"column_start":12,"column_end":24},"name":"swap_columns","qualname":"<Matrix<N, R, C, S>>::swap_columns","value":"fn (&mut self, icol1: usize, icol2: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Swaps two columns in-place.\n","sig":null,"attributes":[{"value":"/ Swaps two columns in-place.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":304057,"byte_end":304088,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":304093,"byte_end":304102,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2551},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":304717,"byte_end":304756,"line_start":269,"line_end":269,"column_start":12,"column_end":51},"name":"fill_lower_triangle_with_upper_triangle","qualname":"<Matrix<N, D, D, S>>::fill_lower_triangle_with_upper_triangle","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Copies the upper-triangle of this matrix to its lower-triangular part.","sig":null,"attributes":[{"value":"/ Copies the upper-triangle of this matrix to its lower-triangular part.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":304546,"byte_end":304620,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":304625,"byte_end":304628,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This makes the matrix symmetric. Panics if the matrix is not square.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":304633,"byte_end":304705,"line_start":268,"line_end":268,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2552},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":305283,"byte_end":305322,"line_start":285,"line_end":285,"column_start":12,"column_end":51},"name":"fill_upper_triangle_with_lower_triangle","qualname":"<Matrix<N, D, D, S>>::fill_upper_triangle_with_lower_triangle","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Copies the upper-triangle of this matrix to its upper-triangular part.","sig":null,"attributes":[{"value":"/ Copies the upper-triangle of this matrix to its upper-triangular part.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":305112,"byte_end":305186,"line_start":282,"line_end":282,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":305191,"byte_end":305194,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ This makes the matrix symmetric. Panics if the matrix is not square.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":305199,"byte_end":305271,"line_start":284,"line_end":284,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2558},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":305914,"byte_end":305927,"line_start":311,"line_end":311,"column_start":12,"column_end":25},"name":"remove_column","qualname":"<Matrix<N, R, C, S>>::remove_column","value":"fn (self, i: usize) -> MatrixMN<N, R, DimDiff<C, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Removes the `i`-th column from this matrix.\n","sig":null,"attributes":[{"value":"/ Removes the `i`-th column from this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":305841,"byte_end":305888,"line_start":309,"line_end":309,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":305893,"byte_end":305902,"line_start":310,"line_end":310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2559},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":306241,"byte_end":306258,"line_start":321,"line_end":321,"column_start":12,"column_end":29},"name":"remove_columns_at","qualname":"<Matrix<N, R, C, S>>::remove_columns_at","value":"fn (self, indices: &[usize]) -> MatrixMN<N, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Removes all columns in `indices`   \n","sig":null,"attributes":[{"value":"/ Removes all columns in `indices`   ","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":306138,"byte_end":306177,"line_start":319,"line_end":319,"column_start":5,"column_end":44}},{"value":"cfg(any (feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":306182,"byte_end":306229,"line_start":320,"line_end":320,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2560},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":307508,"byte_end":307522,"line_start":358,"line_end":358,"column_start":12,"column_end":26},"name":"remove_rows_at","qualname":"<Matrix<N, R, C, S>>::remove_rows_at","value":"fn (self, indices: &[usize]) -> MatrixMN<N, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes all rows in `indices`   \n","sig":null,"attributes":[{"value":"/ Removes all rows in `indices`   ","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":307408,"byte_end":307444,"line_start":356,"line_end":356,"column_start":5,"column_end":41}},{"value":"cfg(any (feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":307449,"byte_end":307496,"line_start":357,"line_end":357,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2561},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":308730,"byte_end":308750,"line_start":393,"line_end":393,"column_start":12,"column_end":32},"name":"remove_fixed_columns","qualname":"<Matrix<N, R, C, S>>::remove_fixed_columns","value":"fn <D> (self, i: usize) -> MatrixMN<N, R, DimDiff<C, D>>","parent":null,"children":[],"decl_id":null,"docs":" Removes `D::dim()` consecutive columns from this matrix, starting with the `i`-th\n (included).\n","sig":null,"attributes":[{"value":"/ Removes `D::dim()` consecutive columns from this matrix, starting with the `i`-th","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":308599,"byte_end":308684,"line_start":390,"line_end":390,"column_start":5,"column_end":90}},{"value":"/ (included).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":308689,"byte_end":308704,"line_start":391,"line_end":391,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":308709,"byte_end":308718,"line_start":392,"line_end":392,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2563},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":309156,"byte_end":309170,"line_start":405,"line_end":405,"column_start":12,"column_end":26},"name":"remove_columns","qualname":"<Matrix<N, R, C, S>>::remove_columns","value":"fn (self, i: usize, n: usize) -> MatrixMN<N, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Removes `n` consecutive columns from this matrix, starting with the `i`-th (included).\n","sig":null,"attributes":[{"value":"/ Removes `n` consecutive columns from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":308988,"byte_end":309078,"line_start":402,"line_end":402,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":309083,"byte_end":309092,"line_start":403,"line_end":403,"column_start":5,"column_end":14}},{"value":"cfg(any (feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":309097,"byte_end":309144,"line_start":404,"line_end":404,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2564},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":309682,"byte_end":309704,"line_start":418,"line_end":418,"column_start":12,"column_end":34},"name":"remove_columns_generic","qualname":"<Matrix<N, R, C, S>>::remove_columns_generic","value":"fn <D> (self, i: usize, nremove: D) -> MatrixMN<N, R, DimDiff<C, D>>","parent":null,"children":[],"decl_id":null,"docs":" Removes `nremove.value()` columns from this matrix, starting with the `i`-th (included).","sig":null,"attributes":[{"value":"/ Removes `nremove.value()` columns from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":309413,"byte_end":309505,"line_start":413,"line_end":413,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":309510,"byte_end":309513,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ This is the generic implementation of `.remove_columns(...)` and","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":309518,"byte_end":309586,"line_start":415,"line_end":415,"column_start":5,"column_end":73}},{"value":"/ `.remove_fixed_columns(...)` which have nicer API interfaces.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":309591,"byte_end":309656,"line_start":416,"line_end":416,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":309661,"byte_end":309670,"line_start":417,"line_end":417,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2566},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":311079,"byte_end":311089,"line_start":466,"line_end":466,"column_start":12,"column_end":22},"name":"remove_row","qualname":"<Matrix<N, R, C, S>>::remove_row","value":"fn (self, i: usize) -> MatrixMN<N, DimDiff<R, U1>, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes the `i`-th row from this matrix.\n","sig":null,"attributes":[{"value":"/ Removes the `i`-th row from this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":311009,"byte_end":311053,"line_start":464,"line_end":464,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":311058,"byte_end":311067,"line_start":465,"line_end":465,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":311417,"byte_end":311434,"line_start":476,"line_end":476,"column_start":12,"column_end":29},"name":"remove_fixed_rows","qualname":"<Matrix<N, R, C, S>>::remove_fixed_rows","value":"fn <D> (self, i: usize) -> MatrixMN<N, DimDiff<R, D>, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes `D::dim()` consecutive rows from this matrix, starting with the `i`-th (included).\n","sig":null,"attributes":[{"value":"/ Removes `D::dim()` consecutive rows from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":311297,"byte_end":311391,"line_start":474,"line_end":474,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":311396,"byte_end":311405,"line_start":475,"line_end":475,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":311834,"byte_end":311845,"line_start":488,"line_end":488,"column_start":12,"column_end":23},"name":"remove_rows","qualname":"<Matrix<N, R, C, S>>::remove_rows","value":"fn (self, i: usize, n: usize) -> MatrixMN<N, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes `n` consecutive rows from this matrix, starting with the `i`-th (included).\n","sig":null,"attributes":[{"value":"/ Removes `n` consecutive rows from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":311669,"byte_end":311756,"line_start":485,"line_end":485,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":311761,"byte_end":311770,"line_start":486,"line_end":486,"column_start":5,"column_end":14}},{"value":"cfg(any (feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":311775,"byte_end":311822,"line_start":487,"line_end":487,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2570},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":312345,"byte_end":312364,"line_start":501,"line_end":501,"column_start":12,"column_end":31},"name":"remove_rows_generic","qualname":"<Matrix<N, R, C, S>>::remove_rows_generic","value":"fn <D> (self, i: usize, nremove: D) -> MatrixMN<N, DimDiff<R, D>, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes `nremove.value()` rows from this matrix, starting with the `i`-th (included).","sig":null,"attributes":[{"value":"/ Removes `nremove.value()` rows from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":312085,"byte_end":312174,"line_start":496,"line_end":496,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":312179,"byte_end":312182,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is the generic implementation of `.remove_rows(...)` and `.remove_fixed_rows(...)`","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":312187,"byte_end":312278,"line_start":498,"line_end":498,"column_start":5,"column_end":96}},{"value":"/ which have nicer API interfaces.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":312283,"byte_end":312319,"line_start":499,"line_end":499,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":312324,"byte_end":312333,"line_start":500,"line_end":500,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2572},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":313402,"byte_end":313415,"line_start":542,"line_end":542,"column_start":12,"column_end":25},"name":"insert_column","qualname":"<Matrix<N, R, C, S>>::insert_column","value":"fn (self, i: usize, val: N) -> MatrixMN<N, R, DimSum<C, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a column filled with `val` at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts a column filled with `val` at the `i-th` position.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":313314,"byte_end":313376,"line_start":540,"line_end":540,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":313381,"byte_end":313390,"line_start":541,"line_end":541,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2573},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":313744,"byte_end":313764,"line_start":552,"line_end":552,"column_start":12,"column_end":32},"name":"insert_fixed_columns","qualname":"<Matrix<N, R, C, S>>::insert_fixed_columns","value":"fn <D> (self, i: usize, val: N) -> MatrixMN<N, R, DimSum<C, D>>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `D::dim()` columns filled with `val` starting at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts `D::dim()` columns filled with `val` starting at the `i-th` position.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":313637,"byte_end":313718,"line_start":550,"line_end":550,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":313723,"byte_end":313732,"line_start":551,"line_end":551,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2575},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":314261,"byte_end":314275,"line_start":566,"line_end":566,"column_start":12,"column_end":26},"name":"insert_columns","qualname":"<Matrix<N, R, C, S>>::insert_columns","value":"fn (self, i: usize, n: usize, val: N) -> MatrixMN<N, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `n` columns filled with `val` starting at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts `n` columns filled with `val` starting at the `i-th` position.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":314109,"byte_end":314183,"line_start":563,"line_end":563,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":314188,"byte_end":314197,"line_start":564,"line_end":564,"column_start":5,"column_end":14}},{"value":"cfg(any (feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":314202,"byte_end":314249,"line_start":565,"line_end":565,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2576},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":314795,"byte_end":314831,"line_start":580,"line_end":580,"column_start":19,"column_end":55},"name":"insert_columns_generic_uninitialized","qualname":"<Matrix<N, R, C, S>>::insert_columns_generic_uninitialized","value":"fn <D> (self, i: usize, ninsert: D) -> MatrixMN<N, R, DimSum<C, D>>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `ninsert.value()` columns starting at the `i-th` place of this matrix.","sig":null,"attributes":[{"value":"/ Inserts `ninsert.value()` columns starting at the `i-th` place of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":314619,"byte_end":314701,"line_start":576,"line_end":576,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":314706,"byte_end":314709,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ The added column values are not initialized.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":314714,"byte_end":314762,"line_start":578,"line_end":578,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":314767,"byte_end":314776,"line_start":579,"line_end":579,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2578},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":315898,"byte_end":315908,"line_start":620,"line_end":620,"column_start":12,"column_end":22},"name":"insert_row","qualname":"<Matrix<N, R, C, S>>::insert_row","value":"fn (self, i: usize, val: N) -> MatrixMN<N, DimSum<R, U1>, C>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a row filled with `val` at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts a row filled with `val` at the `i-th` position.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":315813,"byte_end":315872,"line_start":618,"line_end":618,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":315877,"byte_end":315886,"line_start":619,"line_end":619,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2579},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":316231,"byte_end":316248,"line_start":630,"line_end":630,"column_start":12,"column_end":29},"name":"insert_fixed_rows","qualname":"<Matrix<N, R, C, S>>::insert_fixed_rows","value":"fn <D> (self, i: usize, val: N) -> MatrixMN<N, DimSum<R, D>, C>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `D::dim()` rows filled with `val` starting at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts `D::dim()` rows filled with `val` starting at the `i-th` position.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":316127,"byte_end":316205,"line_start":628,"line_end":628,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":316210,"byte_end":316219,"line_start":629,"line_end":629,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2581},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":316736,"byte_end":316747,"line_start":644,"line_end":644,"column_start":12,"column_end":23},"name":"insert_rows","qualname":"<Matrix<N, R, C, S>>::insert_rows","value":"fn (self, i: usize, n: usize, val: N) -> MatrixMN<N, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `n` rows filled with `val` starting at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts `n` rows filled with `val` starting at the `i-th` position.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":316587,"byte_end":316658,"line_start":641,"line_end":641,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":316663,"byte_end":316672,"line_start":642,"line_end":642,"column_start":5,"column_end":14}},{"value":"cfg(any (feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":316677,"byte_end":316724,"line_start":643,"line_end":643,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2582},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":317384,"byte_end":317417,"line_start":660,"line_end":660,"column_start":19,"column_end":52},"name":"insert_rows_generic_uninitialized","qualname":"<Matrix<N, R, C, S>>::insert_rows_generic_uninitialized","value":"fn <D> (self, i: usize, ninsert: D) -> MatrixMN<N, DimSum<R, D>, C>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `ninsert.value()` rows at the `i-th` place of this matrix.","sig":null,"attributes":[{"value":"/ Inserts `ninsert.value()` rows at the `i-th` place of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":317085,"byte_end":317155,"line_start":654,"line_end":654,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":317160,"byte_end":317163,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ The added rows values are not initialized.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":317168,"byte_end":317214,"line_start":656,"line_end":656,"column_start":5,"column_end":51}},{"value":"/ This is the generic implementation of `.insert_rows(...)` and","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":317219,"byte_end":317284,"line_start":657,"line_end":657,"column_start":5,"column_end":70}},{"value":"/ `.insert_fixed_rows(...)` which have nicer API interfaces.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":317289,"byte_end":317351,"line_start":658,"line_end":658,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":317356,"byte_end":317365,"line_start":659,"line_end":659,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2584},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":318609,"byte_end":318615,"line_start":704,"line_end":704,"column_start":12,"column_end":18},"name":"resize","qualname":"<Matrix<N, R, C, S>>::resize","value":"fn (self, new_nrows: usize, new_ncols: usize, val: N) -> DMatrix<N>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix so that it contains `new_nrows` rows and `new_ncols` columns.","sig":null,"attributes":[{"value":"/ Resizes this matrix so that it contains `new_nrows` rows and `new_ncols` columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":318260,"byte_end":318345,"line_start":699,"line_end":699,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":318350,"byte_end":318353,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":318358,"byte_end":318450,"line_start":701,"line_end":701,"column_start":5,"column_end":97}},{"value":"/ rows and/or columns than `self`, then the extra rows or columns are filled with `val`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":318455,"byte_end":318545,"line_start":702,"line_end":702,"column_start":5,"column_end":95}},{"value":"cfg(any (feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":318550,"byte_end":318597,"line_start":703,"line_end":703,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2585},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":319214,"byte_end":319231,"line_start":716,"line_end":716,"column_start":12,"column_end":29},"name":"resize_vertically","qualname":"<Matrix<N, R, C, S>>::resize_vertically","value":"fn (self, new_nrows: usize, val: N) -> MatrixMN<N, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix vertically, i.e., so that it contains `new_nrows` rows while keeping the same number of columns.","sig":null,"attributes":[{"value":"/ Resizes this matrix vertically, i.e., so that it contains `new_nrows` rows while keeping the same number of columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":318856,"byte_end":318976,"line_start":711,"line_end":711,"column_start":5,"column_end":125}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":318981,"byte_end":318984,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":318989,"byte_end":319081,"line_start":713,"line_end":713,"column_start":5,"column_end":97}},{"value":"/ rows than `self`, then the extra rows are filled with `val`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":319086,"byte_end":319150,"line_start":714,"line_end":714,"column_start":5,"column_end":69}},{"value":"cfg(any (feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":319155,"byte_end":319202,"line_start":715,"line_end":715,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2586},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":319856,"byte_end":319875,"line_start":729,"line_end":729,"column_start":12,"column_end":31},"name":"resize_horizontally","qualname":"<Matrix<N, R, C, S>>::resize_horizontally","value":"fn (self, new_ncols: usize, val: N) -> MatrixMN<N, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix horizontally, i.e., so that it contains `new_ncolumns` columns while keeping the same number of columns.","sig":null,"attributes":[{"value":"/ Resizes this matrix horizontally, i.e., so that it contains `new_ncolumns` columns while keeping the same number of columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":319484,"byte_end":319612,"line_start":724,"line_end":724,"column_start":5,"column_end":133}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":319617,"byte_end":319620,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":319625,"byte_end":319717,"line_start":726,"line_end":726,"column_start":5,"column_end":97}},{"value":"/ columns than `self`, then the extra columns are filled with `val`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":319722,"byte_end":319792,"line_start":727,"line_end":727,"column_start":5,"column_end":75}},{"value":"cfg(any (feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":319797,"byte_end":319844,"line_start":728,"line_end":728,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2587},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":320429,"byte_end":320441,"line_start":741,"line_end":741,"column_start":12,"column_end":24},"name":"fixed_resize","qualname":"<Matrix<N, R, C, S>>::fixed_resize","value":"fn <R2, C2> (self, val: N) -> MatrixMN<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix so that it contains `R2::value()` rows and `C2::value()` columns.","sig":null,"attributes":[{"value":"/ Resizes this matrix so that it contains `R2::value()` rows and `C2::value()` columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":320128,"byte_end":320217,"line_start":737,"line_end":737,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":320222,"byte_end":320225,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":320230,"byte_end":320322,"line_start":739,"line_end":739,"column_start":5,"column_end":97}},{"value":"/ rows and/or columns than `self`, then the extra rows or columns are filled with `val`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":320327,"byte_end":320417,"line_start":740,"line_end":740,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":2590},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":320943,"byte_end":320957,"line_start":753,"line_end":753,"column_start":12,"column_end":26},"name":"resize_generic","qualname":"<Matrix<N, R, C, S>>::resize_generic","value":"fn <R2, C2> (self, new_nrows: R2, new_ncols: C2, val: N) -> MatrixMN<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Resizes `self` such that it has dimensions `new_nrows × now_ncols`.","sig":null,"attributes":[{"value":"/ Resizes `self` such that it has dimensions `new_nrows × now_ncols`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":320645,"byte_end":320717,"line_start":748,"line_end":748,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":320722,"byte_end":320725,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":320730,"byte_end":320822,"line_start":750,"line_end":750,"column_start":5,"column_end":97}},{"value":"/ rows and/or columns than `self`, then the extra rows or columns are filled with `val`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":320827,"byte_end":320917,"line_start":751,"line_end":751,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":320922,"byte_end":320931,"line_start":752,"line_end":752,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2595},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":323318,"byte_end":323328,"line_start":824,"line_end":824,"column_start":12,"column_end":22},"name":"resize_mut","qualname":"<DMatrix<N>>::resize_mut","value":"fn (&mut self, new_nrows: usize, new_ncols: usize, val: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix in-place.","sig":null,"attributes":[{"value":"/ Resizes this matrix in-place.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":322993,"byte_end":323026,"line_start":818,"line_end":818,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":323031,"byte_end":323034,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":323039,"byte_end":323131,"line_start":820,"line_end":820,"column_start":5,"column_end":97}},{"value":"/ rows and/or columns than `self`, then the extra rows or columns are filled with `val`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":323136,"byte_end":323226,"line_start":821,"line_end":821,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":323231,"byte_end":323234,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ Defined only for owned fully-dynamic matrices, i.e., `DMatrix`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":323239,"byte_end":323306,"line_start":823,"line_end":823,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2599},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":324257,"byte_end":324278,"line_start":847,"line_end":847,"column_start":12,"column_end":33},"name":"resize_vertically_mut","qualname":"<MatrixMN<N, Dynamic, C>>::resize_vertically_mut","value":"fn (&mut self, new_nrows: usize, val: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Changes the number of rows of this matrix in-place.","sig":null,"attributes":[{"value":"/ Changes the number of rows of this matrix in-place.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":323860,"byte_end":323915,"line_start":840,"line_end":840,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":323920,"byte_end":323923,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":323928,"byte_end":324020,"line_start":842,"line_end":842,"column_start":5,"column_end":97}},{"value":"/ rows than `self`, then the extra rows are filled with `val`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":324025,"byte_end":324089,"line_start":843,"line_end":843,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":324094,"byte_end":324097,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ Defined only for owned matrices with a dynamic number of rows (for example, `DVector`).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":324102,"byte_end":324193,"line_start":845,"line_end":845,"column_start":5,"column_end":96}},{"value":"cfg(any (feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":324198,"byte_end":324245,"line_start":846,"line_end":846,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2603},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":325240,"byte_end":325263,"line_start":871,"line_end":871,"column_start":12,"column_end":35},"name":"resize_horizontally_mut","qualname":"<MatrixMN<N, R, Dynamic>>::resize_horizontally_mut","value":"fn (&mut self, new_ncols: usize, val: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Changes the number of column of this matrix in-place.","sig":null,"attributes":[{"value":"/ Changes the number of column of this matrix in-place.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":324832,"byte_end":324889,"line_start":864,"line_end":864,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":324894,"byte_end":324897,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":324902,"byte_end":324994,"line_start":866,"line_end":866,"column_start":5,"column_end":97}},{"value":"/ columns than `self`, then the extra columns are filled with `val`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":324999,"byte_end":325069,"line_start":867,"line_end":867,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":325074,"byte_end":325077,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ Defined only for owned matrices with a dynamic number of columns (for example, `DVector`).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":325082,"byte_end":325176,"line_start":869,"line_end":869,"column_start":5,"column_end":99}},{"value":"cfg(any (feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":325181,"byte_end":325228,"line_start":870,"line_end":870,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":2627},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"indexing","qualname":"::base::indexing","value":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","parent":null,"children":[{"krate":0,"index":2628},{"krate":0,"index":2631},{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2649},{"krate":0,"index":2655},{"krate":0,"index":2661},{"krate":0,"index":2667},{"krate":0,"index":2674},{"krate":0,"index":2680},{"krate":0,"index":2686},{"krate":0,"index":2692},{"krate":0,"index":2698},{"krate":0,"index":2709},{"krate":0,"index":2719},{"krate":0,"index":2742},{"krate":0,"index":2751},{"krate":0,"index":2759},{"krate":0,"index":2768},{"krate":0,"index":2776},{"krate":0,"index":2777},{"krate":0,"index":15580},{"krate":0,"index":15590},{"krate":0,"index":15599},{"krate":0,"index":15609},{"krate":0,"index":15618},{"krate":0,"index":15628},{"krate":0,"index":15637},{"krate":0,"index":15647},{"krate":0,"index":15656},{"krate":0,"index":15666},{"krate":0,"index":15675},{"krate":0,"index":15685},{"krate":0,"index":15694},{"krate":0,"index":15705},{"krate":0,"index":15715},{"krate":0,"index":15725},{"krate":0,"index":15734},{"krate":0,"index":15744},{"krate":0,"index":15753},{"krate":0,"index":15763},{"krate":0,"index":15772},{"krate":0,"index":15782},{"krate":0,"index":15791},{"krate":0,"index":15801},{"krate":0,"index":15810},{"krate":0,"index":15820},{"krate":0,"index":15829},{"krate":0,"index":15839},{"krate":0,"index":15848},{"krate":0,"index":15859},{"krate":0,"index":15869},{"krate":0,"index":15879},{"krate":0,"index":15888},{"krate":0,"index":15898},{"krate":0,"index":15907},{"krate":0,"index":15917},{"krate":0,"index":15926},{"krate":0,"index":15936},{"krate":0,"index":15945},{"krate":0,"index":15955},{"krate":0,"index":15964},{"krate":0,"index":15974},{"krate":0,"index":15983},{"krate":0,"index":15993},{"krate":0,"index":16002},{"krate":0,"index":16013},{"krate":0,"index":16023},{"krate":0,"index":16033},{"krate":0,"index":16042},{"krate":0,"index":16052},{"krate":0,"index":16061},{"krate":0,"index":16071},{"krate":0,"index":16080},{"krate":0,"index":16090},{"krate":0,"index":16099},{"krate":0,"index":16109},{"krate":0,"index":16118},{"krate":0,"index":16128},{"krate":0,"index":16137},{"krate":0,"index":16147},{"krate":0,"index":16156},{"krate":0,"index":16167},{"krate":0,"index":16177},{"krate":0,"index":16187},{"krate":0,"index":16196},{"krate":0,"index":16206},{"krate":0,"index":16215},{"krate":0,"index":16225},{"krate":0,"index":16234},{"krate":0,"index":16244},{"krate":0,"index":16253},{"krate":0,"index":16263},{"krate":0,"index":16272},{"krate":0,"index":16282},{"krate":0,"index":16291},{"krate":0,"index":16301},{"krate":0,"index":16310},{"krate":0,"index":16321},{"krate":0,"index":16331},{"krate":0,"index":16341},{"krate":0,"index":16350},{"krate":0,"index":16360},{"krate":0,"index":16369},{"krate":0,"index":16379},{"krate":0,"index":16388},{"krate":0,"index":16398},{"krate":0,"index":16407},{"krate":0,"index":16417},{"krate":0,"index":16426},{"krate":0,"index":16436},{"krate":0,"index":16445},{"krate":0,"index":16455},{"krate":0,"index":16464},{"krate":0,"index":16475},{"krate":0,"index":16485},{"krate":0,"index":16495},{"krate":0,"index":16504},{"krate":0,"index":16514},{"krate":0,"index":16523},{"krate":0,"index":16533},{"krate":0,"index":16542},{"krate":0,"index":16552},{"krate":0,"index":16561},{"krate":0,"index":16571},{"krate":0,"index":16580},{"krate":0,"index":16590},{"krate":0,"index":16599},{"krate":0,"index":16609},{"krate":0,"index":16618},{"krate":0,"index":16629},{"krate":0,"index":16639},{"krate":0,"index":16650},{"krate":0,"index":16660},{"krate":0,"index":16671},{"krate":0,"index":16681},{"krate":0,"index":16692},{"krate":0,"index":16702},{"krate":0,"index":16713},{"krate":0,"index":16723},{"krate":0,"index":16734},{"krate":0,"index":16744},{"krate":0,"index":16755},{"krate":0,"index":16765},{"krate":0,"index":16776},{"krate":0,"index":16786},{"krate":0,"index":16798}],"decl_id":null,"docs":" Indexing\n","sig":null,"attributes":[{"value":"! Indexing","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":332037,"byte_end":332049,"line_start":1,"line_end":1,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":2645},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":332348,"byte_end":332354,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Length","qualname":"::base::indexing::DimRange::Length","value":"type Length: Dim;","parent":{"krate":0,"index":2643},"children":[],"decl_id":null,"docs":" The number of elements indexed by this range.\n","sig":null,"attributes":[{"value":"/ The number of elements indexed by this range.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":332289,"byte_end":332338,"line_start":12,"line_end":12,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":2698},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":339997,"byte_end":340008,"line_start":326,"line_end":326,"column_start":11,"column_end":22},"name":"MatrixIndex","qualname":"::base::indexing::MatrixIndex","value":"MatrixIndex<'a, N: Scalar, R: Dim, C: Dim, S: Storage<N, R, C>>: Sized","parent":null,"children":[{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2707},{"krate":0,"index":2708}],"decl_id":null,"docs":" A helper trait used for indexing operations.\n","sig":null,"attributes":[{"value":"/ A helper trait used for indexing operations.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":339938,"byte_end":339986,"line_start":325,"line_end":325,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":2704},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":340124,"byte_end":340130,"line_start":328,"line_end":328,"column_start":10,"column_end":16},"name":"Output","qualname":"::base::indexing::MatrixIndex::Output","value":"type Output: 'a;","parent":{"krate":0,"index":2698},"children":[],"decl_id":null,"docs":" The output type returned by methods.\n","sig":null,"attributes":[{"value":"/ The output type returned by methods.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":340074,"byte_end":340114,"line_start":327,"line_end":327,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2705},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":340233,"byte_end":340245,"line_start":332,"line_end":332,"column_start":8,"column_end":20},"name":"contained_by","qualname":"::base::indexing::MatrixIndex::contained_by","value":"fn (&self, matrix: &Matrix<N, R, C, S>) -> bool","parent":{"krate":0,"index":2698},"children":[],"decl_id":null,"docs":" Produces true if the given matrix is contained by this index.\n","sig":null,"attributes":[{"value":"/ Produces true if the given matrix is contained by this index.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":340141,"byte_end":340206,"line_start":330,"line_end":330,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":340444,"byte_end":340447,"line_start":338,"line_end":338,"column_start":8,"column_end":11},"name":"get","qualname":"::base::indexing::MatrixIndex::get","value":"fn (self, matrix: &'a Matrix<N, R, C, S>) -> Option<Self::Output>","parent":{"krate":0,"index":2698},"children":[],"decl_id":null,"docs":" Produces a shared view of the data at this location if in bounds,\n or `None`, otherwise.\n","sig":null,"attributes":[{"value":"/ Produces a shared view of the data at this location if in bounds,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":340296,"byte_end":340365,"line_start":334,"line_end":334,"column_start":5,"column_end":74}},{"value":"/ or `None`, otherwise.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":340370,"byte_end":340395,"line_start":335,"line_end":335,"column_start":5,"column_end":30}},{"value":"inline(always)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":340419,"byte_end":340436,"line_start":337,"line_end":337,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2707},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":340801,"byte_end":340814,"line_start":349,"line_end":349,"column_start":15,"column_end":28},"name":"get_unchecked","qualname":"::base::indexing::MatrixIndex::get_unchecked","value":"fn (self, matrix: &'a Matrix<N, R, C, S>) -> Self::Output","parent":{"krate":0,"index":2698},"children":[],"decl_id":null,"docs":" Produces a shared view of the data at this location if in bounds\n without any bounds checking.\n","sig":null,"attributes":[{"value":"/ Produces a shared view of the data at this location if in bounds","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":340662,"byte_end":340730,"line_start":346,"line_end":346,"column_start":5,"column_end":73}},{"value":"/ without any bounds checking.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":340735,"byte_end":340767,"line_start":347,"line_end":347,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2708},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":341016,"byte_end":341021,"line_start":355,"line_end":355,"column_start":8,"column_end":13},"name":"index","qualname":"::base::indexing::MatrixIndex::index","value":"fn (self, matrix: &'a Matrix<N, R, C, S>) -> Self::Output","parent":{"krate":0,"index":2698},"children":[],"decl_id":null,"docs":" Produces a shared view to the data at this location, or panics\n if out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a shared view to the data at this location, or panics","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":340875,"byte_end":340941,"line_start":351,"line_end":351,"column_start":5,"column_end":71}},{"value":"/ if out of bounds.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":340946,"byte_end":340967,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"inline(always)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":340991,"byte_end":341008,"line_start":354,"line_end":354,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":2709},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":341202,"byte_end":341216,"line_start":361,"line_end":361,"column_start":11,"column_end":25},"name":"MatrixIndexMut","qualname":"::base::indexing::MatrixIndexMut","value":"MatrixIndexMut<'a, N: Scalar, R: Dim, C: Dim, S: StorageMut<N, R, C>>: MatrixIndex<'a, N, R, C, S>","parent":null,"children":[{"krate":0,"index":2715},{"krate":0,"index":2716},{"krate":0,"index":2717},{"krate":0,"index":2718}],"decl_id":null,"docs":" A helper trait used for indexing operations.\n","sig":null,"attributes":[{"value":"/ A helper trait used for indexing operations.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":341143,"byte_end":341191,"line_start":360,"line_end":360,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":2715},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":341361,"byte_end":341370,"line_start":365,"line_end":365,"column_start":10,"column_end":19},"name":"OutputMut","qualname":"::base::indexing::MatrixIndexMut::OutputMut","value":"type OutputMut: 'a;","parent":{"krate":0,"index":2709},"children":[],"decl_id":null,"docs":" The output type returned by methods.\n","sig":null,"attributes":[{"value":"/ The output type returned by methods.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":341311,"byte_end":341351,"line_start":364,"line_end":364,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2716},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":341520,"byte_end":341537,"line_start":370,"line_end":370,"column_start":15,"column_end":32},"name":"get_unchecked_mut","qualname":"::base::indexing::MatrixIndexMut::get_unchecked_mut","value":"fn (self, matrix: &'a mut Matrix<N, R, C, S>) -> Self::OutputMut","parent":{"krate":0,"index":2709},"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at this location, without\n performing any bounds checking.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at this location, without","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":341381,"byte_end":341446,"line_start":367,"line_end":367,"column_start":5,"column_end":70}},{"value":"/ performing any bounds checking.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":341451,"byte_end":341486,"line_start":368,"line_end":368,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2717},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":341733,"byte_end":341740,"line_start":376,"line_end":376,"column_start":8,"column_end":15},"name":"get_mut","qualname":"::base::indexing::MatrixIndexMut::get_mut","value":"fn (self, matrix: &'a mut Matrix<N, R, C, S>) -> Option<Self::OutputMut>","parent":{"krate":0,"index":2709},"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at this location, if in\n bounds.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at this location, if in","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":341605,"byte_end":341668,"line_start":372,"line_end":372,"column_start":5,"column_end":68}},{"value":"/ bounds.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":341673,"byte_end":341684,"line_start":373,"line_end":373,"column_start":5,"column_end":16}},{"value":"inline(always)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":341708,"byte_end":341725,"line_start":375,"line_end":375,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":342108,"byte_end":342117,"line_start":388,"line_end":388,"column_start":8,"column_end":17},"name":"index_mut","qualname":"::base::indexing::MatrixIndexMut::index_mut","value":"fn (self, matrix: &'a mut Matrix<N, R, C, S>) -> Self::OutputMut","parent":{"krate":0,"index":2709},"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at this location, or panics\n if out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at this location, or panics","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":341966,"byte_end":342033,"line_start":384,"line_end":384,"column_start":5,"column_end":72}},{"value":"/ if out of bounds.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":342038,"byte_end":342059,"line_start":385,"line_end":385,"column_start":5,"column_end":26}},{"value":"inline(always)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":342083,"byte_end":342100,"line_start":387,"line_end":387,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2724},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":345074,"byte_end":345077,"line_start":496,"line_end":496,"column_start":12,"column_end":15},"name":"get","qualname":"<Matrix<N, R, C, S>>::get","value":"fn <'a, I> (&'a self, index: I) -> Option<I::Output>","parent":null,"children":[],"decl_id":null,"docs":" Produces a view of the data at the given index, or\n `None` if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a view of the data at the given index, or","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":344948,"byte_end":345002,"line_start":493,"line_end":493,"column_start":5,"column_end":59}},{"value":"/ `None` if the index is out of bounds.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":345007,"byte_end":345048,"line_start":494,"line_end":494,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":345053,"byte_end":345062,"line_start":495,"line_end":495,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2727},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":345351,"byte_end":345358,"line_start":506,"line_end":506,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Matrix<N, R, C, S>>::get_mut","value":"fn <'a, I> (&'a mut self, index: I) -> Option<I::OutputMut>","parent":null,"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at the given index, or\n `None` if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at the given index, or","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":345217,"byte_end":345279,"line_start":503,"line_end":503,"column_start":5,"column_end":67}},{"value":"/ `None` if the index is out of bounds.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":345284,"byte_end":345325,"line_start":504,"line_end":504,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":345330,"byte_end":345339,"line_start":505,"line_end":505,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2730},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":345670,"byte_end":345675,"line_start":517,"line_end":517,"column_start":12,"column_end":17},"name":"index","qualname":"<Matrix<N, R, C, S>>::index","value":"fn <'a, I> (&'a self, index: I) -> I::Output","parent":null,"children":[],"decl_id":null,"docs":" Produces a view of the data at the given index, or\n panics if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a view of the data at the given index, or","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":345544,"byte_end":345598,"line_start":514,"line_end":514,"column_start":5,"column_end":59}},{"value":"/ panics if the index is out of bounds.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":345603,"byte_end":345644,"line_start":515,"line_end":515,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":345649,"byte_end":345658,"line_start":516,"line_end":516,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2733},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":345943,"byte_end":345952,"line_start":527,"line_end":527,"column_start":12,"column_end":21},"name":"index_mut","qualname":"<Matrix<N, R, C, S>>::index_mut","value":"fn <'a, I> (&'a mut self, index: I) -> I::OutputMut","parent":null,"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at the given index, or\n panics if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at the given index, or","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":345809,"byte_end":345871,"line_start":524,"line_end":524,"column_start":5,"column_end":67}},{"value":"/ panics if the index is out of bounds.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":345876,"byte_end":345917,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":345922,"byte_end":345931,"line_start":526,"line_end":526,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2736},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":346259,"byte_end":346272,"line_start":538,"line_end":538,"column_start":19,"column_end":32},"name":"get_unchecked","qualname":"<Matrix<N, R, C, S>>::get_unchecked","value":"fn <'a, I> (&'a self, index: I) -> I::Output","parent":null,"children":[],"decl_id":null,"docs":" Produces a view of the data at the given index, without doing\n any bounds checking.\n","sig":null,"attributes":[{"value":"/ Produces a view of the data at the given index, without doing","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":346132,"byte_end":346197,"line_start":535,"line_end":535,"column_start":5,"column_end":70}},{"value":"/ any bounds checking.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":346202,"byte_end":346226,"line_start":536,"line_end":536,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":346231,"byte_end":346240,"line_start":537,"line_end":537,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2739},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":346548,"byte_end":346565,"line_start":548,"line_end":548,"column_start":19,"column_end":36},"name":"get_unchecked_mut","qualname":"<Matrix<N, R, C, S>>::get_unchecked_mut","value":"fn <'a, I> (&'a mut self, index: I) -> I::OutputMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable view of the data at the given index, without doing\n any bounds checking.\n","sig":null,"attributes":[{"value":"/ Returns a mutable view of the data at the given index, without doing","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":346414,"byte_end":346486,"line_start":545,"line_end":545,"column_start":5,"column_end":77}},{"value":"/ any bounds checking.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":346491,"byte_end":346515,"line_start":546,"line_end":546,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":346520,"byte_end":346529,"line_start":547,"line_end":547,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":2841},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":355001,"byte_end":355013,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"name":"SquareMatrix","qualname":"::base::matrix::SquareMatrix","value":"Matrix<N, D, D, S>","parent":null,"children":[],"decl_id":null,"docs":" A square matrix.\n","sig":null,"attributes":[{"value":"/ A square matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":354971,"byte_end":354991,"line_start":34,"line_end":34,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":2845},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":355098,"byte_end":355104,"line_start":38,"line_end":38,"column_start":10,"column_end":16},"name":"Vector","qualname":"::base::matrix::Vector","value":"Matrix<N, D, U1, S>","parent":null,"children":[],"decl_id":null,"docs":" A matrix with one column and `D` rows.\n","sig":null,"attributes":[{"value":"/ A matrix with one column and `D` rows.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":355046,"byte_end":355088,"line_start":37,"line_end":37,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":2849},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":355191,"byte_end":355200,"line_start":41,"line_end":41,"column_start":10,"column_end":19},"name":"RowVector","qualname":"::base::matrix::RowVector","value":"Matrix<N, U1, D, S>","parent":null,"children":[],"decl_id":null,"docs":" A matrix with one row and `D` columns .\n","sig":null,"attributes":[{"value":"/ A matrix with one row and `D` columns .","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":355138,"byte_end":355181,"line_start":40,"line_end":40,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":2853},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":355287,"byte_end":355296,"line_start":44,"line_end":44,"column_start":10,"column_end":19},"name":"MatrixSum","qualname":"::base::matrix::MatrixSum","value":"Matrix<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>,\n       SameShapeStorage<N, R1, C1, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" The type of the result of a matrix sum.\n","sig":null,"attributes":[{"value":"/ The type of the result of a matrix sum.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":355234,"byte_end":355277,"line_start":43,"line_end":43,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":2859},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":355464,"byte_end":355473,"line_start":48,"line_end":48,"column_start":10,"column_end":19},"name":"VectorSum","qualname":"::base::matrix::VectorSum","value":"Matrix<N, SameShapeR<R1, R2>, U1, SameShapeStorage<N, R1, U1, R2, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The type of the result of a matrix sum.\n","sig":null,"attributes":[{"value":"/ The type of the result of a matrix sum.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":355411,"byte_end":355454,"line_start":47,"line_end":47,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":2863},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":355627,"byte_end":355638,"line_start":52,"line_end":52,"column_start":10,"column_end":21},"name":"MatrixCross","qualname":"::base::matrix::MatrixCross","value":"Matrix<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>,\n       SameShapeStorage<N, R1, C1, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" The type of the result of a matrix cross product.\n","sig":null,"attributes":[{"value":"/ The type of the result of a matrix cross product.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":355564,"byte_end":355617,"line_start":51,"line_end":51,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":16809},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":357158,"byte_end":357164,"line_start":80,"line_end":80,"column_start":12,"column_end":18},"name":"Matrix","qualname":"::base::matrix::Matrix","value":"Matrix { data }","parent":null,"children":[{"krate":0,"index":16814},{"krate":0,"index":16815}],"decl_id":null,"docs":" The most generic column-major matrix (and vector) type.","sig":null,"attributes":[{"value":"/ The most generic column-major matrix (and vector) type.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":355753,"byte_end":355812,"line_start":55,"line_end":55,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":355813,"byte_end":355816,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ It combines four type parameters:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":355817,"byte_end":355854,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/ - `N`: for the matrix components scalar type.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":355855,"byte_end":355904,"line_start":58,"line_end":58,"column_start":1,"column_end":50}},{"value":"/ - `R`: for the matrix number of rows.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":355905,"byte_end":355946,"line_start":59,"line_end":59,"column_start":1,"column_end":42}},{"value":"/ - `C`: for the matrix number of columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":355947,"byte_end":355991,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/ - `S`: for the matrix data storage, i.e., the buffer that actually contains the matrix","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":355992,"byte_end":356082,"line_start":61,"line_end":61,"column_start":1,"column_end":91}},{"value":"/ components.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":356083,"byte_end":356098,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":356099,"byte_end":356102,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The matrix dimensions parameters `R` and `C` can either be:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":356103,"byte_end":356166,"line_start":64,"line_end":64,"column_start":1,"column_end":64}},{"value":"/ - type-level unsigned integer constants (e.g. `U1`, `U124`) from the `nalgebra::` root module.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":356167,"byte_end":356265,"line_start":65,"line_end":65,"column_start":1,"column_end":99}},{"value":"/ All numbers from 0 to 127 are defined that way.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":356266,"byte_end":356318,"line_start":66,"line_end":66,"column_start":1,"column_end":52}},{"value":"/ - type-level unsigned integer constants (e.g. `U1024`, `U10000`) from the `typenum::` crate.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":356319,"byte_end":356415,"line_start":67,"line_end":67,"column_start":1,"column_end":97}},{"value":"/ Using those, you will not get error messages as nice as for numbers smaller than 128 defined on","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":356416,"byte_end":356515,"line_start":68,"line_end":68,"column_start":1,"column_end":100}},{"value":"/ the `nalgebra::` module.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":356516,"byte_end":356544,"line_start":69,"line_end":69,"column_start":1,"column_end":29}},{"value":"/ - the special value `Dynamic` from the `nalgebra::` root module. This indicates that the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":356545,"byte_end":356637,"line_start":70,"line_end":70,"column_start":1,"column_end":93}},{"value":"/ specified dimension is not known at compile-time. Note that this will generally imply that the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":356638,"byte_end":356736,"line_start":71,"line_end":71,"column_start":1,"column_end":99}},{"value":"/ matrix data storage `S` performs a dynamic allocation and contains extra metadata for the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":356737,"byte_end":356830,"line_start":72,"line_end":72,"column_start":1,"column_end":94}},{"value":"/ matrix shape.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":356831,"byte_end":356848,"line_start":73,"line_end":73,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":356849,"byte_end":356852,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Note that mixing `Dynamic` with type-level unsigned integers is allowed. Actually, a","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":356853,"byte_end":356941,"line_start":75,"line_end":75,"column_start":1,"column_end":89}},{"value":"/ dynamically-sized column vector should be represented as a `Matrix<N, Dynamic, U1, S>` (given","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":356942,"byte_end":357039,"line_start":76,"line_end":76,"column_start":1,"column_end":98}},{"value":"/ some concrete types for `N` and a compatible data storage type `S`).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":357040,"byte_end":357112,"line_start":77,"line_end":77,"column_start":1,"column_end":73}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":357113,"byte_end":357123,"line_start":78,"line_end":78,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":16814},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":357344,"byte_end":357348,"line_start":83,"line_end":83,"column_start":9,"column_end":13},"name":"data","qualname":"::base::matrix::Matrix::data","value":"S","parent":{"krate":0,"index":16809},"children":[],"decl_id":null,"docs":" The data storage that contains all the matrix components and informations about its number\n of rows and column (if needed).\n","sig":null,"attributes":[{"value":"/ The data storage that contains all the matrix components and informations about its number","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":357201,"byte_end":357295,"line_start":81,"line_end":81,"column_start":5,"column_end":99}},{"value":"/ of rows and column (if needed).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":357300,"byte_end":357335,"line_start":82,"line_end":82,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2880},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":359067,"byte_end":359097,"line_start":151,"line_end":151,"column_start":19,"column_end":49},"name":"from_data_statically_unchecked","qualname":"<Matrix<N, R, C, S>>::from_data_statically_unchecked","value":"fn (data: S) -> Matrix<N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix with the given data without statically checking that the matrix\n dimension matches the storage dimension.\n","sig":null,"attributes":[{"value":"/ Creates a new matrix with the given data without statically checking that the matrix","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":358897,"byte_end":358985,"line_start":148,"line_end":148,"column_start":5,"column_end":93}},{"value":"/ dimension matches the storage dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":358990,"byte_end":359034,"line_start":149,"line_end":149,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":359039,"byte_end":359048,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2886},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":359376,"byte_end":359385,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"from_data","qualname":"<Matrix<N, R, C, S>>::from_data","value":"fn (data: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix with the given data.\n","sig":null,"attributes":[{"value":"/ Creates a new matrix with the given data.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":359305,"byte_end":359350,"line_start":160,"line_end":160,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":359355,"byte_end":359364,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2887},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":359715,"byte_end":359718,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"len","qualname":"<Matrix<N, R, C, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The total number of elements of this matrix.","sig":null,"attributes":[{"value":"/ The total number of elements of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":359478,"byte_end":359526,"line_start":166,"line_end":166,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":359531,"byte_end":359534,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":359539,"byte_end":359554,"line_start":168,"line_end":168,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":359559,"byte_end":359562,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":359567,"byte_end":359574,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":359579,"byte_end":359609,"line_start":171,"line_end":171,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":359614,"byte_end":359654,"line_start":172,"line_end":172,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat.len(), 12);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":359659,"byte_end":359689,"line_start":173,"line_end":173,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":359694,"byte_end":359703,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2888},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360095,"byte_end":360100,"line_start":189,"line_end":189,"column_start":12,"column_end":17},"name":"shape","qualname":"<Matrix<N, R, C, S>>::shape","value":"fn (&self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" The shape of this matrix returned as the tuple (number of rows, number of columns).","sig":null,"attributes":[{"value":"/ The shape of this matrix returned as the tuple (number of rows, number of columns).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":359813,"byte_end":359900,"line_start":180,"line_end":180,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":359905,"byte_end":359908,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":359913,"byte_end":359928,"line_start":182,"line_end":182,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":359933,"byte_end":359936,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":359941,"byte_end":359948,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":359953,"byte_end":359983,"line_start":185,"line_end":185,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":359988,"byte_end":360028,"line_start":186,"line_end":186,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat.shape(), (3, 4));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360033,"byte_end":360069,"line_start":187,"line_end":187,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360074,"byte_end":360083,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2889},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360454,"byte_end":360459,"line_start":203,"line_end":203,"column_start":12,"column_end":17},"name":"nrows","qualname":"<Matrix<N, R, C, S>>::nrows","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of rows of this matrix.","sig":null,"attributes":[{"value":"/ The number of rows of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360226,"byte_end":360264,"line_start":194,"line_end":194,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360269,"byte_end":360272,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360277,"byte_end":360292,"line_start":196,"line_end":196,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360297,"byte_end":360300,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360305,"byte_end":360312,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360317,"byte_end":360347,"line_start":199,"line_end":199,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360352,"byte_end":360392,"line_start":200,"line_end":200,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat.nrows(), 3);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360397,"byte_end":360428,"line_start":201,"line_end":201,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360433,"byte_end":360442,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2890},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360743,"byte_end":360748,"line_start":216,"line_end":216,"column_start":12,"column_end":17},"name":"ncols","qualname":"<Matrix<N, R, C, S>>::ncols","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of columns of this matrix.","sig":null,"attributes":[{"value":"/ The number of columns of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360512,"byte_end":360553,"line_start":207,"line_end":207,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360558,"byte_end":360561,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360566,"byte_end":360581,"line_start":209,"line_end":209,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360586,"byte_end":360589,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360594,"byte_end":360601,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360606,"byte_end":360636,"line_start":212,"line_end":212,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360641,"byte_end":360681,"line_start":213,"line_end":213,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat.ncols(), 4);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360686,"byte_end":360717,"line_start":214,"line_end":214,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360722,"byte_end":360731,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2891},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":361231,"byte_end":361238,"line_start":231,"line_end":231,"column_start":12,"column_end":19},"name":"strides","qualname":"<Matrix<N, R, C, S>>::strides","value":"fn (&self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" The strides (row stride, column stride) of this matrix.","sig":null,"attributes":[{"value":"/ The strides (row stride, column stride) of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360801,"byte_end":360860,"line_start":220,"line_end":220,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360865,"byte_end":360868,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360873,"byte_end":360888,"line_start":222,"line_end":222,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360893,"byte_end":360896,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360901,"byte_end":360908,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::DMatrix;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360913,"byte_end":360941,"line_start":225,"line_end":225,"column_start":5,"column_end":33}},{"value":"/ let mat = DMatrix::<f32>::zeros(10, 10);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360946,"byte_end":360990,"line_start":226,"line_end":226,"column_start":5,"column_end":49}},{"value":"/ let slice = mat.slice_with_steps((0, 0), (5, 3), (1, 2));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":360995,"byte_end":361056,"line_start":227,"line_end":227,"column_start":5,"column_end":66}},{"value":"/ // The column strides is the number of steps (here 2) multiplied by the corresponding dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":361061,"byte_end":361161,"line_start":228,"line_end":228,"column_start":5,"column_end":105}},{"value":"/ assert_eq!(mat.strides(), (1, 10));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":361166,"byte_end":361205,"line_start":229,"line_end":229,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":361210,"byte_end":361219,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2892},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":361974,"byte_end":361978,"line_start":253,"line_end":253,"column_start":12,"column_end":16},"name":"iter","qualname":"<Matrix<N, R, C, S>>::iter","value":"fn (&self) -> MatrixIter<N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Iterates through this matrix coordinates in column-major order.","sig":null,"attributes":[{"value":"/ Iterates through this matrix coordinates in column-major order.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":361366,"byte_end":361433,"line_start":236,"line_end":236,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":361438,"byte_end":361441,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":361446,"byte_end":361461,"line_start":238,"line_end":238,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":361466,"byte_end":361469,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":361474,"byte_end":361481,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":361486,"byte_end":361516,"line_start":241,"line_end":241,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix2x3::new(11, 12, 13,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":361521,"byte_end":361561,"line_start":242,"line_end":242,"column_start":5,"column_end":45}},{"value":"/                          21, 22, 23);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":361566,"byte_end":361607,"line_start":243,"line_end":243,"column_start":5,"column_end":46}},{"value":"/ let mut it = mat.iter();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":361612,"byte_end":361640,"line_start":244,"line_end":244,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(*it.next().unwrap(), 11);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":361645,"byte_end":361685,"line_start":245,"line_end":245,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 21);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":361690,"byte_end":361730,"line_start":246,"line_end":246,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 12);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":361735,"byte_end":361775,"line_start":247,"line_end":247,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 22);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":361780,"byte_end":361820,"line_start":248,"line_end":248,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 13);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":361825,"byte_end":361865,"line_start":249,"line_end":249,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 23);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":361870,"byte_end":361910,"line_start":250,"line_end":250,"column_start":5,"column_end":45}},{"value":"/ assert!(it.next().is_none());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":361915,"byte_end":361948,"line_start":251,"line_end":251,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":361953,"byte_end":361962,"line_start":252,"line_end":252,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2893},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362404,"byte_end":362412,"line_start":269,"line_end":269,"column_start":12,"column_end":20},"name":"row_iter","qualname":"<Matrix<N, R, C, S>>::row_iter","value":"fn (&self) -> RowIter<N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Iterate through the rows of this matrix.","sig":null,"attributes":[{"value":"/ Iterate through the rows of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362061,"byte_end":362105,"line_start":257,"line_end":257,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362110,"byte_end":362113,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362118,"byte_end":362131,"line_start":259,"line_end":259,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362136,"byte_end":362143,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362148,"byte_end":362178,"line_start":261,"line_end":261,"column_start":5,"column_end":35}},{"value":"/ let mut a = Matrix2x3::new(1, 2, 3,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362183,"byte_end":362222,"line_start":262,"line_end":262,"column_start":5,"column_end":44}},{"value":"/                            4, 5, 6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362227,"byte_end":362267,"line_start":263,"line_end":263,"column_start":5,"column_end":45}},{"value":"/ for (i, row) in a.row_iter().enumerate() {","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362272,"byte_end":362318,"line_start":264,"line_end":264,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(row, a.row(i))","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362323,"byte_end":362356,"line_start":265,"line_end":265,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362361,"byte_end":362366,"line_start":266,"line_end":266,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362371,"byte_end":362378,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362383,"byte_end":362392,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2894},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362833,"byte_end":362844,"line_start":284,"line_end":284,"column_start":12,"column_end":23},"name":"column_iter","qualname":"<Matrix<N, R, C, S>>::column_iter","value":"fn (&self) -> ColumnIter<N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Iterate through the columns of this matrix.\n # Example\n ```\n # use nalgebra::Matrix2x3;\n let mut a = Matrix2x3::new(1, 2, 3,\n                            4, 5, 6);\n for (i, column) in a.column_iter().enumerate() {\n     assert_eq!(column, a.column(i))\n }\n ```\n","sig":null,"attributes":[{"value":"/ Iterate through the columns of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362483,"byte_end":362530,"line_start":273,"line_end":273,"column_start":5,"column_end":52}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362535,"byte_end":362548,"line_start":274,"line_end":274,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362553,"byte_end":362560,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362565,"byte_end":362595,"line_start":276,"line_end":276,"column_start":5,"column_end":35}},{"value":"/ let mut a = Matrix2x3::new(1, 2, 3,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362600,"byte_end":362639,"line_start":277,"line_end":277,"column_start":5,"column_end":44}},{"value":"/                            4, 5, 6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362644,"byte_end":362684,"line_start":278,"line_end":278,"column_start":5,"column_end":45}},{"value":"/ for (i, column) in a.column_iter().enumerate() {","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362689,"byte_end":362741,"line_start":279,"line_end":279,"column_start":5,"column_end":57}},{"value":"/     assert_eq!(column, a.column(i))","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362746,"byte_end":362785,"line_start":280,"line_end":280,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362790,"byte_end":362795,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362800,"byte_end":362807,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362812,"byte_end":362821,"line_start":283,"line_end":283,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2895},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":363313,"byte_end":363335,"line_start":301,"line_end":301,"column_start":12,"column_end":34},"name":"vector_to_matrix_index","qualname":"<Matrix<N, R, C, S>>::vector_to_matrix_index","value":"fn (&self, i: usize) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Computes the row and column coordinates of the i-th element of this matrix seen as a\n vector.","sig":null,"attributes":[{"value":"/ Computes the row and column coordinates of the i-th element of this matrix seen as a","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":362921,"byte_end":363009,"line_start":288,"line_end":288,"column_start":5,"column_end":93}},{"value":"/ vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":363014,"byte_end":363025,"line_start":289,"line_end":289,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":363030,"byte_end":363033,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":363038,"byte_end":363051,"line_start":291,"line_end":291,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":363056,"byte_end":363063,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":363068,"byte_end":363096,"line_start":293,"line_end":293,"column_start":5,"column_end":33}},{"value":"/ let m = Matrix2::new(1, 2,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":363101,"byte_end":363131,"line_start":294,"line_end":294,"column_start":5,"column_end":35}},{"value":"/                      3, 4);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":363136,"byte_end":363167,"line_start":295,"line_end":295,"column_start":5,"column_end":36}},{"value":"/ let i = m.vector_to_matrix_index(3);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":363172,"byte_end":363212,"line_start":296,"line_end":296,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(i, (1, 1));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":363217,"byte_end":363243,"line_start":297,"line_end":297,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(m[i], m[3]);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":363248,"byte_end":363275,"line_start":298,"line_end":298,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":363280,"byte_end":363287,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":363292,"byte_end":363301,"line_start":300,"line_end":300,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2896},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":364107,"byte_end":364113,"line_start":329,"line_end":329,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<Matrix<N, R, C, S>>::as_ptr","value":"fn (&self) -> *const N","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the start of the matrix.","sig":null,"attributes":[{"value":"/ Returns a pointer to the start of the matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":363698,"byte_end":363747,"line_start":315,"line_end":315,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":363752,"byte_end":363755,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ If the matrix is not empty, this pointer is guaranteed to be aligned","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":363760,"byte_end":363832,"line_start":317,"line_end":317,"column_start":5,"column_end":77}},{"value":"/ and non-null.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":363837,"byte_end":363854,"line_start":318,"line_end":318,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":363859,"byte_end":363862,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":363867,"byte_end":363880,"line_start":320,"line_end":320,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":363885,"byte_end":363892,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":363897,"byte_end":363925,"line_start":322,"line_end":322,"column_start":5,"column_end":33}},{"value":"/ let m = Matrix2::new(1, 2,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":363930,"byte_end":363960,"line_start":323,"line_end":323,"column_start":5,"column_end":35}},{"value":"/                      3, 4);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":363965,"byte_end":363996,"line_start":324,"line_end":324,"column_start":5,"column_end":36}},{"value":"/ let ptr = m.as_ptr();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":364001,"byte_end":364026,"line_start":325,"line_end":325,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(unsafe { *ptr }, m[0]);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":364031,"byte_end":364069,"line_start":326,"line_end":326,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":364074,"byte_end":364081,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":364086,"byte_end":364095,"line_start":328,"line_end":328,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2897},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":364343,"byte_end":364354,"line_start":337,"line_end":337,"column_start":12,"column_end":23},"name":"relative_eq","qualname":"<Matrix<N, R, C, S>>::relative_eq","value":"fn <R2, C2, SB> (&self, other: &Matrix<N, R2, C2, SB>, eps: N::Epsilon, max_relative: N::Epsilon) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether `self` and `rhs` are equal up to a given epsilon.","sig":null,"attributes":[{"value":"/ Tests whether `self` and `rhs` are equal up to a given epsilon.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":364170,"byte_end":364237,"line_start":333,"line_end":333,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":364242,"byte_end":364245,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ See `relative_eq` from the `RelativeEq` trait for more details.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":364250,"byte_end":364317,"line_start":335,"line_end":335,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":364322,"byte_end":364331,"line_start":336,"line_end":336,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2902},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":364957,"byte_end":364959,"line_start":359,"line_end":359,"column_start":12,"column_end":14},"name":"eq","qualname":"<Matrix<N, R, C, S>>::eq","value":"fn <R2, C2, SB> (&self, other: &Matrix<N, R2, C2, SB>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether `self` and `rhs` are exactly equal.\n","sig":null,"attributes":[{"value":"/ Tests whether `self` and `rhs` are exactly equal.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":364878,"byte_end":364931,"line_start":357,"line_end":357,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":364936,"byte_end":364945,"line_start":358,"line_end":358,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2907},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":365397,"byte_end":365407,"line_start":373,"line_end":373,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Matrix<N, R, C, S>>::into_owned","value":"fn (self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Moves this matrix into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Moves this matrix into one that owns its data.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":365321,"byte_end":365371,"line_start":371,"line_end":371,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":365376,"byte_end":365385,"line_start":372,"line_end":372,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2908},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":365815,"byte_end":365829,"line_start":385,"line_end":385,"column_start":12,"column_end":26},"name":"into_owned_sum","qualname":"<Matrix<N, R, C, S>>::into_owned_sum","value":"fn <R2, C2> (self) -> MatrixSum<N, R, C, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Moves this matrix into one that owns its data. The actual type of the result depends on\n matrix storage combination rules for addition.\n","sig":null,"attributes":[{"value":"/ Moves this matrix into one that owns its data. The actual type of the result depends on","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":365643,"byte_end":365734,"line_start":382,"line_end":382,"column_start":5,"column_end":96}},{"value":"/ matrix storage combination rules for addition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":365739,"byte_end":365789,"line_start":383,"line_end":383,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":365794,"byte_end":365803,"line_start":384,"line_end":384,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2911},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":366646,"byte_end":366657,"line_start":409,"line_end":409,"column_start":12,"column_end":23},"name":"clone_owned","qualname":"<Matrix<N, R, C, S>>::clone_owned","value":"fn (&self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Clones this matrix to one that owns its data.\n","sig":null,"attributes":[{"value":"/ Clones this matrix to one that owns its data.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":366571,"byte_end":366620,"line_start":407,"line_end":407,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":366625,"byte_end":366634,"line_start":408,"line_end":408,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2912},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":366983,"byte_end":366998,"line_start":419,"line_end":419,"column_start":12,"column_end":27},"name":"clone_owned_sum","qualname":"<Matrix<N, R, C, S>>::clone_owned_sum","value":"fn <R2, C2> (&self) -> MatrixSum<N, R, C, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Clones this matrix into one that owns its data. The actual type of the result depends on\n matrix storage combination rules for addition.\n","sig":null,"attributes":[{"value":"/ Clones this matrix into one that owns its data. The actual type of the result depends on","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":366810,"byte_end":366902,"line_start":416,"line_end":416,"column_start":5,"column_end":97}},{"value":"/ matrix storage combination rules for addition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":366907,"byte_end":366957,"line_start":417,"line_end":417,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":366962,"byte_end":366971,"line_start":418,"line_end":418,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2915},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":367928,"byte_end":367931,"line_start":447,"line_end":447,"column_start":12,"column_end":15},"name":"map","qualname":"<Matrix<N, R, C, S>>::map","value":"fn <N2, F> (&self, mut f: F) -> MatrixMN<N2, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix containing the result of `f` applied to each of its entries.\n","sig":null,"attributes":[{"value":"/ Returns a matrix containing the result of `f` applied to each of its entries.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":367821,"byte_end":367902,"line_start":445,"line_end":445,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":367907,"byte_end":367916,"line_start":446,"line_end":446,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2918},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":369079,"byte_end":369088,"line_start":475,"line_end":475,"column_start":12,"column_end":21},"name":"fold_with","qualname":"<Matrix<N, R, C, S>>::fold_with","value":"fn <N2> (&self, init_f: impl FnOnce(Option<&N>) -> N2, f: impl FnMut(N2, &N) -> N2) -> N2","parent":null,"children":[],"decl_id":null,"docs":" Similar to `self.iter().fold(init, f)` except that `init` is replaced by a closure.","sig":null,"attributes":[{"value":"/ Similar to `self.iter().fold(init, f)` except that `init` is replaced by a closure.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":368502,"byte_end":368589,"line_start":467,"line_end":467,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":368594,"byte_end":368597,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ The initialization closure is given the first component of this matrix:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":368602,"byte_end":368677,"line_start":469,"line_end":469,"column_start":5,"column_end":80}},{"value":"/ - If the matrix has no component (0 rows or 0 columns) then `init_f` is called with `None`","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":368682,"byte_end":368776,"line_start":470,"line_end":470,"column_start":5,"column_end":99}},{"value":"/ and its return value is the value returned by this method.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":368781,"byte_end":368843,"line_start":471,"line_end":471,"column_start":5,"column_end":67}},{"value":"/ - If the matrix has has least one component, then `init_f` is called with the first component","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":368848,"byte_end":368945,"line_start":472,"line_end":472,"column_start":5,"column_end":102}},{"value":"/ to compute the initial value. Folding then continues on all the remaining components of the matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":368950,"byte_end":369053,"line_start":473,"line_end":473,"column_start":5,"column_end":108}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":369058,"byte_end":369067,"line_start":474,"line_end":474,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2922},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":369518,"byte_end":369535,"line_start":488,"line_end":488,"column_start":12,"column_end":29},"name":"map_with_location","qualname":"<Matrix<N, R, C, S>>::map_with_location","value":"fn <N2, F> (&self, mut f: F) -> MatrixMN<N2, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix containing the result of `f` applied to each of its entries. Unlike `map`,\n `f` also gets passed the row and column index, i.e. `f(row, col, value)`.\n","sig":null,"attributes":[{"value":"/ Returns a matrix containing the result of `f` applied to each of its entries. Unlike `map`,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":369315,"byte_end":369410,"line_start":485,"line_end":485,"column_start":5,"column_end":100}},{"value":"/ `f` also gets passed the row and column index, i.e. `f(row, col, value)`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":369415,"byte_end":369492,"line_start":486,"line_end":486,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":369497,"byte_end":369506,"line_start":487,"line_end":487,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2925},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":370277,"byte_end":370284,"line_start":514,"line_end":514,"column_start":12,"column_end":19},"name":"zip_map","qualname":"<Matrix<N, R, C, S>>::zip_map","value":"fn <N2, N3, S2, F> (&self, rhs: &Matrix<N2, R, C, S2>, mut f: F) -> MatrixMN<N3, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix containing the result of `f` applied to each entries of `self` and\n `rhs`.\n","sig":null,"attributes":[{"value":"/ Returns a matrix containing the result of `f` applied to each entries of `self` and","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":370149,"byte_end":370236,"line_start":511,"line_end":511,"column_start":5,"column_end":92}},{"value":"/ `rhs`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":370241,"byte_end":370251,"line_start":512,"line_end":512,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":370256,"byte_end":370265,"line_start":513,"line_end":513,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2930},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":371340,"byte_end":371351,"line_start":547,"line_end":547,"column_start":12,"column_end":23},"name":"zip_zip_map","qualname":"<Matrix<N, R, C, S>>::zip_zip_map","value":"fn <N2, N3, N4, S2, S3, F> (&self, b: &Matrix<N2, R, C, S2>, c: &Matrix<N3, R, C, S3>, mut f: F) -> MatrixMN<N4, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix containing the result of `f` applied to each entries of `self` and\n `b`, and `c`.\n","sig":null,"attributes":[{"value":"/ Returns a matrix containing the result of `f` applied to each entries of `self` and","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":371205,"byte_end":371292,"line_start":544,"line_end":544,"column_start":5,"column_end":92}},{"value":"/ `b`, and `c`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":371297,"byte_end":371314,"line_start":545,"line_end":545,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":371319,"byte_end":371328,"line_start":546,"line_end":546,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2937},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":372607,"byte_end":372611,"line_start":588,"line_end":588,"column_start":12,"column_end":16},"name":"fold","qualname":"<Matrix<N, R, C, S>>::fold","value":"fn <Acc> (&self, init: Acc, mut f: impl FnMut(Acc, N) -> Acc) -> Acc","parent":null,"children":[],"decl_id":null,"docs":" Folds a function `f` on each entry of `self`.\n","sig":null,"attributes":[{"value":"/ Folds a function `f` on each entry of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":372532,"byte_end":372581,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":372586,"byte_end":372595,"line_start":587,"line_end":587,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2940},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":373132,"byte_end":373140,"line_start":607,"line_end":607,"column_start":12,"column_end":20},"name":"zip_fold","qualname":"<Matrix<N, R, C, S>>::zip_fold","value":"fn <N2, R2, C2, S2, Acc> (&self, rhs: &Matrix<N2, R2, C2, S2>, init: Acc, mut f: impl FnMut(Acc, N, N2) -> Acc) -> Acc","parent":null,"children":[],"decl_id":null,"docs":" Folds a function `f` on each pairs of entries from `self` and `rhs`.\n","sig":null,"attributes":[{"value":"/ Folds a function `f` on each pairs of entries from `self` and `rhs`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":373034,"byte_end":373106,"line_start":605,"line_end":605,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":373111,"byte_end":373120,"line_start":606,"line_end":606,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2947},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":374148,"byte_end":374160,"line_start":644,"line_end":644,"column_start":12,"column_end":24},"name":"transpose_to","qualname":"<Matrix<N, R, C, S>>::transpose_to","value":"fn <R2, C2, SB> (&self, out: &mut Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Transposes `self` and store the result into `out`.\n","sig":null,"attributes":[{"value":"/ Transposes `self` and store the result into `out`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":374068,"byte_end":374122,"line_start":642,"line_end":642,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":374127,"byte_end":374136,"line_start":643,"line_end":643,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2951},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":374918,"byte_end":374927,"line_start":670,"line_end":670,"column_start":12,"column_end":21},"name":"transpose","qualname":"<Matrix<N, R, C, S>>::transpose","value":"fn (&self) -> MatrixMN<N, C, R>","parent":null,"children":[],"decl_id":null,"docs":" Transposes `self`.\n","sig":null,"attributes":[{"value":"/ Transposes `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":374813,"byte_end":374835,"line_start":667,"line_end":667,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":374840,"byte_end":374849,"line_start":668,"line_end":668,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use transpose_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":374854,"byte_end":374906,"line_start":669,"line_end":669,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2957},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":375396,"byte_end":375404,"line_start":688,"line_end":688,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Matrix<N, R, C, S>>::iter_mut","value":"fn (&mut self) -> MatrixIterMut<N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Mutably iterates through this matrix coordinates.\n","sig":null,"attributes":[{"value":"/ Mutably iterates through this matrix coordinates.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":375317,"byte_end":375370,"line_start":686,"line_end":686,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":375375,"byte_end":375384,"line_start":687,"line_end":687,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2958},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":375691,"byte_end":375701,"line_start":697,"line_end":697,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<Matrix<N, R, C, S>>::as_mut_ptr","value":"fn (&mut self) -> *mut N","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable pointer to the start of the matrix.","sig":null,"attributes":[{"value":"/ Returns a mutable pointer to the start of the matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":375501,"byte_end":375558,"line_start":692,"line_end":692,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":375563,"byte_end":375566,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ If the matrix is not empty, this pointer is guaranteed to be aligned","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":375571,"byte_end":375643,"line_start":694,"line_end":694,"column_start":5,"column_end":77}},{"value":"/ and non-null.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":375648,"byte_end":375665,"line_start":695,"line_end":695,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":375670,"byte_end":375679,"line_start":696,"line_end":696,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2959},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376256,"byte_end":376268,"line_start":717,"line_end":717,"column_start":12,"column_end":24},"name":"row_iter_mut","qualname":"<Matrix<N, R, C, S>>::row_iter_mut","value":"fn (&mut self) -> RowIterMut<N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Mutably iterates through this matrix rows.","sig":null,"attributes":[{"value":"/ Mutably iterates through this matrix rows.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":375764,"byte_end":375810,"line_start":701,"line_end":701,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":375815,"byte_end":375818,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":375823,"byte_end":375836,"line_start":703,"line_end":703,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":375841,"byte_end":375848,"line_start":704,"line_end":704,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":375853,"byte_end":375883,"line_start":705,"line_end":705,"column_start":5,"column_end":35}},{"value":"/ let mut a = Matrix2x3::new(1, 2, 3,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":375888,"byte_end":375927,"line_start":706,"line_end":706,"column_start":5,"column_end":44}},{"value":"/                            4, 5, 6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":375932,"byte_end":375972,"line_start":707,"line_end":707,"column_start":5,"column_end":45}},{"value":"/ for (i, mut row) in a.row_iter_mut().enumerate() {","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":375977,"byte_end":376031,"line_start":708,"line_end":708,"column_start":5,"column_end":59}},{"value":"/     row *= (i + 1) * 10;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376036,"byte_end":376064,"line_start":709,"line_end":709,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376069,"byte_end":376074,"line_start":710,"line_end":710,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376079,"byte_end":376082,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ let expected = Matrix2x3::new(10, 20, 30,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376087,"byte_end":376132,"line_start":712,"line_end":712,"column_start":5,"column_end":50}},{"value":"/                               80, 100, 120);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376137,"byte_end":376185,"line_start":713,"line_end":713,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a, expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376190,"byte_end":376218,"line_start":714,"line_end":714,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376223,"byte_end":376230,"line_start":715,"line_end":715,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376235,"byte_end":376244,"line_start":716,"line_end":716,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2960},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376847,"byte_end":376862,"line_start":737,"line_end":737,"column_start":12,"column_end":27},"name":"column_iter_mut","qualname":"<Matrix<N, R, C, S>>::column_iter_mut","value":"fn (&mut self) -> ColumnIterMut<N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Mutably iterates through this matrix columns.","sig":null,"attributes":[{"value":"/ Mutably iterates through this matrix columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376349,"byte_end":376398,"line_start":721,"line_end":721,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376403,"byte_end":376406,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376411,"byte_end":376424,"line_start":723,"line_end":723,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376429,"byte_end":376436,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376441,"byte_end":376471,"line_start":725,"line_end":725,"column_start":5,"column_end":35}},{"value":"/ let mut a = Matrix2x3::new(1, 2, 3,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376476,"byte_end":376515,"line_start":726,"line_end":726,"column_start":5,"column_end":44}},{"value":"/                            4, 5, 6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376520,"byte_end":376560,"line_start":727,"line_end":727,"column_start":5,"column_end":45}},{"value":"/ for (i, mut col) in a.column_iter_mut().enumerate() {","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376565,"byte_end":376622,"line_start":728,"line_end":728,"column_start":5,"column_end":62}},{"value":"/     col *= (i + 1) * 10;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376627,"byte_end":376655,"line_start":729,"line_end":729,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376660,"byte_end":376665,"line_start":730,"line_end":730,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376670,"byte_end":376673,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ let expected = Matrix2x3::new(10, 40, 90,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376678,"byte_end":376723,"line_start":732,"line_end":732,"column_start":5,"column_end":50}},{"value":"/                               40, 100, 180);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376728,"byte_end":376776,"line_start":733,"line_end":733,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a, expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376781,"byte_end":376809,"line_start":734,"line_end":734,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376814,"byte_end":376821,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376826,"byte_end":376835,"line_start":736,"line_end":736,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2961},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":377027,"byte_end":377041,"line_start":743,"line_end":743,"column_start":19,"column_end":33},"name":"swap_unchecked","qualname":"<Matrix<N, R, C, S>>::swap_unchecked","value":"fn (&mut self, row_cols1: (usize, usize), row_cols2: (usize, usize)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Swaps two entries without bound-checking.\n","sig":null,"attributes":[{"value":"/ Swaps two entries without bound-checking.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376949,"byte_end":376994,"line_start":741,"line_end":741,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":376999,"byte_end":377008,"line_start":742,"line_end":742,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2962},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":377385,"byte_end":377389,"line_start":751,"line_end":751,"column_start":12,"column_end":16},"name":"swap","qualname":"<Matrix<N, R, C, S>>::swap","value":"fn (&mut self, row_cols1: (usize, usize), row_cols2: (usize, usize)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Swaps two entries.\n","sig":null,"attributes":[{"value":"/ Swaps two entries.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":377337,"byte_end":377359,"line_start":749,"line_end":749,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":377364,"byte_end":377373,"line_start":750,"line_end":750,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2963},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":378065,"byte_end":378080,"line_start":768,"line_end":768,"column_start":12,"column_end":27},"name":"copy_from_slice","qualname":"<Matrix<N, R, C, S>>::copy_from_slice","value":"fn (&mut self, slice: &[N]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills this matrix with the content of a slice. Both must hold the same number of elements.","sig":null,"attributes":[{"value":"/ Fills this matrix with the content of a slice. Both must hold the same number of elements.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":377852,"byte_end":377946,"line_start":764,"line_end":764,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":377951,"byte_end":377954,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ The components of the slice are assumed to be ordered in column-major order.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":377959,"byte_end":378039,"line_start":766,"line_end":766,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":378044,"byte_end":378053,"line_start":767,"line_end":767,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2964},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":378681,"byte_end":378690,"line_start":788,"line_end":788,"column_start":12,"column_end":21},"name":"copy_from","qualname":"<Matrix<N, R, C, S>>::copy_from","value":"fn <R2, C2, SB> (&mut self, other: &Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills this matrix with the content of another one. Both must have the same shape.\n","sig":null,"attributes":[{"value":"/ Fills this matrix with the content of another one. Both must have the same shape.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":378570,"byte_end":378655,"line_start":786,"line_end":786,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":378660,"byte_end":378669,"line_start":787,"line_end":787,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2968},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":379390,"byte_end":379402,"line_start":811,"line_end":811,"column_start":12,"column_end":24},"name":"tr_copy_from","qualname":"<Matrix<N, R, C, S>>::tr_copy_from","value":"fn <R2, C2, SB> (&mut self, other: &Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills this matrix with the content of the transpose another one.\n","sig":null,"attributes":[{"value":"/ Fills this matrix with the content of the transpose another one.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":379296,"byte_end":379364,"line_start":809,"line_end":809,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":379369,"byte_end":379378,"line_start":810,"line_end":810,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2972},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":380229,"byte_end":380239,"line_start":836,"line_end":836,"column_start":12,"column_end":22},"name":"apply_into","qualname":"<Matrix<N, R, C, S>>::apply_into","value":"fn <F> (mut self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns `self` with each of its components replaced by the result of a closure `f` applied on it.\n","sig":null,"attributes":[{"value":"/ Returns `self` with each of its components replaced by the result of a closure `f` applied on it.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":380102,"byte_end":380203,"line_start":834,"line_end":834,"column_start":5,"column_end":106}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":380208,"byte_end":380217,"line_start":835,"line_end":835,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2974},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":380440,"byte_end":380445,"line_start":843,"line_end":843,"column_start":12,"column_end":17},"name":"apply","qualname":"<Matrix<N, R, C, S>>::apply","value":"fn <F> (&mut self, mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces each component of `self` by the result of a closure `f` applied on it.\n","sig":null,"attributes":[{"value":"/ Replaces each component of `self` by the result of a closure `f` applied on it.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":380331,"byte_end":380414,"line_start":841,"line_end":841,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":380419,"byte_end":380428,"line_start":842,"line_end":842,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2976},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":380945,"byte_end":380954,"line_start":859,"line_end":859,"column_start":12,"column_end":21},"name":"zip_apply","qualname":"<Matrix<N, R, C, S>>::zip_apply","value":"fn <N2, R2, C2, S2> (&mut self, rhs: &Matrix<N2, R2, C2, S2>, mut f: impl FnMut(N, N2) -> N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces each component of `self` by the result of a closure `f` applied on its components\n joined with the components from `rhs`.\n","sig":null,"attributes":[{"value":"/ Replaces each component of `self` by the result of a closure `f` applied on its components","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":380778,"byte_end":380872,"line_start":856,"line_end":856,"column_start":5,"column_end":99}},{"value":"/ joined with the components from `rhs`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":380877,"byte_end":380919,"line_start":857,"line_end":857,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":380924,"byte_end":380933,"line_start":858,"line_end":858,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2982},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":381937,"byte_end":381950,"line_start":891,"line_end":891,"column_start":12,"column_end":25},"name":"zip_zip_apply","qualname":"<Matrix<N, R, C, S>>::zip_zip_apply","value":"fn <N2, R2, C2, S2, N3, R3, C3, S3> (&mut self, b: &Matrix<N2, R2, C2, S2>, c: &Matrix<N3, R3, C3, S3>, mut f: impl FnMut(N, N2, N3) -> N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces each component of `self` by the result of a closure `f` applied on its components\n joined with the components from `b` and `c`.\n","sig":null,"attributes":[{"value":"/ Replaces each component of `self` by the result of a closure `f` applied on its components","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":381764,"byte_end":381858,"line_start":888,"line_end":888,"column_start":5,"column_end":99}},{"value":"/ joined with the components from `b` and `c`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":381863,"byte_end":381911,"line_start":889,"line_end":889,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":381916,"byte_end":381925,"line_start":890,"line_end":890,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2996},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":383365,"byte_end":383379,"line_start":935,"line_end":935,"column_start":19,"column_end":33},"name":"vget_unchecked","qualname":"<Vector<N, D, S>>::vget_unchecked","value":"fn (&self, i: usize) -> &N","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the i-th element of this column vector without bound checking.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the i-th element of this column vector without bound checking.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":383246,"byte_end":383332,"line_start":933,"line_end":933,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":383337,"byte_end":383346,"line_start":934,"line_end":934,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3001},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":383760,"byte_end":383778,"line_start":945,"line_end":945,"column_start":19,"column_end":37},"name":"vget_unchecked_mut","qualname":"<Vector<N, D, S>>::vget_unchecked_mut","value":"fn (&mut self, i: usize) -> &mut N","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the i-th element of this column vector without bound checking.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the i-th element of this column vector without bound checking.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":383633,"byte_end":383727,"line_start":943,"line_end":943,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":383732,"byte_end":383741,"line_start":944,"line_end":944,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3007},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":384175,"byte_end":384183,"line_start":955,"line_end":955,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Matrix<N, R, C, S>>::as_slice","value":"fn (&self) -> &[N]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice containing the entire matrix entries ordered column-by-columns.\n","sig":null,"attributes":[{"value":"/ Extracts a slice containing the entire matrix entries ordered column-by-columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":384065,"byte_end":384149,"line_start":953,"line_end":953,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":384154,"byte_end":384163,"line_start":954,"line_end":954,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3013},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":384448,"byte_end":384460,"line_start":963,"line_end":963,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<Matrix<N, R, C, S>>::as_mut_slice","value":"fn (&mut self) -> &mut [N]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a mutable slice containing the entire matrix entries ordered column-by-columns.\n","sig":null,"attributes":[{"value":"/ Extracts a mutable slice containing the entire matrix entries ordered column-by-columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":384330,"byte_end":384422,"line_start":961,"line_end":961,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":384427,"byte_end":384436,"line_start":962,"line_end":962,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3018},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":384662,"byte_end":384675,"line_start":970,"line_end":970,"column_start":12,"column_end":25},"name":"transpose_mut","qualname":"<Matrix<N, D, D, S>>::transpose_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Transposes the square matrix `self` in-place.\n","sig":null,"attributes":[{"value":"/ Transposes the square matrix `self` in-place.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":384601,"byte_end":384650,"line_start":969,"line_end":969,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3024},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":385202,"byte_end":385212,"line_start":989,"line_end":989,"column_start":12,"column_end":22},"name":"adjoint_to","qualname":"<Matrix<N, R, C, S>>::adjoint_to","value":"fn <R2, C2, SB> (&self, out: &mut Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Takes the adjoint (aka. conjugate-transpose) of `self` and store the result into `out`.\n","sig":null,"attributes":[{"value":"/ Takes the adjoint (aka. conjugate-transpose) of `self` and store the result into `out`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":385085,"byte_end":385176,"line_start":987,"line_end":987,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":385181,"byte_end":385190,"line_start":988,"line_end":988,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3028},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":386000,"byte_end":386007,"line_start":1015,"line_end":1015,"column_start":12,"column_end":19},"name":"adjoint","qualname":"<Matrix<N, R, C, S>>::adjoint","value":"fn (&self) -> MatrixMN<N, C, R>","parent":null,"children":[],"decl_id":null,"docs":" The adjoint (aka. conjugate-transpose) of `self`.\n","sig":null,"attributes":[{"value":"/ The adjoint (aka. conjugate-transpose) of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":385866,"byte_end":385919,"line_start":1012,"line_end":1012,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":385924,"byte_end":385933,"line_start":1013,"line_end":1013,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use adjoint_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":385938,"byte_end":385988,"line_start":1014,"line_end":1014,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3029},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":386499,"byte_end":386521,"line_start":1032,"line_end":1032,"column_start":12,"column_end":34},"name":"conjugate_transpose_to","qualname":"<Matrix<N, R, C, S>>::conjugate_transpose_to","value":"fn <R2, C2, SB> (&self, out: &mut Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Takes the conjugate and transposes `self` and store the result into `out`.\n","sig":null,"attributes":[{"value":"/ Takes the conjugate and transposes `self` and store the result into `out`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":386335,"byte_end":386413,"line_start":1029,"line_end":1029,"column_start":5,"column_end":83}},{"value":"deprecated(note = \"Renamed `self.adjoint_to(out)`.\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":386418,"byte_end":386473,"line_start":1030,"line_end":1030,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":386478,"byte_end":386487,"line_start":1031,"line_end":1031,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3033},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":386900,"byte_end":386919,"line_start":1045,"line_end":1045,"column_start":12,"column_end":31},"name":"conjugate_transpose","qualname":"<Matrix<N, R, C, S>>::conjugate_transpose","value":"fn (&self) -> MatrixMN<N, C, R>","parent":null,"children":[],"decl_id":null,"docs":" The conjugate transposition of `self`.\n","sig":null,"attributes":[{"value":"/ The conjugate transposition of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":386778,"byte_end":386820,"line_start":1042,"line_end":1042,"column_start":5,"column_end":47}},{"value":"deprecated(note = \"Renamed `self.adjoint()`.\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":386825,"byte_end":386874,"line_start":1043,"line_end":1043,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":386879,"byte_end":386888,"line_start":1044,"line_end":1044,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3034},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":387155,"byte_end":387164,"line_start":1055,"line_end":1055,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<Matrix<N, R, C, S>>::conjugate","value":"fn (&self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" The conjugate of `self`.\n","sig":null,"attributes":[{"value":"/ The conjugate of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":387044,"byte_end":387072,"line_start":1052,"line_end":1052,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":387077,"byte_end":387086,"line_start":1053,"line_end":1053,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use conjugate_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":387091,"byte_end":387143,"line_start":1054,"line_end":1054,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3036},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":387462,"byte_end":387469,"line_start":1065,"line_end":1065,"column_start":12,"column_end":19},"name":"unscale","qualname":"<Matrix<N, R, C, S>>::unscale","value":"fn (&self, real: N::SimdRealField) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Divides each component of the complex matrix `self` by the given real.\n","sig":null,"attributes":[{"value":"/ Divides each component of the complex matrix `self` by the given real.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":387307,"byte_end":387381,"line_start":1062,"line_end":1062,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":387386,"byte_end":387395,"line_start":1063,"line_end":1063,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use unscale_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":387400,"byte_end":387450,"line_start":1064,"line_end":1064,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3038},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":387794,"byte_end":387799,"line_start":1075,"line_end":1075,"column_start":12,"column_end":17},"name":"scale","qualname":"<Matrix<N, R, C, S>>::scale","value":"fn (&self, real: N::SimdRealField) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies each component of the complex matrix `self` by the given real.\n","sig":null,"attributes":[{"value":"/ Multiplies each component of the complex matrix `self` by the given real.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":387638,"byte_end":387715,"line_start":1072,"line_end":1072,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":387720,"byte_end":387729,"line_start":1073,"line_end":1073,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use scale_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":387734,"byte_end":387782,"line_start":1074,"line_end":1074,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3045},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":388146,"byte_end":388159,"line_start":1086,"line_end":1086,"column_start":12,"column_end":25},"name":"conjugate_mut","qualname":"<Matrix<N, R, C, S>>::conjugate_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The conjugate of the complex matrix `self` computed in-place.\n","sig":null,"attributes":[{"value":"/ The conjugate of the complex matrix `self` computed in-place.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":388055,"byte_end":388120,"line_start":1084,"line_end":1084,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":388125,"byte_end":388134,"line_start":1085,"line_end":1085,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3047},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":388327,"byte_end":388338,"line_start":1092,"line_end":1092,"column_start":12,"column_end":23},"name":"unscale_mut","qualname":"<Matrix<N, R, C, S>>::unscale_mut","value":"fn (&mut self, real: N::SimdRealField) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Divides each component of the complex matrix `self` by the given real.\n","sig":null,"attributes":[{"value":"/ Divides each component of the complex matrix `self` by the given real.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":388227,"byte_end":388301,"line_start":1090,"line_end":1090,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":388306,"byte_end":388315,"line_start":1091,"line_end":1091,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3049},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":388535,"byte_end":388544,"line_start":1098,"line_end":1098,"column_start":12,"column_end":21},"name":"scale_mut","qualname":"<Matrix<N, R, C, S>>::scale_mut","value":"fn (&mut self, real: N::SimdRealField) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Multiplies each component of the complex matrix `self` by the given real.\n","sig":null,"attributes":[{"value":"/ Multiplies each component of the complex matrix `self` by the given real.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":388432,"byte_end":388509,"line_start":1096,"line_end":1096,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":388514,"byte_end":388523,"line_start":1097,"line_end":1097,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3055},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":388821,"byte_end":388844,"line_start":1106,"line_end":1106,"column_start":12,"column_end":35},"name":"conjugate_transform_mut","qualname":"<Matrix<N, D, D, S>>::conjugate_transform_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to its adjoint.\n","sig":null,"attributes":[{"value":"/ Sets `self` to its adjoint.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":388717,"byte_end":388748,"line_start":1104,"line_end":1104,"column_start":5,"column_end":36}},{"value":"deprecated(note = \"Renamed to `self.adjoint_mut()`.\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":388753,"byte_end":388809,"line_start":1105,"line_end":1105,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3056},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":388966,"byte_end":388977,"line_start":1111,"line_end":1111,"column_start":12,"column_end":23},"name":"adjoint_mut","qualname":"<Matrix<N, D, D, S>>::adjoint_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to its adjoint (aka. conjugate-transpose).\n","sig":null,"attributes":[{"value":"/ Sets `self` to its adjoint (aka. conjugate-transpose).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":388896,"byte_end":388954,"line_start":1110,"line_end":1110,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3061},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":389908,"byte_end":389916,"line_start":1142,"line_end":1142,"column_start":12,"column_end":20},"name":"diagonal","qualname":"<SquareMatrix<N, D, S>>::diagonal","value":"fn (&self) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" The diagonal of this matrix.\n","sig":null,"attributes":[{"value":"/ The diagonal of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":389850,"byte_end":389882,"line_start":1140,"line_end":1140,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":389887,"byte_end":389896,"line_start":1141,"line_end":1141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3063},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":390243,"byte_end":390255,"line_start":1153,"line_end":1153,"column_start":12,"column_end":24},"name":"map_diagonal","qualname":"<SquareMatrix<N, D, S>>::map_diagonal","value":"fn <N2> (&self, mut f: impl FnMut(N) -> N2) -> VectorN<N2, D>","parent":null,"children":[],"decl_id":null,"docs":" Apply the given function to this matrix's diagonal and returns it.","sig":null,"attributes":[{"value":"/ Apply the given function to this matrix's diagonal and returns it.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":390044,"byte_end":390114,"line_start":1149,"line_end":1149,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":390119,"byte_end":390122,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ This is a more efficient version of `self.diagonal().map(f)` since this","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":390127,"byte_end":390202,"line_start":1151,"line_end":1151,"column_start":5,"column_end":80}},{"value":"/ allocates only once.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":390207,"byte_end":390231,"line_start":1152,"line_end":1152,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3066},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":390924,"byte_end":390929,"line_start":1176,"line_end":1176,"column_start":12,"column_end":17},"name":"trace","qualname":"<SquareMatrix<N, D, S>>::trace","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes a trace of a square matrix, i.e., the sum of its diagonal elements.\n","sig":null,"attributes":[{"value":"/ Computes a trace of a square matrix, i.e., the sum of its diagonal elements.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":390818,"byte_end":390898,"line_start":1174,"line_end":1174,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":390903,"byte_end":390912,"line_start":1175,"line_end":1175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3071},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":391512,"byte_end":391526,"line_start":1199,"line_end":1199,"column_start":12,"column_end":26},"name":"symmetric_part","qualname":"<SquareMatrix<N, D, S>>::symmetric_part","value":"fn (&self) -> MatrixMN<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" The symmetric part of `self`, i.e., `0.5 * (self + self.transpose())`.\n","sig":null,"attributes":[{"value":"/ The symmetric part of `self`, i.e., `0.5 * (self + self.transpose())`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":391412,"byte_end":391486,"line_start":1197,"line_end":1197,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":391491,"byte_end":391500,"line_start":1198,"line_end":1198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3072},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":391969,"byte_end":391983,"line_start":1215,"line_end":1215,"column_start":12,"column_end":26},"name":"hermitian_part","qualname":"<SquareMatrix<N, D, S>>::hermitian_part","value":"fn (&self) -> MatrixMN<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" The hermitian part of `self`, i.e., `0.5 * (self + self.adjoint())`.\n","sig":null,"attributes":[{"value":"/ The hermitian part of `self`, i.e., `0.5 * (self + self.adjoint())`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":391871,"byte_end":391943,"line_start":1213,"line_end":1213,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":391948,"byte_end":391957,"line_start":1214,"line_end":1214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3077},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":392605,"byte_end":392619,"line_start":1237,"line_end":1237,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Matrix<N, D, D, S>>::to_homogeneous","value":"fn (&self) -> MatrixN<N, DimSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Yields the homogeneous matrix for this matrix, i.e., appending an additional dimension and\n and setting the diagonal element to `1`.\n","sig":null,"attributes":[{"value":"/ Yields the homogeneous matrix for this matrix, i.e., appending an additional dimension and","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":392436,"byte_end":392530,"line_start":1234,"line_end":1234,"column_start":5,"column_end":99}},{"value":"/ and setting the diagonal element to `1`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":392535,"byte_end":392579,"line_start":1235,"line_end":1235,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":392584,"byte_end":392593,"line_start":1236,"line_end":1236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3082},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":393349,"byte_end":393363,"line_start":1257,"line_end":1257,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Vector<N, D, S>>::to_homogeneous","value":"fn (&self) -> VectorN<N, DimSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the coordinates in projective space of this vector, i.e., appends a `0` to its\n coordinates.\n","sig":null,"attributes":[{"value":"/ Computes the coordinates in projective space of this vector, i.e., appends a `0` to its","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":393211,"byte_end":393302,"line_start":1254,"line_end":1254,"column_start":5,"column_end":96}},{"value":"/ coordinates.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":393307,"byte_end":393323,"line_start":1255,"line_end":1255,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":393328,"byte_end":393337,"line_start":1256,"line_end":1256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3083},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":393699,"byte_end":393715,"line_start":1267,"line_end":1267,"column_start":12,"column_end":28},"name":"from_homogeneous","qualname":"<Vector<N, D, S>>::from_homogeneous","value":"fn <SB> (v: Vector<N, DimSum<D, U1>, SB>) -> Option<VectorN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a vector from coordinates in projective space, i.e., removes a `0` at the end of\n `self`. Returns `None` if this last component is not zero.\n","sig":null,"attributes":[{"value":"/ Constructs a vector from coordinates in projective space, i.e., removes a `0` at the end of","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":393511,"byte_end":393606,"line_start":1264,"line_end":1264,"column_start":5,"column_end":100}},{"value":"/ `self`. Returns `None` if this last component is not zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":393611,"byte_end":393673,"line_start":1265,"line_end":1265,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":393678,"byte_end":393687,"line_start":1266,"line_end":1266,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3089},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":394283,"byte_end":394287,"line_start":1284,"line_end":1284,"column_start":12,"column_end":16},"name":"push","qualname":"<Vector<N, D, S>>::push","value":"fn (&self, element: N) -> VectorN<N, DimSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new vector of higher dimension by appending `element` to the end of `self`.\n","sig":null,"attributes":[{"value":"/ Constructs a new vector of higher dimension by appending `element` to the end of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":394165,"byte_end":394257,"line_start":1282,"line_end":1282,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":394262,"byte_end":394271,"line_start":1283,"line_end":1283,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3149},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":403076,"byte_end":403080,"line_start":1580,"line_end":1580,"column_start":12,"column_end":16},"name":"perp","qualname":"<Matrix<N, R, C, S>>::perp","value":"fn <R2, C2, SB> (&self, b: &Matrix<N, R2, C2, SB>) -> N","parent":null,"children":[],"decl_id":null,"docs":" The perpendicular product between two 2D column vectors, i.e. `a.x * b.y - a.y * b.x`.\n","sig":null,"attributes":[{"value":"/ The perpendicular product between two 2D column vectors, i.e. `a.x * b.y - a.y * b.x`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":402960,"byte_end":403050,"line_start":1578,"line_end":1578,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":403055,"byte_end":403064,"line_start":1579,"line_end":1579,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3153},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":404016,"byte_end":404021,"line_start":1605,"line_end":1605,"column_start":12,"column_end":17},"name":"cross","qualname":"<Matrix<N, R, C, S>>::cross","value":"fn <R2, C2, SB> (&self, b: &Matrix<N, R2, C2, SB>) -> MatrixCross<N, R, C, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" The 3D cross product between two vectors.","sig":null,"attributes":[{"value":"/ The 3D cross product between two vectors.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":403773,"byte_end":403818,"line_start":1600,"line_end":1600,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":403823,"byte_end":403826,"line_start":1601,"line_end":1601,"column_start":5,"column_end":8}},{"value":"/ Panics if the shape is not 3D vector. In the future, this will be implemented only for","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":403831,"byte_end":403921,"line_start":1602,"line_end":1602,"column_start":5,"column_end":95}},{"value":"/ dynamically-sized matrices and statically-sized 3D matrices.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":403926,"byte_end":403990,"line_start":1603,"line_end":1603,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":403995,"byte_end":404004,"line_start":1604,"line_end":1604,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3160},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":407058,"byte_end":407070,"line_start":1681,"line_end":1681,"column_start":12,"column_end":24},"name":"cross_matrix","qualname":"<Vector<N, U3, S>>::cross_matrix","value":"fn (&self) -> MatrixN<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Computes the matrix `M` such that for all vector `v` we have `M * v == self.cross(&v)`.\n","sig":null,"attributes":[{"value":"/ Computes the matrix `M` such that for all vector `v` we have `M * v == self.cross(&v)`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":406941,"byte_end":407032,"line_start":1679,"line_end":1679,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":407037,"byte_end":407046,"line_start":1680,"line_end":1680,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3166},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":407599,"byte_end":407604,"line_start":1699,"line_end":1699,"column_start":12,"column_end":17},"name":"angle","qualname":"<Matrix<N, R, C, S>>::angle","value":"fn <R2, C2, SB> (&self, other: &Matrix<N, R2, C2, SB>) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" The smallest angle between two vectors.\n","sig":null,"attributes":[{"value":"/ The smallest angle between two vectors.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":407530,"byte_end":407573,"line_start":1697,"line_end":1697,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":407578,"byte_end":407587,"line_start":1698,"line_end":1698,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3174},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":408729,"byte_end":408733,"line_start":1733,"line_end":1733,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Vector<N, D, S>>::lerp","value":"fn <S2> (&self, rhs: &Vector<N, D, S2>, t: N) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Returns `self * (1.0 - t) + rhs * t`, i.e., the linear blend of the vectors x and y using the scalar value a.","sig":null,"attributes":[{"value":"/ Returns `self * (1.0 - t) + rhs * t`, i.e., the linear blend of the vectors x and y using the scalar value a.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":408279,"byte_end":408392,"line_start":1721,"line_end":1721,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":408397,"byte_end":408400,"line_start":1722,"line_end":1722,"column_start":5,"column_end":8}},{"value":"/ The value for a is not restricted to the range `[0, 1]`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":408405,"byte_end":408465,"line_start":1723,"line_end":1723,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":408470,"byte_end":408473,"line_start":1724,"line_end":1724,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":408478,"byte_end":408493,"line_start":1725,"line_end":1725,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":408498,"byte_end":408501,"line_start":1726,"line_end":1726,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":408506,"byte_end":408513,"line_start":1727,"line_end":1727,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":408518,"byte_end":408546,"line_start":1728,"line_end":1728,"column_start":5,"column_end":33}},{"value":"/ let x = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":408551,"byte_end":408591,"line_start":1729,"line_end":1729,"column_start":5,"column_end":45}},{"value":"/ let y = Vector3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":408596,"byte_end":408639,"line_start":1730,"line_end":1730,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(x.lerp(&y, 0.1), Vector3::new(1.9, 3.8, 5.7));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":408644,"byte_end":408705,"line_start":1731,"line_end":1731,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":408710,"byte_end":408717,"line_start":1732,"line_end":1732,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3180},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":409456,"byte_end":409461,"line_start":1758,"line_end":1758,"column_start":12,"column_end":17},"name":"slerp","qualname":"<Unit<Vector<N, D, S>>>::slerp","value":"fn <S2> (&self, rhs: &Unit<Vector<N, D, S2>>, t: N) -> Unit<VectorN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the spherical linear interpolation between two unit vectors.","sig":null,"attributes":[{"value":"/ Computes the spherical linear interpolation between two unit vectors.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":409058,"byte_end":409131,"line_start":1744,"line_end":1744,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":409136,"byte_end":409139,"line_start":1745,"line_end":1745,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":409144,"byte_end":409159,"line_start":1746,"line_end":1746,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":409164,"byte_end":409167,"line_start":1747,"line_end":1747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":409172,"byte_end":409179,"line_start":1748,"line_end":1748,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Unit, Vector2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":409184,"byte_end":409220,"line_start":1749,"line_end":1749,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":409225,"byte_end":409228,"line_start":1750,"line_end":1750,"column_start":5,"column_end":8}},{"value":"/ let v1 = Unit::new_normalize(Vector2::new(1.0, 2.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":409233,"byte_end":409290,"line_start":1751,"line_end":1751,"column_start":5,"column_end":62}},{"value":"/ let v2 = Unit::new_normalize(Vector2::new(2.0, -3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":409295,"byte_end":409353,"line_start":1752,"line_end":1752,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":409358,"byte_end":409361,"line_start":1753,"line_end":1753,"column_start":5,"column_end":8}},{"value":"/ let v = v1.slerp(&v2, 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":409366,"byte_end":409397,"line_start":1754,"line_end":1754,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":409402,"byte_end":409405,"line_start":1755,"line_end":1755,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v, v2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":409410,"byte_end":409432,"line_start":1756,"line_end":1756,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":409437,"byte_end":409444,"line_start":1757,"line_end":1757,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3182},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":410110,"byte_end":410119,"line_start":1775,"line_end":1775,"column_start":12,"column_end":21},"name":"try_slerp","qualname":"<Unit<Vector<N, D, S>>>::try_slerp","value":"fn <S2> (&self, rhs: &Unit<Vector<N, D, S2>>, t: N, epsilon: N) -> Option<Unit<VectorN<N, D>>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the spherical linear interpolation between two unit vectors.","sig":null,"attributes":[{"value":"/ Computes the spherical linear interpolation between two unit vectors.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":409860,"byte_end":409933,"line_start":1771,"line_end":1771,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":409938,"byte_end":409941,"line_start":1772,"line_end":1772,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the two vectors are almost collinear and with opposite direction","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":409946,"byte_end":410032,"line_start":1773,"line_end":1773,"column_start":5,"column_end":91}},{"value":"/ (in this case, there is an infinity of possible results).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":410037,"byte_end":410098,"line_start":1774,"line_end":1774,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":16928},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":417934,"byte_end":417946,"line_start":85,"line_end":85,"column_start":23,"column_end":35},"name":"SliceStorage","qualname":"::base::matrix_slice::SliceStorage","value":"SliceStorage {  }","parent":null,"children":[{"krate":0,"index":16935},{"krate":0,"index":16936},{"krate":0,"index":16937},{"krate":0,"index":16938}],"decl_id":null,"docs":"A matrix data storage for a matrix slice. Only contains an internal reference to another matrix data storage.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16984},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":418198,"byte_end":418213,"line_start":89,"line_end":89,"column_start":30,"column_end":45},"name":"SliceStorageMut","qualname":"::base::matrix_slice::SliceStorageMut","value":"SliceStorageMut {  }","parent":null,"children":[{"krate":0,"index":16991},{"krate":0,"index":16992},{"krate":0,"index":16993},{"krate":0,"index":16994}],"decl_id":null,"docs":"A mutable matrix data storage for mutable matrix slice. Only contains an internal mutable reference to another matrix data storage.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":17035},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440187,"byte_end":440198,"line_start":638,"line_end":638,"column_start":19,"column_end":30},"name":"MatrixSlice","qualname":"::base::matrix_slice::MatrixSlice","value":"Matrix<N, R, C, SliceStorage<'a, N, R, C, RStride, CStride>>","parent":null,"children":[],"decl_id":null,"docs":" A matrix slice.\n","sig":null,"attributes":[{"value":"/ A matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":424109,"byte_end":424128,"line_start":277,"line_end":277,"column_start":9,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":17047},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440264,"byte_end":440267,"line_start":639,"line_end":639,"column_start":6,"column_end":9},"name":"row","qualname":"<Matrix<N, R, C, S>>::row","value":"fn (self: &Self, i: usize) -> MatrixSlice<N, U1, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the i-th row of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":424448,"byte_end":424507,"line_start":287,"line_end":287,"column_start":13,"column_end":72}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":424520,"byte_end":424529,"line_start":288,"line_end":288,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17048},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440274,"byte_end":440282,"line_start":640,"line_end":640,"column_start":6,"column_end":14},"name":"row_part","qualname":"<Matrix<N, R, C, S>>::row_part","value":"fn (self: &Self, i: usize, n: usize) -> MatrixSlice<N, U1, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the `n` first elements of the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the `n` first elements of the i-th row of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":424694,"byte_end":424779,"line_start":293,"line_end":293,"column_start":13,"column_end":98}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":424792,"byte_end":424801,"line_start":294,"line_end":294,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17049},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440289,"byte_end":440293,"line_start":641,"line_end":641,"column_start":6,"column_end":10},"name":"rows","qualname":"<Matrix<N, R, C, S>>::rows","value":"fn (self: &Self, first_row: usize, nrows: usize) -> MatrixSlice<N, Dynamic, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive rows.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":425012,"byte_end":425068,"line_start":299,"line_end":299,"column_start":13,"column_end":69}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":425081,"byte_end":425090,"line_start":300,"line_end":300,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17050},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440300,"byte_end":440314,"line_start":642,"line_end":642,"column_start":6,"column_end":20},"name":"rows_with_step","qualname":"<Matrix<N, R, C, S>>::rows_with_step","value":"fn (self: &Self, first_row: usize, nrows: usize, step: usize) -> MatrixSlice<N, Dynamic, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":425325,"byte_end":425412,"line_start":307,"line_end":307,"column_start":13,"column_end":100}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":425425,"byte_end":425434,"line_start":308,"line_end":308,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17051},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440321,"byte_end":440331,"line_start":643,"line_end":643,"column_start":6,"column_end":16},"name":"fixed_rows","qualname":"<Matrix<N, R, C, S>>::fixed_rows","value":"fn <RSlice> (self: &Self, first_row: usize) -> MatrixSlice<N, RSlice, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a compile-time number of consecutive rows from this matrix.\n","sig":null,"attributes":[{"value":"/ Extracts a compile-time number of consecutive rows from this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":425705,"byte_end":425777,"line_start":315,"line_end":315,"column_start":13,"column_end":85}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":425790,"byte_end":425799,"line_start":316,"line_end":316,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17053},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440338,"byte_end":440358,"line_start":644,"line_end":644,"column_start":6,"column_end":26},"name":"fixed_rows_with_step","qualname":"<Matrix<N, R, C, S>>::fixed_rows_with_step","value":"fn <RSlice> (self: &Self, first_row: usize, step: usize) -> MatrixSlice<N, RSlice, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a compile-time number of rows regularly skipping `step`\n rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a compile-time number of rows regularly skipping `step`","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":426037,"byte_end":426122,"line_start":323,"line_end":323,"column_start":13,"column_end":98}},{"value":"/ rows.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":426135,"byte_end":426144,"line_start":324,"line_end":324,"column_start":13,"column_end":22}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":426157,"byte_end":426166,"line_start":325,"line_end":325,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17055},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440365,"byte_end":440377,"line_start":645,"line_end":645,"column_start":6,"column_end":18},"name":"rows_generic","qualname":"<Matrix<N, R, C, S>>::rows_generic","value":"fn <RSlice> (self: &Self, row_start: usize, nrows: RSlice) -> MatrixSlice<N, RSlice, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both\n argument may or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":426440,"byte_end":426519,"line_start":332,"line_end":332,"column_start":13,"column_end":92}},{"value":"/ argument may or may not be values known at compile-time.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":426532,"byte_end":426592,"line_start":333,"line_end":333,"column_start":13,"column_end":73}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":426605,"byte_end":426614,"line_start":334,"line_end":334,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17057},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440384,"byte_end":440406,"line_start":646,"line_end":646,"column_start":6,"column_end":28},"name":"rows_generic_with_step","qualname":"<Matrix<N, R, C, S>>::rows_generic_with_step","value":"fn <RSlice> (self: &Self, row_start: usize, nrows: RSlice, step: usize) -> MatrixSlice<N, RSlice, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both\n argument may or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":427206,"byte_end":427285,"line_start":349,"line_end":349,"column_start":13,"column_end":92}},{"value":"/ argument may or may not be values known at compile-time.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":427298,"byte_end":427358,"line_start":350,"line_end":350,"column_start":13,"column_end":73}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":427371,"byte_end":427380,"line_start":351,"line_end":351,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17059},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440413,"byte_end":440419,"line_start":647,"line_end":647,"column_start":6,"column_end":12},"name":"column","qualname":"<Matrix<N, R, C, S>>::column","value":"fn (self: &Self, i: usize) -> MatrixSlice<N, R, U1, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the i-th column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the i-th column of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":428288,"byte_end":428350,"line_start":374,"line_end":374,"column_start":13,"column_end":75}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":428363,"byte_end":428372,"line_start":375,"line_end":375,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17060},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440426,"byte_end":440437,"line_start":648,"line_end":648,"column_start":6,"column_end":17},"name":"column_part","qualname":"<Matrix<N, R, C, S>>::column_part","value":"fn (self: &Self, i: usize, n: usize) -> MatrixSlice<N, Dynamic, U1, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the `n` first elements of the i-th column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the `n` first elements of the i-th column of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":428543,"byte_end":428631,"line_start":380,"line_end":380,"column_start":13,"column_end":101}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":428644,"byte_end":428653,"line_start":381,"line_end":381,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17061},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440444,"byte_end":440451,"line_start":649,"line_end":649,"column_start":6,"column_end":13},"name":"columns","qualname":"<Matrix<N, R, C, S>>::columns","value":"fn (self: &Self, first_col: usize, ncols: usize) -> MatrixSlice<N, R, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":428867,"byte_end":428926,"line_start":386,"line_end":386,"column_start":13,"column_end":72}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":428939,"byte_end":428948,"line_start":387,"line_end":387,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17062},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440458,"byte_end":440475,"line_start":650,"line_end":650,"column_start":6,"column_end":23},"name":"columns_with_step","qualname":"<Matrix<N, R, C, S>>::columns_with_step","value":"fn (self: &Self, first_col: usize, ncols: usize, step: usize) -> MatrixSlice<N, R, Dynamic, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive columns regularly skipping `step`\n columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive columns regularly skipping `step`","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":429189,"byte_end":429273,"line_start":394,"line_end":394,"column_start":13,"column_end":97}},{"value":"/ columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":429286,"byte_end":429298,"line_start":395,"line_end":395,"column_start":13,"column_end":25}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":429311,"byte_end":429320,"line_start":396,"line_end":396,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17063},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440482,"byte_end":440495,"line_start":651,"line_end":651,"column_start":6,"column_end":19},"name":"fixed_columns","qualname":"<Matrix<N, R, C, S>>::fixed_columns","value":"fn <CSlice> (self: &Self, first_col: usize) -> MatrixSlice<N, R, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a compile-time number of consecutive columns from this matrix.\n","sig":null,"attributes":[{"value":"/ Extracts a compile-time number of consecutive columns from this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":429597,"byte_end":429672,"line_start":403,"line_end":403,"column_start":13,"column_end":88}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":429685,"byte_end":429694,"line_start":404,"line_end":404,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17065},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440502,"byte_end":440525,"line_start":652,"line_end":652,"column_start":6,"column_end":29},"name":"fixed_columns_with_step","qualname":"<Matrix<N, R, C, S>>::fixed_columns_with_step","value":"fn <CSlice> (self: &Self, first_col: usize, step: usize) -> MatrixSlice<N, R, CSlice, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a compile-time number of columns regularly skipping\n `step` columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a compile-time number of columns regularly skipping","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":429938,"byte_end":430019,"line_start":411,"line_end":411,"column_start":13,"column_end":94}},{"value":"/ `step` columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":430032,"byte_end":430051,"line_start":412,"line_end":412,"column_start":13,"column_end":32}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":430064,"byte_end":430073,"line_start":413,"line_end":413,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17067},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440532,"byte_end":440547,"line_start":653,"line_end":653,"column_start":6,"column_end":21},"name":"columns_generic","qualname":"<Matrix<N, R, C, S>>::columns_generic","value":"fn <CSlice> (self: &Self, first_col: usize, ncols: CSlice) -> MatrixSlice<N, R, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `ncols` columns. The number of columns may or may not be\n known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `ncols` columns. The number of columns may or may not be","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":430353,"byte_end":430439,"line_start":420,"line_end":420,"column_start":13,"column_end":99}},{"value":"/ known at compile-time.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":430452,"byte_end":430478,"line_start":421,"line_end":421,"column_start":13,"column_end":39}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":430491,"byte_end":430500,"line_start":422,"line_end":422,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17069},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440554,"byte_end":440579,"line_start":654,"line_end":654,"column_start":6,"column_end":31},"name":"columns_generic_with_step","qualname":"<Matrix<N, R, C, S>>::columns_generic_with_step","value":"fn <CSlice> (self: &Self, first_col: usize, ncols: CSlice, step: usize) -> MatrixSlice<N, R, CSlice, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may\n or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":431093,"byte_end":431181,"line_start":437,"line_end":437,"column_start":13,"column_end":101}},{"value":"/ or may not be values known at compile-time.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":431194,"byte_end":431241,"line_start":438,"line_end":438,"column_start":13,"column_end":60}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":431254,"byte_end":431263,"line_start":439,"line_end":439,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17071},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440586,"byte_end":440591,"line_start":655,"line_end":655,"column_start":6,"column_end":11},"name":"slice","qualname":"<Matrix<N, R, C, S>>::slice","value":"fn (self: &Self, start: (usize, usize), shape: (usize, usize)) -> MatrixSlice<N, Dynamic, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)`\n consecutive elements.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)`","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":432147,"byte_end":432236,"line_start":462,"line_end":462,"column_start":13,"column_end":102}},{"value":"/ consecutive elements.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":432249,"byte_end":432274,"line_start":463,"line_end":463,"column_start":13,"column_end":38}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":432287,"byte_end":432296,"line_start":464,"line_end":464,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17072},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440598,"byte_end":440614,"line_start":656,"line_end":656,"column_start":6,"column_end":22},"name":"slice_with_steps","qualname":"<Matrix<N, R, C, S>>::slice_with_steps","value":"fn (self: &Self, start: (usize, usize), shape: (usize, usize), steps: (usize, usize)) -> MatrixSlice<N, Dynamic, Dynamic, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(start.0, start.1)` and with\n `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is\n separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the\n original matrix.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(start.0, start.1)` and with","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":432816,"byte_end":432894,"line_start":478,"line_end":478,"column_start":13,"column_end":91}},{"value":"/ `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":432907,"byte_end":432991,"line_start":479,"line_end":479,"column_start":13,"column_end":97}},{"value":"/ separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":433004,"byte_end":433084,"line_start":480,"line_end":480,"column_start":13,"column_end":93}},{"value":"/ original matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":433097,"byte_end":433117,"line_start":481,"line_end":481,"column_start":13,"column_end":33}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":433130,"byte_end":433139,"line_start":482,"line_end":482,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17073},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440621,"byte_end":440632,"line_start":657,"line_end":657,"column_start":6,"column_end":17},"name":"fixed_slice","qualname":"<Matrix<N, R, C, S>>::fixed_slice","value":"fn <RSlice, CSlice> (self: &Self, irow: usize, icol: usize) -> MatrixSlice<N, RSlice, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(),\n CSlice::dim())` consecutive components.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(),","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":433500,"byte_end":433584,"line_start":490,"line_end":490,"column_start":13,"column_end":97}},{"value":"/ CSlice::dim())` consecutive components.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":433597,"byte_end":433640,"line_start":491,"line_end":491,"column_start":13,"column_end":56}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":433653,"byte_end":433662,"line_start":492,"line_end":492,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17076},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440639,"byte_end":440661,"line_start":658,"line_end":658,"column_start":6,"column_end":28},"name":"fixed_slice_with_steps","qualname":"<Matrix<N, R, C, S>>::fixed_slice_with_steps","value":"fn <RSlice, CSlice> (self: &Self, start: (usize, usize), steps: (usize, usize)) -> MatrixSlice<N, RSlice, CSlice, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(start.0, start.1)` and with\n `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced\n matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of\n the original matrix.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(start.0, start.1)` and with","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":434283,"byte_end":434361,"line_start":507,"line_end":507,"column_start":13,"column_end":91}},{"value":"/ `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":434374,"byte_end":434455,"line_start":508,"line_end":508,"column_start":13,"column_end":94}},{"value":"/ matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":434468,"byte_end":434554,"line_start":509,"line_end":509,"column_start":13,"column_end":99}},{"value":"/ the original matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":434567,"byte_end":434591,"line_start":510,"line_end":510,"column_start":13,"column_end":37}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":434604,"byte_end":434613,"line_start":511,"line_end":511,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17079},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440668,"byte_end":440681,"line_start":659,"line_end":659,"column_start":6,"column_end":19},"name":"generic_slice","qualname":"<Matrix<N, R, C, S>>::generic_slice","value":"fn <RSlice, CSlice> (self: &Self, start: (usize, usize), shape: (RSlice, CSlice)) -> MatrixSlice<N, RSlice, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Creates a slice that may or may not have a fixed size and stride.\n","sig":null,"attributes":[{"value":"/ Creates a slice that may or may not have a fixed size and stride.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":435033,"byte_end":435102,"line_start":520,"line_end":520,"column_start":13,"column_end":82}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":435115,"byte_end":435124,"line_start":521,"line_end":521,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17082},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440688,"byte_end":440712,"line_start":660,"line_end":660,"column_start":6,"column_end":30},"name":"generic_slice_with_steps","qualname":"<Matrix<N, R, C, S>>::generic_slice_with_steps","value":"fn <RSlice, CSlice> (self: &Self, start: (usize, usize), shape: (RSlice, CSlice), steps: (usize, usize)) -> MatrixSlice<N, RSlice, CSlice, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Creates a slice that may or may not have a fixed size and stride.\n","sig":null,"attributes":[{"value":"/ Creates a slice that may or may not have a fixed size and stride.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":435689,"byte_end":435758,"line_start":535,"line_end":535,"column_start":13,"column_end":82}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":435771,"byte_end":435780,"line_start":536,"line_end":536,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17085},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440719,"byte_end":440734,"line_start":661,"line_end":661,"column_start":6,"column_end":21},"name":"rows_range_pair","qualname":"<Matrix<N, R, C, S>>::rows_range_pair","value":"fn <Range1, Range2> (self: &Self, r1: Range1, r2: Range2) -> (MatrixSlice<N, Range1::Size, C, S::RStride, S::CStride>,\n MatrixSlice<N, Range2::Size, C, S::RStride, S::CStride>)","parent":null,"children":[],"decl_id":null,"docs":" Splits this NxM matrix into two parts delimited by two ranges.","sig":null,"attributes":[{"value":"/ Splits this NxM matrix into two parts delimited by two ranges.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":436891,"byte_end":436957,"line_start":562,"line_end":562,"column_start":13,"column_end":79}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":436970,"byte_end":436973,"line_start":563,"line_end":563,"column_start":13,"column_end":16}},{"value":"/ Panics if the ranges overlap or if the first range is empty.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":436986,"byte_end":437050,"line_start":564,"line_end":564,"column_start":13,"column_end":77}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":437063,"byte_end":437072,"line_start":565,"line_end":565,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17088},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440741,"byte_end":440759,"line_start":662,"line_end":662,"column_start":6,"column_end":24},"name":"columns_range_pair","qualname":"<Matrix<N, R, C, S>>::columns_range_pair","value":"fn <Range1, Range2> (self: &Self, r1: Range1, r2: Range2) -> (MatrixSlice<N, R, Range1::Size, S::RStride, S::CStride>,\n MatrixSlice<N, R, Range2::Size, S::RStride, S::CStride>)","parent":null,"children":[],"decl_id":null,"docs":" Splits this NxM matrix into two parts delimited by two ranges.","sig":null,"attributes":[{"value":"/ Splits this NxM matrix into two parts delimited by two ranges.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":438512,"byte_end":438578,"line_start":598,"line_end":598,"column_start":13,"column_end":79}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":438591,"byte_end":438594,"line_start":599,"line_end":599,"column_start":13,"column_end":16}},{"value":"/ Panics if the ranges overlap or if the first range is empty.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":438607,"byte_end":438671,"line_start":600,"line_end":600,"column_start":13,"column_end":77}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":438684,"byte_end":438693,"line_start":601,"line_end":601,"column_start":13,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":17091},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440805,"byte_end":440819,"line_start":665,"line_end":665,"column_start":23,"column_end":37},"name":"MatrixSliceMut","qualname":"::base::matrix_slice::MatrixSliceMut","value":"Matrix<N, R, C, SliceStorageMut<'a, N, R, C, RStride, CStride>>","parent":null,"children":[],"decl_id":null,"docs":" A matrix slice.\n","sig":null,"attributes":[{"value":"/ A matrix slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":424109,"byte_end":424128,"line_start":277,"line_end":277,"column_start":9,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":17103},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440899,"byte_end":440906,"line_start":666,"line_end":666,"column_start":6,"column_end":13},"name":"row_mut","qualname":"<Matrix<N, R, C, S>>::row_mut","value":"fn (self: &mut Self, i: usize) -> MatrixSliceMut<N, U1, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the i-th row of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":424448,"byte_end":424507,"line_start":287,"line_end":287,"column_start":13,"column_end":72}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":424520,"byte_end":424529,"line_start":288,"line_end":288,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17104},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440913,"byte_end":440925,"line_start":667,"line_end":667,"column_start":6,"column_end":18},"name":"row_part_mut","qualname":"<Matrix<N, R, C, S>>::row_part_mut","value":"fn (self: &mut Self, i: usize, n: usize) -> MatrixSliceMut<N, U1, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the `n` first elements of the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the `n` first elements of the i-th row of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":424694,"byte_end":424779,"line_start":293,"line_end":293,"column_start":13,"column_end":98}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":424792,"byte_end":424801,"line_start":294,"line_end":294,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17105},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440932,"byte_end":440940,"line_start":668,"line_end":668,"column_start":6,"column_end":14},"name":"rows_mut","qualname":"<Matrix<N, R, C, S>>::rows_mut","value":"fn (self: &mut Self, first_row: usize, nrows: usize) -> MatrixSliceMut<N, Dynamic, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive rows.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":425012,"byte_end":425068,"line_start":299,"line_end":299,"column_start":13,"column_end":69}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":425081,"byte_end":425090,"line_start":300,"line_end":300,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17106},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440947,"byte_end":440965,"line_start":669,"line_end":669,"column_start":6,"column_end":24},"name":"rows_with_step_mut","qualname":"<Matrix<N, R, C, S>>::rows_with_step_mut","value":"fn (self: &mut Self, first_row: usize, nrows: usize, step: usize) -> MatrixSliceMut<N, Dynamic, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":425325,"byte_end":425412,"line_start":307,"line_end":307,"column_start":13,"column_end":100}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":425425,"byte_end":425434,"line_start":308,"line_end":308,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17107},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440972,"byte_end":440986,"line_start":670,"line_end":670,"column_start":6,"column_end":20},"name":"fixed_rows_mut","qualname":"<Matrix<N, R, C, S>>::fixed_rows_mut","value":"fn <RSlice> (self: &mut Self, first_row: usize) -> MatrixSliceMut<N, RSlice, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a compile-time number of consecutive rows from this matrix.\n","sig":null,"attributes":[{"value":"/ Extracts a compile-time number of consecutive rows from this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":425705,"byte_end":425777,"line_start":315,"line_end":315,"column_start":13,"column_end":85}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":425790,"byte_end":425799,"line_start":316,"line_end":316,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17109},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":440993,"byte_end":441017,"line_start":671,"line_end":671,"column_start":6,"column_end":30},"name":"fixed_rows_with_step_mut","qualname":"<Matrix<N, R, C, S>>::fixed_rows_with_step_mut","value":"fn <RSlice> (self: &mut Self, first_row: usize, step: usize) -> MatrixSliceMut<N, RSlice, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a compile-time number of rows regularly skipping `step`\n rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a compile-time number of rows regularly skipping `step`","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":426037,"byte_end":426122,"line_start":323,"line_end":323,"column_start":13,"column_end":98}},{"value":"/ rows.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":426135,"byte_end":426144,"line_start":324,"line_end":324,"column_start":13,"column_end":22}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":426157,"byte_end":426166,"line_start":325,"line_end":325,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17111},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441024,"byte_end":441040,"line_start":672,"line_end":672,"column_start":6,"column_end":22},"name":"rows_generic_mut","qualname":"<Matrix<N, R, C, S>>::rows_generic_mut","value":"fn <RSlice> (self: &mut Self, row_start: usize, nrows: RSlice) -> MatrixSliceMut<N, RSlice, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both\n argument may or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":426440,"byte_end":426519,"line_start":332,"line_end":332,"column_start":13,"column_end":92}},{"value":"/ argument may or may not be values known at compile-time.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":426532,"byte_end":426592,"line_start":333,"line_end":333,"column_start":13,"column_end":73}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":426605,"byte_end":426614,"line_start":334,"line_end":334,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17113},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441047,"byte_end":441073,"line_start":673,"line_end":673,"column_start":6,"column_end":32},"name":"rows_generic_with_step_mut","qualname":"<Matrix<N, R, C, S>>::rows_generic_with_step_mut","value":"fn <RSlice> (self: &mut Self, row_start: usize, nrows: RSlice, step: usize) -> MatrixSliceMut<N, RSlice, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both\n argument may or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":427206,"byte_end":427285,"line_start":349,"line_end":349,"column_start":13,"column_end":92}},{"value":"/ argument may or may not be values known at compile-time.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":427298,"byte_end":427358,"line_start":350,"line_end":350,"column_start":13,"column_end":73}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":427371,"byte_end":427380,"line_start":351,"line_end":351,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17115},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441080,"byte_end":441090,"line_start":674,"line_end":674,"column_start":6,"column_end":16},"name":"column_mut","qualname":"<Matrix<N, R, C, S>>::column_mut","value":"fn (self: &mut Self, i: usize) -> MatrixSliceMut<N, R, U1, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the i-th column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the i-th column of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":428288,"byte_end":428350,"line_start":374,"line_end":374,"column_start":13,"column_end":75}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":428363,"byte_end":428372,"line_start":375,"line_end":375,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17116},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441097,"byte_end":441112,"line_start":675,"line_end":675,"column_start":6,"column_end":21},"name":"column_part_mut","qualname":"<Matrix<N, R, C, S>>::column_part_mut","value":"fn (self: &mut Self, i: usize, n: usize) -> MatrixSliceMut<N, Dynamic, U1, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the `n` first elements of the i-th column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the `n` first elements of the i-th column of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":428543,"byte_end":428631,"line_start":380,"line_end":380,"column_start":13,"column_end":101}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":428644,"byte_end":428653,"line_start":381,"line_end":381,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17117},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441119,"byte_end":441130,"line_start":676,"line_end":676,"column_start":6,"column_end":17},"name":"columns_mut","qualname":"<Matrix<N, R, C, S>>::columns_mut","value":"fn (self: &mut Self, first_col: usize, ncols: usize) -> MatrixSliceMut<N, R, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":428867,"byte_end":428926,"line_start":386,"line_end":386,"column_start":13,"column_end":72}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":428939,"byte_end":428948,"line_start":387,"line_end":387,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17118},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441137,"byte_end":441158,"line_start":677,"line_end":677,"column_start":6,"column_end":27},"name":"columns_with_step_mut","qualname":"<Matrix<N, R, C, S>>::columns_with_step_mut","value":"fn (self: &mut Self, first_col: usize, ncols: usize, step: usize) -> MatrixSliceMut<N, R, Dynamic, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive columns regularly skipping `step`\n columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive columns regularly skipping `step`","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":429189,"byte_end":429273,"line_start":394,"line_end":394,"column_start":13,"column_end":97}},{"value":"/ columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":429286,"byte_end":429298,"line_start":395,"line_end":395,"column_start":13,"column_end":25}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":429311,"byte_end":429320,"line_start":396,"line_end":396,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17119},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441165,"byte_end":441182,"line_start":678,"line_end":678,"column_start":6,"column_end":23},"name":"fixed_columns_mut","qualname":"<Matrix<N, R, C, S>>::fixed_columns_mut","value":"fn <CSlice> (self: &mut Self, first_col: usize) -> MatrixSliceMut<N, R, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a compile-time number of consecutive columns from this matrix.\n","sig":null,"attributes":[{"value":"/ Extracts a compile-time number of consecutive columns from this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":429597,"byte_end":429672,"line_start":403,"line_end":403,"column_start":13,"column_end":88}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":429685,"byte_end":429694,"line_start":404,"line_end":404,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17121},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441189,"byte_end":441216,"line_start":679,"line_end":679,"column_start":6,"column_end":33},"name":"fixed_columns_with_step_mut","qualname":"<Matrix<N, R, C, S>>::fixed_columns_with_step_mut","value":"fn <CSlice> (self: &mut Self, first_col: usize, step: usize) -> MatrixSliceMut<N, R, CSlice, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a compile-time number of columns regularly skipping\n `step` columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a compile-time number of columns regularly skipping","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":429938,"byte_end":430019,"line_start":411,"line_end":411,"column_start":13,"column_end":94}},{"value":"/ `step` columns.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":430032,"byte_end":430051,"line_start":412,"line_end":412,"column_start":13,"column_end":32}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":430064,"byte_end":430073,"line_start":413,"line_end":413,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17123},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441223,"byte_end":441242,"line_start":680,"line_end":680,"column_start":6,"column_end":25},"name":"columns_generic_mut","qualname":"<Matrix<N, R, C, S>>::columns_generic_mut","value":"fn <CSlice> (self: &mut Self, first_col: usize, ncols: CSlice) -> MatrixSliceMut<N, R, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `ncols` columns. The number of columns may or may not be\n known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `ncols` columns. The number of columns may or may not be","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":430353,"byte_end":430439,"line_start":420,"line_end":420,"column_start":13,"column_end":99}},{"value":"/ known at compile-time.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":430452,"byte_end":430478,"line_start":421,"line_end":421,"column_start":13,"column_end":39}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":430491,"byte_end":430500,"line_start":422,"line_end":422,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17125},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441249,"byte_end":441278,"line_start":681,"line_end":681,"column_start":6,"column_end":35},"name":"columns_generic_with_step_mut","qualname":"<Matrix<N, R, C, S>>::columns_generic_with_step_mut","value":"fn <CSlice> (self: &mut Self, first_col: usize, ncols: CSlice, step: usize) -> MatrixSliceMut<N, R, CSlice, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may\n or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":431093,"byte_end":431181,"line_start":437,"line_end":437,"column_start":13,"column_end":101}},{"value":"/ or may not be values known at compile-time.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":431194,"byte_end":431241,"line_start":438,"line_end":438,"column_start":13,"column_end":60}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":431254,"byte_end":431263,"line_start":439,"line_end":439,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17127},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441285,"byte_end":441294,"line_start":682,"line_end":682,"column_start":6,"column_end":15},"name":"slice_mut","qualname":"<Matrix<N, R, C, S>>::slice_mut","value":"fn (self: &mut Self, start: (usize, usize), shape: (usize, usize)) -> MatrixSliceMut<N, Dynamic, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)`\n consecutive elements.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)`","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":432147,"byte_end":432236,"line_start":462,"line_end":462,"column_start":13,"column_end":102}},{"value":"/ consecutive elements.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":432249,"byte_end":432274,"line_start":463,"line_end":463,"column_start":13,"column_end":38}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":432287,"byte_end":432296,"line_start":464,"line_end":464,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17128},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441301,"byte_end":441321,"line_start":683,"line_end":683,"column_start":6,"column_end":26},"name":"slice_with_steps_mut","qualname":"<Matrix<N, R, C, S>>::slice_with_steps_mut","value":"fn (self: &mut Self, start: (usize, usize), shape: (usize, usize), steps: (usize, usize)) -> MatrixSliceMut<N, Dynamic, Dynamic, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(start.0, start.1)` and with\n `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is\n separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the\n original matrix.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(start.0, start.1)` and with","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":432816,"byte_end":432894,"line_start":478,"line_end":478,"column_start":13,"column_end":91}},{"value":"/ `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":432907,"byte_end":432991,"line_start":479,"line_end":479,"column_start":13,"column_end":97}},{"value":"/ separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":433004,"byte_end":433084,"line_start":480,"line_end":480,"column_start":13,"column_end":93}},{"value":"/ original matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":433097,"byte_end":433117,"line_start":481,"line_end":481,"column_start":13,"column_end":33}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":433130,"byte_end":433139,"line_start":482,"line_end":482,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17129},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441328,"byte_end":441343,"line_start":684,"line_end":684,"column_start":6,"column_end":21},"name":"fixed_slice_mut","qualname":"<Matrix<N, R, C, S>>::fixed_slice_mut","value":"fn <RSlice, CSlice> (self: &mut Self, irow: usize, icol: usize) -> MatrixSliceMut<N, RSlice, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(),\n CSlice::dim())` consecutive components.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(),","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":433500,"byte_end":433584,"line_start":490,"line_end":490,"column_start":13,"column_end":97}},{"value":"/ CSlice::dim())` consecutive components.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":433597,"byte_end":433640,"line_start":491,"line_end":491,"column_start":13,"column_end":56}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":433653,"byte_end":433662,"line_start":492,"line_end":492,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17132},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441350,"byte_end":441376,"line_start":685,"line_end":685,"column_start":6,"column_end":32},"name":"fixed_slice_with_steps_mut","qualname":"<Matrix<N, R, C, S>>::fixed_slice_with_steps_mut","value":"fn <RSlice, CSlice> (self: &mut Self, start: (usize, usize), steps: (usize, usize)) -> MatrixSliceMut<N, RSlice, CSlice, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(start.0, start.1)` and with\n `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced\n matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of\n the original matrix.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(start.0, start.1)` and with","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":434283,"byte_end":434361,"line_start":507,"line_end":507,"column_start":13,"column_end":91}},{"value":"/ `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":434374,"byte_end":434455,"line_start":508,"line_end":508,"column_start":13,"column_end":94}},{"value":"/ matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":434468,"byte_end":434554,"line_start":509,"line_end":509,"column_start":13,"column_end":99}},{"value":"/ the original matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":434567,"byte_end":434591,"line_start":510,"line_end":510,"column_start":13,"column_end":37}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":434604,"byte_end":434613,"line_start":511,"line_end":511,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17135},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441383,"byte_end":441400,"line_start":686,"line_end":686,"column_start":6,"column_end":23},"name":"generic_slice_mut","qualname":"<Matrix<N, R, C, S>>::generic_slice_mut","value":"fn <RSlice, CSlice> (self: &mut Self, start: (usize, usize), shape: (RSlice, CSlice)) -> MatrixSliceMut<N, RSlice, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Creates a slice that may or may not have a fixed size and stride.\n","sig":null,"attributes":[{"value":"/ Creates a slice that may or may not have a fixed size and stride.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":435033,"byte_end":435102,"line_start":520,"line_end":520,"column_start":13,"column_end":82}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":435115,"byte_end":435124,"line_start":521,"line_end":521,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17138},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441407,"byte_end":441435,"line_start":687,"line_end":687,"column_start":6,"column_end":34},"name":"generic_slice_with_steps_mut","qualname":"<Matrix<N, R, C, S>>::generic_slice_with_steps_mut","value":"fn <RSlice, CSlice> (self: &mut Self, start: (usize, usize), shape: (RSlice, CSlice), steps: (usize, usize)) -> MatrixSliceMut<N, RSlice, CSlice, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Creates a slice that may or may not have a fixed size and stride.\n","sig":null,"attributes":[{"value":"/ Creates a slice that may or may not have a fixed size and stride.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":435689,"byte_end":435758,"line_start":535,"line_end":535,"column_start":13,"column_end":82}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":435771,"byte_end":435780,"line_start":536,"line_end":536,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17141},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441442,"byte_end":441461,"line_start":688,"line_end":688,"column_start":6,"column_end":25},"name":"rows_range_pair_mut","qualname":"<Matrix<N, R, C, S>>::rows_range_pair_mut","value":"fn <Range1, Range2> (self: &mut Self, r1: Range1, r2: Range2) -> (MatrixSliceMut<N, Range1::Size, C, S::RStride, S::CStride>,\n MatrixSliceMut<N, Range2::Size, C, S::RStride, S::CStride>)","parent":null,"children":[],"decl_id":null,"docs":" Splits this NxM matrix into two parts delimited by two ranges.","sig":null,"attributes":[{"value":"/ Splits this NxM matrix into two parts delimited by two ranges.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":436891,"byte_end":436957,"line_start":562,"line_end":562,"column_start":13,"column_end":79}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":436970,"byte_end":436973,"line_start":563,"line_end":563,"column_start":13,"column_end":16}},{"value":"/ Panics if the ranges overlap or if the first range is empty.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":436986,"byte_end":437050,"line_start":564,"line_end":564,"column_start":13,"column_end":77}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":437063,"byte_end":437072,"line_start":565,"line_end":565,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17144},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441468,"byte_end":441490,"line_start":689,"line_end":689,"column_start":6,"column_end":28},"name":"columns_range_pair_mut","qualname":"<Matrix<N, R, C, S>>::columns_range_pair_mut","value":"fn <Range1, Range2> (self: &mut Self, r1: Range1, r2: Range2) -> (MatrixSliceMut<N, R, Range1::Size, S::RStride, S::CStride>,\n MatrixSliceMut<N, R, Range2::Size, S::RStride, S::CStride>)","parent":null,"children":[],"decl_id":null,"docs":" Splits this NxM matrix into two parts delimited by two ranges.","sig":null,"attributes":[{"value":"/ Splits this NxM matrix into two parts delimited by two ranges.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":438512,"byte_end":438578,"line_start":598,"line_end":598,"column_start":13,"column_end":79}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":438591,"byte_end":438594,"line_start":599,"line_end":599,"column_start":13,"column_end":16}},{"value":"/ Panics if the ranges overlap or if the first range is empty.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":438607,"byte_end":438671,"line_start":600,"line_end":600,"column_start":13,"column_end":77}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":438684,"byte_end":438693,"line_start":601,"line_end":601,"column_start":13,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":3328},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441796,"byte_end":441806,"line_start":698,"line_end":698,"column_start":11,"column_end":21},"name":"SliceRange","qualname":"::base::matrix_slice::SliceRange","value":"SliceRange<D: Dim>","parent":null,"children":[{"krate":0,"index":3330},{"krate":0,"index":3331},{"krate":0,"index":3332},{"krate":0,"index":3333}],"decl_id":null,"docs":" A range with a size that may be known at compile-time.","sig":null,"attributes":[{"value":"/ A range with a size that may be known at compile-time.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441494,"byte_end":441552,"line_start":691,"line_end":691,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441553,"byte_end":441556,"line_start":692,"line_end":692,"column_start":1,"column_end":4}},{"value":"/ This may be:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441557,"byte_end":441573,"line_start":693,"line_end":693,"column_start":1,"column_end":17}},{"value":"/ * A single `usize` index, e.g., `4`","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441574,"byte_end":441613,"line_start":694,"line_end":694,"column_start":1,"column_end":40}},{"value":"/ * A left-open range `std::ops::RangeTo`, e.g., `.. 4`","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441614,"byte_end":441671,"line_start":695,"line_end":695,"column_start":1,"column_end":58}},{"value":"/ * A right-open range `std::ops::RangeFrom`, e.g., `4 ..`","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441672,"byte_end":441732,"line_start":696,"line_end":696,"column_start":1,"column_end":61}},{"value":"/ * A full range `std::ops::RangeFull`, e.g., `..`","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441733,"byte_end":441785,"line_start":697,"line_end":697,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":3330},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441887,"byte_end":441891,"line_start":700,"line_end":700,"column_start":10,"column_end":14},"name":"Size","qualname":"::base::matrix_slice::SliceRange::Size","value":"type Size: Dim;","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" Type of the range size. May be a type-level integer.\n","sig":null,"attributes":[{"value":"/ Type of the range size. May be a type-level integer.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441821,"byte_end":441877,"line_start":699,"line_end":699,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3331},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441944,"byte_end":441949,"line_start":703,"line_end":703,"column_start":8,"column_end":13},"name":"begin","qualname":"::base::matrix_slice::SliceRange::begin","value":"fn (&self, shape: D) -> usize","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" The start index of the range.\n","sig":null,"attributes":[{"value":"/ The start index of the range.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":441903,"byte_end":441936,"line_start":702,"line_end":702,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3332},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":442121,"byte_end":442124,"line_start":706,"line_end":706,"column_start":8,"column_end":11},"name":"end","qualname":"::base::matrix_slice::SliceRange::end","value":"fn (&self, shape: D) -> usize","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" The index immediately after the last index inside of the range.\n","sig":null,"attributes":[{"value":"/ The index immediately after the last index inside of the range.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":442046,"byte_end":442113,"line_start":705,"line_end":705,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3333},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":442235,"byte_end":442239,"line_start":708,"line_end":708,"column_start":8,"column_end":12},"name":"size","qualname":"::base::matrix_slice::SliceRange::size","value":"fn (&self, shape: D) -> Self::Size","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" The number of elements of the range, i.e., `self.end - self.begin`.\n","sig":null,"attributes":[{"value":"/ The number of elements of the range, i.e., `self.end - self.begin`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":442156,"byte_end":442227,"line_start":707,"line_end":707,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3369},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":444175,"byte_end":444186,"line_start":810,"line_end":810,"column_start":12,"column_end":23},"name":"slice_range","qualname":"<Matrix<N, R, C, S>>::slice_range","value":"fn <RowRange, ColRange> (&self, rows: RowRange, cols: ColRange) -> MatrixSlice<N, RowRange::Size, ColRange::Size, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slices a sub-matrix containing the rows indexed by the range `rows` and the columns indexed\n by the range `cols`.\n","sig":null,"attributes":[{"value":"/ Slices a sub-matrix containing the rows indexed by the range `rows` and the columns indexed","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":444025,"byte_end":444120,"line_start":807,"line_end":807,"column_start":5,"column_end":100}},{"value":"/ by the range `cols`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":444125,"byte_end":444149,"line_start":808,"line_end":808,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":444154,"byte_end":444163,"line_start":809,"line_end":809,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3372},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":444720,"byte_end":444730,"line_start":828,"line_end":828,"column_start":12,"column_end":22},"name":"rows_range","qualname":"<Matrix<N, R, C, S>>::rows_range","value":"fn <RowRange> (&self, rows: RowRange) -> MatrixSlice<N, RowRange::Size, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slice containing all the rows indexed by the range `rows`.\n","sig":null,"attributes":[{"value":"/ Slice containing all the rows indexed by the range `rows`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":444632,"byte_end":444694,"line_start":826,"line_end":826,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":444699,"byte_end":444708,"line_start":827,"line_end":827,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3374},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":445002,"byte_end":445015,"line_start":837,"line_end":837,"column_start":12,"column_end":25},"name":"columns_range","qualname":"<Matrix<N, R, C, S>>::columns_range","value":"fn <ColRange> (&self, cols: ColRange) -> MatrixSlice<N, R, ColRange::Size, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slice containing all the columns indexed by the range `rows`.\n","sig":null,"attributes":[{"value":"/ Slice containing all the columns indexed by the range `rows`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":444911,"byte_end":444976,"line_start":835,"line_end":835,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":444981,"byte_end":444990,"line_start":836,"line_end":836,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3381},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":445419,"byte_end":445434,"line_start":848,"line_end":848,"column_start":12,"column_end":27},"name":"slice_range_mut","qualname":"<Matrix<N, R, C, S>>::slice_range_mut","value":"fn <RowRange, ColRange> (&mut self, rows: RowRange, cols: ColRange) -> MatrixSliceMut<N, RowRange::Size, ColRange::Size, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slices a mutable sub-matrix containing the rows indexed by the range `rows` and the columns\n indexed by the range `cols`.\n","sig":null,"attributes":[{"value":"/ Slices a mutable sub-matrix containing the rows indexed by the range `rows` and the columns","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":445275,"byte_end":445370,"line_start":846,"line_end":846,"column_start":5,"column_end":100}},{"value":"/ indexed by the range `cols`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":445375,"byte_end":445407,"line_start":847,"line_end":847,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3384},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":445979,"byte_end":445993,"line_start":866,"line_end":866,"column_start":12,"column_end":26},"name":"rows_range_mut","qualname":"<Matrix<N, R, C, S>>::rows_range_mut","value":"fn <RowRange> (&mut self, rows: RowRange) -> MatrixSliceMut<N, RowRange::Size, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slice containing all the rows indexed by the range `rows`.\n","sig":null,"attributes":[{"value":"/ Slice containing all the rows indexed by the range `rows`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":445891,"byte_end":445953,"line_start":864,"line_end":864,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":445958,"byte_end":445967,"line_start":865,"line_end":865,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3386},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":446276,"byte_end":446293,"line_start":875,"line_end":875,"column_start":12,"column_end":29},"name":"columns_range_mut","qualname":"<Matrix<N, R, C, S>>::columns_range_mut","value":"fn <ColRange> (&mut self, cols: ColRange) -> MatrixSliceMut<N, R, ColRange::Size, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slice containing all the columns indexed by the range `cols`.\n","sig":null,"attributes":[{"value":"/ Slice containing all the columns indexed by the range `cols`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":446185,"byte_end":446250,"line_start":873,"line_end":873,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":446255,"byte_end":446264,"line_start":874,"line_end":874,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":3424},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":447706,"byte_end":447710,"line_start":19,"line_end":19,"column_start":11,"column_end":15},"name":"Norm","qualname":"::base::norm::Norm","value":"Norm<N: SimdComplexField>","parent":null,"children":[{"krate":0,"index":3426},{"krate":0,"index":3430}],"decl_id":null,"docs":" A trait for abstract matrix norms.","sig":null,"attributes":[{"value":"/ A trait for abstract matrix norms.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":447598,"byte_end":447636,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":447637,"byte_end":447640,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This may be moved to the alga crate in the future.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":447641,"byte_end":447695,"line_start":18,"line_end":18,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3426},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":447786,"byte_end":447790,"line_start":21,"line_end":21,"column_start":8,"column_end":12},"name":"norm","qualname":"::base::norm::Norm::norm","value":"fn <R, C, S> (&self, m: &Matrix<N, R, C, S>) -> N::SimdRealField","parent":{"krate":0,"index":3424},"children":[],"decl_id":null,"docs":" Apply this norm to the given matrix.\n","sig":null,"attributes":[{"value":"/ Apply this norm to the given matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":447738,"byte_end":447778,"line_start":20,"line_end":20,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3430},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":448036,"byte_end":448051,"line_start":27,"line_end":27,"column_start":8,"column_end":23},"name":"metric_distance","qualname":"::base::norm::Norm::metric_distance","value":"fn <R1, C1, S1, R2, C2, S2> (&self, m1: &Matrix<N, R1, C1, S1>, m2: &Matrix<N, R2, C2, S2>) -> N::SimdRealField","parent":{"krate":0,"index":3424},"children":[],"decl_id":null,"docs":" Use the metric induced by this norm to compute the metric distance between the two given matrices.\n","sig":null,"attributes":[{"value":"/ Use the metric induced by this norm to compute the metric distance between the two given matrices.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":447926,"byte_end":448028,"line_start":26,"line_end":26,"column_start":5,"column_end":107}}]},{"kind":"Struct","id":{"krate":0,"index":3437},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":448447,"byte_end":448460,"line_start":43,"line_end":43,"column_start":12,"column_end":25},"name":"EuclideanNorm","qualname":"::base::norm::EuclideanNorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" Euclidean norm.\n","sig":null,"attributes":[{"value":"/ Euclidean norm.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":448416,"byte_end":448435,"line_start":42,"line_end":42,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3439},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":448486,"byte_end":448492,"line_start":45,"line_end":45,"column_start":12,"column_end":18},"name":"LpNorm","qualname":"::base::norm::LpNorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" Lp norm.\n","sig":null,"attributes":[{"value":"/ Lp norm.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":448462,"byte_end":448474,"line_start":44,"line_end":44,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":3442},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":448594,"byte_end":448605,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"UniformNorm","qualname":"::base::norm::UniformNorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" L-infinite norm aka. Chebytchev norm aka. uniform norm aka. suppremum norm.\n","sig":null,"attributes":[{"value":"/ L-infinite norm aka. Chebytchev norm aka. uniform norm aka. suppremum norm.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":448503,"byte_end":448582,"line_start":46,"line_end":46,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3493},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":451662,"byte_end":451674,"line_start":160,"line_end":160,"column_start":12,"column_end":24},"name":"norm_squared","qualname":"<Matrix<N, R, C, S>>::norm_squared","value":"fn (&self) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" The squared L2 norm of this vector.\n","sig":null,"attributes":[{"value":"/ The squared L2 norm of this vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":451597,"byte_end":451636,"line_start":158,"line_end":158,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":451641,"byte_end":451650,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3494},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":452021,"byte_end":452025,"line_start":175,"line_end":175,"column_start":12,"column_end":16},"name":"norm","qualname":"<Matrix<N, R, C, S>>::norm","value":"fn (&self) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" The L2 norm of this matrix.","sig":null,"attributes":[{"value":"/ The L2 norm of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":451906,"byte_end":451937,"line_start":171,"line_end":171,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":451942,"byte_end":451945,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Use `.apply_norm` to apply a custom norm.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":451950,"byte_end":451995,"line_start":173,"line_end":173,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":452000,"byte_end":452009,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3495},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":452298,"byte_end":452313,"line_start":183,"line_end":183,"column_start":12,"column_end":27},"name":"metric_distance","qualname":"<Matrix<N, R, C, S>>::metric_distance","value":"fn <R2, C2, S2> (&self, rhs: &Matrix<N, R2, C2, S2>) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" Compute the distance between `self` and `rhs` using the metric induced by the euclidean norm.","sig":null,"attributes":[{"value":"/ Compute the distance between `self` and `rhs` using the metric induced by the euclidean norm.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":452106,"byte_end":452203,"line_start":179,"line_end":179,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":452208,"byte_end":452211,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Use `.apply_metric_distance` to apply a custom norm.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":452216,"byte_end":452272,"line_start":181,"line_end":181,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":452277,"byte_end":452286,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3499},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":453038,"byte_end":453048,"line_start":206,"line_end":206,"column_start":12,"column_end":22},"name":"apply_norm","qualname":"<Matrix<N, R, C, S>>::apply_norm","value":"fn (&self, norm: &impl Norm<N>) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" Uses the given `norm` to compute the norm of `self`.","sig":null,"attributes":[{"value":"/ Uses the given `norm` to compute the norm of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":452610,"byte_end":452666,"line_start":193,"line_end":193,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":452671,"byte_end":452674,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":452679,"byte_end":452692,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":452697,"byte_end":452700,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":452705,"byte_end":452712,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, UniformNorm, LpNorm, EuclideanNorm};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":452717,"byte_end":452783,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":452788,"byte_end":452791,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let v = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":452796,"byte_end":452836,"line_start":200,"line_end":200,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(v.apply_norm(&UniformNorm), 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":452841,"byte_end":452889,"line_start":201,"line_end":201,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(v.apply_norm(&LpNorm(1)), 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":452894,"byte_end":452940,"line_start":202,"line_end":202,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(v.apply_norm(&EuclideanNorm), v.norm());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":452945,"byte_end":453000,"line_start":203,"line_end":203,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":453005,"byte_end":453012,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":453017,"byte_end":453026,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3501},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":453742,"byte_end":453763,"line_start":225,"line_end":225,"column_start":12,"column_end":33},"name":"apply_metric_distance","qualname":"<Matrix<N, R, C, S>>::apply_metric_distance","value":"fn <R2, C2, S2> (&self, rhs: &Matrix<N, R2, C2, S2>, norm: &impl Norm<N>) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" Uses the metric induced by the given `norm` to compute the metric distance between `self` and `rhs`.","sig":null,"attributes":[{"value":"/ Uses the metric induced by the given `norm` to compute the metric distance between `self` and `rhs`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":453134,"byte_end":453238,"line_start":210,"line_end":210,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":453243,"byte_end":453246,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":453251,"byte_end":453264,"line_start":212,"line_end":212,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":453269,"byte_end":453272,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":453277,"byte_end":453284,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, UniformNorm, LpNorm, EuclideanNorm};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":453289,"byte_end":453355,"line_start":215,"line_end":215,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":453360,"byte_end":453363,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let v1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":453368,"byte_end":453409,"line_start":217,"line_end":217,"column_start":5,"column_end":46}},{"value":"/ let v2 = Vector3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":453414,"byte_end":453458,"line_start":218,"line_end":218,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":453463,"byte_end":453466,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v1.apply_metric_distance(&v2, &UniformNorm), 27.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":453471,"byte_end":453537,"line_start":220,"line_end":220,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(v1.apply_metric_distance(&v2, &LpNorm(1)), 27.0 + 18.0 + 9.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":453542,"byte_end":453619,"line_start":221,"line_end":221,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(v1.apply_metric_distance(&v2, &EuclideanNorm), (v1 - v2).norm());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":453624,"byte_end":453704,"line_start":222,"line_end":222,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":453709,"byte_end":453716,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":453721,"byte_end":453730,"line_start":224,"line_end":224,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3506},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":454270,"byte_end":454279,"line_start":245,"line_end":245,"column_start":12,"column_end":21},"name":"magnitude","qualname":"<Matrix<N, R, C, S>>::magnitude","value":"fn (&self) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" A synonym for the norm of this matrix.","sig":null,"attributes":[{"value":"/ A synonym for the norm of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":454096,"byte_end":454138,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":454143,"byte_end":454146,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Aka the length.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":454151,"byte_end":454170,"line_start":241,"line_end":241,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":454175,"byte_end":454178,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This function is simply implemented as a call to `norm()`","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":454183,"byte_end":454244,"line_start":243,"line_end":243,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":454249,"byte_end":454258,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3507},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":454538,"byte_end":454555,"line_start":255,"line_end":255,"column_start":12,"column_end":29},"name":"magnitude_squared","qualname":"<Matrix<N, R, C, S>>::magnitude_squared","value":"fn (&self) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" A synonym for the squared norm of this matrix.","sig":null,"attributes":[{"value":"/ A synonym for the squared norm of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":454340,"byte_end":454390,"line_start":249,"line_end":249,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":454395,"byte_end":454398,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Aka the squared length.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":454403,"byte_end":454430,"line_start":251,"line_end":251,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":454435,"byte_end":454438,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ This function is simply implemented as a call to `norm_squared()`","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":454443,"byte_end":454512,"line_start":253,"line_end":253,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":454517,"byte_end":454526,"line_start":254,"line_end":254,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":454688,"byte_end":454701,"line_start":261,"line_end":261,"column_start":12,"column_end":25},"name":"set_magnitude","qualname":"<Matrix<N, R, C, S>>::set_magnitude","value":"fn (&mut self, magnitude: N::SimdRealField) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the magnitude of this vector.\n","sig":null,"attributes":[{"value":"/ Sets the magnitude of this vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":454624,"byte_end":454662,"line_start":259,"line_end":259,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":454667,"byte_end":454676,"line_start":260,"line_end":260,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3509},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":454999,"byte_end":455008,"line_start":272,"line_end":272,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Matrix<N, R, C, S>>::normalize","value":"fn (&self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a normalized version of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a normalized version of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":454868,"byte_end":454916,"line_start":269,"line_end":269,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":454921,"byte_end":454930,"line_start":270,"line_end":270,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use normalize_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":454935,"byte_end":454987,"line_start":271,"line_end":271,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3510},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":455201,"byte_end":455208,"line_start":281,"line_end":281,"column_start":12,"column_end":19},"name":"lp_norm","qualname":"<Matrix<N, R, C, S>>::lp_norm","value":"fn (&self, p: i32) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" The Lp norm of this matrix.\n","sig":null,"attributes":[{"value":"/ The Lp norm of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":455144,"byte_end":455175,"line_start":279,"line_end":279,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":455180,"byte_end":455189,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3511},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":455483,"byte_end":455501,"line_start":290,"line_end":290,"column_start":12,"column_end":30},"name":"simd_try_normalize","qualname":"<Matrix<N, R, C, S>>::simd_try_normalize","value":"fn (&self, min_norm: N::SimdRealField) -> SimdOption<MatrixMN<N, R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to normalize `self`.","sig":null,"attributes":[{"value":"/ Attempts to normalize `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":455293,"byte_end":455326,"line_start":285,"line_end":285,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":455331,"byte_end":455334,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ The components of this matrix can be SIMD types.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":455339,"byte_end":455391,"line_start":287,"line_end":287,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":455396,"byte_end":455405,"line_start":288,"line_end":288,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use simd_try_normalize_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":455410,"byte_end":455471,"line_start":289,"line_end":289,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3517},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":456202,"byte_end":456219,"line_start":308,"line_end":308,"column_start":12,"column_end":29},"name":"try_set_magnitude","qualname":"<Matrix<N, R, C, S>>::try_set_magnitude","value":"fn (&mut self, magnitude: N::RealField, min_magnitude: N::RealField) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the magnitude of this vector unless it is smaller than `min_magnitude`.","sig":null,"attributes":[{"value":"/ Sets the magnitude of this vector unless it is smaller than `min_magnitude`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":455918,"byte_end":455998,"line_start":303,"line_end":303,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":456003,"byte_end":456006,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ If `self.magnitude()` is smaller than `min_magnitude`, it will be left unchanged.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":456011,"byte_end":456096,"line_start":305,"line_end":305,"column_start":5,"column_end":90}},{"value":"/ Otherwise this is equivalent to: `*self = self.normalize() * magnitude.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":456101,"byte_end":456176,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":456181,"byte_end":456190,"line_start":307,"line_end":307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3518},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":456741,"byte_end":456754,"line_start":324,"line_end":324,"column_start":12,"column_end":25},"name":"try_normalize","qualname":"<Matrix<N, R, C, S>>::try_normalize","value":"fn (&self, min_norm: N::RealField) -> Option<MatrixMN<N, R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a normalized version of this matrix unless its norm as smaller or equal to `eps`.","sig":null,"attributes":[{"value":"/ Returns a normalized version of this matrix unless its norm as smaller or equal to `eps`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":456458,"byte_end":456551,"line_start":319,"line_end":319,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":456556,"byte_end":456559,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ The components of this matrix cannot be SIMD types (see `simd_try_normalize`) instead.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":456564,"byte_end":456654,"line_start":321,"line_end":321,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":456659,"byte_end":456668,"line_start":322,"line_end":322,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use try_normalize_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":456673,"byte_end":456729,"line_start":323,"line_end":323,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3524},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":457301,"byte_end":457314,"line_start":343,"line_end":343,"column_start":12,"column_end":25},"name":"normalize_mut","qualname":"<Matrix<N, R, C, S>>::normalize_mut","value":"fn (&mut self) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this matrix in-place and returns its norm.","sig":null,"attributes":[{"value":"/ Normalizes this matrix in-place and returns its norm.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":457112,"byte_end":457169,"line_start":339,"line_end":339,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":457174,"byte_end":457177,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ The components of the matrix cannot be SIMD types (see `simd_try_normalize_mut` instead).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":457182,"byte_end":457275,"line_start":341,"line_end":341,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":457280,"byte_end":457289,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3525},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":457640,"byte_end":457662,"line_start":355,"line_end":355,"column_start":12,"column_end":34},"name":"simd_try_normalize_mut","qualname":"<Matrix<N, R, C, S>>::simd_try_normalize_mut","value":"fn (&mut self, min_norm: N::SimdRealField) -> SimdOption<N::SimdRealField>","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this matrix in-place and return its norm.","sig":null,"attributes":[{"value":"/ Normalizes this matrix in-place and return its norm.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":457428,"byte_end":457484,"line_start":350,"line_end":350,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":457489,"byte_end":457492,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ The components of the matrix can be SIMD types.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":457497,"byte_end":457548,"line_start":352,"line_end":352,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":457553,"byte_end":457562,"line_start":353,"line_end":353,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use simd_try_normalize_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":457567,"byte_end":457628,"line_start":354,"line_end":354,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3532},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":458332,"byte_end":458349,"line_start":375,"line_end":375,"column_start":12,"column_end":29},"name":"try_normalize_mut","qualname":"<Matrix<N, R, C, S>>::try_normalize_mut","value":"fn (&mut self, min_norm: N::RealField) -> Option<N::RealField>","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this matrix in-place or does nothing if its norm is smaller or equal to `eps`.","sig":null,"attributes":[{"value":"/ Normalizes this matrix in-place or does nothing if its norm is smaller or equal to `eps`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":458128,"byte_end":458221,"line_start":371,"line_end":371,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":458226,"byte_end":458229,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ If the normalization succeeded, returns the old norm of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":458234,"byte_end":458306,"line_start":373,"line_end":373,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":458311,"byte_end":458320,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3552},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":460272,"byte_end":460286,"line_start":451,"line_end":451,"column_start":12,"column_end":26},"name":"orthonormalize","qualname":"<VectorN<N, D>>::orthonormalize","value":"fn (vs: &mut [Self]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Orthonormalizes the given family of vectors. The largest free family of vectors is moved at\n the beginning of the array and its size is returned. Vectors at an indices larger or equal to\n this length can be modified to an arbitrary value.\n","sig":null,"attributes":[{"value":"/ Orthonormalizes the given family of vectors. The largest free family of vectors is moved at","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":459990,"byte_end":460085,"line_start":447,"line_end":447,"column_start":5,"column_end":100}},{"value":"/ the beginning of the array and its size is returned. Vectors at an indices larger or equal to","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":460090,"byte_end":460187,"line_start":448,"line_end":448,"column_start":5,"column_end":102}},{"value":"/ this length can be modified to an arbitrary value.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":460192,"byte_end":460246,"line_start":449,"line_end":449,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":460251,"byte_end":460260,"line_start":450,"line_end":450,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3553},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":461498,"byte_end":461524,"line_start":484,"line_end":484,"column_start":12,"column_end":38},"name":"orthonormal_subspace_basis","qualname":"<VectorN<N, D>>::orthonormal_subspace_basis","value":"fn <F> (vs: &[Self], mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies the given closure to each element of the orthonormal basis of the subspace\n orthogonal to free family of vectors `vs`. If `vs` is not a free family, the result is\n unspecified.\n","sig":null,"attributes":[{"value":"/ Applies the given closure to each element of the orthonormal basis of the subspace","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":461178,"byte_end":461264,"line_start":479,"line_end":479,"column_start":5,"column_end":91}},{"value":"/ orthogonal to free family of vectors `vs`. If `vs` is not a free family, the result is","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":461269,"byte_end":461359,"line_start":480,"line_end":480,"column_start":5,"column_end":95}},{"value":"/ unspecified.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":461364,"byte_end":461380,"line_start":481,"line_end":481,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":461477,"byte_end":461486,"line_start":483,"line_end":483,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3580},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":465071,"byte_end":465079,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Matrix<N, R, C, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if this is an empty matrix.\n","sig":null,"attributes":[{"value":"/ Indicates if this is an empty matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":465004,"byte_end":465045,"line_start":13,"line_end":13,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":465050,"byte_end":465059,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3581},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":465251,"byte_end":465260,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"is_square","qualname":"<Matrix<N, R, C, S>>::is_square","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if this is a square matrix.\n","sig":null,"attributes":[{"value":"/ Indicates if this is a square matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":465184,"byte_end":465225,"line_start":20,"line_end":20,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":465230,"byte_end":465239,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3582},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":465744,"byte_end":465755,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"is_identity","qualname":"<Matrix<N, R, C, S>>::is_identity","value":"fn (&self, eps: N::Epsilon) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicated if this is the identity matrix within a relative error of `eps`.","sig":null,"attributes":[{"value":"/ Indicated if this is the identity matrix within a relative error of `eps`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":465440,"byte_end":465518,"line_start":28,"line_end":28,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":465523,"byte_end":465526,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ If the matrix is diagonal, this checks that diagonal elements (i.e. at coordinates `(i, i)`","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":465531,"byte_end":465626,"line_start":30,"line_end":30,"column_start":5,"column_end":100}},{"value":"/ for i from `0` to `min(R, C)`) are equal one; and that all other elements are zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":465631,"byte_end":465718,"line_start":31,"line_end":31,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":465723,"byte_end":465732,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3588},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":467440,"byte_end":467453,"line_start":93,"line_end":93,"column_start":12,"column_end":25},"name":"is_orthogonal","qualname":"<Matrix<N, R, C, S>>::is_orthogonal","value":"fn (&self, eps: N::Epsilon) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that `Mᵀ × M = Id`.","sig":null,"attributes":[{"value":"/ Checks that `Mᵀ × M = Id`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":467249,"byte_end":467282,"line_start":88,"line_end":88,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":467287,"byte_end":467290,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ In this definition `Id` is approximately equal to the identity matrix with a relative error","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":467295,"byte_end":467390,"line_start":90,"line_end":90,"column_start":5,"column_end":100}},{"value":"/ equal to `eps`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":467395,"byte_end":467414,"line_start":91,"line_end":91,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":467419,"byte_end":467428,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3593},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":467963,"byte_end":467984,"line_start":110,"line_end":110,"column_start":12,"column_end":33},"name":"is_special_orthogonal","qualname":"<SquareMatrix<N, D, S>>::is_special_orthogonal","value":"fn (&self, eps: N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that this matrix is orthogonal and has a determinant equal to 1.\n","sig":null,"attributes":[{"value":"/ Checks that this matrix is orthogonal and has a determinant equal to 1.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":467862,"byte_end":467937,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":467942,"byte_end":467951,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3594},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":468285,"byte_end":468298,"line_start":120,"line_end":120,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<SquareMatrix<N, D, S>>::is_invertible","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this matrix is invertible.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":468211,"byte_end":468259,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":468264,"byte_end":468273,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":3599},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/scalar.rs","byte_start":468622,"byte_end":468628,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"Scalar","qualname":"::base::scalar::Scalar","value":"Scalar: Clone + PartialEq + Debug + Any","parent":null,"children":[{"krate":0,"index":3600},{"krate":0,"index":3602}],"decl_id":null,"docs":" The basic scalar type for all structures of `nalgebra`.","sig":null,"attributes":[{"value":"/ The basic scalar type for all structures of `nalgebra`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/scalar.rs","byte_start":468471,"byte_end":468530,"line_start":5,"line_end":5,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/scalar.rs","byte_start":468531,"byte_end":468534,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This does not make any assumption on the algebraic properties of `Self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/scalar.rs","byte_start":468535,"byte_end":468611,"line_start":7,"line_end":7,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3600},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/scalar.rs","byte_start":468824,"byte_end":468826,"line_start":13,"line_end":13,"column_start":8,"column_end":10},"name":"is","qualname":"::base::scalar::Scalar::is","value":"fn <T> () -> bool","parent":{"krate":0,"index":3599},"children":[],"decl_id":null,"docs":" Tests if `Self` the same as the type `T`","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/scalar.rs","byte_start":468668,"byte_end":468677,"line_start":9,"line_end":9,"column_start":5,"column_end":14}},{"value":"/ Tests if `Self` the same as the type `T`","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/scalar.rs","byte_start":468682,"byte_end":468726,"line_start":10,"line_end":10,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/scalar.rs","byte_start":468731,"byte_end":468734,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ Typically used to test of `Self` is a f32 or a f64 with `N::is::<f32>()`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/scalar.rs","byte_start":468739,"byte_end":468816,"line_start":12,"line_end":12,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3602},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/scalar.rs","byte_start":469044,"byte_end":469057,"line_start":19,"line_end":19,"column_start":8,"column_end":21},"name":"inlined_clone","qualname":"::base::scalar::Scalar::inlined_clone","value":"fn (&self) -> Self","parent":{"krate":0,"index":3599},"children":[],"decl_id":null,"docs":" Performance hack: Clone doesn't get inlined for Copy types in debug mode, so make it inline anyway.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/scalar.rs","byte_start":468911,"byte_end":468928,"line_start":17,"line_end":17,"column_start":5,"column_end":22}},{"value":"/ Performance hack: Clone doesn't get inlined for Copy types in debug mode, so make it inline anyway.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/scalar.rs","byte_start":468933,"byte_end":469036,"line_start":18,"line_end":18,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":3628},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":469707,"byte_end":469720,"line_start":11,"line_end":11,"column_start":12,"column_end":25},"name":"compress_rows","qualname":"<Matrix<N, R, C, S>>::compress_rows","value":"fn (&self, f: impl Fn(VectorSliceN<N, R, S::RStride, S::CStride>) -> N) -> RowVectorN<N, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a row vector where each element is the result of the application of `f` on the\n corresponding column of the original matrix.\n","sig":null,"attributes":[{"value":"/ Returns a row vector where each element is the result of the application of `f` on the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":469538,"byte_end":469628,"line_start":8,"line_end":8,"column_start":5,"column_end":95}},{"value":"/ corresponding column of the original matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":469633,"byte_end":469681,"line_start":9,"line_end":9,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":469686,"byte_end":469695,"line_start":10,"line_end":10,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3630},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":470492,"byte_end":470508,"line_start":36,"line_end":36,"column_start":12,"column_end":28},"name":"compress_rows_tr","qualname":"<Matrix<N, R, C, S>>::compress_rows_tr","value":"fn (&self, f: impl Fn(VectorSliceN<N, R, S::RStride, S::CStride>) -> N) -> VectorN<N, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a column vector where each element is the result of the application of `f` on the\n corresponding column of the original matrix.","sig":null,"attributes":[{"value":"/ Returns a column vector where each element is the result of the application of `f` on the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":470247,"byte_end":470340,"line_start":31,"line_end":31,"column_start":5,"column_end":98}},{"value":"/ corresponding column of the original matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":470345,"byte_end":470393,"line_start":32,"line_end":32,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":470398,"byte_end":470401,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This is the same as `self.compress_rows(f).transpose()`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":470406,"byte_end":470466,"line_start":34,"line_end":34,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":470471,"byte_end":470480,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3632},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":471139,"byte_end":471155,"line_start":58,"line_end":58,"column_start":12,"column_end":28},"name":"compress_columns","qualname":"<Matrix<N, R, C, S>>::compress_columns","value":"fn (&self, init: VectorN<N, R>, f: impl Fn(&mut VectorN<N, R>, VectorSliceN<N, R, S::RStride, S::CStride>)) -> VectorN<N, R>","parent":null,"children":[],"decl_id":null,"docs":" Returns a column vector resulting from the folding of `f` on each column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a column vector resulting from the folding of `f` on each column of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":471021,"byte_end":471113,"line_start":56,"line_end":56,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":471118,"byte_end":471127,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3639},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":471955,"byte_end":471958,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"sum","qualname":"<Matrix<N, R, C, S>>::sum","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The sum of all the elements of this matrix.","sig":null,"attributes":[{"value":"/ The sum of all the elements of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":471653,"byte_end":471700,"line_start":82,"line_end":82,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":471705,"byte_end":471708,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":471713,"byte_end":471726,"line_start":84,"line_end":84,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":471731,"byte_end":471734,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":471739,"byte_end":471746,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":471751,"byte_end":471781,"line_start":87,"line_end":87,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":471786,"byte_end":471789,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":471794,"byte_end":471835,"line_start":89,"line_end":89,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":471840,"byte_end":471882,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.sum(), 21.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":471887,"byte_end":471917,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":471922,"byte_end":471929,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":471934,"byte_end":471943,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3641},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472639,"byte_end":472646,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"row_sum","qualname":"<Matrix<N, R, C, S>>::row_sum","value":"fn (&self) -> RowVectorN<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The sum of all the rows of this matrix.","sig":null,"attributes":[{"value":"/ The sum of all the rows of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472043,"byte_end":472086,"line_start":98,"line_end":98,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472091,"byte_end":472094,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Use `.row_variance_tr` if you need the result in a column vector instead.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472099,"byte_end":472176,"line_start":100,"line_end":100,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472181,"byte_end":472184,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472189,"byte_end":472202,"line_start":102,"line_end":102,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472207,"byte_end":472210,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472215,"byte_end":472222,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Matrix3x2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472227,"byte_end":472270,"line_start":105,"line_end":105,"column_start":5,"column_end":48}},{"value":"/ # use nalgebra::{RowVector2, RowVector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472275,"byte_end":472320,"line_start":106,"line_end":106,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472325,"byte_end":472328,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472333,"byte_end":472374,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472379,"byte_end":472421,"line_start":109,"line_end":109,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_sum(), RowVector3::new(5.0, 7.0, 9.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472426,"byte_end":472486,"line_start":110,"line_end":110,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472491,"byte_end":472494,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ let mint = Matrix3x2::new(1,2,3,4,5,6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472499,"byte_end":472542,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(mint.row_sum(), RowVector2::new(9,12));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472547,"byte_end":472601,"line_start":113,"line_end":113,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472606,"byte_end":472613,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472618,"byte_end":472627,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3643},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473350,"byte_end":473360,"line_start":139,"line_end":139,"column_start":12,"column_end":22},"name":"row_sum_tr","qualname":"<Matrix<N, R, C, S>>::row_sum_tr","value":"fn (&self) -> VectorN<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The sum of all the rows of this matrix. The result is transposed and returned as a column vector.","sig":null,"attributes":[{"value":"/ The sum of all the rows of this matrix. The result is transposed and returned as a column vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472792,"byte_end":472893,"line_start":123,"line_end":123,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472898,"byte_end":472901,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472906,"byte_end":472919,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472924,"byte_end":472927,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472932,"byte_end":472939,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Matrix3x2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472944,"byte_end":472987,"line_start":128,"line_end":128,"column_start":5,"column_end":48}},{"value":"/ # use nalgebra::{Vector2, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":472992,"byte_end":473031,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473036,"byte_end":473039,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473044,"byte_end":473085,"line_start":131,"line_end":131,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473090,"byte_end":473132,"line_start":132,"line_end":132,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_sum_tr(), Vector3::new(5.0, 7.0, 9.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473137,"byte_end":473197,"line_start":133,"line_end":133,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473202,"byte_end":473205,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let mint = Matrix3x2::new(1,2,3,4,5,6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473210,"byte_end":473253,"line_start":135,"line_end":135,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(mint.row_sum_tr(), Vector2::new(9,12));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473258,"byte_end":473312,"line_start":136,"line_end":136,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473317,"byte_end":473324,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473329,"byte_end":473338,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3645},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":474003,"byte_end":474013,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"column_sum","qualname":"<Matrix<N, R, C, S>>::column_sum","value":"fn (&self) -> VectorN<N, R>","parent":null,"children":[],"decl_id":null,"docs":" The sum of all the columns of this matrix.","sig":null,"attributes":[{"value":"/ The sum of all the columns of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473502,"byte_end":473548,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473553,"byte_end":473556,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473561,"byte_end":473574,"line_start":148,"line_end":148,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473579,"byte_end":473582,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473587,"byte_end":473594,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Matrix3x2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473599,"byte_end":473642,"line_start":151,"line_end":151,"column_start":5,"column_end":48}},{"value":"/ # use nalgebra::{Vector2, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473647,"byte_end":473686,"line_start":152,"line_end":152,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473691,"byte_end":473694,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473699,"byte_end":473740,"line_start":154,"line_end":154,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473745,"byte_end":473787,"line_start":155,"line_end":155,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.column_sum(), Vector2::new(6.0, 15.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473792,"byte_end":473848,"line_start":156,"line_end":156,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473853,"byte_end":473856,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ let mint = Matrix3x2::new(1,2,3,4,5,6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473861,"byte_end":473904,"line_start":158,"line_end":158,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(mint.column_sum(), Vector3::new(3,7,11));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473909,"byte_end":473965,"line_start":159,"line_end":159,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473970,"byte_end":473977,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":473982,"byte_end":473991,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3652},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":474813,"byte_end":474821,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"variance","qualname":"<Matrix<N, R, C, S>>::variance","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The variance of all the elements of this matrix.","sig":null,"attributes":[{"value":"/ The variance of all the elements of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":474423,"byte_end":474475,"line_start":179,"line_end":179,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":474480,"byte_end":474483,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":474488,"byte_end":474501,"line_start":181,"line_end":181,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":474506,"byte_end":474509,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":474514,"byte_end":474521,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":474526,"byte_end":474565,"line_start":184,"line_end":184,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":474570,"byte_end":474600,"line_start":185,"line_end":185,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":474605,"byte_end":474608,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":474613,"byte_end":474654,"line_start":187,"line_end":187,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":474659,"byte_end":474701,"line_start":188,"line_end":188,"column_start":5,"column_end":47}},{"value":"/ assert_relative_eq!(m.variance(), 35.0 / 12.0, epsilon = 1.0e-8);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":474706,"byte_end":474775,"line_start":189,"line_end":189,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":474780,"byte_end":474787,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":474792,"byte_end":474801,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3654},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":475712,"byte_end":475724,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"row_variance","qualname":"<Matrix<N, R, C, S>>::row_variance","value":"fn (&self) -> RowVectorN<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The variance of all the rows of this matrix.","sig":null,"attributes":[{"value":"/ The variance of all the rows of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":475275,"byte_end":475323,"line_start":205,"line_end":205,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":475328,"byte_end":475331,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Use `.row_variance_tr` if you need the result in a column vector instead.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":475336,"byte_end":475413,"line_start":207,"line_end":207,"column_start":5,"column_end":82}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":475418,"byte_end":475431,"line_start":208,"line_end":208,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":475436,"byte_end":475439,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":475444,"byte_end":475451,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, RowVector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":475456,"byte_end":475500,"line_start":211,"line_end":211,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":475505,"byte_end":475508,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":475513,"byte_end":475554,"line_start":213,"line_end":213,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":475559,"byte_end":475601,"line_start":214,"line_end":214,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_variance(), RowVector3::new(2.25, 2.25, 2.25));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":475606,"byte_end":475674,"line_start":215,"line_end":215,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":475679,"byte_end":475686,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":475691,"byte_end":475700,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3656},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":476285,"byte_end":476300,"line_start":237,"line_end":237,"column_start":12,"column_end":27},"name":"row_variance_tr","qualname":"<Matrix<N, R, C, S>>::row_variance_tr","value":"fn (&self) -> VectorN<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The variance of all the rows of this matrix. The result is transposed and returned as a column vector.","sig":null,"attributes":[{"value":"/ The variance of all the rows of this matrix. The result is transposed and returned as a column vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":475875,"byte_end":475981,"line_start":225,"line_end":225,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":475986,"byte_end":475989,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":475994,"byte_end":476007,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":476012,"byte_end":476015,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":476020,"byte_end":476027,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":476032,"byte_end":476073,"line_start":230,"line_end":230,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":476078,"byte_end":476081,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":476086,"byte_end":476127,"line_start":232,"line_end":232,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":476132,"byte_end":476174,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_variance_tr(), Vector3::new(2.25, 2.25, 2.25));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":476179,"byte_end":476247,"line_start":234,"line_end":234,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":476252,"byte_end":476259,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":476264,"byte_end":476273,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3658},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":476877,"byte_end":476892,"line_start":257,"line_end":257,"column_start":12,"column_end":27},"name":"column_variance","qualname":"<Matrix<N, R, C, S>>::column_variance","value":"fn (&self) -> VectorN<N, R>","parent":null,"children":[],"decl_id":null,"docs":" The variance of all the columns of this matrix.","sig":null,"attributes":[{"value":"/ The variance of all the columns of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":476447,"byte_end":476498,"line_start":244,"line_end":244,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":476503,"byte_end":476506,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":476511,"byte_end":476524,"line_start":246,"line_end":246,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":476529,"byte_end":476532,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":476537,"byte_end":476544,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":476549,"byte_end":476588,"line_start":249,"line_end":249,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":476593,"byte_end":476634,"line_start":250,"line_end":250,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":476639,"byte_end":476642,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":476647,"byte_end":476688,"line_start":252,"line_end":252,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":476693,"byte_end":476735,"line_start":253,"line_end":253,"column_start":5,"column_end":47}},{"value":"/ assert_relative_eq!(m.column_variance(), Vector2::new(2.0 / 3.0, 2.0 / 3.0), epsilon = 1.0e-8);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":476740,"byte_end":476839,"line_start":254,"line_end":254,"column_start":5,"column_end":104}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":476844,"byte_end":476851,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":476856,"byte_end":476865,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3661},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":477914,"byte_end":477918,"line_start":295,"line_end":295,"column_start":12,"column_end":16},"name":"mean","qualname":"<Matrix<N, R, C, S>>::mean","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The mean of all the elements of this matrix.","sig":null,"attributes":[{"value":"/ The mean of all the elements of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":477611,"byte_end":477659,"line_start":283,"line_end":283,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":477664,"byte_end":477667,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":477672,"byte_end":477685,"line_start":285,"line_end":285,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":477690,"byte_end":477693,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":477698,"byte_end":477705,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":477710,"byte_end":477740,"line_start":288,"line_end":288,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":477745,"byte_end":477748,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":477753,"byte_end":477794,"line_start":290,"line_end":290,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":477799,"byte_end":477841,"line_start":291,"line_end":291,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.mean(), 3.5);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":477846,"byte_end":477876,"line_start":292,"line_end":292,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":477881,"byte_end":477888,"line_start":293,"line_end":293,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":477893,"byte_end":477902,"line_start":294,"line_end":294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3662},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478511,"byte_end":478519,"line_start":317,"line_end":317,"column_start":12,"column_end":20},"name":"row_mean","qualname":"<Matrix<N, R, C, S>>::row_mean","value":"fn (&self) -> RowVectorN<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The mean of all the rows of this matrix.","sig":null,"attributes":[{"value":"/ The mean of all the rows of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478081,"byte_end":478125,"line_start":303,"line_end":303,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478130,"byte_end":478133,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Use `.row_mean_tr` if you need the result in a column vector instead.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478138,"byte_end":478211,"line_start":305,"line_end":305,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478216,"byte_end":478219,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478224,"byte_end":478237,"line_start":307,"line_end":307,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478242,"byte_end":478245,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478250,"byte_end":478257,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, RowVector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478262,"byte_end":478306,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478311,"byte_end":478314,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478319,"byte_end":478360,"line_start":312,"line_end":312,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478365,"byte_end":478407,"line_start":313,"line_end":313,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_mean(), RowVector3::new(2.5, 3.5, 4.5));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478412,"byte_end":478473,"line_start":314,"line_end":314,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478478,"byte_end":478485,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478490,"byte_end":478499,"line_start":316,"line_end":316,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3664},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":479065,"byte_end":479076,"line_start":336,"line_end":336,"column_start":12,"column_end":23},"name":"row_mean_tr","qualname":"<Matrix<N, R, C, S>>::row_mean_tr","value":"fn (&self) -> VectorN<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The mean of all the rows of this matrix. The result is transposed and returned as a column vector.","sig":null,"attributes":[{"value":"/ The mean of all the rows of this matrix. The result is transposed and returned as a column vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478666,"byte_end":478768,"line_start":324,"line_end":324,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478773,"byte_end":478776,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478781,"byte_end":478794,"line_start":326,"line_end":326,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478799,"byte_end":478802,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478807,"byte_end":478814,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478819,"byte_end":478860,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478865,"byte_end":478868,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478873,"byte_end":478914,"line_start":331,"line_end":331,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478919,"byte_end":478961,"line_start":332,"line_end":332,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_mean_tr(), Vector3::new(2.5, 3.5, 4.5));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":478966,"byte_end":479027,"line_start":333,"line_end":333,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":479032,"byte_end":479039,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":479044,"byte_end":479053,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3666},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":479558,"byte_end":479569,"line_start":355,"line_end":355,"column_start":12,"column_end":23},"name":"column_mean","qualname":"<Matrix<N, R, C, S>>::column_mean","value":"fn (&self) -> VectorN<N, R>","parent":null,"children":[],"decl_id":null,"docs":" The mean of all the columns of this matrix.","sig":null,"attributes":[{"value":"/ The mean of all the columns of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":479219,"byte_end":479266,"line_start":343,"line_end":343,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":479271,"byte_end":479274,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":479279,"byte_end":479292,"line_start":345,"line_end":345,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":479297,"byte_end":479300,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":479305,"byte_end":479312,"line_start":347,"line_end":347,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":479317,"byte_end":479358,"line_start":348,"line_end":348,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":479363,"byte_end":479366,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":479371,"byte_end":479412,"line_start":350,"line_end":350,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":479417,"byte_end":479459,"line_start":351,"line_end":351,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.column_mean(), Vector2::new(2.0, 5.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":479464,"byte_end":479520,"line_start":352,"line_end":352,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":479525,"byte_end":479532,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":479537,"byte_end":479546,"line_start":354,"line_end":354,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":17151},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480702,"byte_end":480704,"line_start":24,"line_end":24,"column_start":15,"column_end":17},"name":"xx","qualname":"<Vector<N, D, S>>::xx","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17152},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480740,"byte_end":480743,"line_start":25,"line_end":25,"column_start":15,"column_end":18},"name":"xxx","qualname":"<Vector<N, D, S>>::xxx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17157},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480782,"byte_end":480784,"line_start":27,"line_end":27,"column_start":15,"column_end":17},"name":"xy","qualname":"<Vector<N, D, S>>::xy","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17158},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480820,"byte_end":480822,"line_start":28,"line_end":28,"column_start":15,"column_end":17},"name":"yx","qualname":"<Vector<N, D, S>>::yx","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17159},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480858,"byte_end":480860,"line_start":29,"line_end":29,"column_start":15,"column_end":17},"name":"yy","qualname":"<Vector<N, D, S>>::yy","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17160},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480896,"byte_end":480899,"line_start":30,"line_end":30,"column_start":15,"column_end":18},"name":"xxy","qualname":"<Vector<N, D, S>>::xxy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17161},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480937,"byte_end":480940,"line_start":31,"line_end":31,"column_start":15,"column_end":18},"name":"xyx","qualname":"<Vector<N, D, S>>::xyx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17162},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480978,"byte_end":480981,"line_start":32,"line_end":32,"column_start":15,"column_end":18},"name":"xyy","qualname":"<Vector<N, D, S>>::xyy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17163},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481019,"byte_end":481022,"line_start":33,"line_end":33,"column_start":15,"column_end":18},"name":"yxx","qualname":"<Vector<N, D, S>>::yxx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17164},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481060,"byte_end":481063,"line_start":34,"line_end":34,"column_start":15,"column_end":18},"name":"yxy","qualname":"<Vector<N, D, S>>::yxy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17165},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481101,"byte_end":481104,"line_start":35,"line_end":35,"column_start":15,"column_end":18},"name":"yyx","qualname":"<Vector<N, D, S>>::yyx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17166},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481142,"byte_end":481145,"line_start":36,"line_end":36,"column_start":15,"column_end":18},"name":"yyy","qualname":"<Vector<N, D, S>>::yyy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17171},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481184,"byte_end":481186,"line_start":38,"line_end":38,"column_start":15,"column_end":17},"name":"xz","qualname":"<Vector<N, D, S>>::xz","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17172},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481222,"byte_end":481224,"line_start":39,"line_end":39,"column_start":15,"column_end":17},"name":"yz","qualname":"<Vector<N, D, S>>::yz","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17173},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481260,"byte_end":481262,"line_start":40,"line_end":40,"column_start":15,"column_end":17},"name":"zx","qualname":"<Vector<N, D, S>>::zx","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17174},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481298,"byte_end":481300,"line_start":41,"line_end":41,"column_start":15,"column_end":17},"name":"zy","qualname":"<Vector<N, D, S>>::zy","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17175},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481336,"byte_end":481338,"line_start":42,"line_end":42,"column_start":15,"column_end":17},"name":"zz","qualname":"<Vector<N, D, S>>::zz","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17176},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481374,"byte_end":481377,"line_start":43,"line_end":43,"column_start":15,"column_end":18},"name":"xxz","qualname":"<Vector<N, D, S>>::xxz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17177},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481415,"byte_end":481418,"line_start":44,"line_end":44,"column_start":15,"column_end":18},"name":"xyz","qualname":"<Vector<N, D, S>>::xyz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17178},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481456,"byte_end":481459,"line_start":45,"line_end":45,"column_start":15,"column_end":18},"name":"xzx","qualname":"<Vector<N, D, S>>::xzx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17179},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481497,"byte_end":481500,"line_start":46,"line_end":46,"column_start":15,"column_end":18},"name":"xzy","qualname":"<Vector<N, D, S>>::xzy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17180},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481538,"byte_end":481541,"line_start":47,"line_end":47,"column_start":15,"column_end":18},"name":"xzz","qualname":"<Vector<N, D, S>>::xzz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17181},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481579,"byte_end":481582,"line_start":48,"line_end":48,"column_start":15,"column_end":18},"name":"yxz","qualname":"<Vector<N, D, S>>::yxz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17182},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481620,"byte_end":481623,"line_start":49,"line_end":49,"column_start":15,"column_end":18},"name":"yyz","qualname":"<Vector<N, D, S>>::yyz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17183},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481661,"byte_end":481664,"line_start":50,"line_end":50,"column_start":15,"column_end":18},"name":"yzx","qualname":"<Vector<N, D, S>>::yzx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17184},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481702,"byte_end":481705,"line_start":51,"line_end":51,"column_start":15,"column_end":18},"name":"yzy","qualname":"<Vector<N, D, S>>::yzy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17185},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481743,"byte_end":481746,"line_start":52,"line_end":52,"column_start":15,"column_end":18},"name":"yzz","qualname":"<Vector<N, D, S>>::yzz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17186},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481784,"byte_end":481787,"line_start":53,"line_end":53,"column_start":15,"column_end":18},"name":"zxx","qualname":"<Vector<N, D, S>>::zxx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17187},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481825,"byte_end":481828,"line_start":54,"line_end":54,"column_start":15,"column_end":18},"name":"zxy","qualname":"<Vector<N, D, S>>::zxy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17188},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481866,"byte_end":481869,"line_start":55,"line_end":55,"column_start":15,"column_end":18},"name":"zxz","qualname":"<Vector<N, D, S>>::zxz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17189},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481907,"byte_end":481910,"line_start":56,"line_end":56,"column_start":15,"column_end":18},"name":"zyx","qualname":"<Vector<N, D, S>>::zyx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17190},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481948,"byte_end":481951,"line_start":57,"line_end":57,"column_start":15,"column_end":18},"name":"zyy","qualname":"<Vector<N, D, S>>::zyy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17191},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":481989,"byte_end":481992,"line_start":58,"line_end":58,"column_start":15,"column_end":18},"name":"zyz","qualname":"<Vector<N, D, S>>::zyz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17192},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":482030,"byte_end":482033,"line_start":59,"line_end":59,"column_start":15,"column_end":18},"name":"zzx","qualname":"<Vector<N, D, S>>::zzx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17193},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":482071,"byte_end":482074,"line_start":60,"line_end":60,"column_start":15,"column_end":18},"name":"zzy","qualname":"<Vector<N, D, S>>::zzy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17194},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":482112,"byte_end":482115,"line_start":61,"line_end":61,"column_start":15,"column_end":18},"name":"zzz","qualname":"<Vector<N, D, S>>::zzz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480393,"byte_end":480443,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/swizzle.rs","byte_start":480464,"byte_end":480473,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":17195},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":482843,"byte_end":482847,"line_start":21,"line_end":21,"column_start":12,"column_end":16},"name":"Unit","qualname":"::base::unit::Unit","value":"Unit {  }","parent":null,"children":[{"krate":0,"index":17197}],"decl_id":null,"docs":" A wrapper that ensures the underlying algebraic entity has a unit norm.","sig":null,"attributes":[{"value":"/ A wrapper that ensures the underlying algebraic entity has a unit norm.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":482585,"byte_end":482660,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":482661,"byte_end":482664,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Use `.as_ref()` or `.into_inner()` to obtain the underlying value by-reference or by-move.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":482665,"byte_end":482759,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"repr(transparent)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":482760,"byte_end":482780,"line_start":19,"line_end":19,"column_start":1,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":3693},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":483896,"byte_end":483902,"line_start":61,"line_end":61,"column_start":11,"column_end":17},"name":"Normed","qualname":"::base::unit::Normed","value":"Normed","parent":null,"children":[{"krate":0,"index":3694},{"krate":0,"index":3695},{"krate":0,"index":3696},{"krate":0,"index":3697},{"krate":0,"index":3698}],"decl_id":null,"docs":" Trait implemented by entities scan be be normalized and put in an `Unit` struct.\n","sig":null,"attributes":[{"value":"/ Trait implemented by entities scan be be normalized and put in an `Unit` struct.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":483801,"byte_end":483885,"line_start":60,"line_end":60,"column_start":1,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":3694},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":483944,"byte_end":483948,"line_start":63,"line_end":63,"column_start":10,"column_end":14},"name":"Norm","qualname":"::base::unit::Normed::Norm","value":"type Norm: SimdRealField;","parent":{"krate":0,"index":3693},"children":[],"decl_id":null,"docs":" The type of the norm.\n","sig":null,"attributes":[{"value":"/ The type of the norm.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":483909,"byte_end":483934,"line_start":62,"line_end":62,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3695},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":483999,"byte_end":484003,"line_start":65,"line_end":65,"column_start":8,"column_end":12},"name":"norm","qualname":"::base::unit::Normed::norm","value":"fn (&self) -> Self::Norm","parent":{"krate":0,"index":3693},"children":[],"decl_id":null,"docs":" Computes the norm.\n","sig":null,"attributes":[{"value":"/ Computes the norm.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":483969,"byte_end":483991,"line_start":64,"line_end":64,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3696},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":484068,"byte_end":484080,"line_start":67,"line_end":67,"column_start":8,"column_end":20},"name":"norm_squared","qualname":"::base::unit::Normed::norm_squared","value":"fn (&self) -> Self::Norm","parent":{"krate":0,"index":3693},"children":[],"decl_id":null,"docs":" Computes the squared norm.\n","sig":null,"attributes":[{"value":"/ Computes the squared norm.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":484030,"byte_end":484060,"line_start":66,"line_end":66,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3697},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":484140,"byte_end":484149,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"scale_mut","qualname":"::base::unit::Normed::scale_mut","value":"fn (&mut self, n: Self::Norm) -> ()","parent":{"krate":0,"index":3693},"children":[],"decl_id":null,"docs":" Multiply `self` by n.\n","sig":null,"attributes":[{"value":"/ Multiply `self` by n.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":484107,"byte_end":484132,"line_start":68,"line_end":68,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3698},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":484213,"byte_end":484224,"line_start":71,"line_end":71,"column_start":8,"column_end":19},"name":"unscale_mut","qualname":"::base::unit::Normed::unscale_mut","value":"fn (&mut self, n: Self::Norm) -> ()","parent":{"krate":0,"index":3693},"children":[],"decl_id":null,"docs":" Divides `self` by n.\n","sig":null,"attributes":[{"value":"/ Divides `self` by n.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":484181,"byte_end":484205,"line_start":70,"line_end":70,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3701},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":484386,"byte_end":484399,"line_start":77,"line_end":77,"column_start":12,"column_end":25},"name":"new_normalize","qualname":"<Unit<T>>::new_normalize","value":"fn (value: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Normalize the given vector and return it wrapped on a `Unit` structure.\n","sig":null,"attributes":[{"value":"/ Normalize the given vector and return it wrapped on a `Unit` structure.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":484285,"byte_end":484360,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":484365,"byte_end":484374,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3702},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":484658,"byte_end":484665,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"try_new","qualname":"<Unit<T>>::try_new","value":"fn (value: T, min_norm: T::Norm) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to normalize the given vector and return it wrapped on a `Unit` structure.","sig":null,"attributes":[{"value":"/ Attempts to normalize the given vector and return it wrapped on a `Unit` structure.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":484466,"byte_end":484553,"line_start":81,"line_end":81,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":484558,"byte_end":484561,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the norm was smaller or equal to `min_norm`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":484566,"byte_end":484632,"line_start":83,"line_end":83,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":484637,"byte_end":484646,"line_start":84,"line_end":84,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3704},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":484944,"byte_end":484955,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"new_and_get","qualname":"<Unit<T>>::new_and_get","value":"fn (mut value: T) -> (Self, T::Norm)","parent":null,"children":[],"decl_id":null,"docs":" Normalize the given vector and return it wrapped on a `Unit` structure and its norm.\n","sig":null,"attributes":[{"value":"/ Normalize the given vector and return it wrapped on a `Unit` structure and its norm.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":484830,"byte_end":484918,"line_start":92,"line_end":92,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":484923,"byte_end":484932,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3705},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":485283,"byte_end":485298,"line_start":104,"line_end":104,"column_start":12,"column_end":27},"name":"try_new_and_get","qualname":"<Unit<T>>::try_new_and_get","value":"fn (mut value: T, min_norm: T::Norm) -> Option<(Self, T::Norm)>","parent":null,"children":[],"decl_id":null,"docs":" Normalize the given vector and return it wrapped on a `Unit` structure and its norm.","sig":null,"attributes":[{"value":"/ Normalize the given vector and return it wrapped on a `Unit` structure and its norm.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":485090,"byte_end":485178,"line_start":100,"line_end":100,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":485183,"byte_end":485186,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the norm was smaller or equal to `min_norm`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":485191,"byte_end":485257,"line_start":102,"line_end":102,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":485262,"byte_end":485271,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3706},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":486040,"byte_end":486051,"line_start":125,"line_end":125,"column_start":12,"column_end":23},"name":"renormalize","qualname":"<Unit<T>>::renormalize","value":"fn (&mut self) -> T::Norm","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this vector again. This is useful when repeated computations\n might cause a drift in the norm because of float inaccuracies.","sig":null,"attributes":[{"value":"/ Normalizes this vector again. This is useful when repeated computations","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":485659,"byte_end":485734,"line_start":119,"line_end":119,"column_start":5,"column_end":80}},{"value":"/ might cause a drift in the norm because of float inaccuracies.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":485739,"byte_end":485805,"line_start":120,"line_end":120,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":485810,"byte_end":485813,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Returns the norm before re-normalization. See `.renormalize_fast` for a faster alternative","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":485818,"byte_end":485912,"line_start":122,"line_end":122,"column_start":5,"column_end":99}},{"value":"/ that may be slightly less accurate if `self` drifted significantly from having a unit length.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":485917,"byte_end":486014,"line_start":123,"line_end":123,"column_start":5,"column_end":102}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":486019,"byte_end":486028,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3707},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":486382,"byte_end":486398,"line_start":135,"line_end":135,"column_start":12,"column_end":28},"name":"renormalize_fast","qualname":"<Unit<T>>::renormalize_fast","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this vector again using a first-order Taylor approximation.\n This is useful when repeated computations might cause a drift in the norm\n because of float inaccuracies.\n","sig":null,"attributes":[{"value":"/ Normalizes this vector again using a first-order Taylor approximation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":486161,"byte_end":486235,"line_start":131,"line_end":131,"column_start":5,"column_end":79}},{"value":"/ This is useful when repeated computations might cause a drift in the norm","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":486240,"byte_end":486317,"line_start":132,"line_end":132,"column_start":5,"column_end":82}},{"value":"/ because of float inaccuracies.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":486322,"byte_end":486356,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":486361,"byte_end":486370,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3710},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":486728,"byte_end":486741,"line_start":146,"line_end":146,"column_start":12,"column_end":25},"name":"new_unchecked","qualname":"<Unit<T>>::new_unchecked","value":"fn (value: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given value, assuming it is already normalized.\n","sig":null,"attributes":[{"value":"/ Wraps the given value, assuming it is already normalized.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":486641,"byte_end":486702,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":486707,"byte_end":486716,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3711},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":486887,"byte_end":486905,"line_start":152,"line_end":152,"column_start":12,"column_end":30},"name":"from_ref_unchecked","qualname":"<Unit<T>>::from_ref_unchecked","value":"fn <'a> (value: &'a T) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given reference, assuming it is already normalized.\n","sig":null,"attributes":[{"value":"/ Wraps the given reference, assuming it is already normalized.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":486796,"byte_end":486861,"line_start":150,"line_end":150,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":486866,"byte_end":486875,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3713},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":487051,"byte_end":487061,"line_start":158,"line_end":158,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Unit<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying value.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying value.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":486990,"byte_end":487025,"line_start":156,"line_end":156,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":487030,"byte_end":487039,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3714},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":487274,"byte_end":487280,"line_start":166,"line_end":166,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Unit<T>>::unwrap","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying value.\n Deprecated: use [Unit::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying value.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":487105,"byte_end":487140,"line_start":162,"line_end":162,"column_start":5,"column_end":40}},{"value":"/ Deprecated: use [Unit::into_inner] instead.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":487145,"byte_end":487192,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":487197,"byte_end":487248,"line_start":164,"line_end":164,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":487253,"byte_end":487262,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3715},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":487562,"byte_end":487578,"line_start":174,"line_end":174,"column_start":12,"column_end":28},"name":"as_mut_unchecked","qualname":"<Unit<T>>::as_mut_unchecked","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying value. This is `_unchecked` because modifying\n the underlying value in such a way that it no longer has unit length may lead to unexpected\n results.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying value. This is `_unchecked` because modifying","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":487324,"byte_end":487419,"line_start":170,"line_end":170,"column_start":5,"column_end":100}},{"value":"/ the underlying value in such a way that it no longer has unit length may lead to unexpected","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":487424,"byte_end":487519,"line_start":171,"line_end":171,"column_start":5,"column_end":100}},{"value":"/ results.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":487524,"byte_end":487536,"line_start":172,"line_end":172,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":487541,"byte_end":487550,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":17221},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":493584,"byte_end":493594,"line_start":26,"line_end":26,"column_start":12,"column_end":22},"name":"VecStorage","qualname":"::base::vec_storage::VecStorage","value":"VecStorage {  }","parent":null,"children":[{"krate":0,"index":17225},{"krate":0,"index":17226},{"krate":0,"index":17227}],"decl_id":null,"docs":" A Vec-based matrix data storage. It may be dynamically-sized.\n","sig":null,"attributes":[{"value":"/ A Vec-based matrix data storage. It may be dynamically-sized.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":493384,"byte_end":493449,"line_start":22,"line_end":22,"column_start":1,"column_end":66}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":493450,"byte_end":493460,"line_start":23,"line_end":23,"column_start":1,"column_end":11}}]},{"kind":"Type","id":{"krate":0,"index":3775},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":493751,"byte_end":493760,"line_start":34,"line_end":34,"column_start":10,"column_end":19},"name":"MatrixVec","qualname":"::base::vec_storage::MatrixVec","value":"VecStorage<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Renamed to [VecStorage].\n","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `VecStorage`\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":493665,"byte_end":493712,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ Renamed to [VecStorage].","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":493713,"byte_end":493741,"line_start":33,"line_end":33,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3783},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":493948,"byte_end":493951,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<VecStorage<N, R, C>>::new","value":"fn (nrows: R, ncols: C, data: Vec<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new dynamic matrix data storage from the given vector and shape.\n","sig":null,"attributes":[{"value":"/ Creates a new dynamic matrix data storage from the given vector and shape.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":493844,"byte_end":493922,"line_start":37,"line_end":37,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":493927,"byte_end":493936,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3784},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":494305,"byte_end":494311,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"as_vec","qualname":"<VecStorage<N, R, C>>::as_vec","value":"fn (&self) -> &Vec<N>","parent":null,"children":[],"decl_id":null,"docs":" The underlying data storage.\n","sig":null,"attributes":[{"value":"/ The underlying data storage.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":494247,"byte_end":494279,"line_start":51,"line_end":51,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":494284,"byte_end":494293,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3785},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":494550,"byte_end":494560,"line_start":62,"line_end":62,"column_start":19,"column_end":29},"name":"as_vec_mut","qualname":"<VecStorage<N, R, C>>::as_vec_mut","value":"fn (&mut self) -> &mut Vec<N>","parent":null,"children":[],"decl_id":null,"docs":" The underlying mutable data storage.","sig":null,"attributes":[{"value":"/ The underlying mutable data storage.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":494362,"byte_end":494402,"line_start":57,"line_end":57,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":494407,"byte_end":494410,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This is unsafe because this may cause UB if the size of the vector is changed","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":494415,"byte_end":494496,"line_start":59,"line_end":59,"column_start":5,"column_end":86}},{"value":"/ by the user.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":494501,"byte_end":494517,"line_start":60,"line_end":60,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":494522,"byte_end":494531,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3786},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":494900,"byte_end":494906,"line_start":71,"line_end":71,"column_start":19,"column_end":25},"name":"resize","qualname":"<VecStorage<N, R, C>>::resize","value":"fn (mut self, sz: usize) -> Vec<N>","parent":null,"children":[],"decl_id":null,"docs":" Resizes the underlying mutable data storage and unwraps it.","sig":null,"attributes":[{"value":"/ Resizes the underlying mutable data storage and unwraps it.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":494623,"byte_end":494686,"line_start":66,"line_end":66,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":494691,"byte_end":494694,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ If `sz` is larger than the current size, additional elements are uninitialized.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":494699,"byte_end":494782,"line_start":68,"line_end":68,"column_start":5,"column_end":88}},{"value":"/ If `sz` is smaller than the current size, additional elements are truncated.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":494787,"byte_end":494867,"line_start":69,"line_end":69,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":494872,"byte_end":494881,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3787},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":495284,"byte_end":495287,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"len","qualname":"<VecStorage<N, R, C>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of elements on the underlying vector.\n","sig":null,"attributes":[{"value":"/ The number of elements on the underlying vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":495206,"byte_end":495258,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":495263,"byte_end":495272,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":3861},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/helper.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"helper","qualname":"::base::helper","value":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/helper.rs","parent":null,"children":[{"krate":0,"index":3862},{"krate":0,"index":3865},{"krate":0,"index":3866}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3866},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/helper.rs","byte_start":502189,"byte_end":502200,"line_start":20,"line_end":20,"column_start":8,"column_end":19},"name":"reject_rand","qualname":"::base::helper::reject_rand","value":"fn <G, F, T> (g: &mut G, f: F) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/helper.rs","byte_start":502172,"byte_end":502181,"line_start":19,"line_end":19,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":3883},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"geometry","qualname":"::geometry","value":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs","parent":null,"children":[{"krate":0,"index":3884},{"krate":0,"index":3891},{"krate":0,"index":3945},{"krate":0,"index":4029},{"krate":0,"index":4050},{"krate":0,"index":4096},{"krate":0,"index":4168},{"krate":0,"index":4193},{"krate":0,"index":4258},{"krate":0,"index":4279},{"krate":0,"index":4363},{"krate":0,"index":4372},{"krate":0,"index":4394},{"krate":0,"index":4522},{"krate":0,"index":4560},{"krate":0,"index":4581},{"krate":0,"index":4682},{"krate":0,"index":4864},{"krate":0,"index":4980},{"krate":0,"index":5116},{"krate":0,"index":5132},{"krate":0,"index":5182},{"krate":0,"index":5211},{"krate":0,"index":5276},{"krate":0,"index":5330},{"krate":0,"index":5430},{"krate":0,"index":5538},{"krate":0,"index":5556},{"krate":0,"index":5637},{"krate":0,"index":5658},{"krate":0,"index":5696},{"krate":0,"index":5799},{"krate":0,"index":5824},{"krate":0,"index":5849},{"krate":0,"index":5870},{"krate":0,"index":5969},{"krate":0,"index":5987},{"krate":0,"index":6046},{"krate":0,"index":6152},{"krate":0,"index":6190},{"krate":0,"index":6213},{"krate":0,"index":6326},{"krate":0,"index":6344},{"krate":0,"index":6401},{"krate":0,"index":6499},{"krate":0,"index":6537},{"krate":0,"index":6561},{"krate":0,"index":6576},{"krate":0,"index":6703},{"krate":0,"index":6724},{"krate":0,"index":6748},{"krate":0,"index":6787},{"krate":0,"index":6841},{"krate":0,"index":6869},{"krate":0,"index":6922},{"krate":0,"index":6995},{"krate":0,"index":7062},{"krate":0,"index":7063},{"krate":0,"index":7064},{"krate":0,"index":7065},{"krate":0,"index":7066},{"krate":0,"index":7067},{"krate":0,"index":7068},{"krate":0,"index":7069},{"krate":0,"index":7070},{"krate":0,"index":7071},{"krate":0,"index":7072},{"krate":0,"index":7073},{"krate":0,"index":7074},{"krate":0,"index":7075},{"krate":0,"index":7076},{"krate":0,"index":7077},{"krate":0,"index":7078},{"krate":0,"index":7079}],"decl_id":null,"docs":" [Reexported at the root of this crate.] Data structures for points and usual transformations\n (rotations, isometries, etc.)\n","sig":null,"attributes":[{"value":"! [Reexported at the root of this crate.] Data structures for points and usual transformations","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs","byte_start":502381,"byte_end":502477,"line_start":1,"line_end":1,"column_start":1,"column_end":97}},{"value":"! (rotations, isometries, etc.)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/mod.rs","byte_start":502478,"byte_end":502511,"line_start":2,"line_end":2,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":3907},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":513820,"byte_end":513836,"line_start":8,"line_end":8,"column_start":11,"column_end":27},"name":"AbstractRotation","qualname":"::geometry::abstract_rotation::AbstractRotation","value":"AbstractRotation<N: Scalar, D: DimName>: PartialEq + ClosedMul + Clone","parent":null,"children":[{"krate":0,"index":3910},{"krate":0,"index":3911},{"krate":0,"index":3912},{"krate":0,"index":3913},{"krate":0,"index":3914},{"krate":0,"index":3915},{"krate":0,"index":3916}],"decl_id":null,"docs":" Trait implemented by rotations that can be used inside of an `Isometry` or `Similarity`.\n","sig":null,"attributes":[{"value":"/ Trait implemented by rotations that can be used inside of an `Isometry` or `Similarity`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":513717,"byte_end":513809,"line_start":7,"line_end":7,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3910},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":513931,"byte_end":513939,"line_start":10,"line_end":10,"column_start":8,"column_end":16},"name":"identity","qualname":"::geometry::abstract_rotation::AbstractRotation::identity","value":"fn () -> Self","parent":{"krate":0,"index":3907},"children":[],"decl_id":null,"docs":" The rotation identity.\n","sig":null,"attributes":[{"value":"/ The rotation identity.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":513897,"byte_end":513923,"line_start":9,"line_end":9,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3911},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":513988,"byte_end":513995,"line_start":12,"line_end":12,"column_start":8,"column_end":15},"name":"inverse","qualname":"::geometry::abstract_rotation::AbstractRotation::inverse","value":"fn (&self) -> Self","parent":{"krate":0,"index":3907},"children":[],"decl_id":null,"docs":" The rotation inverse.\n","sig":null,"attributes":[{"value":"/ The rotation inverse.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":513955,"byte_end":513980,"line_start":11,"line_end":11,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3912},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":514057,"byte_end":514068,"line_start":14,"line_end":14,"column_start":8,"column_end":19},"name":"inverse_mut","qualname":"::geometry::abstract_rotation::AbstractRotation::inverse_mut","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":3907},"children":[],"decl_id":null,"docs":" Change `self` to its inverse.\n","sig":null,"attributes":[{"value":"/ Change `self` to its inverse.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":514016,"byte_end":514049,"line_start":13,"line_end":13,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3913},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":514136,"byte_end":514152,"line_start":16,"line_end":16,"column_start":8,"column_end":24},"name":"transform_vector","qualname":"::geometry::abstract_rotation::AbstractRotation::transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":{"krate":0,"index":3907},"children":[],"decl_id":null,"docs":" Apply the rotation to the given vector.\n","sig":null,"attributes":[{"value":"/ Apply the rotation to the given vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":514085,"byte_end":514128,"line_start":15,"line_end":15,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3914},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":514303,"byte_end":514318,"line_start":20,"line_end":20,"column_start":8,"column_end":23},"name":"transform_point","qualname":"::geometry::abstract_rotation::AbstractRotation::transform_point","value":"fn (&self, p: &Point<N, D>) -> Point<N, D>","parent":{"krate":0,"index":3907},"children":[],"decl_id":null,"docs":" Apply the rotation to the given point.\n","sig":null,"attributes":[{"value":"/ Apply the rotation to the given point.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":514253,"byte_end":514295,"line_start":19,"line_end":19,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3915},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":514474,"byte_end":514498,"line_start":24,"line_end":24,"column_start":8,"column_end":32},"name":"inverse_transform_vector","qualname":"::geometry::abstract_rotation::AbstractRotation::inverse_transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":{"krate":0,"index":3907},"children":[],"decl_id":null,"docs":" Apply the inverse rotation to the given vector.\n","sig":null,"attributes":[{"value":"/ Apply the inverse rotation to the given vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":514415,"byte_end":514466,"line_start":23,"line_end":23,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3916},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":514657,"byte_end":514680,"line_start":28,"line_end":28,"column_start":8,"column_end":31},"name":"inverse_transform_point","qualname":"::geometry::abstract_rotation::AbstractRotation::inverse_transform_point","value":"fn (&self, p: &Point<N, D>) -> Point<N, D>","parent":{"krate":0,"index":3907},"children":[],"decl_id":null,"docs":" Apply the inverse rotation to the given point.\n","sig":null,"attributes":[{"value":"/ Apply the inverse rotation to the given point.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":514599,"byte_end":514649,"line_start":27,"line_end":27,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":17257},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":518241,"byte_end":518246,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Point","qualname":"::geometry::point::Point","value":"Point { coords }","parent":null,"children":[{"krate":0,"index":17260}],"decl_id":null,"docs":" A point in a n-dimensional euclidean space.\n","sig":null,"attributes":[{"value":"/ A point in a n-dimensional euclidean space.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":518147,"byte_end":518194,"line_start":22,"line_end":22,"column_start":1,"column_end":48}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":518195,"byte_end":518205,"line_start":23,"line_end":23,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":17260},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":518397,"byte_end":518403,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"name":"coords","qualname":"::geometry::point::Point::coords","value":"base::matrix::Matrix<N, D, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, D>>::Buffer>","parent":{"krate":0,"index":17257},"children":[],"decl_id":null,"docs":" The coordinates of this point, i.e., the shift from the origin.\n","sig":null,"attributes":[{"value":"/ The coordinates of this point, i.e., the shift from the origin.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":518321,"byte_end":518388,"line_start":29,"line_end":29,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3979},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":520844,"byte_end":520858,"line_start":121,"line_end":121,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Point<N, D>>::to_homogeneous","value":"fn (&self) -> VectorN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this point into a vector in homogeneous coordinates, i.e., appends a `1` at the\n end of it.","sig":null,"attributes":[{"value":"/ Converts this point into a vector in homogeneous coordinates, i.e., appends a `1` at the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":520266,"byte_end":520358,"line_start":105,"line_end":105,"column_start":5,"column_end":97}},{"value":"/ end of it.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":520363,"byte_end":520377,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":520382,"byte_end":520385,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This is the same as `.into()`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":520390,"byte_end":520424,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":520429,"byte_end":520432,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":520437,"byte_end":520450,"line_start":110,"line_end":110,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":520455,"byte_end":520462,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3, Vector3, Vector4};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":520467,"byte_end":520522,"line_start":112,"line_end":112,"column_start":5,"column_end":60}},{"value":"/ let p = Point2::new(10.0, 20.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":520527,"byte_end":520563,"line_start":113,"line_end":113,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(p.to_homogeneous(), Vector3::new(10.0, 20.0, 1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":520568,"byte_end":520634,"line_start":114,"line_end":114,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":520639,"byte_end":520642,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ // This works in any dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":520647,"byte_end":520682,"line_start":116,"line_end":116,"column_start":5,"column_end":40}},{"value":"/ let p = Point3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":520687,"byte_end":520729,"line_start":117,"line_end":117,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(p.to_homogeneous(), Vector4::new(10.0, 20.0, 30.0, 1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":520734,"byte_end":520806,"line_start":118,"line_end":118,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":520811,"byte_end":520818,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":520823,"byte_end":520832,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3980},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":521373,"byte_end":521389,"line_start":137,"line_end":137,"column_start":12,"column_end":28},"name":"from_coordinates","qualname":"<Point<N, D>>::from_coordinates","value":"fn (coords: VectorN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point with the given coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new point with the given coordinates.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":521235,"byte_end":521286,"line_start":134,"line_end":134,"column_start":5,"column_end":56}},{"value":"deprecated(note = \"Use Point::from(vector) instead.\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":521291,"byte_end":521347,"line_start":135,"line_end":135,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":521352,"byte_end":521361,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3981},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":521814,"byte_end":521817,"line_start":154,"line_end":154,"column_start":12,"column_end":15},"name":"len","qualname":"<Point<N, D>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The dimension of this point.","sig":null,"attributes":[{"value":"/ The dimension of this point.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":521466,"byte_end":521498,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":521503,"byte_end":521506,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":521511,"byte_end":521524,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":521529,"byte_end":521536,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":521541,"byte_end":521578,"line_start":145,"line_end":145,"column_start":5,"column_end":42}},{"value":"/ let p = Point2::new(1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":521583,"byte_end":521617,"line_start":146,"line_end":146,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.len(), 2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":521622,"byte_end":521649,"line_start":147,"line_end":147,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":521654,"byte_end":521657,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ // This works in any dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":521662,"byte_end":521697,"line_start":149,"line_end":149,"column_start":5,"column_end":40}},{"value":"/ let p = Point3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":521702,"byte_end":521744,"line_start":150,"line_end":150,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(p.len(), 3);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":521749,"byte_end":521776,"line_start":151,"line_end":151,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":521781,"byte_end":521788,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":521793,"byte_end":521802,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3982},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":522106,"byte_end":522112,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"stride","qualname":"<Point<N, D>>::stride","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The stride of this point. This is the number of buffer element separating each component of\n this point.\n","sig":null,"attributes":[{"value":"/ The stride of this point. This is the number of buffer element separating each component of","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":521873,"byte_end":521968,"line_start":158,"line_end":158,"column_start":5,"column_end":100}},{"value":"/ this point.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":521973,"byte_end":521988,"line_start":159,"line_end":159,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":521993,"byte_end":522002,"line_start":160,"line_end":160,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This methods is no longer significant and will always return 1.\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":522007,"byte_end":522094,"line_start":161,"line_end":161,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":3983},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":522569,"byte_end":522573,"line_start":179,"line_end":179,"column_start":12,"column_end":16},"name":"iter","qualname":"<Point<N, D>>::iter","value":"fn (&self) -> MatrixIter<N, D, U1, <DefaultAllocator as Allocator<N, D>>::Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Iterates through this point coordinates.","sig":null,"attributes":[{"value":"/ Iterates through this point coordinates.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":522174,"byte_end":522218,"line_start":166,"line_end":166,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":522223,"byte_end":522226,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":522231,"byte_end":522244,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":522249,"byte_end":522256,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Point3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":522261,"byte_end":522288,"line_start":170,"line_end":170,"column_start":5,"column_end":32}},{"value":"/ let p = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":522293,"byte_end":522332,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"/ let mut it = p.iter().cloned();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":522337,"byte_end":522372,"line_start":172,"line_end":172,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":522377,"byte_end":522380,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(it.next(), Some(1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":522385,"byte_end":522422,"line_start":174,"line_end":174,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(it.next(), Some(2.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":522427,"byte_end":522464,"line_start":175,"line_end":175,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(it.next(), Some(3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":522469,"byte_end":522506,"line_start":176,"line_end":176,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(it.next(), None);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":522511,"byte_end":522543,"line_start":177,"line_end":177,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":522548,"byte_end":522557,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3984},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":522799,"byte_end":522812,"line_start":185,"line_end":185,"column_start":19,"column_end":32},"name":"get_unchecked","qualname":"<Point<N, D>>::get_unchecked","value":"fn (&self, i: usize) -> &N","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to i-th element of this point without bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets a reference to i-th element of this point without bound-checking.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":522692,"byte_end":522766,"line_start":183,"line_end":183,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":522771,"byte_end":522780,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3985},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":523219,"byte_end":523227,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Point<N, D>>::iter_mut","value":"fn (&mut self) -> MatrixIterMut<N, D, U1, <DefaultAllocator as Allocator<N, D>>::Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Mutably iterates through this point coordinates.","sig":null,"attributes":[{"value":"/ Mutably iterates through this point coordinates.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":522887,"byte_end":522939,"line_start":189,"line_end":189,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":522944,"byte_end":522947,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":522952,"byte_end":522965,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":522970,"byte_end":522977,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Point3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":522982,"byte_end":523009,"line_start":193,"line_end":193,"column_start":5,"column_end":32}},{"value":"/ let mut p = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":523014,"byte_end":523057,"line_start":194,"line_end":194,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":523062,"byte_end":523065,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ for e in p.iter_mut() {","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":523070,"byte_end":523097,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/     *e *= 10.0;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":523102,"byte_end":523121,"line_start":197,"line_end":197,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":523126,"byte_end":523131,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":523136,"byte_end":523139,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p, Point3::new(10.0, 20.0, 30.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":523144,"byte_end":523193,"line_start":200,"line_end":200,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":523198,"byte_end":523207,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3986},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":523487,"byte_end":523504,"line_start":210,"line_end":210,"column_start":19,"column_end":36},"name":"get_unchecked_mut","qualname":"<Point<N, D>>::get_unchecked_mut","value":"fn (&mut self, i: usize) -> &mut N","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to i-th element of this point without bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to i-th element of this point without bound-checking.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":523372,"byte_end":523454,"line_start":208,"line_end":208,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":523459,"byte_end":523468,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3987},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":523669,"byte_end":523683,"line_start":216,"line_end":216,"column_start":19,"column_end":33},"name":"swap_unchecked","qualname":"<Point<N, D>>::swap_unchecked","value":"fn (&mut self, i1: usize, i2: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Swaps two entries without bound-checking.\n","sig":null,"attributes":[{"value":"/ Swaps two entries without bound-checking.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":523591,"byte_end":523636,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":523641,"byte_end":523650,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4022},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":526229,"byte_end":526232,"line_start":328,"line_end":328,"column_start":12,"column_end":15},"name":"inf","qualname":"<Point<N, D>>::inf","value":"fn (&self, other: &Self) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the infimum (aka. componentwise min) of two points.\n","sig":null,"attributes":[{"value":"/ Computes the infimum (aka. componentwise min) of two points.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":526139,"byte_end":526203,"line_start":326,"line_end":326,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":526208,"byte_end":526217,"line_start":327,"line_end":327,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4023},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":526419,"byte_end":526422,"line_start":334,"line_end":334,"column_start":12,"column_end":15},"name":"sup","qualname":"<Point<N, D>>::sup","value":"fn (&self, other: &Self) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the supremum (aka. componentwise max) of two points.\n","sig":null,"attributes":[{"value":"/ Computes the supremum (aka. componentwise max) of two points.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":526328,"byte_end":526393,"line_start":332,"line_end":332,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":526398,"byte_end":526407,"line_start":333,"line_end":333,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4024},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":526595,"byte_end":526602,"line_start":340,"line_end":340,"column_start":12,"column_end":19},"name":"inf_sup","qualname":"<Point<N, D>>::inf_sup","value":"fn (&self, other: &Self) -> (Point<N, D>, Point<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Computes the (infimum, supremum) of two points.\n","sig":null,"attributes":[{"value":"/ Computes the (infimum, supremum) of two points.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":526518,"byte_end":526569,"line_start":338,"line_end":338,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":526574,"byte_end":526583,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":4038},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alias.rs","byte_start":527330,"byte_end":527336,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"Point1","qualname":"::geometry::point_alias::Point1","value":"Point<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 1-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 1-dimensional column point.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alias.rs","byte_start":527270,"byte_end":527320,"line_start":5,"line_end":5,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":4040},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alias.rs","byte_start":527416,"byte_end":527422,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"Point2","qualname":"::geometry::point_alias::Point2","value":"Point<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 2-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 2-dimensional column point.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alias.rs","byte_start":527356,"byte_end":527406,"line_start":7,"line_end":7,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":4042},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alias.rs","byte_start":527502,"byte_end":527508,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"Point3","qualname":"::geometry::point_alias::Point3","value":"Point<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 3-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 3-dimensional column point.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alias.rs","byte_start":527442,"byte_end":527492,"line_start":9,"line_end":9,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":4044},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alias.rs","byte_start":527588,"byte_end":527594,"line_start":12,"line_end":12,"column_start":10,"column_end":16},"name":"Point4","qualname":"::geometry::point_alias::Point4","value":"Point<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 4-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 4-dimensional column point.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alias.rs","byte_start":527528,"byte_end":527578,"line_start":11,"line_end":11,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":4046},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alias.rs","byte_start":527674,"byte_end":527680,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"name":"Point5","qualname":"::geometry::point_alias::Point5","value":"Point<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 5-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 5-dimensional column point.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alias.rs","byte_start":527614,"byte_end":527664,"line_start":13,"line_end":13,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":4048},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alias.rs","byte_start":527760,"byte_end":527766,"line_start":16,"line_end":16,"column_start":10,"column_end":16},"name":"Point6","qualname":"::geometry::point_alias::Point6","value":"Point<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 6-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 6-dimensional column point.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_alias.rs","byte_start":527700,"byte_end":527750,"line_start":15,"line_end":15,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4079},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":528369,"byte_end":528386,"line_start":21,"line_end":21,"column_start":19,"column_end":36},"name":"new_uninitialized","qualname":"<Point<N, D>>::new_uninitialized","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point with uninitialized coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new point with uninitialized coordinates.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":528281,"byte_end":528336,"line_start":19,"line_end":19,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":528341,"byte_end":528350,"line_start":20,"line_end":20,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4080},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529015,"byte_end":529021,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"origin","qualname":"<Point<N, D>>::origin","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point with all coordinates equal to zero.","sig":null,"attributes":[{"value":"/ Creates a new point with all coordinates equal to zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":528459,"byte_end":528518,"line_start":25,"line_end":25,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":528523,"byte_end":528526,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":528531,"byte_end":528544,"line_start":27,"line_end":27,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":528549,"byte_end":528552,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":528557,"byte_end":528564,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":528569,"byte_end":528606,"line_start":30,"line_end":30,"column_start":5,"column_end":42}},{"value":"/ // This works in any dimension.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":528611,"byte_end":528646,"line_start":31,"line_end":31,"column_start":5,"column_end":40}},{"value":"/ // The explicit crate::<f32> type annotation may not always be needed,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":528651,"byte_end":528725,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ // depending on the context of type inference.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":528730,"byte_end":528780,"line_start":33,"line_end":33,"column_start":5,"column_end":55}},{"value":"/ let pt = Point2::<f32>::origin();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":528785,"byte_end":528822,"line_start":34,"line_end":34,"column_start":5,"column_end":42}},{"value":"/ assert!(pt.x == 0.0 && pt.y == 0.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":528827,"byte_end":528867,"line_start":35,"line_end":35,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":528872,"byte_end":528875,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let pt = Point3::<f32>::origin();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":528880,"byte_end":528917,"line_start":37,"line_end":37,"column_start":5,"column_end":42}},{"value":"/ assert!(pt.x == 0.0 && pt.y == 0.0 && pt.z == 0.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":528922,"byte_end":528977,"line_start":38,"line_end":38,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":528982,"byte_end":528989,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":528994,"byte_end":529003,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4081},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529538,"byte_end":529548,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Point<N, D>>::from_slice","value":"fn (components: &[N]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point from a slice.","sig":null,"attributes":[{"value":"/ Creates a new point from a slice.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529129,"byte_end":529166,"line_start":48,"line_end":48,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529171,"byte_end":529174,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529179,"byte_end":529192,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529197,"byte_end":529200,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529205,"byte_end":529212,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529217,"byte_end":529254,"line_start":53,"line_end":53,"column_start":5,"column_end":42}},{"value":"/ let data = [ 1.0, 2.0, 3.0 ];","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529259,"byte_end":529292,"line_start":54,"line_end":54,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529297,"byte_end":529300,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let pt = Point2::from_slice(&data[..2]);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529305,"byte_end":529349,"line_start":56,"line_end":56,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(pt, Point2::new(1.0, 2.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529354,"byte_end":529396,"line_start":57,"line_end":57,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529401,"byte_end":529404,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ let pt = Point3::from_slice(&data);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529409,"byte_end":529448,"line_start":59,"line_end":59,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(pt, Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529453,"byte_end":529500,"line_start":60,"line_end":60,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529505,"byte_end":529512,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529517,"byte_end":529526,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4082},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":530905,"byte_end":530921,"line_start":98,"line_end":98,"column_start":12,"column_end":28},"name":"from_homogeneous","qualname":"<Point<N, D>>::from_homogeneous","value":"fn (v: VectorN<N, DimNameSum<D, U1>>) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point from its homogeneous vector representation.","sig":null,"attributes":[{"value":"/ Creates a new point from its homogeneous vector representation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529644,"byte_end":529711,"line_start":67,"line_end":67,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529716,"byte_end":529719,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ In practice, this builds a D-dimensional points with the same first D component as `v`","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529724,"byte_end":529814,"line_start":69,"line_end":69,"column_start":5,"column_end":95}},{"value":"/ divided by the last component of `v`. Returns `None` if this divisor is zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529819,"byte_end":529900,"line_start":70,"line_end":70,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529905,"byte_end":529908,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529913,"byte_end":529926,"line_start":72,"line_end":72,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529931,"byte_end":529934,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529939,"byte_end":529946,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3, Vector3, Vector4};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":529951,"byte_end":530006,"line_start":75,"line_end":75,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":530011,"byte_end":530014,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let coords = Vector4::new(1.0, 2.0, 3.0, 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":530019,"byte_end":530069,"line_start":77,"line_end":77,"column_start":5,"column_end":55}},{"value":"/ let pt = Point3::from_homogeneous(coords);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":530074,"byte_end":530120,"line_start":78,"line_end":78,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(pt, Some(Point3::new(1.0, 2.0, 3.0)));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":530125,"byte_end":530178,"line_start":79,"line_end":79,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":530183,"byte_end":530186,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ // All component of the result will be divided by the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":530191,"byte_end":530248,"line_start":81,"line_end":81,"column_start":5,"column_end":62}},{"value":"/ // last component of the vector, here 2.0.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":530253,"byte_end":530300,"line_start":82,"line_end":82,"column_start":5,"column_end":51}},{"value":"/ let coords = Vector4::new(1.0, 2.0, 3.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":530305,"byte_end":530355,"line_start":83,"line_end":83,"column_start":5,"column_end":55}},{"value":"/ let pt = Point3::from_homogeneous(coords);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":530360,"byte_end":530406,"line_start":84,"line_end":84,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(pt, Some(Point3::new(0.5, 1.0, 1.5)));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":530411,"byte_end":530464,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":530469,"byte_end":530472,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ // Fails because the last component is zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":530477,"byte_end":530525,"line_start":87,"line_end":87,"column_start":5,"column_end":53}},{"value":"/ let coords = Vector4::new(1.0, 2.0, 3.0, 0.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":530530,"byte_end":530580,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/ let pt = Point3::from_homogeneous(coords);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":530585,"byte_end":530631,"line_start":89,"line_end":89,"column_start":5,"column_end":51}},{"value":"/ assert!(pt.is_none());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":530636,"byte_end":530662,"line_start":90,"line_end":90,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":530667,"byte_end":530670,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ // Works also in other dimensions.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":530675,"byte_end":530713,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/ let coords = Vector3::new(1.0, 2.0, 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":530718,"byte_end":530763,"line_start":93,"line_end":93,"column_start":5,"column_end":50}},{"value":"/ let pt = Point2::from_homogeneous(coords);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":530768,"byte_end":530814,"line_start":94,"line_end":94,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(pt, Some(Point2::new(1.0, 2.0)));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":530819,"byte_end":530867,"line_start":95,"line_end":95,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":530872,"byte_end":530879,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":530884,"byte_end":530893,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":17647},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":552532,"byte_end":552540,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"Rotation","qualname":"::geometry::rotation::Rotation","value":"Rotation {  }","parent":null,"children":[{"krate":0,"index":17650}],"decl_id":null,"docs":" A rotation matrix.\n","sig":null,"attributes":[{"value":"/ A rotation matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":552470,"byte_end":552492,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":552493,"byte_end":552503,"line_start":26,"line_end":26,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":4318},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":555562,"byte_end":555568,"line_start":137,"line_end":137,"column_start":12,"column_end":18},"name":"matrix","qualname":"<Rotation<N, D>>::matrix","value":"fn (&self) -> &MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the underlying matrix representation of this rotation.","sig":null,"attributes":[{"value":"/ A reference to the underlying matrix representation of this rotation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":554758,"byte_end":554831,"line_start":118,"line_end":118,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":554836,"byte_end":554839,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":554844,"byte_end":554857,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":554862,"byte_end":554869,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3, Matrix2, Matrix3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":554874,"byte_end":554944,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":554949,"byte_end":554968,"line_start":123,"line_end":123,"column_start":5,"column_end":24}},{"value":"/ let rot = Rotation3::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":554973,"byte_end":555058,"line_start":124,"line_end":124,"column_start":5,"column_end":90}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":555063,"byte_end":555121,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":555126,"byte_end":555184,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":555189,"byte_end":555248,"line_start":127,"line_end":127,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(*rot.matrix(), expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":555253,"byte_end":555293,"line_start":128,"line_end":128,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":555298,"byte_end":555301,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":555306,"byte_end":555309,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":555314,"byte_end":555367,"line_start":131,"line_end":131,"column_start":5,"column_end":58}},{"value":"/ let expected = Matrix2::new(0.8660254, -0.5,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":555372,"byte_end":555420,"line_start":132,"line_end":132,"column_start":5,"column_end":53}},{"value":"/                             0.5,       0.8660254);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":555425,"byte_end":555479,"line_start":133,"line_end":133,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(*rot.matrix(), expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":555484,"byte_end":555524,"line_start":134,"line_end":134,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":555529,"byte_end":555536,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":555541,"byte_end":555550,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4319},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":555809,"byte_end":555819,"line_start":144,"line_end":144,"column_start":19,"column_end":29},"name":"matrix_mut","qualname":"<Rotation<N, D>>::matrix_mut","value":"fn (&mut self) -> &mut MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" A mutable reference to the underlying matrix representation of this rotation.\n","sig":null,"attributes":[{"value":"/ A mutable reference to the underlying matrix representation of this rotation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":555628,"byte_end":555709,"line_start":141,"line_end":141,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":555714,"byte_end":555723,"line_start":142,"line_end":142,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"Use `.matrix_mut_unchecked()` instead.\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":555728,"byte_end":555790,"line_start":143,"line_end":143,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":4320},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":556258,"byte_end":556278,"line_start":154,"line_end":154,"column_start":12,"column_end":32},"name":"matrix_mut_unchecked","qualname":"<Rotation<N, D>>::matrix_mut_unchecked","value":"fn (&mut self) -> &mut MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" A mutable reference to the underlying matrix representation of this rotation.","sig":null,"attributes":[{"value":"/ A mutable reference to the underlying matrix representation of this rotation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":555891,"byte_end":555972,"line_start":148,"line_end":148,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":555977,"byte_end":555980,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ This is suffixed by \"_unchecked\" because this allows the user to replace the matrix by another one that is","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":555985,"byte_end":556095,"line_start":150,"line_end":150,"column_start":5,"column_end":115}},{"value":"/ non-square, non-inversible, or non-orthonormal. If one of those properties is broken,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":556100,"byte_end":556189,"line_start":151,"line_end":151,"column_start":5,"column_end":94}},{"value":"/ subsequent method calls may be UB.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":556194,"byte_end":556232,"line_start":152,"line_end":152,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":556237,"byte_end":556246,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4321},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":557167,"byte_end":557177,"line_start":179,"line_end":179,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Rotation<N, D>>::into_inner","value":"fn (self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the underlying matrix.","sig":null,"attributes":[{"value":"/ Unwraps the underlying matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":556350,"byte_end":556384,"line_start":158,"line_end":158,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":556389,"byte_end":556392,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":556397,"byte_end":556410,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":556415,"byte_end":556422,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3, Matrix2, Matrix3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":556427,"byte_end":556497,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":556502,"byte_end":556521,"line_start":163,"line_end":163,"column_start":5,"column_end":24}},{"value":"/ let rot = Rotation3::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":556526,"byte_end":556611,"line_start":164,"line_end":164,"column_start":5,"column_end":90}},{"value":"/ let mat = rot.into_inner();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":556616,"byte_end":556647,"line_start":165,"line_end":165,"column_start":5,"column_end":36}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":556652,"byte_end":556710,"line_start":166,"line_end":166,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":556715,"byte_end":556773,"line_start":167,"line_end":167,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":556778,"byte_end":556837,"line_start":168,"line_end":168,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(mat, expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":556842,"byte_end":556872,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":556877,"byte_end":556880,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":556885,"byte_end":556888,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":556893,"byte_end":556946,"line_start":172,"line_end":172,"column_start":5,"column_end":58}},{"value":"/ let mat = rot.into_inner();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":556951,"byte_end":556982,"line_start":173,"line_end":173,"column_start":5,"column_end":36}},{"value":"/ let expected = Matrix2::new(0.8660254, -0.5,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":556987,"byte_end":557035,"line_start":174,"line_end":174,"column_start":5,"column_end":53}},{"value":"/                             0.5,       0.8660254);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":557040,"byte_end":557094,"line_start":175,"line_end":175,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(mat, expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":557099,"byte_end":557129,"line_start":176,"line_end":176,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":557134,"byte_end":557141,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":557146,"byte_end":557155,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4322},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":557406,"byte_end":557412,"line_start":187,"line_end":187,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Rotation<N, D>>::unwrap","value":"fn (self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the underlying matrix.\n Deprecated: Use [Rotation::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Unwraps the underlying matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":557234,"byte_end":557268,"line_start":183,"line_end":183,"column_start":5,"column_end":39}},{"value":"/ Deprecated: Use [Rotation::into_inner] instead.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":557273,"byte_end":557324,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":557329,"byte_end":557380,"line_start":185,"line_end":185,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":557385,"byte_end":557394,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4323},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":558507,"byte_end":558521,"line_start":214,"line_end":214,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Rotation<N, D>>::to_homogeneous","value":"fn (&self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this rotation into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this rotation into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":557469,"byte_end":557550,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":557555,"byte_end":557558,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This is the same as `self.into()`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":557563,"byte_end":557601,"line_start":193,"line_end":193,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":557606,"byte_end":557609,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":557614,"byte_end":557627,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":557632,"byte_end":557639,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3, Matrix3, Matrix4};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":557644,"byte_end":557714,"line_start":197,"line_end":197,"column_start":5,"column_end":75}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":557719,"byte_end":557738,"line_start":198,"line_end":198,"column_start":5,"column_end":24}},{"value":"/ let rot = Rotation3::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":557743,"byte_end":557828,"line_start":199,"line_end":199,"column_start":5,"column_end":90}},{"value":"/ let expected = Matrix4::new(0.8660254, -0.5,      0.0, 0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":557833,"byte_end":557896,"line_start":200,"line_end":200,"column_start":5,"column_end":68}},{"value":"/                             0.5,       0.8660254, 0.0, 0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":557901,"byte_end":557964,"line_start":201,"line_end":201,"column_start":5,"column_end":68}},{"value":"/                             0.0,       0.0,       1.0, 0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":557969,"byte_end":558032,"line_start":202,"line_end":202,"column_start":5,"column_end":68}},{"value":"/                             0.0,       0.0,       0.0, 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":558037,"byte_end":558101,"line_start":203,"line_end":203,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(rot.to_homogeneous(), expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":558106,"byte_end":558153,"line_start":204,"line_end":204,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":558158,"byte_end":558161,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":558166,"byte_end":558169,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":558174,"byte_end":558227,"line_start":207,"line_end":207,"column_start":5,"column_end":58}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":558232,"byte_end":558290,"line_start":208,"line_end":208,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":558295,"byte_end":558353,"line_start":209,"line_end":209,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":558358,"byte_end":558417,"line_start":210,"line_end":210,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(rot.to_homogeneous(), expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":558422,"byte_end":558469,"line_start":211,"line_end":211,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":558474,"byte_end":558481,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":558486,"byte_end":558495,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4324},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":559896,"byte_end":559917,"line_start":252,"line_end":252,"column_start":12,"column_end":33},"name":"from_matrix_unchecked","qualname":"<Rotation<N, D>>::from_matrix_unchecked","value":"fn (matrix: MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new rotation from the given square matrix.","sig":null,"attributes":[{"value":"/ Creates a new rotation from the given square matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":559094,"byte_end":559150,"line_start":229,"line_end":229,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":559155,"byte_end":559158,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The matrix squareness is checked but not its orthonormality.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":559163,"byte_end":559227,"line_start":231,"line_end":231,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":559232,"byte_end":559235,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":559240,"byte_end":559253,"line_start":233,"line_end":233,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":559258,"byte_end":559265,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Matrix2, Matrix3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":559270,"byte_end":559331,"line_start":235,"line_end":235,"column_start":5,"column_end":66}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":559336,"byte_end":559355,"line_start":236,"line_end":236,"column_start":5,"column_end":24}},{"value":"/ let mat = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":559360,"byte_end":559413,"line_start":237,"line_end":237,"column_start":5,"column_end":58}},{"value":"/                        0.5,       0.8660254, 0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":559418,"byte_end":559471,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/                        0.0,       0.0,       1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":559476,"byte_end":559530,"line_start":239,"line_end":239,"column_start":5,"column_end":59}},{"value":"/ let rot = Rotation3::from_matrix_unchecked(mat);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":559535,"byte_end":559587,"line_start":240,"line_end":240,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":559592,"byte_end":559595,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*rot.matrix(), mat);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":559600,"byte_end":559635,"line_start":242,"line_end":242,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":559640,"byte_end":559643,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":559648,"byte_end":559651,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ let mat = Matrix2::new(0.8660254, -0.5,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":559656,"byte_end":559699,"line_start":245,"line_end":245,"column_start":5,"column_end":48}},{"value":"/                        0.5,       0.8660254);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":559704,"byte_end":559753,"line_start":246,"line_end":246,"column_start":5,"column_end":54}},{"value":"/ let rot = Rotation2::from_matrix_unchecked(mat);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":559758,"byte_end":559810,"line_start":247,"line_end":247,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":559815,"byte_end":559818,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*rot.matrix(), mat);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":559823,"byte_end":559858,"line_start":249,"line_end":249,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":559863,"byte_end":559870,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":559875,"byte_end":559884,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4325},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":560997,"byte_end":561006,"line_start":281,"line_end":281,"column_start":12,"column_end":21},"name":"transpose","qualname":"<Rotation<N, D>>::transpose","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Transposes `self`.","sig":null,"attributes":[{"value":"/ Transposes `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":560123,"byte_end":560145,"line_start":261,"line_end":261,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":560150,"byte_end":560153,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Same as `.inverse()` because the inverse of a rotation matrix is its transform.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":560158,"byte_end":560241,"line_start":263,"line_end":263,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":560246,"byte_end":560249,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":560254,"byte_end":560267,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":560272,"byte_end":560279,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":560284,"byte_end":560323,"line_start":267,"line_end":267,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":560328,"byte_end":560380,"line_start":268,"line_end":268,"column_start":5,"column_end":57}},{"value":"/ let rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":560385,"byte_end":560443,"line_start":269,"line_end":269,"column_start":5,"column_end":63}},{"value":"/ let tr_rot = rot.transpose();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":560448,"byte_end":560481,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/ assert_relative_eq!(rot * tr_rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":560486,"byte_end":560565,"line_start":271,"line_end":271,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(tr_rot * rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":560570,"byte_end":560649,"line_start":272,"line_end":272,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":560654,"byte_end":560657,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(1.2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":560662,"byte_end":560696,"line_start":274,"line_end":274,"column_start":5,"column_end":39}},{"value":"/ let tr_rot = rot.transpose();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":560701,"byte_end":560734,"line_start":275,"line_end":275,"column_start":5,"column_end":38}},{"value":"/ assert_relative_eq!(rot * tr_rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":560739,"byte_end":560818,"line_start":276,"line_end":276,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(tr_rot * rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":560823,"byte_end":560902,"line_start":277,"line_end":277,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":560907,"byte_end":560914,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":560919,"byte_end":560928,"line_start":279,"line_end":279,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use transpose_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":560933,"byte_end":560985,"line_start":280,"line_end":280,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4326},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":561945,"byte_end":561952,"line_start":305,"line_end":305,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Rotation<N, D>>::inverse","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self`.","sig":null,"attributes":[{"value":"/ Inverts `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":561096,"byte_end":561115,"line_start":285,"line_end":285,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":561120,"byte_end":561123,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ Same as `.transpose()` because the inverse of a rotation matrix is its transform.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":561128,"byte_end":561213,"line_start":287,"line_end":287,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":561218,"byte_end":561221,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":561226,"byte_end":561239,"line_start":289,"line_end":289,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":561244,"byte_end":561251,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":561256,"byte_end":561295,"line_start":291,"line_end":291,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":561300,"byte_end":561352,"line_start":292,"line_end":292,"column_start":5,"column_end":57}},{"value":"/ let rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":561357,"byte_end":561415,"line_start":293,"line_end":293,"column_start":5,"column_end":63}},{"value":"/ let inv = rot.inverse();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":561420,"byte_end":561448,"line_start":294,"line_end":294,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(rot * inv, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":561453,"byte_end":561529,"line_start":295,"line_end":295,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(inv * rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":561534,"byte_end":561610,"line_start":296,"line_end":296,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":561615,"byte_end":561618,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(1.2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":561623,"byte_end":561657,"line_start":298,"line_end":298,"column_start":5,"column_end":39}},{"value":"/ let inv = rot.inverse();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":561662,"byte_end":561690,"line_start":299,"line_end":299,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(rot * inv, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":561695,"byte_end":561771,"line_start":300,"line_end":300,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(inv * rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":561776,"byte_end":561852,"line_start":301,"line_end":301,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":561857,"byte_end":561864,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":561869,"byte_end":561878,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":561883,"byte_end":561933,"line_start":304,"line_end":304,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4327},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":562956,"byte_end":562969,"line_start":332,"line_end":332,"column_start":12,"column_end":25},"name":"transpose_mut","qualname":"<Rotation<N, D>>::transpose_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Transposes `self` in-place.","sig":null,"attributes":[{"value":"/ Transposes `self` in-place.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":562006,"byte_end":562037,"line_start":309,"line_end":309,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":562042,"byte_end":562045,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Same as `.inverse_mut()` because the inverse of a rotation matrix is its transform.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":562050,"byte_end":562137,"line_start":311,"line_end":311,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":562142,"byte_end":562145,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":562150,"byte_end":562163,"line_start":313,"line_end":313,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":562168,"byte_end":562175,"line_start":314,"line_end":314,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":562180,"byte_end":562219,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":562224,"byte_end":562276,"line_start":316,"line_end":316,"column_start":5,"column_end":57}},{"value":"/ let rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":562281,"byte_end":562339,"line_start":317,"line_end":317,"column_start":5,"column_end":63}},{"value":"/ let mut tr_rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":562344,"byte_end":562409,"line_start":318,"line_end":318,"column_start":5,"column_end":70}},{"value":"/ tr_rot.transpose_mut();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":562414,"byte_end":562441,"line_start":319,"line_end":319,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":562446,"byte_end":562449,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * tr_rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":562454,"byte_end":562533,"line_start":321,"line_end":321,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(tr_rot * rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":562538,"byte_end":562617,"line_start":322,"line_end":322,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":562622,"byte_end":562625,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(1.2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":562630,"byte_end":562664,"line_start":324,"line_end":324,"column_start":5,"column_end":39}},{"value":"/ let mut tr_rot = Rotation2::new(1.2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":562669,"byte_end":562710,"line_start":325,"line_end":325,"column_start":5,"column_end":46}},{"value":"/ tr_rot.transpose_mut();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":562715,"byte_end":562742,"line_start":326,"line_end":326,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":562747,"byte_end":562750,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * tr_rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":562755,"byte_end":562834,"line_start":328,"line_end":328,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(tr_rot * rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":562839,"byte_end":562918,"line_start":329,"line_end":329,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":562923,"byte_end":562930,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":562935,"byte_end":562944,"line_start":331,"line_end":331,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4328},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":563951,"byte_end":563962,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Rotation<N, D>>::inverse_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self` in-place.","sig":null,"attributes":[{"value":"/ Inverts `self` in-place.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":563030,"byte_end":563058,"line_start":336,"line_end":336,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":563063,"byte_end":563066,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ Same as `.transpose_mut()` because the inverse of a rotation matrix is its transform.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":563071,"byte_end":563160,"line_start":338,"line_end":338,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":563165,"byte_end":563168,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":563173,"byte_end":563186,"line_start":340,"line_end":340,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":563191,"byte_end":563198,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":563203,"byte_end":563242,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":563247,"byte_end":563299,"line_start":343,"line_end":343,"column_start":5,"column_end":57}},{"value":"/ let rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":563304,"byte_end":563362,"line_start":344,"line_end":344,"column_start":5,"column_end":63}},{"value":"/ let mut inv = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":563367,"byte_end":563429,"line_start":345,"line_end":345,"column_start":5,"column_end":67}},{"value":"/ inv.inverse_mut();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":563434,"byte_end":563456,"line_start":346,"line_end":346,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":563461,"byte_end":563464,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * inv, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":563469,"byte_end":563545,"line_start":348,"line_end":348,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(inv * rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":563550,"byte_end":563626,"line_start":349,"line_end":349,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":563631,"byte_end":563634,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(1.2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":563639,"byte_end":563673,"line_start":351,"line_end":351,"column_start":5,"column_end":39}},{"value":"/ let mut inv = Rotation2::new(1.2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":563678,"byte_end":563716,"line_start":352,"line_end":352,"column_start":5,"column_end":43}},{"value":"/ inv.inverse_mut();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":563721,"byte_end":563743,"line_start":353,"line_end":353,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":563748,"byte_end":563751,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * inv, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":563756,"byte_end":563832,"line_start":355,"line_end":355,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(inv * rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":563837,"byte_end":563913,"line_start":356,"line_end":356,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":563918,"byte_end":563925,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":563930,"byte_end":563939,"line_start":358,"line_end":358,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4332},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564745,"byte_end":564760,"line_start":384,"line_end":384,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Rotation<N, D>>::transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given point.","sig":null,"attributes":[{"value":"/ Rotate the given point.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564167,"byte_end":564194,"line_start":369,"line_end":369,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564199,"byte_end":564202,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564207,"byte_end":564262,"line_start":371,"line_end":371,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564267,"byte_end":564270,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564275,"byte_end":564288,"line_start":373,"line_end":373,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564293,"byte_end":564300,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564305,"byte_end":564344,"line_start":375,"line_end":375,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564349,"byte_end":564368,"line_start":376,"line_end":376,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Point3, Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564373,"byte_end":564449,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ let rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564454,"byte_end":564522,"line_start":378,"line_end":378,"column_start":5,"column_end":73}},{"value":"/ let transformed_point = rot.transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564527,"byte_end":564604,"line_start":379,"line_end":379,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564609,"byte_end":564612,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564617,"byte_end":564707,"line_start":381,"line_end":381,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564712,"byte_end":564719,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564724,"byte_end":564733,"line_start":383,"line_end":383,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4333},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":565407,"byte_end":565423,"line_start":403,"line_end":403,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Rotation<N, D>>::transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector.","sig":null,"attributes":[{"value":"/ Rotate the given vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564832,"byte_end":564860,"line_start":388,"line_end":388,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564865,"byte_end":564868,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564873,"byte_end":564927,"line_start":390,"line_end":390,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564932,"byte_end":564935,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564940,"byte_end":564953,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564958,"byte_end":564965,"line_start":393,"line_end":393,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564970,"byte_end":565009,"line_start":394,"line_end":394,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":565014,"byte_end":565033,"line_start":395,"line_end":395,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":565038,"byte_end":565106,"line_start":396,"line_end":396,"column_start":5,"column_end":73}},{"value":"/ let rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":565111,"byte_end":565179,"line_start":397,"line_end":397,"column_start":5,"column_end":73}},{"value":"/ let transformed_vector = rot.transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":565184,"byte_end":565264,"line_start":398,"line_end":398,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":565269,"byte_end":565272,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":565277,"byte_end":565369,"line_start":400,"line_end":400,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":565374,"byte_end":565381,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":565386,"byte_end":565395,"line_start":402,"line_end":402,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4334},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":566150,"byte_end":566173,"line_start":422,"line_end":422,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Rotation<N, D>>::inverse_transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given point by the inverse of this rotation. This may be\n cheaper than inverting the rotation and then transforming the given\n point.","sig":null,"attributes":[{"value":"/ Rotate the given point by the inverse of this rotation. This may be","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":565497,"byte_end":565568,"line_start":407,"line_end":407,"column_start":5,"column_end":76}},{"value":"/ cheaper than inverting the rotation and then transforming the given","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":565573,"byte_end":565644,"line_start":408,"line_end":408,"column_start":5,"column_end":76}},{"value":"/ point.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":565649,"byte_end":565659,"line_start":409,"line_end":409,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":565664,"byte_end":565667,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":565672,"byte_end":565685,"line_start":411,"line_end":411,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":565690,"byte_end":565697,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":565702,"byte_end":565741,"line_start":413,"line_end":413,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":565746,"byte_end":565765,"line_start":414,"line_end":414,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Point3, Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":565770,"byte_end":565846,"line_start":415,"line_end":415,"column_start":5,"column_end":81}},{"value":"/ let rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":565851,"byte_end":565919,"line_start":416,"line_end":416,"column_start":5,"column_end":73}},{"value":"/ let transformed_point = rot.inverse_transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":565924,"byte_end":566009,"line_start":417,"line_end":417,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":566014,"byte_end":566017,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":566022,"byte_end":566112,"line_start":419,"line_end":419,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":566117,"byte_end":566124,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":566129,"byte_end":566138,"line_start":421,"line_end":421,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4335},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":566942,"byte_end":566966,"line_start":441,"line_end":441,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<Rotation<N, D>>::inverse_transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector by the inverse of this rotation. This may be\n cheaper than inverting the rotation and then transforming the given\n vector.","sig":null,"attributes":[{"value":"/ Rotate the given vector by the inverse of this rotation. This may be","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":566290,"byte_end":566362,"line_start":426,"line_end":426,"column_start":5,"column_end":77}},{"value":"/ cheaper than inverting the rotation and then transforming the given","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":566367,"byte_end":566438,"line_start":427,"line_end":427,"column_start":5,"column_end":76}},{"value":"/ vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":566443,"byte_end":566454,"line_start":428,"line_end":428,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":566459,"byte_end":566462,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":566467,"byte_end":566480,"line_start":430,"line_end":430,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":566485,"byte_end":566492,"line_start":431,"line_end":431,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":566497,"byte_end":566536,"line_start":432,"line_end":432,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":566541,"byte_end":566560,"line_start":433,"line_end":433,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":566565,"byte_end":566633,"line_start":434,"line_end":434,"column_start":5,"column_end":73}},{"value":"/ let rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":566638,"byte_end":566706,"line_start":435,"line_end":435,"column_start":5,"column_end":73}},{"value":"/ let transformed_vector = rot.inverse_transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":566711,"byte_end":566799,"line_start":436,"line_end":436,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":566804,"byte_end":566807,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":566812,"byte_end":566904,"line_start":438,"line_end":438,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":566909,"byte_end":566916,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":566921,"byte_end":566930,"line_start":440,"line_end":440,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":4368},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alias.rs","byte_start":569771,"byte_end":569780,"line_start":6,"line_end":6,"column_start":10,"column_end":19},"name":"Rotation2","qualname":"::geometry::rotation_alias::Rotation2","value":"Rotation<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional rotation matrix.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional rotation matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alias.rs","byte_start":569725,"byte_end":569761,"line_start":5,"line_end":5,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":4370},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alias.rs","byte_start":569850,"byte_end":569859,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"Rotation3","qualname":"::geometry::rotation_alias::Rotation3","value":"Rotation<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional rotation matrix.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional rotation matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_alias.rs","byte_start":569804,"byte_end":569840,"line_start":8,"line_end":8,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4389},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_construction.rs","byte_start":570595,"byte_end":570603,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"identity","qualname":"<Rotation<N, D>>::identity","value":"fn () -> Rotation<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new square identity rotation of the given `dimension`.","sig":null,"attributes":[{"value":"/ Creates a new square identity rotation of the given `dimension`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_construction.rs","byte_start":570230,"byte_end":570298,"line_start":16,"line_end":16,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_construction.rs","byte_start":570303,"byte_end":570306,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_construction.rs","byte_start":570311,"byte_end":570324,"line_start":18,"line_end":18,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_construction.rs","byte_start":570329,"byte_end":570336,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_construction.rs","byte_start":570341,"byte_end":570372,"line_start":20,"line_end":20,"column_start":5,"column_end":36}},{"value":"/ let rot1 = Quaternion::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_construction.rs","byte_start":570377,"byte_end":570415,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/ let rot2 = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_construction.rs","byte_start":570420,"byte_end":570471,"line_start":22,"line_end":22,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_construction.rs","byte_start":570476,"byte_end":570479,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(rot1 * rot2, rot2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_construction.rs","byte_start":570484,"byte_end":570518,"line_start":24,"line_end":24,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(rot2 * rot1, rot2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_construction.rs","byte_start":570523,"byte_end":570557,"line_start":25,"line_end":25,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_construction.rs","byte_start":570562,"byte_end":570569,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_construction.rs","byte_start":570574,"byte_end":570583,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4614},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":589602,"byte_end":589605,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<Rotation2<N>>::new","value":"fn (angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 2 dimensional rotation matrix from an angle in radian.","sig":null,"attributes":[{"value":"/ Builds a 2 dimensional rotation matrix from an angle in radian.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":589204,"byte_end":589271,"line_start":25,"line_end":25,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":589276,"byte_end":589279,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":589284,"byte_end":589297,"line_start":27,"line_end":27,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":589302,"byte_end":589305,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":589310,"byte_end":589317,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":589322,"byte_end":589361,"line_start":30,"line_end":30,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":589366,"byte_end":589385,"line_start":31,"line_end":31,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation2, Point2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":589390,"byte_end":589430,"line_start":32,"line_end":32,"column_start":5,"column_end":45}},{"value":"/ let rot = Rotation2::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":589435,"byte_end":589488,"line_start":33,"line_end":33,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":589493,"byte_end":589496,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * Point2::new(3.0, 4.0), Point2::new(-4.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":589501,"byte_end":589578,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":589583,"byte_end":589590,"line_start":36,"line_end":36,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4615},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":590032,"byte_end":590048,"line_start":48,"line_end":48,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<Rotation2<N>>::from_scaled_axis","value":"fn <SB> (axisangle: Vector<N, U1, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 2 dimensional rotation matrix from an angle in radian wrapped in a 1-dimensional vector.","sig":null,"attributes":[{"value":"/ Builds a 2 dimensional rotation matrix from an angle in radian wrapped in a 1-dimensional vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":589755,"byte_end":589856,"line_start":42,"line_end":42,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":589861,"byte_end":589864,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":589869,"byte_end":589872,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":589877,"byte_end":589948,"line_start":45,"line_end":45,"column_start":5,"column_end":76}},{"value":"/ the `::new(angle)` method instead is more common.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":589953,"byte_end":590006,"line_start":46,"line_end":46,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":590011,"byte_end":590020,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4617},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":590503,"byte_end":590514,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<Rotation2<N>>::from_matrix","value":"fn (m: &Matrix2<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":590152,"byte_end":590245,"line_start":52,"line_end":52,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":590250,"byte_end":590253,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This is an iterative method. See `.from_matrix_eps` to provide mover","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":590258,"byte_end":590330,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ convergence parameters and starting solution.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":590335,"byte_end":590384,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":590389,"byte_end":590491,"line_start":56,"line_end":56,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":4618},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":591464,"byte_end":591479,"line_start":76,"line_end":76,"column_start":12,"column_end":27},"name":"from_matrix_eps","qualname":"<Rotation2<N>>::from_matrix_eps","value":"fn (m: &Matrix2<N>, eps: N, mut max_iter: usize, guess: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":590664,"byte_end":590757,"line_start":64,"line_end":64,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":590762,"byte_end":590765,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":590770,"byte_end":590872,"line_start":66,"line_end":66,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":590877,"byte_end":590880,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":590885,"byte_end":590901,"line_start":68,"line_end":68,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":590906,"byte_end":590909,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ * `m`: the matrix from which the rotational part is to be extracted.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":590914,"byte_end":590986,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ * `eps`: the angular errors tolerated between the current rotation and the optimal one.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":590991,"byte_end":591082,"line_start":71,"line_end":71,"column_start":5,"column_end":96}},{"value":"/ * `max_iter`: the maximum number of iterations. Loops indefinitely until convergence if set to `0`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":591087,"byte_end":591190,"line_start":72,"line_end":72,"column_start":5,"column_end":108}},{"value":"/ * `guess`: an estimate of the solution. Convergence will be significantly faster if an initial solution close","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":591195,"byte_end":591308,"line_start":73,"line_end":73,"column_start":5,"column_end":118}},{"value":"/           to the actual solution is provided. Can be set to `Rotation2::identity()` if no other","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":591313,"byte_end":591412,"line_start":74,"line_end":74,"column_start":5,"column_end":104}},{"value":"/           guesses come to mind.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":591417,"byte_end":591452,"line_start":75,"line_end":75,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4619},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":592768,"byte_end":592784,"line_start":116,"line_end":116,"column_start":12,"column_end":28},"name":"rotation_between","qualname":"<Rotation2<N>>::rotation_between","value":"fn <SB, SC> (a: &Vector<N, U2, SB>, b: &Vector<N, U2, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix required to align `a` and `b` but with its angle.","sig":null,"attributes":[{"value":"/ The rotation matrix required to align `a` and `b` but with its angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":592194,"byte_end":592267,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":592272,"byte_end":592275,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This is the rotation `R` such that `(R * a).angle(b) == 0 && (R * a).dot(b).is_positive()`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":592280,"byte_end":592375,"line_start":103,"line_end":103,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":592380,"byte_end":592383,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":592388,"byte_end":592401,"line_start":105,"line_end":105,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":592406,"byte_end":592413,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":592418,"byte_end":592457,"line_start":107,"line_end":107,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, Rotation2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":592462,"byte_end":592503,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/ let a = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":592508,"byte_end":592543,"line_start":109,"line_end":109,"column_start":5,"column_end":40}},{"value":"/ let b = Vector2::new(2.0, 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":592548,"byte_end":592583,"line_start":110,"line_end":110,"column_start":5,"column_end":40}},{"value":"/ let rot = Rotation2::rotation_between(&a, &b);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":592588,"byte_end":592638,"line_start":111,"line_end":111,"column_start":5,"column_end":55}},{"value":"/ assert_relative_eq!(rot * a, b);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":592643,"byte_end":592679,"line_start":112,"line_end":112,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(rot.inverse() * b, a);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":592684,"byte_end":592730,"line_start":113,"line_end":113,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":592735,"byte_end":592742,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":592747,"byte_end":592756,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4622},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":593702,"byte_end":593725,"line_start":140,"line_end":140,"column_start":12,"column_end":35},"name":"scaled_rotation_between","qualname":"<Rotation2<N>>::scaled_rotation_between","value":"fn <SB, SC> (a: &Vector<N, U2, SB>, b: &Vector<N, U2, SC>, s: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":593033,"byte_end":593121,"line_start":125,"line_end":125,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":593126,"byte_end":593165,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":593170,"byte_end":593173,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":593178,"byte_end":593191,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":593196,"byte_end":593203,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":593208,"byte_end":593247,"line_start":130,"line_end":130,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, Rotation2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":593252,"byte_end":593293,"line_start":131,"line_end":131,"column_start":5,"column_end":46}},{"value":"/ let a = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":593298,"byte_end":593333,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/ let b = Vector2::new(2.0, 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":593338,"byte_end":593373,"line_start":133,"line_end":133,"column_start":5,"column_end":40}},{"value":"/ let rot2 = Rotation2::scaled_rotation_between(&a, &b, 0.2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":593378,"byte_end":593441,"line_start":134,"line_end":134,"column_start":5,"column_end":68}},{"value":"/ let rot5 = Rotation2::scaled_rotation_between(&a, &b, 0.5);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":593446,"byte_end":593509,"line_start":135,"line_end":135,"column_start":5,"column_end":68}},{"value":"/ assert_relative_eq!(rot2 * rot2 * rot2 * rot2 * rot2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":593514,"byte_end":593597,"line_start":136,"line_end":136,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(rot5 * rot5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":593602,"byte_end":593664,"line_start":137,"line_end":137,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":593669,"byte_end":593676,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":593681,"byte_end":593690,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4625},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594287,"byte_end":594292,"line_start":163,"line_end":163,"column_start":12,"column_end":17},"name":"angle","qualname":"<Rotation2<N>>::angle","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle.","sig":null,"attributes":[{"value":"/ The rotation angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594021,"byte_end":594044,"line_start":153,"line_end":153,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594049,"byte_end":594052,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594057,"byte_end":594070,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594075,"byte_end":594082,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594087,"byte_end":594126,"line_start":157,"line_end":157,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594131,"byte_end":594161,"line_start":158,"line_end":158,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation2::new(1.78);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594166,"byte_end":594201,"line_start":159,"line_end":159,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(rot.angle(), 1.78);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594206,"byte_end":594249,"line_start":160,"line_end":160,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594254,"byte_end":594261,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594266,"byte_end":594275,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4626},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594739,"byte_end":594747,"line_start":178,"line_end":178,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<Rotation2<N>>::angle_to","value":"fn (&self, other: &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation angle needed to make `self` and `other` coincide.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594382,"byte_end":594448,"line_start":167,"line_end":167,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594453,"byte_end":594456,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594461,"byte_end":594474,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594479,"byte_end":594486,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594491,"byte_end":594530,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594535,"byte_end":594565,"line_start":172,"line_end":172,"column_start":5,"column_end":35}},{"value":"/ let rot1 = Rotation2::new(0.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594570,"byte_end":594605,"line_start":173,"line_end":173,"column_start":5,"column_end":40}},{"value":"/ let rot2 = Rotation2::new(1.7);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594610,"byte_end":594645,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(rot1.angle_to(&rot2), 1.6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594650,"byte_end":594701,"line_start":175,"line_end":175,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594706,"byte_end":594713,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594718,"byte_end":594727,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4627},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":595377,"byte_end":595388,"line_start":198,"line_end":198,"column_start":12,"column_end":23},"name":"rotation_to","qualname":"<Rotation2<N>>::rotation_to","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation matrix needed to make `self` and `other` coincide.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594827,"byte_end":594894,"line_start":182,"line_end":182,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594899,"byte_end":594902,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The result is such that: `self.rotation_to(other) * self == other`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594907,"byte_end":594978,"line_start":184,"line_end":184,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594983,"byte_end":594986,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":594991,"byte_end":595004,"line_start":186,"line_end":186,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":595009,"byte_end":595016,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":595021,"byte_end":595060,"line_start":188,"line_end":188,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":595065,"byte_end":595095,"line_start":189,"line_end":189,"column_start":5,"column_end":35}},{"value":"/ let rot1 = Rotation2::new(0.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":595100,"byte_end":595135,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/ let rot2 = Rotation2::new(1.7);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":595140,"byte_end":595175,"line_start":191,"line_end":191,"column_start":5,"column_end":40}},{"value":"/ let rot_to = rot1.rotation_to(&rot2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":595180,"byte_end":595221,"line_start":192,"line_end":192,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":595226,"byte_end":595229,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot_to * rot1, rot2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":595234,"byte_end":595279,"line_start":194,"line_end":194,"column_start":5,"column_end":50}},{"value":"/ assert_relative_eq!(rot_to.inverse() * rot2, rot1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":595284,"byte_end":595339,"line_start":195,"line_end":195,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":595344,"byte_end":595351,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":595356,"byte_end":595365,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4628},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":595670,"byte_end":595681,"line_start":205,"line_end":205,"column_start":12,"column_end":23},"name":"renormalize","qualname":"<Rotation2<N>>::renormalize","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Ensure this rotation is an orthonormal rotation matrix. This is useful when repeated\n computations might cause the matrix from progressively not being orthonormal anymore.\n","sig":null,"attributes":[{"value":"/ Ensure this rotation is an orthonormal rotation matrix. This is useful when repeated","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":595462,"byte_end":595550,"line_start":202,"line_end":202,"column_start":5,"column_end":93}},{"value":"/ computations might cause the matrix from progressively not being orthonormal anymore.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":595555,"byte_end":595644,"line_start":203,"line_end":203,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":595649,"byte_end":595658,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4629},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":596322,"byte_end":596326,"line_start":227,"line_end":227,"column_start":12,"column_end":16},"name":"powf","qualname":"<Rotation2<N>>::powf","value":"fn (&self, n: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise the quaternion to a given floating power, i.e., returns the rotation with the angle\n of `self` multiplied by `n`.","sig":null,"attributes":[{"value":"/ Raise the quaternion to a given floating power, i.e., returns the rotation with the angle","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":595910,"byte_end":596003,"line_start":215,"line_end":215,"column_start":5,"column_end":98}},{"value":"/ of `self` multiplied by `n`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":596008,"byte_end":596040,"line_start":216,"line_end":216,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":596045,"byte_end":596048,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":596053,"byte_end":596066,"line_start":218,"line_end":218,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":596071,"byte_end":596078,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":596083,"byte_end":596122,"line_start":220,"line_end":220,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":596127,"byte_end":596157,"line_start":221,"line_end":221,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation2::new(0.78);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":596162,"byte_end":596197,"line_start":222,"line_end":222,"column_start":5,"column_end":40}},{"value":"/ let pow = rot.powf(2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":596202,"byte_end":596230,"line_start":223,"line_end":223,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(pow.angle(), 2.0 * 0.78);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":596235,"byte_end":596284,"line_start":224,"line_end":224,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":596289,"byte_end":596296,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":596301,"byte_end":596310,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4630},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":596619,"byte_end":596630,"line_start":236,"line_end":236,"column_start":12,"column_end":23},"name":"scaled_axis","qualname":"<Rotation2<N>>::scaled_axis","value":"fn (&self) -> VectorN<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle returned as a 1-dimensional vector.","sig":null,"attributes":[{"value":"/ The rotation angle returned as a 1-dimensional vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":596397,"byte_end":596455,"line_start":231,"line_end":231,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":596460,"byte_end":596463,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":596468,"byte_end":596539,"line_start":233,"line_end":233,"column_start":5,"column_end":76}},{"value":"/ the `.angle()` method instead is more common.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":596544,"byte_end":596593,"line_start":234,"line_end":234,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":596598,"byte_end":596607,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4638},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":598464,"byte_end":598467,"line_start":297,"line_end":297,"column_start":12,"column_end":15},"name":"new","qualname":"<Rotation3<N>>::new","value":"fn <SB> (axisangle: Vector<N, U3, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3 dimensional rotation matrix from an axis and an angle.","sig":null,"attributes":[{"value":"/ Builds a 3 dimensional rotation matrix from an axis and an angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":597442,"byte_end":597511,"line_start":274,"line_end":274,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":597516,"byte_end":597519,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":597524,"byte_end":597539,"line_start":276,"line_end":276,"column_start":5,"column_end":20}},{"value":"/   * `axisangle` - A vector representing the rotation. Its magnitude is the amount of rotation","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":597544,"byte_end":597641,"line_start":277,"line_end":277,"column_start":5,"column_end":102}},{"value":"/   in radian. Its direction is the axis of rotation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":597646,"byte_end":597701,"line_start":278,"line_end":278,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":597706,"byte_end":597709,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":597714,"byte_end":597727,"line_start":280,"line_end":280,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":597732,"byte_end":597739,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":597744,"byte_end":597783,"line_start":282,"line_end":282,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":597788,"byte_end":597807,"line_start":283,"line_end":283,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Point3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":597812,"byte_end":597861,"line_start":284,"line_end":284,"column_start":5,"column_end":54}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":597866,"byte_end":597924,"line_start":285,"line_end":285,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":597929,"byte_end":597984,"line_start":286,"line_end":286,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":597989,"byte_end":598029,"line_start":287,"line_end":287,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":598034,"byte_end":598076,"line_start":288,"line_end":288,"column_start":5,"column_end":47}},{"value":"/ let rot = Rotation3::new(axisangle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":598081,"byte_end":598121,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":598126,"byte_end":598129,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":598134,"byte_end":598215,"line_start":291,"line_end":291,"column_start":5,"column_end":86}},{"value":"/ assert_relative_eq!(rot * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":598220,"byte_end":598303,"line_start":292,"line_end":292,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":598308,"byte_end":598311,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":598316,"byte_end":598356,"line_start":294,"line_end":294,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Rotation3::new(Vector3::<f32>::zeros()), Rotation3::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":598361,"byte_end":598440,"line_start":295,"line_end":295,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":598445,"byte_end":598452,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4640},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":599040,"byte_end":599051,"line_start":308,"line_end":308,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<Rotation3<N>>::from_matrix","value":"fn (m: &Matrix3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":598689,"byte_end":598782,"line_start":303,"line_end":303,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":598787,"byte_end":598790,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ This is an iterative method. See `.from_matrix_eps` to provide mover","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":598795,"byte_end":598867,"line_start":305,"line_end":305,"column_start":5,"column_end":77}},{"value":"/ convergence parameters and starting solution.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":598872,"byte_end":598921,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":598926,"byte_end":599028,"line_start":307,"line_end":307,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":4641},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":599997,"byte_end":600012,"line_start":327,"line_end":327,"column_start":12,"column_end":27},"name":"from_matrix_eps","qualname":"<Rotation3<N>>::from_matrix_eps","value":"fn (m: &Matrix3<N>, eps: N, mut max_iter: usize, guess: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":599201,"byte_end":599294,"line_start":315,"line_end":315,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":599299,"byte_end":599302,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":599307,"byte_end":599409,"line_start":317,"line_end":317,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":599414,"byte_end":599417,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":599422,"byte_end":599438,"line_start":319,"line_end":319,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":599443,"byte_end":599446,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ * `m`: the matrix from which the rotational part is to be extracted.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":599451,"byte_end":599523,"line_start":321,"line_end":321,"column_start":5,"column_end":77}},{"value":"/ * `eps`: the angular errors tolerated between the current rotation and the optimal one.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":599528,"byte_end":599619,"line_start":322,"line_end":322,"column_start":5,"column_end":96}},{"value":"/ * `max_iter`: the maximum number of iterations. Loops indefinitely until convergence if set to `0`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":599624,"byte_end":599727,"line_start":323,"line_end":323,"column_start":5,"column_end":108}},{"value":"/ * `guess`: a guess of the solution. Convergence will be significantly faster if an initial solution close","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":599732,"byte_end":599841,"line_start":324,"line_end":324,"column_start":5,"column_end":114}},{"value":"/           to the actual solution is provided. Can be set to `Rotation3::identity()` if no other","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":599846,"byte_end":599945,"line_start":325,"line_end":325,"column_start":5,"column_end":104}},{"value":"/           guesses come to mind.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":599950,"byte_end":599985,"line_start":326,"line_end":326,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4642},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":601848,"byte_end":601864,"line_start":378,"line_end":378,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<Rotation3<N>>::from_scaled_axis","value":"fn <SB> (axisangle: Vector<N, U3, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D rotation matrix from an axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Builds a 3D rotation matrix from an axis scaled by the rotation angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":600938,"byte_end":601012,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":601017,"byte_end":601020,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This is the same as `Self::new(axisangle)`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":601025,"byte_end":601072,"line_start":359,"line_end":359,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":601077,"byte_end":601080,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":601085,"byte_end":601098,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":601103,"byte_end":601110,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":601115,"byte_end":601154,"line_start":363,"line_end":363,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":601159,"byte_end":601178,"line_start":364,"line_end":364,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Point3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":601183,"byte_end":601232,"line_start":365,"line_end":365,"column_start":5,"column_end":54}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":601237,"byte_end":601295,"line_start":366,"line_end":366,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":601300,"byte_end":601355,"line_start":367,"line_end":367,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":601360,"byte_end":601400,"line_start":368,"line_end":368,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":601405,"byte_end":601447,"line_start":369,"line_end":369,"column_start":5,"column_end":47}},{"value":"/ let rot = Rotation3::new(axisangle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":601452,"byte_end":601492,"line_start":370,"line_end":370,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":601497,"byte_end":601500,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":601505,"byte_end":601586,"line_start":372,"line_end":372,"column_start":5,"column_end":86}},{"value":"/ assert_relative_eq!(rot * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":601591,"byte_end":601674,"line_start":373,"line_end":373,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":601679,"byte_end":601682,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":601687,"byte_end":601727,"line_start":375,"line_end":375,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Rotation3::from_scaled_axis(Vector3::<f32>::zeros()), Rotation3::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":601732,"byte_end":601824,"line_start":376,"line_end":376,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":601829,"byte_end":601836,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4644},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":602928,"byte_end":602943,"line_start":404,"line_end":404,"column_start":12,"column_end":27},"name":"from_axis_angle","qualname":"<Rotation3<N>>::from_axis_angle","value":"fn <SB> (axis: &Unit<Vector<N, U3, SB>>, angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D rotation matrix from an axis and a rotation angle.","sig":null,"attributes":[{"value":"/ Builds a 3D rotation matrix from an axis and a rotation angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":601965,"byte_end":602031,"line_start":382,"line_end":382,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":602036,"byte_end":602039,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":602044,"byte_end":602057,"line_start":384,"line_end":384,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":602062,"byte_end":602069,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":602074,"byte_end":602113,"line_start":386,"line_end":386,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":602118,"byte_end":602137,"line_start":387,"line_end":387,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Point3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":602142,"byte_end":602191,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/ let axis = Vector3::y_axis();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":602196,"byte_end":602229,"line_start":389,"line_end":389,"column_start":5,"column_end":38}},{"value":"/ let angle = f32::consts::FRAC_PI_2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":602234,"byte_end":602273,"line_start":390,"line_end":390,"column_start":5,"column_end":44}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":602278,"byte_end":602333,"line_start":391,"line_end":391,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":602338,"byte_end":602378,"line_start":392,"line_end":392,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":602383,"byte_end":602425,"line_start":393,"line_end":393,"column_start":5,"column_end":47}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":602430,"byte_end":602485,"line_start":394,"line_end":394,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":602490,"byte_end":602493,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(rot.axis().unwrap(), axis);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":602498,"byte_end":602540,"line_start":396,"line_end":396,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(rot.angle(), angle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":602545,"byte_end":602580,"line_start":397,"line_end":397,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(rot * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":602585,"byte_end":602666,"line_start":398,"line_end":398,"column_start":5,"column_end":86}},{"value":"/ assert_relative_eq!(rot * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":602671,"byte_end":602754,"line_start":399,"line_end":399,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":602759,"byte_end":602762,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":602767,"byte_end":602807,"line_start":401,"line_end":401,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Rotation3::from_scaled_axis(Vector3::<f32>::zeros()), Rotation3::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":602812,"byte_end":602904,"line_start":402,"line_end":402,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":602909,"byte_end":602916,"line_start":403,"line_end":403,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4648},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":604620,"byte_end":604637,"line_start":449,"line_end":449,"column_start":12,"column_end":29},"name":"from_euler_angles","qualname":"<Rotation3<N>>::from_euler_angles","value":"fn (roll: N, pitch: N, yaw: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new rotation from Euler angles.","sig":null,"attributes":[{"value":"/ Creates a new rotation from Euler angles.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":604056,"byte_end":604101,"line_start":435,"line_end":435,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":604106,"byte_end":604109,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ The primitive rotations are applied in order: 1 roll − 2 pitch − 3 yaw.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":604114,"byte_end":604193,"line_start":437,"line_end":437,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":604198,"byte_end":604201,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":604206,"byte_end":604219,"line_start":439,"line_end":439,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":604224,"byte_end":604231,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":604236,"byte_end":604275,"line_start":441,"line_end":441,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":604280,"byte_end":604310,"line_start":442,"line_end":442,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation3::from_euler_angles(0.1, 0.2, 0.3);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":604315,"byte_end":604373,"line_start":443,"line_end":443,"column_start":5,"column_end":63}},{"value":"/ let euler = rot.euler_angles();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":604378,"byte_end":604413,"line_start":444,"line_end":444,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(euler.0, 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":604418,"byte_end":604474,"line_start":445,"line_end":445,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.1, 0.2, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":604479,"byte_end":604535,"line_start":446,"line_end":446,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.2, 0.3, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":604540,"byte_end":604596,"line_start":447,"line_end":447,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":604601,"byte_end":604608,"line_start":448,"line_end":448,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4649},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":605329,"byte_end":605344,"line_start":471,"line_end":471,"column_start":12,"column_end":27},"name":"to_euler_angles","qualname":"<Rotation3<N>>::to_euler_angles","value":"fn (&self) -> (N, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Creates Euler angles from a rotation.","sig":null,"attributes":[{"value":"/ Creates Euler angles from a rotation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":605134,"byte_end":605175,"line_start":467,"line_end":467,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":605180,"byte_end":605183,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ The angles are produced in the form (roll, pitch, yaw).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":605188,"byte_end":605247,"line_start":469,"line_end":469,"column_start":5,"column_end":64}},{"value":"deprecated(note = \"This is renamed to use `.euler_angles()`.\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":605252,"byte_end":605317,"line_start":470,"line_end":470,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4650},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":606005,"byte_end":606017,"line_start":492,"line_end":492,"column_start":12,"column_end":24},"name":"euler_angles","qualname":"<Rotation3<N>>::euler_angles","value":"fn (&self) -> (N, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Euler angles corresponding to this rotation from a rotation.","sig":null,"attributes":[{"value":"/ Euler angles corresponding to this rotation from a rotation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":605442,"byte_end":605506,"line_start":478,"line_end":478,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":605511,"byte_end":605514,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ The angles are produced in the form (roll, pitch, yaw).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":605519,"byte_end":605578,"line_start":480,"line_end":480,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":605583,"byte_end":605586,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":605591,"byte_end":605604,"line_start":482,"line_end":482,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":605609,"byte_end":605616,"line_start":483,"line_end":483,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":605621,"byte_end":605660,"line_start":484,"line_end":484,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":605665,"byte_end":605695,"line_start":485,"line_end":485,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation3::from_euler_angles(0.1, 0.2, 0.3);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":605700,"byte_end":605758,"line_start":486,"line_end":486,"column_start":5,"column_end":63}},{"value":"/ let euler = rot.euler_angles();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":605763,"byte_end":605798,"line_start":487,"line_end":487,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(euler.0, 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":605803,"byte_end":605859,"line_start":488,"line_end":488,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.1, 0.2, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":605864,"byte_end":605920,"line_start":489,"line_end":489,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.2, 0.3, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":605925,"byte_end":605981,"line_start":490,"line_end":490,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":605986,"byte_end":605993,"line_start":491,"line_end":491,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4651},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":607055,"byte_end":607066,"line_start":517,"line_end":517,"column_start":12,"column_end":23},"name":"renormalize","qualname":"<Rotation3<N>>::renormalize","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Ensure this rotation is an orthonormal rotation matrix. This is useful when repeated\n computations might cause the matrix from progressively not being orthonormal anymore.\n","sig":null,"attributes":[{"value":"/ Ensure this rotation is an orthonormal rotation matrix. This is useful when repeated","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":606847,"byte_end":606935,"line_start":514,"line_end":514,"column_start":5,"column_end":93}},{"value":"/ computations might cause the matrix from progressively not being orthonormal anymore.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":606940,"byte_end":607029,"line_start":515,"line_end":515,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":607034,"byte_end":607043,"line_start":516,"line_end":516,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4652},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":608168,"byte_end":608180,"line_start":549,"line_end":549,"column_start":12,"column_end":24},"name":"face_towards","qualname":"<Rotation3<N>>::face_towards","value":"fn <SB, SC> (dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation that corresponds to the local frame of an observer standing at the\n origin and looking toward `dir`.","sig":null,"attributes":[{"value":"/ Creates a rotation that corresponds to the local frame of an observer standing at the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":607298,"byte_end":607387,"line_start":527,"line_end":527,"column_start":5,"column_end":94}},{"value":"/ origin and looking toward `dir`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":607392,"byte_end":607428,"line_start":528,"line_end":528,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":607433,"byte_end":607436,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ It maps the `z` axis to the direction `dir`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":607441,"byte_end":607489,"line_start":530,"line_end":530,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":607494,"byte_end":607497,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":607502,"byte_end":607517,"line_start":532,"line_end":532,"column_start":5,"column_end":20}},{"value":"/   * dir - The look direction, that is, direction the matrix `z` axis will be aligned with.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":607522,"byte_end":607616,"line_start":533,"line_end":533,"column_start":5,"column_end":99}},{"value":"/   * up - The vertical direction. The only requirement of this parameter is to not be","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":607621,"byte_end":607709,"line_start":534,"line_end":534,"column_start":5,"column_end":93}},{"value":"/   collinear to `dir`. Non-collinearity is not checked.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":607714,"byte_end":607772,"line_start":535,"line_end":535,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":607777,"byte_end":607780,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":607785,"byte_end":607798,"line_start":537,"line_end":537,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":607803,"byte_end":607810,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":607815,"byte_end":607854,"line_start":539,"line_end":539,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":607859,"byte_end":607878,"line_start":540,"line_end":540,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":607883,"byte_end":607924,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":607929,"byte_end":607971,"line_start":542,"line_end":542,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":607976,"byte_end":608002,"line_start":543,"line_end":543,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":608007,"byte_end":608010,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation3::face_towards(&dir, &up);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":608015,"byte_end":608064,"line_start":545,"line_end":545,"column_start":5,"column_end":54}},{"value":"/ assert_relative_eq!(rot * Vector3::z(), dir.normalize());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":608069,"byte_end":608130,"line_start":546,"line_end":546,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":608135,"byte_end":608142,"line_start":547,"line_end":547,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":608147,"byte_end":608156,"line_start":548,"line_end":548,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4655},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":608753,"byte_end":608772,"line_start":565,"line_end":565,"column_start":12,"column_end":31},"name":"new_observer_frames","qualname":"<Rotation3<N>>::new_observer_frames","value":"fn <SB, SC> (dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Deprecated: Use [Rotation3::face_towards] instead.\n","sig":null,"attributes":[{"value":"/ Deprecated: Use [Rotation3::face_towards] instead.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":608633,"byte_end":608687,"line_start":563,"line_end":563,"column_start":5,"column_end":59}},{"value":"deprecated(note = \"renamed to `face_towards`\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":608692,"byte_end":608741,"line_start":564,"line_end":564,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4658},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":609871,"byte_end":609881,"line_start":596,"line_end":596,"column_start":12,"column_end":22},"name":"look_at_rh","qualname":"<Rotation3<N>>::look_at_rh","value":"fn <SB, SC> (dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a right-handed look-at view matrix without translation.","sig":null,"attributes":[{"value":"/ Builds a right-handed look-at view matrix without translation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":608957,"byte_end":609023,"line_start":573,"line_end":573,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":609028,"byte_end":609031,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `dir` to the **negative** `z` axis.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":609036,"byte_end":609102,"line_start":575,"line_end":575,"column_start":5,"column_end":71}},{"value":"/ This conforms to the common notion of right handed look-at matrix from the computer","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":609107,"byte_end":609194,"line_start":576,"line_end":576,"column_start":5,"column_end":92}},{"value":"/ graphics community.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":609199,"byte_end":609222,"line_start":577,"line_end":577,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":609227,"byte_end":609230,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":609235,"byte_end":609250,"line_start":579,"line_end":579,"column_start":5,"column_end":20}},{"value":"/   * dir - The direction toward which the camera looks.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":609255,"byte_end":609313,"line_start":580,"line_end":580,"column_start":5,"column_end":63}},{"value":"/   * up - A vector approximately aligned with required the vertical axis. The only","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":609318,"byte_end":609403,"line_start":581,"line_end":581,"column_start":5,"column_end":90}},{"value":"/   requirement of this parameter is to not be collinear to `dir`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":609408,"byte_end":609476,"line_start":582,"line_end":582,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":609481,"byte_end":609484,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":609489,"byte_end":609502,"line_start":584,"line_end":584,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":609507,"byte_end":609514,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":609519,"byte_end":609558,"line_start":586,"line_end":586,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":609563,"byte_end":609582,"line_start":587,"line_end":587,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":609587,"byte_end":609628,"line_start":588,"line_end":588,"column_start":5,"column_end":46}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":609633,"byte_end":609675,"line_start":589,"line_end":589,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":609680,"byte_end":609706,"line_start":590,"line_end":590,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":609711,"byte_end":609714,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation3::look_at_rh(&dir, &up);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":609719,"byte_end":609766,"line_start":592,"line_end":592,"column_start":5,"column_end":52}},{"value":"/ assert_relative_eq!(rot * dir.normalize(), -Vector3::z());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":609771,"byte_end":609833,"line_start":593,"line_end":593,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":609838,"byte_end":609845,"line_start":594,"line_end":594,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":609850,"byte_end":609859,"line_start":595,"line_end":595,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4661},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":610994,"byte_end":611004,"line_start":627,"line_end":627,"column_start":12,"column_end":22},"name":"look_at_lh","qualname":"<Rotation3<N>>::look_at_lh","value":"fn <SB, SC> (dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a left-handed look-at view matrix without translation.","sig":null,"attributes":[{"value":"/ Builds a left-handed look-at view matrix without translation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":610083,"byte_end":610148,"line_start":604,"line_end":604,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":610153,"byte_end":610156,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `dir` to the **positive** `z` axis.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":610161,"byte_end":610227,"line_start":606,"line_end":606,"column_start":5,"column_end":71}},{"value":"/ This conforms to the common notion of left handed look-at matrix from the computer","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":610232,"byte_end":610318,"line_start":607,"line_end":607,"column_start":5,"column_end":91}},{"value":"/ graphics community.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":610323,"byte_end":610346,"line_start":608,"line_end":608,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":610351,"byte_end":610354,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":610359,"byte_end":610374,"line_start":610,"line_end":610,"column_start":5,"column_end":20}},{"value":"/   * dir - The direction toward which the camera looks.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":610379,"byte_end":610437,"line_start":611,"line_end":611,"column_start":5,"column_end":63}},{"value":"/   * up - A vector approximately aligned with required the vertical axis. The only","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":610442,"byte_end":610527,"line_start":612,"line_end":612,"column_start":5,"column_end":90}},{"value":"/   requirement of this parameter is to not be collinear to `dir`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":610532,"byte_end":610600,"line_start":613,"line_end":613,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":610605,"byte_end":610608,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":610613,"byte_end":610626,"line_start":615,"line_end":615,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":610631,"byte_end":610638,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":610643,"byte_end":610682,"line_start":617,"line_end":617,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":610687,"byte_end":610706,"line_start":618,"line_end":618,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":610711,"byte_end":610752,"line_start":619,"line_end":619,"column_start":5,"column_end":46}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":610757,"byte_end":610799,"line_start":620,"line_end":620,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":610804,"byte_end":610830,"line_start":621,"line_end":621,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":610835,"byte_end":610838,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation3::look_at_lh(&dir, &up);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":610843,"byte_end":610890,"line_start":623,"line_end":623,"column_start":5,"column_end":52}},{"value":"/ assert_relative_eq!(rot * dir.normalize(), Vector3::z());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":610895,"byte_end":610956,"line_start":624,"line_end":624,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":610961,"byte_end":610968,"line_start":625,"line_end":625,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":610973,"byte_end":610982,"line_start":626,"line_end":626,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4664},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":611828,"byte_end":611844,"line_start":650,"line_end":650,"column_start":12,"column_end":28},"name":"rotation_between","qualname":"<Rotation3<N>>::rotation_between","value":"fn <SB, SC> (a: &Vector<N, U3, SB>, b: &Vector<N, U3, SC>) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix required to align `a` and `b` but with its angle.","sig":null,"attributes":[{"value":"/ The rotation matrix required to align `a` and `b` but with its angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":611199,"byte_end":611272,"line_start":635,"line_end":635,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":611277,"byte_end":611280,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This is the rotation `R` such that `(R * a).angle(b) == 0 && (R * a).dot(b).is_positive()`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":611285,"byte_end":611380,"line_start":637,"line_end":637,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":611385,"byte_end":611388,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":611393,"byte_end":611406,"line_start":639,"line_end":639,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":611411,"byte_end":611418,"line_start":640,"line_end":640,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":611423,"byte_end":611462,"line_start":641,"line_end":641,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, Rotation3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":611467,"byte_end":611508,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ let a = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":611513,"byte_end":611553,"line_start":643,"line_end":643,"column_start":5,"column_end":45}},{"value":"/ let b = Vector3::new(3.0, 1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":611558,"byte_end":611598,"line_start":644,"line_end":644,"column_start":5,"column_end":45}},{"value":"/ let rot = Rotation3::rotation_between(&a, &b).unwrap();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":611603,"byte_end":611662,"line_start":645,"line_end":645,"column_start":5,"column_end":64}},{"value":"/ assert_relative_eq!(rot * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":611667,"byte_end":611721,"line_start":646,"line_end":646,"column_start":5,"column_end":59}},{"value":"/ assert_relative_eq!(rot.inverse() * b, a, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":611726,"byte_end":611790,"line_start":647,"line_end":647,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":611795,"byte_end":611802,"line_start":648,"line_end":648,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":611807,"byte_end":611816,"line_start":649,"line_end":649,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4667},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":612771,"byte_end":612794,"line_start":674,"line_end":674,"column_start":12,"column_end":35},"name":"scaled_rotation_between","qualname":"<Rotation3<N>>::scaled_rotation_between","value":"fn <SB, SC> (a: &Vector<N, U3, SB>, b: &Vector<N, U3, SC>, n: N) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":612074,"byte_end":612162,"line_start":659,"line_end":659,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":612167,"byte_end":612206,"line_start":660,"line_end":660,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":612211,"byte_end":612214,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":612219,"byte_end":612232,"line_start":662,"line_end":662,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":612237,"byte_end":612244,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":612249,"byte_end":612288,"line_start":664,"line_end":664,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, Rotation3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":612293,"byte_end":612334,"line_start":665,"line_end":665,"column_start":5,"column_end":46}},{"value":"/ let a = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":612339,"byte_end":612379,"line_start":666,"line_end":666,"column_start":5,"column_end":45}},{"value":"/ let b = Vector3::new(3.0, 1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":612384,"byte_end":612424,"line_start":667,"line_end":667,"column_start":5,"column_end":45}},{"value":"/ let rot2 = Rotation3::scaled_rotation_between(&a, &b, 0.2).unwrap();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":612429,"byte_end":612501,"line_start":668,"line_end":668,"column_start":5,"column_end":77}},{"value":"/ let rot5 = Rotation3::scaled_rotation_between(&a, &b, 0.5).unwrap();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":612506,"byte_end":612578,"line_start":669,"line_end":669,"column_start":5,"column_end":77}},{"value":"/ assert_relative_eq!(rot2 * rot2 * rot2 * rot2 * rot2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":612583,"byte_end":612666,"line_start":670,"line_end":670,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(rot5 * rot5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":612671,"byte_end":612733,"line_start":671,"line_end":671,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":612738,"byte_end":612745,"line_start":672,"line_end":672,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":612750,"byte_end":612759,"line_start":673,"line_end":673,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4670},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":614061,"byte_end":614066,"line_start":716,"line_end":716,"column_start":12,"column_end":17},"name":"angle","qualname":"<Rotation3<N>>::angle","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle in [0; pi].","sig":null,"attributes":[{"value":"/ The rotation angle in [0; pi].","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":613679,"byte_end":613713,"line_start":705,"line_end":705,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":613718,"byte_end":613721,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":613726,"byte_end":613739,"line_start":707,"line_end":707,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":613744,"byte_end":613751,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":613756,"byte_end":613795,"line_start":709,"line_end":709,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Rotation3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":613800,"byte_end":613847,"line_start":710,"line_end":710,"column_start":5,"column_end":52}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":613852,"byte_end":613916,"line_start":711,"line_end":711,"column_start":5,"column_end":69}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, 1.78);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":613921,"byte_end":613975,"line_start":712,"line_end":712,"column_start":5,"column_end":59}},{"value":"/ assert_relative_eq!(rot.angle(), 1.78);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":613980,"byte_end":614023,"line_start":713,"line_end":713,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":614028,"byte_end":614035,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":614040,"byte_end":614049,"line_start":715,"line_end":715,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4671},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":614836,"byte_end":614840,"line_start":738,"line_end":738,"column_start":12,"column_end":16},"name":"axis","qualname":"<Rotation3<N>>::axis","value":"fn (&self) -> Option<Unit<Vector3<N>>>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis. Returns `None` if the rotation angle is zero or PI.","sig":null,"attributes":[{"value":"/ The rotation axis. Returns `None` if the rotation angle is zero or PI.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":614240,"byte_end":614314,"line_start":722,"line_end":722,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":614319,"byte_end":614322,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":614327,"byte_end":614340,"line_start":724,"line_end":724,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":614345,"byte_end":614352,"line_start":725,"line_end":725,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":614357,"byte_end":614396,"line_start":726,"line_end":726,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3, Unit};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":614401,"byte_end":614448,"line_start":727,"line_end":727,"column_start":5,"column_end":52}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":614453,"byte_end":614517,"line_start":728,"line_end":728,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":614522,"byte_end":614542,"line_start":729,"line_end":729,"column_start":5,"column_end":25}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":614547,"byte_end":614602,"line_start":730,"line_end":730,"column_start":5,"column_end":60}},{"value":"/ assert_relative_eq!(rot.axis().unwrap(), axis);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":614607,"byte_end":614658,"line_start":731,"line_end":731,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":614663,"byte_end":614666,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ // Case with a zero angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":614671,"byte_end":614701,"line_start":733,"line_end":733,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, 0.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":614706,"byte_end":614759,"line_start":734,"line_end":734,"column_start":5,"column_end":58}},{"value":"/ assert!(rot.axis().is_none());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":614764,"byte_end":614798,"line_start":735,"line_end":735,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":614803,"byte_end":614810,"line_start":736,"line_end":736,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":614815,"byte_end":614824,"line_start":737,"line_end":737,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4672},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":615608,"byte_end":615619,"line_start":762,"line_end":762,"column_start":12,"column_end":23},"name":"scaled_axis","qualname":"<Rotation3<N>>::scaled_axis","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis multiplied by the rotation angle.","sig":null,"attributes":[{"value":"/ The rotation axis multiplied by the rotation angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":615206,"byte_end":615261,"line_start":751,"line_end":751,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":615266,"byte_end":615269,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":615274,"byte_end":615287,"line_start":753,"line_end":753,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":615292,"byte_end":615299,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":615304,"byte_end":615343,"line_start":755,"line_end":755,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3, Unit};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":615348,"byte_end":615395,"line_start":756,"line_end":756,"column_start":5,"column_end":52}},{"value":"/ let axisangle = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":615400,"byte_end":615448,"line_start":757,"line_end":757,"column_start":5,"column_end":53}},{"value":"/ let rot = Rotation3::new(axisangle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":615453,"byte_end":615493,"line_start":758,"line_end":758,"column_start":5,"column_end":45}},{"value":"/ assert_relative_eq!(rot.scaled_axis(), axisangle, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":615498,"byte_end":615570,"line_start":759,"line_end":759,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":615575,"byte_end":615582,"line_start":760,"line_end":760,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":615587,"byte_end":615596,"line_start":761,"line_end":761,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4673},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":616574,"byte_end":616584,"line_start":793,"line_end":793,"column_start":12,"column_end":22},"name":"axis_angle","qualname":"<Rotation3<N>>::axis_angle","value":"fn (&self) -> Option<(Unit<Vector3<N>>, N)>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis and angle in ]0, pi] of this unit quaternion.","sig":null,"attributes":[{"value":"/ The rotation axis and angle in ]0, pi] of this unit quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":615831,"byte_end":615898,"line_start":773,"line_end":773,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":615903,"byte_end":615906,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the angle is zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":615911,"byte_end":615951,"line_start":775,"line_end":775,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":615956,"byte_end":615959,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":615964,"byte_end":615977,"line_start":777,"line_end":777,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":615982,"byte_end":615989,"line_start":778,"line_end":778,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":615994,"byte_end":616033,"line_start":779,"line_end":779,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3, Unit};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":616038,"byte_end":616085,"line_start":780,"line_end":780,"column_start":5,"column_end":52}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":616090,"byte_end":616154,"line_start":781,"line_end":781,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":616159,"byte_end":616179,"line_start":782,"line_end":782,"column_start":5,"column_end":25}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":616184,"byte_end":616239,"line_start":783,"line_end":783,"column_start":5,"column_end":60}},{"value":"/ let axis_angle = rot.axis_angle().unwrap();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":616244,"byte_end":616291,"line_start":784,"line_end":784,"column_start":5,"column_end":52}},{"value":"/ assert_relative_eq!(axis_angle.0, axis);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":616296,"byte_end":616340,"line_start":785,"line_end":785,"column_start":5,"column_end":49}},{"value":"/ assert_relative_eq!(axis_angle.1, angle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":616345,"byte_end":616390,"line_start":786,"line_end":786,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":616395,"byte_end":616398,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ // Case with a zero angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":616403,"byte_end":616433,"line_start":788,"line_end":788,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, 0.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":616438,"byte_end":616491,"line_start":789,"line_end":789,"column_start":5,"column_end":58}},{"value":"/ assert!(rot.axis_angle().is_none());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":616496,"byte_end":616536,"line_start":790,"line_end":790,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":616541,"byte_end":616548,"line_start":791,"line_end":791,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":616553,"byte_end":616562,"line_start":792,"line_end":792,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4674},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":617255,"byte_end":617263,"line_start":815,"line_end":815,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<Rotation3<N>>::angle_to","value":"fn (&self, other: &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation angle needed to make `self` and `other` coincide.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":616799,"byte_end":616865,"line_start":804,"line_end":804,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":616870,"byte_end":616873,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":616878,"byte_end":616891,"line_start":806,"line_end":806,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":616896,"byte_end":616903,"line_start":807,"line_end":807,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":616908,"byte_end":616947,"line_start":808,"line_end":808,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":616952,"byte_end":616993,"line_start":809,"line_end":809,"column_start":5,"column_end":46}},{"value":"/ let rot1 = Rotation3::from_axis_angle(&Vector3::y_axis(), 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":616998,"byte_end":617065,"line_start":810,"line_end":810,"column_start":5,"column_end":72}},{"value":"/ let rot2 = Rotation3::from_axis_angle(&Vector3::x_axis(), 0.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":617070,"byte_end":617137,"line_start":811,"line_end":811,"column_start":5,"column_end":72}},{"value":"/ assert_relative_eq!(rot1.angle_to(&rot2), 1.0045657, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":617142,"byte_end":617217,"line_start":812,"line_end":812,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":617222,"byte_end":617229,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":617234,"byte_end":617243,"line_start":814,"line_end":814,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4675},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":617918,"byte_end":617929,"line_start":833,"line_end":833,"column_start":12,"column_end":23},"name":"rotation_to","qualname":"<Rotation3<N>>::rotation_to","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation matrix needed to make `self` and `other` coincide.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":617343,"byte_end":617410,"line_start":819,"line_end":819,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":617415,"byte_end":617418,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ The result is such that: `self.rotation_to(other) * self == other`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":617423,"byte_end":617494,"line_start":821,"line_end":821,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":617499,"byte_end":617502,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":617507,"byte_end":617520,"line_start":823,"line_end":823,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":617525,"byte_end":617532,"line_start":824,"line_end":824,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":617537,"byte_end":617576,"line_start":825,"line_end":825,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":617581,"byte_end":617622,"line_start":826,"line_end":826,"column_start":5,"column_end":46}},{"value":"/ let rot1 = Rotation3::from_axis_angle(&Vector3::y_axis(), 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":617627,"byte_end":617694,"line_start":827,"line_end":827,"column_start":5,"column_end":72}},{"value":"/ let rot2 = Rotation3::from_axis_angle(&Vector3::x_axis(), 0.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":617699,"byte_end":617766,"line_start":828,"line_end":828,"column_start":5,"column_end":72}},{"value":"/ let rot_to = rot1.rotation_to(&rot2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":617771,"byte_end":617812,"line_start":829,"line_end":829,"column_start":5,"column_end":46}},{"value":"/ assert_relative_eq!(rot_to * rot1, rot2, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":617817,"byte_end":617880,"line_start":830,"line_end":830,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":617885,"byte_end":617892,"line_start":831,"line_end":831,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":617897,"byte_end":617906,"line_start":832,"line_end":832,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4676},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":618645,"byte_end":618649,"line_start":852,"line_end":852,"column_start":12,"column_end":16},"name":"powf","qualname":"<Rotation3<N>>::powf","value":"fn (&self, n: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise the quaternion to a given floating power, i.e., returns the rotation with the same\n axis as `self` and an angle equal to `self.angle()` multiplied by `n`.","sig":null,"attributes":[{"value":"/ Raise the quaternion to a given floating power, i.e., returns the rotation with the same","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":618003,"byte_end":618095,"line_start":837,"line_end":837,"column_start":5,"column_end":97}},{"value":"/ axis as `self` and an angle equal to `self.angle()` multiplied by `n`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":618100,"byte_end":618174,"line_start":838,"line_end":838,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":618179,"byte_end":618182,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":618187,"byte_end":618200,"line_start":840,"line_end":840,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":618205,"byte_end":618212,"line_start":841,"line_end":841,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":618217,"byte_end":618256,"line_start":842,"line_end":842,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3, Unit};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":618261,"byte_end":618308,"line_start":843,"line_end":843,"column_start":5,"column_end":52}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":618313,"byte_end":618377,"line_start":844,"line_end":844,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":618382,"byte_end":618402,"line_start":845,"line_end":845,"column_start":5,"column_end":25}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":618407,"byte_end":618462,"line_start":846,"line_end":846,"column_start":5,"column_end":60}},{"value":"/ let pow = rot.powf(2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":618467,"byte_end":618495,"line_start":847,"line_end":847,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(pow.axis().unwrap(), axis, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":618500,"byte_end":618569,"line_start":848,"line_end":848,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(pow.angle(), 2.4);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":618574,"byte_end":618607,"line_start":849,"line_end":849,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":618612,"byte_end":618619,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":618624,"byte_end":618633,"line_start":851,"line_end":851,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":17903},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":621567,"byte_end":621577,"line_start":31,"line_end":31,"column_start":12,"column_end":22},"name":"Quaternion","qualname":"::geometry::quaternion::Quaternion","value":"Quaternion { coords }","parent":null,"children":[{"krate":0,"index":17905}],"decl_id":null,"docs":" A quaternion. See the type alias `UnitQuaternion = Unit<Quaternion>` for a quaternion\n that may be used as a rotation.\n","sig":null,"attributes":[{"value":"/ A quaternion. See the type alias `UnitQuaternion = Unit<Quaternion>` for a quaternion","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":621402,"byte_end":621491,"line_start":27,"line_end":27,"column_start":1,"column_end":90}},{"value":"/ that may be used as a rotation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":621492,"byte_end":621527,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":621528,"byte_end":621538,"line_start":29,"line_end":29,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":17905},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":621704,"byte_end":621710,"line_start":33,"line_end":33,"column_start":9,"column_end":15},"name":"coords","qualname":"::geometry::quaternion::Quaternion::coords","value":"base::matrix::Matrix<N, base::dimension::U4, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, base::dimension::U4>>::Buffer>","parent":{"krate":0,"index":17903},"children":[],"decl_id":null,"docs":" This quaternion as a 4D vector of coordinates in the `[ x, y, z, w ]` storage order.\n","sig":null,"attributes":[{"value":"/ This quaternion as a 4D vector of coordinates in the `[ x, y, z, w ]` storage order.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":621607,"byte_end":621695,"line_start":32,"line_end":32,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4733},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":623853,"byte_end":623863,"line_start":117,"line_end":117,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Quaternion<N>>::into_owned","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Moves this unit quaternion into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Moves this unit quaternion into one that owns its data.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":623676,"byte_end":623735,"line_start":114,"line_end":114,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":623740,"byte_end":623749,"line_start":115,"line_end":115,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This method is a no-op and will be removed in a future release.\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":623754,"byte_end":623841,"line_start":116,"line_end":116,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":4734},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624082,"byte_end":624093,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"clone_owned","qualname":"<Quaternion<N>>::clone_owned","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Clones this unit quaternion into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Clones this unit quaternion into one that owns its data.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":623904,"byte_end":623964,"line_start":121,"line_end":121,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":623969,"byte_end":623978,"line_start":122,"line_end":122,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This method is a no-op and will be removed in a future release.\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":623983,"byte_end":624070,"line_start":123,"line_end":123,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":4735},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624555,"byte_end":624564,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Quaternion<N>>::normalize","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this quaternion.","sig":null,"attributes":[{"value":"/ Normalizes this quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624168,"byte_end":624199,"line_start":128,"line_end":128,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624204,"byte_end":624207,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624212,"byte_end":624225,"line_start":130,"line_end":130,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624230,"byte_end":624237,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624242,"byte_end":624281,"line_start":132,"line_end":132,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624286,"byte_end":624317,"line_start":133,"line_end":133,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624322,"byte_end":624370,"line_start":134,"line_end":134,"column_start":5,"column_end":53}},{"value":"/ let q_normalized = q.normalize();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624375,"byte_end":624412,"line_start":135,"line_end":135,"column_start":5,"column_end":42}},{"value":"/ relative_eq!(q_normalized.norm(), 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624417,"byte_end":624460,"line_start":136,"line_end":136,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624465,"byte_end":624472,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624477,"byte_end":624486,"line_start":138,"line_end":138,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use normalize_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624491,"byte_end":624543,"line_start":139,"line_end":139,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4736},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624705,"byte_end":624709,"line_start":146,"line_end":146,"column_start":12,"column_end":16},"name":"imag","qualname":"<Quaternion<N>>::imag","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" The imaginary part of this quaternion.\n","sig":null,"attributes":[{"value":"/ The imaginary part of this quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624637,"byte_end":624679,"line_start":144,"line_end":144,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624684,"byte_end":624693,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4737},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625149,"byte_end":625158,"line_start":161,"line_end":161,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<Quaternion<N>>::conjugate","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The conjugate of this quaternion.","sig":null,"attributes":[{"value":"/ The conjugate of this quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624770,"byte_end":624807,"line_start":150,"line_end":150,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624812,"byte_end":624815,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624820,"byte_end":624833,"line_start":152,"line_end":152,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624838,"byte_end":624845,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624850,"byte_end":624881,"line_start":154,"line_end":154,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624886,"byte_end":624934,"line_start":155,"line_end":155,"column_start":5,"column_end":53}},{"value":"/ let conj = q.conjugate();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624939,"byte_end":624968,"line_start":156,"line_end":156,"column_start":5,"column_end":34}},{"value":"/ assert!(conj.i == -2.0 && conj.j == -3.0 && conj.k == -4.0 && conj.w == 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":624973,"byte_end":625054,"line_start":157,"line_end":157,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625059,"byte_end":625066,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625071,"byte_end":625080,"line_start":159,"line_end":159,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use conjugate_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625085,"byte_end":625137,"line_start":160,"line_end":160,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4738},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625645,"byte_end":625649,"line_start":178,"line_end":178,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Quaternion<N>>::lerp","value":"fn (&self, other: &Self, t: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linear interpolation between two quaternion.","sig":null,"attributes":[{"value":"/ Linear interpolation between two quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625234,"byte_end":625282,"line_start":165,"line_end":165,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625287,"byte_end":625290,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Computes `self * (1 - t) + other * t`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625295,"byte_end":625337,"line_start":167,"line_end":167,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625342,"byte_end":625345,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625350,"byte_end":625363,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625368,"byte_end":625375,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625380,"byte_end":625411,"line_start":171,"line_end":171,"column_start":5,"column_end":36}},{"value":"/ let q1 = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625416,"byte_end":625465,"line_start":172,"line_end":172,"column_start":5,"column_end":54}},{"value":"/ let q2 = Quaternion::new(10.0, 20.0, 30.0, 40.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625470,"byte_end":625523,"line_start":173,"line_end":173,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625528,"byte_end":625531,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q1.lerp(&q2, 0.1), Quaternion::new(1.9, 3.8, 5.7, 7.6));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625536,"byte_end":625607,"line_start":175,"line_end":175,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625612,"byte_end":625619,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625624,"byte_end":625633,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4739},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626076,"byte_end":626082,"line_start":193,"line_end":193,"column_start":12,"column_end":18},"name":"vector","qualname":"<Quaternion<N>>::vector","value":"fn (&self) -> MatrixSlice<N, U3, U1, RStride<N, U4, U1>, CStride<N, U4, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The vector part `(i, j, k)` of this quaternion.","sig":null,"attributes":[{"value":"/ The vector part `(i, j, k)` of this quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625740,"byte_end":625791,"line_start":182,"line_end":182,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625796,"byte_end":625799,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625804,"byte_end":625817,"line_start":184,"line_end":184,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625822,"byte_end":625829,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625834,"byte_end":625865,"line_start":186,"line_end":186,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625870,"byte_end":625918,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.vector()[0], 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625923,"byte_end":625958,"line_start":188,"line_end":188,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(q.vector()[1], 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":625963,"byte_end":625998,"line_start":189,"line_end":189,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(q.vector()[2], 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626003,"byte_end":626038,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626043,"byte_end":626050,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626055,"byte_end":626064,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4740},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626454,"byte_end":626460,"line_start":206,"line_end":206,"column_start":12,"column_end":18},"name":"scalar","qualname":"<Quaternion<N>>::scalar","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The scalar part `w` of this quaternion.","sig":null,"attributes":[{"value":"/ The scalar part `w` of this quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626209,"byte_end":626252,"line_start":197,"line_end":197,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626257,"byte_end":626260,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626265,"byte_end":626278,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626283,"byte_end":626290,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626295,"byte_end":626326,"line_start":201,"line_end":201,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626331,"byte_end":626379,"line_start":202,"line_end":202,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.scalar(), 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626384,"byte_end":626416,"line_start":203,"line_end":203,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626421,"byte_end":626428,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626433,"byte_end":626442,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4741},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626959,"byte_end":626968,"line_start":221,"line_end":221,"column_start":12,"column_end":21},"name":"as_vector","qualname":"<Quaternion<N>>::as_vector","value":"fn (&self) -> &Vector4<N>","parent":null,"children":[],"decl_id":null,"docs":" Reinterprets this quaternion as a 4D vector.","sig":null,"attributes":[{"value":"/ Reinterprets this quaternion as a 4D vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626509,"byte_end":626557,"line_start":210,"line_end":210,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626562,"byte_end":626565,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626570,"byte_end":626583,"line_start":212,"line_end":212,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626588,"byte_end":626595,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector4, Quaternion};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626600,"byte_end":626642,"line_start":214,"line_end":214,"column_start":5,"column_end":47}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626647,"byte_end":626695,"line_start":215,"line_end":215,"column_start":5,"column_end":53}},{"value":"/ // Recall that the quaternion is stored internally as (i, j, k, w)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626700,"byte_end":626770,"line_start":216,"line_end":216,"column_start":5,"column_end":75}},{"value":"/ // while the crate::new constructor takes the arguments as (w, i, j, k).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626775,"byte_end":626851,"line_start":217,"line_end":217,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(*q.as_vector(), Vector4::new(2.0, 3.0, 4.0, 1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626856,"byte_end":626921,"line_start":218,"line_end":218,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626926,"byte_end":626933,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":626938,"byte_end":626947,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4742},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627335,"byte_end":627339,"line_start":235,"line_end":235,"column_start":12,"column_end":16},"name":"norm","qualname":"<Quaternion<N>>::norm","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The norm of this quaternion.","sig":null,"attributes":[{"value":"/ The norm of this quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627025,"byte_end":627057,"line_start":225,"line_end":225,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627062,"byte_end":627065,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627070,"byte_end":627083,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627088,"byte_end":627095,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627100,"byte_end":627139,"line_start":229,"line_end":229,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627144,"byte_end":627175,"line_start":230,"line_end":230,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627180,"byte_end":627228,"line_start":231,"line_end":231,"column_start":5,"column_end":53}},{"value":"/ assert_relative_eq!(q.norm(), 5.47722557, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627233,"byte_end":627297,"line_start":232,"line_end":232,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627302,"byte_end":627309,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627314,"byte_end":627323,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4743},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627791,"byte_end":627800,"line_start":252,"line_end":252,"column_start":12,"column_end":21},"name":"magnitude","qualname":"<Quaternion<N>>::magnitude","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" A synonym for the norm of this quaternion.","sig":null,"attributes":[{"value":"/ A synonym for the norm of this quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627392,"byte_end":627438,"line_start":239,"line_end":239,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627443,"byte_end":627446,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Aka the length.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627451,"byte_end":627470,"line_start":241,"line_end":241,"column_start":5,"column_end":24}},{"value":"/ This is the same as `.norm()`","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627475,"byte_end":627508,"line_start":242,"line_end":242,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627513,"byte_end":627516,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627521,"byte_end":627534,"line_start":244,"line_end":244,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627539,"byte_end":627546,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627551,"byte_end":627590,"line_start":246,"line_end":246,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627595,"byte_end":627626,"line_start":247,"line_end":247,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627631,"byte_end":627679,"line_start":248,"line_end":248,"column_start":5,"column_end":53}},{"value":"/ assert_relative_eq!(q.magnitude(), 5.47722557, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627684,"byte_end":627753,"line_start":249,"line_end":249,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627758,"byte_end":627765,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627770,"byte_end":627779,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4744},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628100,"byte_end":628112,"line_start":265,"line_end":265,"column_start":12,"column_end":24},"name":"norm_squared","qualname":"<Quaternion<N>>::norm_squared","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The squared norm of this quaternion.","sig":null,"attributes":[{"value":"/ The squared norm of this quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627846,"byte_end":627886,"line_start":256,"line_end":256,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627891,"byte_end":627894,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627899,"byte_end":627912,"line_start":258,"line_end":258,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627917,"byte_end":627924,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627929,"byte_end":627960,"line_start":260,"line_end":260,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":627965,"byte_end":628013,"line_start":261,"line_end":261,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.magnitude_squared(), 30.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628018,"byte_end":628062,"line_start":262,"line_end":262,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628067,"byte_end":628074,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628079,"byte_end":628088,"line_start":264,"line_end":264,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4745},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628527,"byte_end":628544,"line_start":281,"line_end":281,"column_start":12,"column_end":29},"name":"magnitude_squared","qualname":"<Quaternion<N>>::magnitude_squared","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" A synonym for the squared norm of this quaternion.","sig":null,"attributes":[{"value":"/ A synonym for the squared norm of this quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628173,"byte_end":628227,"line_start":269,"line_end":269,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628232,"byte_end":628235,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Aka the squared length.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628240,"byte_end":628267,"line_start":271,"line_end":271,"column_start":5,"column_end":32}},{"value":"/ This is the same as `.norm_squared()`","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628272,"byte_end":628313,"line_start":272,"line_end":272,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628318,"byte_end":628321,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628326,"byte_end":628339,"line_start":274,"line_end":274,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628344,"byte_end":628351,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628356,"byte_end":628387,"line_start":276,"line_end":276,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628392,"byte_end":628440,"line_start":277,"line_end":277,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.magnitude_squared(), 30.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628445,"byte_end":628489,"line_start":278,"line_end":278,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628494,"byte_end":628501,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628506,"byte_end":628515,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4746},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628896,"byte_end":628899,"line_start":295,"line_end":295,"column_start":12,"column_end":15},"name":"dot","qualname":"<Quaternion<N>>::dot","value":"fn (&self, rhs: &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The dot product of two quaternions.","sig":null,"attributes":[{"value":"/ The dot product of two quaternions.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628598,"byte_end":628637,"line_start":285,"line_end":285,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628642,"byte_end":628645,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628650,"byte_end":628663,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628668,"byte_end":628675,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628680,"byte_end":628711,"line_start":289,"line_end":289,"column_start":5,"column_end":36}},{"value":"/ let q1 = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628716,"byte_end":628765,"line_start":290,"line_end":290,"column_start":5,"column_end":54}},{"value":"/ let q2 = Quaternion::new(5.0, 6.0, 7.0, 8.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628770,"byte_end":628819,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(q1.dot(&q2), 70.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628824,"byte_end":628858,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628863,"byte_end":628870,"line_start":293,"line_end":293,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628875,"byte_end":628884,"line_start":294,"line_end":294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4749},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":629791,"byte_end":629802,"line_start":326,"line_end":326,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<Quaternion<N>>::try_inverse","value":"fn (&self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Inverts this quaternion if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this quaternion if it is not zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":629052,"byte_end":629098,"line_start":304,"line_end":304,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":629103,"byte_end":629106,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ This method also does not works with SIMD components (see `simd_try_inverse` instead).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":629111,"byte_end":629201,"line_start":306,"line_end":306,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":629206,"byte_end":629209,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":629214,"byte_end":629227,"line_start":308,"line_end":308,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":629232,"byte_end":629239,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":629244,"byte_end":629283,"line_start":310,"line_end":310,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":629288,"byte_end":629319,"line_start":311,"line_end":311,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":629324,"byte_end":629372,"line_start":312,"line_end":312,"column_start":5,"column_end":53}},{"value":"/ let inv_q = q.try_inverse();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":629377,"byte_end":629409,"line_start":313,"line_end":313,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":629414,"byte_end":629417,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ assert!(inv_q.is_some());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":629422,"byte_end":629451,"line_start":315,"line_end":315,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(inv_q.unwrap() * q, Quaternion::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":629456,"byte_end":629524,"line_start":316,"line_end":316,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":629529,"byte_end":629532,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ //Non-invertible case","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":629537,"byte_end":629562,"line_start":318,"line_end":318,"column_start":5,"column_end":30}},{"value":"/ let q = Quaternion::new(0.0, 0.0, 0.0, 0.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":629567,"byte_end":629615,"line_start":319,"line_end":319,"column_start":5,"column_end":53}},{"value":"/ let inv_q = q.try_inverse();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":629620,"byte_end":629652,"line_start":320,"line_end":320,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":629657,"byte_end":629660,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ assert!(inv_q.is_none());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":629665,"byte_end":629694,"line_start":322,"line_end":322,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":629699,"byte_end":629706,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":629711,"byte_end":629720,"line_start":324,"line_end":324,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use try_inverse_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":629725,"byte_end":629779,"line_start":325,"line_end":325,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4750},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":630198,"byte_end":630214,"line_start":344,"line_end":344,"column_start":12,"column_end":28},"name":"simd_try_inverse","qualname":"<Quaternion<N>>::simd_try_inverse","value":"fn (&self) -> SimdOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to inverse this quaternion.","sig":null,"attributes":[{"value":"/ Attempt to inverse this quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":630013,"byte_end":630052,"line_start":339,"line_end":339,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":630057,"byte_end":630060,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ This method also works with SIMD components.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":630065,"byte_end":630113,"line_start":341,"line_end":341,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":630118,"byte_end":630127,"line_start":342,"line_end":342,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use try_inverse_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":630132,"byte_end":630186,"line_start":343,"line_end":343,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4751},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":631015,"byte_end":631020,"line_start":364,"line_end":364,"column_start":12,"column_end":17},"name":"inner","qualname":"<Quaternion<N>>::inner","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the inner product (also known as the dot product).\n See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel\n Formula 4.89.","sig":null,"attributes":[{"value":"/ Calculates the inner product (also known as the dot product).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":630430,"byte_end":630495,"line_start":350,"line_end":350,"column_start":5,"column_end":70}},{"value":"/ See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":630500,"byte_end":630582,"line_start":351,"line_end":351,"column_start":5,"column_end":87}},{"value":"/ Formula 4.89.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":630587,"byte_end":630604,"line_start":352,"line_end":352,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":630609,"byte_end":630612,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":630617,"byte_end":630630,"line_start":354,"line_end":354,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":630635,"byte_end":630642,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":630647,"byte_end":630686,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":630691,"byte_end":630722,"line_start":357,"line_end":357,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":630727,"byte_end":630775,"line_start":358,"line_end":358,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":630780,"byte_end":630828,"line_start":359,"line_end":359,"column_start":5,"column_end":53}},{"value":"/ let expected = Quaternion::new(-20.0, 0.0, 0.0, 0.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":630833,"byte_end":630890,"line_start":360,"line_end":360,"column_start":5,"column_end":62}},{"value":"/ let result = a.inner(&b);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":630895,"byte_end":630924,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-5);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":630929,"byte_end":630989,"line_start":362,"line_end":362,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":630994,"byte_end":631003,"line_start":363,"line_end":363,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4752},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":631709,"byte_end":631714,"line_start":383,"line_end":383,"column_start":12,"column_end":17},"name":"outer","qualname":"<Quaternion<N>>::outer","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the outer product (also known as the wedge product).\n See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel\n Formula 4.89.","sig":null,"attributes":[{"value":"/ Calculates the outer product (also known as the wedge product).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":631108,"byte_end":631175,"line_start":368,"line_end":368,"column_start":5,"column_end":72}},{"value":"/ See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":631180,"byte_end":631262,"line_start":369,"line_end":369,"column_start":5,"column_end":87}},{"value":"/ Formula 4.89.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":631267,"byte_end":631284,"line_start":370,"line_end":370,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":631289,"byte_end":631292,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":631297,"byte_end":631310,"line_start":372,"line_end":372,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":631315,"byte_end":631322,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":631327,"byte_end":631366,"line_start":374,"line_end":374,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":631371,"byte_end":631402,"line_start":375,"line_end":375,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":631407,"byte_end":631455,"line_start":376,"line_end":376,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":631460,"byte_end":631508,"line_start":377,"line_end":377,"column_start":5,"column_end":53}},{"value":"/ let expected = Quaternion::new(0.0, -5.0, 18.0, -11.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":631513,"byte_end":631572,"line_start":378,"line_end":378,"column_start":5,"column_end":64}},{"value":"/ let result = a.outer(&b);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":631577,"byte_end":631606,"line_start":379,"line_end":379,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-5);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":631611,"byte_end":631671,"line_start":380,"line_end":380,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":631676,"byte_end":631683,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":631688,"byte_end":631697,"line_start":382,"line_end":382,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4753},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":632469,"byte_end":632476,"line_start":402,"line_end":402,"column_start":12,"column_end":19},"name":"project","qualname":"<Quaternion<N>>::project","value":"fn (&self, other: &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Calculates the projection of `self` onto `other` (also known as the parallel).\n See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel\n Formula 4.94.","sig":null,"attributes":[{"value":"/ Calculates the projection of `self` onto `other` (also known as the parallel).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":631802,"byte_end":631884,"line_start":387,"line_end":387,"column_start":5,"column_end":87}},{"value":"/ See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":631889,"byte_end":631971,"line_start":388,"line_end":388,"column_start":5,"column_end":87}},{"value":"/ Formula 4.94.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":631976,"byte_end":631993,"line_start":389,"line_end":389,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":631998,"byte_end":632001,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":632006,"byte_end":632019,"line_start":391,"line_end":391,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":632024,"byte_end":632031,"line_start":392,"line_end":392,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":632036,"byte_end":632075,"line_start":393,"line_end":393,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":632080,"byte_end":632111,"line_start":394,"line_end":394,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":632116,"byte_end":632164,"line_start":395,"line_end":395,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":632169,"byte_end":632217,"line_start":396,"line_end":396,"column_start":5,"column_end":53}},{"value":"/ let expected = Quaternion::new(0.0, 3.333333333333333, 1.3333333333333333, 0.6666666666666666);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":632222,"byte_end":632321,"line_start":397,"line_end":397,"column_start":5,"column_end":104}},{"value":"/ let result = a.project(&b).unwrap();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":632326,"byte_end":632366,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-5);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":632371,"byte_end":632431,"line_start":399,"line_end":399,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":632436,"byte_end":632443,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":632448,"byte_end":632457,"line_start":401,"line_end":401,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4754},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":633278,"byte_end":633284,"line_start":424,"line_end":424,"column_start":12,"column_end":18},"name":"reject","qualname":"<Quaternion<N>>::reject","value":"fn (&self, other: &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Calculates the rejection of `self` from `other` (also known as the perpendicular).\n See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel\n Formula 4.94.","sig":null,"attributes":[{"value":"/ Calculates the rejection of `self` from `other` (also known as the perpendicular).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":632606,"byte_end":632692,"line_start":409,"line_end":409,"column_start":5,"column_end":91}},{"value":"/ See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":632697,"byte_end":632779,"line_start":410,"line_end":410,"column_start":5,"column_end":87}},{"value":"/ Formula 4.94.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":632784,"byte_end":632801,"line_start":411,"line_end":411,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":632806,"byte_end":632809,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":632814,"byte_end":632827,"line_start":413,"line_end":413,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":632832,"byte_end":632839,"line_start":414,"line_end":414,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":632844,"byte_end":632883,"line_start":415,"line_end":415,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":632888,"byte_end":632919,"line_start":416,"line_end":416,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":632924,"byte_end":632972,"line_start":417,"line_end":417,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":632977,"byte_end":633025,"line_start":418,"line_end":418,"column_start":5,"column_end":53}},{"value":"/ let expected = Quaternion::new(0.0, -1.3333333333333333, 1.6666666666666665, 3.3333333333333335);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":633030,"byte_end":633131,"line_start":419,"line_end":419,"column_start":5,"column_end":106}},{"value":"/ let result = a.reject(&b).unwrap();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":633136,"byte_end":633175,"line_start":420,"line_end":420,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-5);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":633180,"byte_end":633240,"line_start":421,"line_end":421,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":633245,"byte_end":633252,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":633257,"byte_end":633266,"line_start":423,"line_end":423,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4755},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":634030,"byte_end":634049,"line_start":446,"line_end":446,"column_start":12,"column_end":31},"name":"polar_decomposition","qualname":"<Quaternion<N>>::polar_decomposition","value":"fn (&self) -> (N, N, Option<Unit<Vector3<N>>>)","parent":null,"children":[],"decl_id":null,"docs":" The polar decomposition of this quaternion.","sig":null,"attributes":[{"value":"/ The polar decomposition of this quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":633414,"byte_end":633461,"line_start":431,"line_end":431,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":633466,"byte_end":633469,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ Returns, from left to right: the quaternion norm, the half rotation angle, the rotation","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":633474,"byte_end":633565,"line_start":433,"line_end":433,"column_start":5,"column_end":96}},{"value":"/ axis. If the rotation angle is zero, the rotation axis is set to `None`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":633570,"byte_end":633646,"line_start":434,"line_end":434,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":633651,"byte_end":633654,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":633659,"byte_end":633672,"line_start":436,"line_end":436,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":633677,"byte_end":633684,"line_start":437,"line_end":437,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":633689,"byte_end":633708,"line_start":438,"line_end":438,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Vector3, Quaternion};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":633713,"byte_end":633755,"line_start":439,"line_end":439,"column_start":5,"column_end":47}},{"value":"/ let q = Quaternion::new(0.0, 5.0, 0.0, 0.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":633760,"byte_end":633808,"line_start":440,"line_end":440,"column_start":5,"column_end":53}},{"value":"/ let (norm, half_ang, axis) = q.polar_decomposition();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":633813,"byte_end":633870,"line_start":441,"line_end":441,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(norm, 5.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":633875,"byte_end":633901,"line_start":442,"line_end":442,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(half_ang, f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":633906,"byte_end":633955,"line_start":443,"line_end":443,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(axis, Some(Vector3::x_axis()));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":633960,"byte_end":634006,"line_start":444,"line_end":444,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":634011,"byte_end":634018,"line_start":445,"line_end":445,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4756},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":634906,"byte_end":634908,"line_start":473,"line_end":473,"column_start":12,"column_end":14},"name":"ln","qualname":"<Quaternion<N>>::ln","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the natural logarithm of a quaternion.","sig":null,"attributes":[{"value":"/ Compute the natural logarithm of a quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":634546,"byte_end":634596,"line_start":463,"line_end":463,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":634601,"byte_end":634604,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":634609,"byte_end":634622,"line_start":465,"line_end":465,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":634627,"byte_end":634634,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":634639,"byte_end":634678,"line_start":467,"line_end":467,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":634683,"byte_end":634714,"line_start":468,"line_end":468,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(2.0, 5.0, 0.0, 0.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":634719,"byte_end":634767,"line_start":469,"line_end":469,"column_start":5,"column_end":53}},{"value":"/ assert_relative_eq!(q.ln(), Quaternion::new(1.683647, 1.190289, 0.0, 0.0), epsilon = 1.0e-6)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":634772,"byte_end":634868,"line_start":470,"line_end":470,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":634873,"byte_end":634880,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":634885,"byte_end":634894,"line_start":472,"line_end":472,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4757},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":635459,"byte_end":635462,"line_start":491,"line_end":491,"column_start":12,"column_end":15},"name":"exp","qualname":"<Quaternion<N>>::exp","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the exponential of a quaternion.","sig":null,"attributes":[{"value":"/ Compute the exponential of a quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":635104,"byte_end":635148,"line_start":481,"line_end":481,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":635153,"byte_end":635156,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":635161,"byte_end":635174,"line_start":483,"line_end":483,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":635179,"byte_end":635186,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":635191,"byte_end":635230,"line_start":485,"line_end":485,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":635235,"byte_end":635266,"line_start":486,"line_end":486,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.683647, 1.190289, 0.0, 0.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":635271,"byte_end":635329,"line_start":487,"line_end":487,"column_start":5,"column_end":63}},{"value":"/ assert_relative_eq!(q.exp(), Quaternion::new(2.0, 5.0, 0.0, 0.0), epsilon = 1.0e-5)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":635334,"byte_end":635421,"line_start":488,"line_end":488,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":635426,"byte_end":635433,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":635438,"byte_end":635447,"line_start":490,"line_end":490,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4758},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":636159,"byte_end":636166,"line_start":510,"line_end":510,"column_start":12,"column_end":19},"name":"exp_eps","qualname":"<Quaternion<N>>::exp_eps","value":"fn (&self, eps: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the exponential of a quaternion. Returns the identity if the vector part of this quaternion\n has a norm smaller than `eps`.","sig":null,"attributes":[{"value":"/ Compute the exponential of a quaternion. Returns the identity if the vector part of this quaternion","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":635539,"byte_end":635642,"line_start":495,"line_end":495,"column_start":5,"column_end":108}},{"value":"/ has a norm smaller than `eps`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":635647,"byte_end":635681,"line_start":496,"line_end":496,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":635686,"byte_end":635689,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":635694,"byte_end":635707,"line_start":498,"line_end":498,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":635712,"byte_end":635719,"line_start":499,"line_end":499,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":635724,"byte_end":635763,"line_start":500,"line_end":500,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":635768,"byte_end":635799,"line_start":501,"line_end":501,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.683647, 1.190289, 0.0, 0.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":635804,"byte_end":635862,"line_start":502,"line_end":502,"column_start":5,"column_end":63}},{"value":"/ assert_relative_eq!(q.exp_eps(1.0e-6), Quaternion::new(2.0, 5.0, 0.0, 0.0), epsilon = 1.0e-5);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":635867,"byte_end":635965,"line_start":503,"line_end":503,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":635970,"byte_end":635973,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ // Singular case.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":635978,"byte_end":635999,"line_start":505,"line_end":505,"column_start":5,"column_end":26}},{"value":"/ let q = Quaternion::new(0.0000001, 0.0, 0.0, 0.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":636004,"byte_end":636058,"line_start":506,"line_end":506,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(q.exp_eps(1.0e-6), Quaternion::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":636063,"byte_end":636121,"line_start":507,"line_end":507,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":636126,"byte_end":636133,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":636138,"byte_end":636147,"line_start":509,"line_end":509,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4761},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":636998,"byte_end":637002,"line_start":536,"line_end":536,"column_start":12,"column_end":16},"name":"powf","qualname":"<Quaternion<N>>::powf","value":"fn (&self, n: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise the quaternion to a given floating power.","sig":null,"attributes":[{"value":"/ Raise the quaternion to a given floating power.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":636615,"byte_end":636666,"line_start":526,"line_end":526,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":636671,"byte_end":636674,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":636679,"byte_end":636692,"line_start":528,"line_end":528,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":636697,"byte_end":636704,"line_start":529,"line_end":529,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":636709,"byte_end":636748,"line_start":530,"line_end":530,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":636753,"byte_end":636784,"line_start":531,"line_end":531,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":636789,"byte_end":636837,"line_start":532,"line_end":532,"column_start":5,"column_end":53}},{"value":"/ assert_relative_eq!(q.powf(1.5), Quaternion::new( -6.2576659, 4.1549037, 6.2323556, 8.3098075), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":636842,"byte_end":636960,"line_start":533,"line_end":533,"column_start":5,"column_end":123}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":636965,"byte_end":636972,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":636977,"byte_end":636986,"line_start":535,"line_end":535,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4762},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637450,"byte_end":637463,"line_start":550,"line_end":550,"column_start":12,"column_end":25},"name":"as_vector_mut","qualname":"<Quaternion<N>>::as_vector_mut","value":"fn (&mut self) -> &mut Vector4<N>","parent":null,"children":[],"decl_id":null,"docs":" Transforms this quaternion into its 4D vector form (Vector part, Scalar part).","sig":null,"attributes":[{"value":"/ Transforms this quaternion into its 4D vector form (Vector part, Scalar part).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637067,"byte_end":637149,"line_start":540,"line_end":540,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637154,"byte_end":637157,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637162,"byte_end":637175,"line_start":542,"line_end":542,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637180,"byte_end":637187,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Quaternion, Vector4};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637192,"byte_end":637234,"line_start":544,"line_end":544,"column_start":5,"column_end":47}},{"value":"/ let mut q = Quaternion::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637239,"byte_end":637278,"line_start":545,"line_end":545,"column_start":5,"column_end":44}},{"value":"/ *q.as_vector_mut() = Vector4::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637283,"byte_end":637341,"line_start":546,"line_end":546,"column_start":5,"column_end":63}},{"value":"/ assert!(q.i == 1.0 && q.j == 2.0 && q.k == 3.0 && q.w == 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637346,"byte_end":637412,"line_start":547,"line_end":547,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637417,"byte_end":637424,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637429,"byte_end":637438,"line_start":549,"line_end":549,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4763},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637961,"byte_end":637971,"line_start":569,"line_end":569,"column_start":12,"column_end":22},"name":"vector_mut","qualname":"<Quaternion<N>>::vector_mut","value":"fn (&mut self) -> MatrixSliceMut<N, U3, U1, RStride<N, U4, U1>, CStride<N, U4, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The mutable vector part `(i, j, k)` of this quaternion.","sig":null,"attributes":[{"value":"/ The mutable vector part `(i, j, k)` of this quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637532,"byte_end":637591,"line_start":554,"line_end":554,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637596,"byte_end":637599,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637604,"byte_end":637617,"line_start":556,"line_end":556,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637622,"byte_end":637629,"line_start":557,"line_end":557,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Quaternion, Vector4};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637634,"byte_end":637676,"line_start":558,"line_end":558,"column_start":5,"column_end":47}},{"value":"/ let mut q = Quaternion::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637681,"byte_end":637720,"line_start":559,"line_end":559,"column_start":5,"column_end":44}},{"value":"/ {","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637725,"byte_end":637730,"line_start":560,"line_end":560,"column_start":5,"column_end":10}},{"value":"/     let mut v = q.vector_mut();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637735,"byte_end":637770,"line_start":561,"line_end":561,"column_start":5,"column_end":40}},{"value":"/     v[0] = 2.0;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637775,"byte_end":637794,"line_start":562,"line_end":562,"column_start":5,"column_end":24}},{"value":"/     v[1] = 3.0;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637799,"byte_end":637818,"line_start":563,"line_end":563,"column_start":5,"column_end":24}},{"value":"/     v[2] = 4.0;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637823,"byte_end":637842,"line_start":564,"line_end":564,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637847,"byte_end":637852,"line_start":565,"line_end":565,"column_start":5,"column_end":10}},{"value":"/ assert!(q.i == 2.0 && q.j == 3.0 && q.k == 4.0 && q.w == 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637857,"byte_end":637923,"line_start":566,"line_end":566,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637928,"byte_end":637935,"line_start":567,"line_end":567,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":637940,"byte_end":637949,"line_start":568,"line_end":568,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4764},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":638440,"byte_end":638453,"line_start":585,"line_end":585,"column_start":12,"column_end":25},"name":"conjugate_mut","qualname":"<Quaternion<N>>::conjugate_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces this quaternion by its conjugate.","sig":null,"attributes":[{"value":"/ Replaces this quaternion by its conjugate.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":638124,"byte_end":638170,"line_start":575,"line_end":575,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":638175,"byte_end":638178,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":638183,"byte_end":638196,"line_start":577,"line_end":577,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":638201,"byte_end":638208,"line_start":578,"line_end":578,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":638213,"byte_end":638244,"line_start":579,"line_end":579,"column_start":5,"column_end":36}},{"value":"/ let mut q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":638249,"byte_end":638301,"line_start":580,"line_end":580,"column_start":5,"column_end":57}},{"value":"/ q.conjugate_mut();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":638306,"byte_end":638328,"line_start":581,"line_end":581,"column_start":5,"column_end":27}},{"value":"/ assert!(q.i == -2.0 && q.j == -3.0 && q.k == -4.0 && q.w == 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":638333,"byte_end":638402,"line_start":582,"line_end":582,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":638407,"byte_end":638414,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":638419,"byte_end":638428,"line_start":584,"line_end":584,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4765},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":639152,"byte_end":639167,"line_start":607,"line_end":607,"column_start":12,"column_end":27},"name":"try_inverse_mut","qualname":"<Quaternion<N>>::try_inverse_mut","value":"fn (&mut self) -> N::SimdBool","parent":null,"children":[],"decl_id":null,"docs":" Inverts this quaternion in-place if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this quaternion in-place if it is not zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":638604,"byte_end":638659,"line_start":591,"line_end":591,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":638664,"byte_end":638667,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":638672,"byte_end":638685,"line_start":593,"line_end":593,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":638690,"byte_end":638697,"line_start":594,"line_end":594,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":638702,"byte_end":638741,"line_start":595,"line_end":595,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":638746,"byte_end":638777,"line_start":596,"line_end":596,"column_start":5,"column_end":36}},{"value":"/ let mut q = Quaternion::new(1.0f32, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":638782,"byte_end":638837,"line_start":597,"line_end":597,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":638842,"byte_end":638845,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ assert!(q.try_inverse_mut());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":638850,"byte_end":638883,"line_start":599,"line_end":599,"column_start":5,"column_end":38}},{"value":"/ assert_relative_eq!(q * Quaternion::new(1.0, 2.0, 3.0, 4.0), Quaternion::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":638888,"byte_end":638977,"line_start":600,"line_end":600,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":638982,"byte_end":638985,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ //Non-invertible case","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":638990,"byte_end":639015,"line_start":602,"line_end":602,"column_start":5,"column_end":30}},{"value":"/ let mut q = Quaternion::new(0.0f32, 0.0, 0.0, 0.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":639020,"byte_end":639075,"line_start":603,"line_end":603,"column_start":5,"column_end":60}},{"value":"/ assert!(!q.try_inverse_mut());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":639080,"byte_end":639114,"line_start":604,"line_end":604,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":639119,"byte_end":639126,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":639131,"byte_end":639140,"line_start":606,"line_end":606,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4768},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":639721,"byte_end":639734,"line_start":625,"line_end":625,"column_start":12,"column_end":25},"name":"normalize_mut","qualname":"<Quaternion<N>>::normalize_mut","value":"fn (&mut self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this quaternion.","sig":null,"attributes":[{"value":"/ Normalizes this quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":639406,"byte_end":639437,"line_start":614,"line_end":614,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":639442,"byte_end":639445,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":639450,"byte_end":639463,"line_start":616,"line_end":616,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":639468,"byte_end":639475,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":639480,"byte_end":639519,"line_start":618,"line_end":618,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":639524,"byte_end":639555,"line_start":619,"line_end":619,"column_start":5,"column_end":36}},{"value":"/ let mut q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":639560,"byte_end":639612,"line_start":620,"line_end":620,"column_start":5,"column_end":57}},{"value":"/ q.normalize_mut();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":639617,"byte_end":639639,"line_start":621,"line_end":621,"column_start":5,"column_end":27}},{"value":"/ assert_relative_eq!(q.norm(), 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":639644,"byte_end":639683,"line_start":622,"line_end":622,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":639688,"byte_end":639695,"line_start":623,"line_end":623,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":639700,"byte_end":639709,"line_start":624,"line_end":624,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4769},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":639864,"byte_end":639871,"line_start":631,"line_end":631,"column_start":12,"column_end":19},"name":"squared","qualname":"<Quaternion<N>>::squared","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates square of a quaternion.\n","sig":null,"attributes":[{"value":"/ Calculates square of a quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":639800,"byte_end":639838,"line_start":629,"line_end":629,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":639843,"byte_end":639852,"line_start":630,"line_end":630,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4770},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":639978,"byte_end":639982,"line_start":637,"line_end":637,"column_start":12,"column_end":16},"name":"half","qualname":"<Quaternion<N>>::half","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Divides quaternion into two.\n","sig":null,"attributes":[{"value":"/ Divides quaternion into two.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":639920,"byte_end":639952,"line_start":635,"line_end":635,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":639957,"byte_end":639966,"line_start":636,"line_end":636,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4771},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":640102,"byte_end":640106,"line_start":643,"line_end":643,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<Quaternion<N>>::sqrt","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates square root.\n","sig":null,"attributes":[{"value":"/ Calculates square root.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":640049,"byte_end":640076,"line_start":641,"line_end":641,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":640081,"byte_end":640090,"line_start":642,"line_end":642,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4772},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":640315,"byte_end":640322,"line_start":651,"line_end":651,"column_start":12,"column_end":19},"name":"is_pure","qualname":"<Quaternion<N>>::is_pure","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the quaternion is pure.","sig":null,"attributes":[{"value":"/ Check if the quaternion is pure.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":640174,"byte_end":640210,"line_start":647,"line_end":647,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":640215,"byte_end":640218,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ A quaternion is pure if it has no real part (`self.w == 0.0`).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":640223,"byte_end":640289,"line_start":649,"line_end":649,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":640294,"byte_end":640303,"line_start":650,"line_end":650,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4773},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":640444,"byte_end":640448,"line_start":657,"line_end":657,"column_start":12,"column_end":16},"name":"pure","qualname":"<Quaternion<N>>::pure","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert quaternion to pure quaternion.\n","sig":null,"attributes":[{"value":"/ Convert quaternion to pure quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":640376,"byte_end":640418,"line_start":655,"line_end":655,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":640423,"byte_end":640432,"line_start":656,"line_end":656,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4774},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":640644,"byte_end":640652,"line_start":665,"line_end":665,"column_start":12,"column_end":20},"name":"left_div","qualname":"<Quaternion<N>>::left_div","value":"fn (&self, other: &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Left quaternionic division.","sig":null,"attributes":[{"value":"/ Left quaternionic division.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":640514,"byte_end":640545,"line_start":661,"line_end":661,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":640550,"byte_end":640553,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ Calculates B<sup>-1</sup> * A where A = self, B = other.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":640558,"byte_end":640618,"line_start":663,"line_end":663,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":640623,"byte_end":640632,"line_start":664,"line_end":664,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4776},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":641376,"byte_end":641385,"line_start":687,"line_end":687,"column_start":12,"column_end":21},"name":"right_div","qualname":"<Quaternion<N>>::right_div","value":"fn (&self, other: &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Right quaternionic division.","sig":null,"attributes":[{"value":"/ Right quaternionic division.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":640789,"byte_end":640821,"line_start":672,"line_end":672,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":640826,"byte_end":640829,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ Calculates A * B<sup>-1</sup> where A = self, B = other.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":640834,"byte_end":640894,"line_start":674,"line_end":674,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":640899,"byte_end":640902,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":640907,"byte_end":640920,"line_start":676,"line_end":676,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":640925,"byte_end":640932,"line_start":677,"line_end":677,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":640937,"byte_end":640976,"line_start":678,"line_end":678,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":640981,"byte_end":641012,"line_start":679,"line_end":679,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":641017,"byte_end":641065,"line_start":680,"line_end":680,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":641070,"byte_end":641118,"line_start":681,"line_end":681,"column_start":5,"column_end":53}},{"value":"/ let result = a.right_div(&b).unwrap();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":641123,"byte_end":641165,"line_start":682,"line_end":682,"column_start":5,"column_end":47}},{"value":"/ let expected = Quaternion::new(0.4, 0.13333333333333336, -0.4666666666666667, 0.26666666666666666);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":641170,"byte_end":641273,"line_start":683,"line_end":683,"column_start":5,"column_end":108}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":641278,"byte_end":641338,"line_start":684,"line_end":684,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":641343,"byte_end":641350,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":641355,"byte_end":641364,"line_start":686,"line_end":686,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4778},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":641993,"byte_end":641996,"line_start":706,"line_end":706,"column_start":12,"column_end":15},"name":"cos","qualname":"<Quaternion<N>>::cos","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic cosinus.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic cosinus.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":641522,"byte_end":641562,"line_start":694,"line_end":694,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":641567,"byte_end":641570,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":641575,"byte_end":641588,"line_start":696,"line_end":696,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":641593,"byte_end":641600,"line_start":697,"line_end":697,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":641605,"byte_end":641644,"line_start":698,"line_end":698,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":641649,"byte_end":641680,"line_start":699,"line_end":699,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":641685,"byte_end":641737,"line_start":700,"line_end":700,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(58.93364616794395, -34.086183690465596, -51.1292755356984, -68.17236738093119);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":641742,"byte_end":641856,"line_start":701,"line_end":701,"column_start":5,"column_end":119}},{"value":"/ let result = input.cos();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":641861,"byte_end":641890,"line_start":702,"line_end":702,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":641895,"byte_end":641955,"line_start":703,"line_end":703,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":641960,"byte_end":641967,"line_start":704,"line_end":704,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":641972,"byte_end":641981,"line_start":705,"line_end":705,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4779},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":642555,"byte_end":642559,"line_start":723,"line_end":723,"column_start":12,"column_end":16},"name":"acos","qualname":"<Quaternion<N>>::acos","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic arccosinus.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic arccosinus.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":642196,"byte_end":642239,"line_start":712,"line_end":712,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":642244,"byte_end":642247,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":642252,"byte_end":642265,"line_start":714,"line_end":714,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":642270,"byte_end":642277,"line_start":715,"line_end":715,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":642282,"byte_end":642321,"line_start":716,"line_end":716,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":642326,"byte_end":642357,"line_start":717,"line_end":717,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":642362,"byte_end":642414,"line_start":718,"line_end":718,"column_start":5,"column_end":57}},{"value":"/ let result = input.cos().acos();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":642419,"byte_end":642455,"line_start":719,"line_end":719,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(input, result, epsilon = 1.0e-7);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":642460,"byte_end":642517,"line_start":720,"line_end":720,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":642522,"byte_end":642529,"line_start":721,"line_end":721,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":642534,"byte_end":642543,"line_start":722,"line_end":722,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4780},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":643239,"byte_end":643242,"line_start":744,"line_end":744,"column_start":12,"column_end":15},"name":"sin","qualname":"<Quaternion<N>>::sin","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic sinus.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic sinus.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":642772,"byte_end":642810,"line_start":732,"line_end":732,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":642815,"byte_end":642818,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":642823,"byte_end":642836,"line_start":734,"line_end":734,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":642841,"byte_end":642848,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":642853,"byte_end":642892,"line_start":736,"line_end":736,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":642897,"byte_end":642928,"line_start":737,"line_end":737,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":642933,"byte_end":642985,"line_start":738,"line_end":738,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(91.78371578403467, 21.886486853029176, 32.82973027954377, 43.77297370605835);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":642990,"byte_end":643102,"line_start":739,"line_end":739,"column_start":5,"column_end":117}},{"value":"/ let result = input.sin();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":643107,"byte_end":643136,"line_start":740,"line_end":740,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":643141,"byte_end":643201,"line_start":741,"line_end":741,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":643206,"byte_end":643213,"line_start":742,"line_end":742,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":643218,"byte_end":643227,"line_start":743,"line_end":743,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4781},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":643798,"byte_end":643802,"line_start":761,"line_end":761,"column_start":12,"column_end":16},"name":"asin","qualname":"<Quaternion<N>>::asin","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic arcsinus.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic arcsinus.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":643441,"byte_end":643482,"line_start":750,"line_end":750,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":643487,"byte_end":643490,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":643495,"byte_end":643508,"line_start":752,"line_end":752,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":643513,"byte_end":643520,"line_start":753,"line_end":753,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":643525,"byte_end":643564,"line_start":754,"line_end":754,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":643569,"byte_end":643600,"line_start":755,"line_end":755,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":643605,"byte_end":643657,"line_start":756,"line_end":756,"column_start":5,"column_end":57}},{"value":"/ let result = input.sin().asin();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":643662,"byte_end":643698,"line_start":757,"line_end":757,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(input, result, epsilon = 1.0e-7);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":643703,"byte_end":643760,"line_start":758,"line_end":758,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":643765,"byte_end":643772,"line_start":759,"line_end":759,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":643777,"byte_end":643786,"line_start":760,"line_end":760,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4782},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644497,"byte_end":644500,"line_start":782,"line_end":782,"column_start":12,"column_end":15},"name":"tan","qualname":"<Quaternion<N>>::tan","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic tangent.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic tangent.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644021,"byte_end":644061,"line_start":770,"line_end":770,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644066,"byte_end":644069,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644074,"byte_end":644087,"line_start":772,"line_end":772,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644092,"byte_end":644099,"line_start":773,"line_end":773,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644104,"byte_end":644143,"line_start":774,"line_end":774,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644148,"byte_end":644179,"line_start":775,"line_end":775,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644184,"byte_end":644236,"line_start":776,"line_end":776,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(0.00003821631725009489, 0.3713971716439371, 0.5570957574659058, 0.7427943432878743);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644241,"byte_end":644360,"line_start":777,"line_end":777,"column_start":5,"column_end":124}},{"value":"/ let result = input.tan();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644365,"byte_end":644394,"line_start":778,"line_end":778,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644399,"byte_end":644459,"line_start":779,"line_end":779,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644464,"byte_end":644471,"line_start":780,"line_end":780,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644476,"byte_end":644485,"line_start":781,"line_end":781,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4783},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644975,"byte_end":644979,"line_start":800,"line_end":800,"column_start":12,"column_end":16},"name":"atan","qualname":"<Quaternion<N>>::atan","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic arctangent.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic arctangent.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644616,"byte_end":644659,"line_start":789,"line_end":789,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644664,"byte_end":644667,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644672,"byte_end":644685,"line_start":791,"line_end":791,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644690,"byte_end":644697,"line_start":792,"line_end":792,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644702,"byte_end":644741,"line_start":793,"line_end":793,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644746,"byte_end":644777,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644782,"byte_end":644834,"line_start":795,"line_end":795,"column_start":5,"column_end":57}},{"value":"/ let result = input.tan().atan();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644839,"byte_end":644875,"line_start":796,"line_end":796,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(input, result, epsilon = 1.0e-7);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644880,"byte_end":644937,"line_start":797,"line_end":797,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644942,"byte_end":644949,"line_start":798,"line_end":798,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":644954,"byte_end":644963,"line_start":799,"line_end":799,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4784},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":645740,"byte_end":645744,"line_start":824,"line_end":824,"column_start":12,"column_end":16},"name":"sinh","qualname":"<Quaternion<N>>::sinh","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic sinus.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic sinus.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":645255,"byte_end":645304,"line_start":812,"line_end":812,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":645309,"byte_end":645312,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":645317,"byte_end":645330,"line_start":814,"line_end":814,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":645335,"byte_end":645342,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":645347,"byte_end":645386,"line_start":816,"line_end":816,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":645391,"byte_end":645422,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":645427,"byte_end":645479,"line_start":818,"line_end":818,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(0.7323376060463428, -0.4482074499805421, -0.6723111749708133, -0.8964148999610843);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":645484,"byte_end":645602,"line_start":819,"line_end":819,"column_start":5,"column_end":123}},{"value":"/ let result = input.sinh();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":645607,"byte_end":645637,"line_start":820,"line_end":820,"column_start":5,"column_end":35}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":645642,"byte_end":645702,"line_start":821,"line_end":821,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":645707,"byte_end":645714,"line_start":822,"line_end":822,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":645719,"byte_end":645728,"line_start":823,"line_end":823,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4785},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":646300,"byte_end":646305,"line_start":840,"line_end":840,"column_start":12,"column_end":17},"name":"asinh","qualname":"<Quaternion<N>>::asinh","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic arcsinus.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic arcsinus.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":645817,"byte_end":645869,"line_start":828,"line_end":828,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":645874,"byte_end":645877,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":645882,"byte_end":645895,"line_start":830,"line_end":830,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":645900,"byte_end":645907,"line_start":831,"line_end":831,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":645912,"byte_end":645951,"line_start":832,"line_end":832,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":645956,"byte_end":645987,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":645992,"byte_end":646044,"line_start":834,"line_end":834,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(2.385889902585242, 0.514052600662788, 0.7710789009941821, 1.028105201325576);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":646049,"byte_end":646161,"line_start":835,"line_end":835,"column_start":5,"column_end":117}},{"value":"/ let result = input.asinh();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":646166,"byte_end":646197,"line_start":836,"line_end":836,"column_start":5,"column_end":36}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":646202,"byte_end":646262,"line_start":837,"line_end":837,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":646267,"byte_end":646274,"line_start":838,"line_end":838,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":646279,"byte_end":646288,"line_start":839,"line_end":839,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4786},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":646919,"byte_end":646923,"line_start":857,"line_end":857,"column_start":12,"column_end":16},"name":"cosh","qualname":"<Quaternion<N>>::cosh","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic cosinus.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic cosinus.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":646432,"byte_end":646483,"line_start":845,"line_end":845,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":646488,"byte_end":646491,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":646496,"byte_end":646509,"line_start":847,"line_end":847,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":646514,"byte_end":646521,"line_start":848,"line_end":848,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":646526,"byte_end":646565,"line_start":849,"line_end":849,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":646570,"byte_end":646601,"line_start":850,"line_end":850,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":646606,"byte_end":646658,"line_start":851,"line_end":851,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(0.9615851176369566, -0.3413521745610167, -0.5120282618415251, -0.6827043491220334);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":646663,"byte_end":646781,"line_start":852,"line_end":852,"column_start":5,"column_end":123}},{"value":"/ let result = input.cosh();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":646786,"byte_end":646816,"line_start":853,"line_end":853,"column_start":5,"column_end":35}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":646821,"byte_end":646881,"line_start":854,"line_end":854,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":646886,"byte_end":646893,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":646898,"byte_end":646907,"line_start":856,"line_end":856,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4787},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":647484,"byte_end":647489,"line_start":873,"line_end":873,"column_start":12,"column_end":17},"name":"acosh","qualname":"<Quaternion<N>>::acosh","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic arccosinus.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic arccosinus.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":646996,"byte_end":647050,"line_start":861,"line_end":861,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":647055,"byte_end":647058,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":647063,"byte_end":647076,"line_start":863,"line_end":863,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":647081,"byte_end":647088,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":647093,"byte_end":647132,"line_start":865,"line_end":865,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":647137,"byte_end":647168,"line_start":866,"line_end":866,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":647173,"byte_end":647225,"line_start":867,"line_end":867,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(2.4014472020074007, 0.5162761016176176, 0.7744141524264264, 1.0325522032352352);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":647230,"byte_end":647345,"line_start":868,"line_end":868,"column_start":5,"column_end":120}},{"value":"/ let result = input.acosh();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":647350,"byte_end":647381,"line_start":869,"line_end":869,"column_start":5,"column_end":36}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":647386,"byte_end":647446,"line_start":870,"line_end":870,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":647451,"byte_end":647458,"line_start":871,"line_end":871,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":647463,"byte_end":647472,"line_start":872,"line_end":872,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4788},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":648122,"byte_end":648126,"line_start":890,"line_end":890,"column_start":12,"column_end":16},"name":"tanh","qualname":"<Quaternion<N>>::tanh","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic tangent.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic tangent.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":647633,"byte_end":647684,"line_start":878,"line_end":878,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":647689,"byte_end":647692,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":647697,"byte_end":647710,"line_start":880,"line_end":880,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":647715,"byte_end":647722,"line_start":881,"line_end":881,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":647727,"byte_end":647766,"line_start":882,"line_end":882,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":647771,"byte_end":647802,"line_start":883,"line_end":883,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":647807,"byte_end":647859,"line_start":884,"line_end":884,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(1.0248695360556623, -0.10229568178876419, -0.1534435226831464, -0.20459136357752844);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":647864,"byte_end":647984,"line_start":885,"line_end":885,"column_start":5,"column_end":125}},{"value":"/ let result = input.tanh();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":647989,"byte_end":648019,"line_start":886,"line_end":886,"column_start":5,"column_end":35}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":648024,"byte_end":648084,"line_start":887,"line_end":887,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":648089,"byte_end":648096,"line_start":888,"line_end":888,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":648101,"byte_end":648110,"line_start":889,"line_end":889,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4789},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":648733,"byte_end":648738,"line_start":909,"line_end":909,"column_start":12,"column_end":17},"name":"atanh","qualname":"<Quaternion<N>>::atanh","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic arctangent.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic arctangent.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":648244,"byte_end":648298,"line_start":897,"line_end":897,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":648303,"byte_end":648306,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":648311,"byte_end":648324,"line_start":899,"line_end":899,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":648329,"byte_end":648336,"line_start":900,"line_end":900,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":648341,"byte_end":648380,"line_start":901,"line_end":901,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":648385,"byte_end":648416,"line_start":902,"line_end":902,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":648421,"byte_end":648473,"line_start":903,"line_end":903,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(0.03230293287000163, 0.5173453683196951, 0.7760180524795426, 1.0346907366393903);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":648478,"byte_end":648594,"line_start":904,"line_end":904,"column_start":5,"column_end":121}},{"value":"/ let result = input.atanh();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":648599,"byte_end":648630,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":648635,"byte_end":648695,"line_start":906,"line_end":906,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":648700,"byte_end":648707,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":648712,"byte_end":648721,"line_start":908,"line_end":908,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":4809},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":650854,"byte_end":650868,"line_start":975,"line_end":975,"column_start":10,"column_end":24},"name":"UnitQuaternion","qualname":"::geometry::quaternion::UnitQuaternion","value":"Unit<Quaternion<N>>","parent":null,"children":[],"decl_id":null,"docs":" A unit quaternions. May be used to represent a rotation.\n","sig":null,"attributes":[{"value":"/ A unit quaternions. May be used to represent a rotation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":650784,"byte_end":650844,"line_start":974,"line_end":974,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4820},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":651826,"byte_end":651831,"line_start":1015,"line_end":1015,"column_start":12,"column_end":17},"name":"angle","qualname":"<UnitQuaternion<N>>::angle","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle in [0; pi] of this unit quaternion.","sig":null,"attributes":[{"value":"/ The rotation angle in [0; pi] of this unit quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":651463,"byte_end":651521,"line_start":1005,"line_end":1005,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":651526,"byte_end":651529,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":651534,"byte_end":651547,"line_start":1007,"line_end":1007,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":651552,"byte_end":651559,"line_start":1008,"line_end":1008,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Unit, UnitQuaternion, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":651564,"byte_end":651616,"line_start":1009,"line_end":1009,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":651621,"byte_end":651685,"line_start":1010,"line_end":1010,"column_start":5,"column_end":69}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 1.78);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":651690,"byte_end":651749,"line_start":1011,"line_end":1011,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(rot.angle(), 1.78);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":651754,"byte_end":651788,"line_start":1012,"line_end":1012,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":651793,"byte_end":651800,"line_start":1013,"line_end":1013,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":651805,"byte_end":651814,"line_start":1014,"line_end":1014,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4821},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652316,"byte_end":652326,"line_start":1031,"line_end":1031,"column_start":12,"column_end":22},"name":"quaternion","qualname":"<UnitQuaternion<N>>::quaternion","value":"fn (&self) -> &Quaternion<N>","parent":null,"children":[],"decl_id":null,"docs":" The underlying quaternion.","sig":null,"attributes":[{"value":"/ The underlying quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":651991,"byte_end":652021,"line_start":1020,"line_end":1020,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652026,"byte_end":652029,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ Same as `self.as_ref()`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652034,"byte_end":652062,"line_start":1022,"line_end":1022,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652067,"byte_end":652070,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652075,"byte_end":652088,"line_start":1024,"line_end":1024,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652093,"byte_end":652100,"line_start":1025,"line_end":1025,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Quaternion};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652105,"byte_end":652154,"line_start":1026,"line_end":1026,"column_start":5,"column_end":54}},{"value":"/ let axis = UnitQuaternion::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652159,"byte_end":652201,"line_start":1027,"line_end":1027,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*axis.quaternion(), Quaternion::new(1.0, 0.0, 0.0, 0.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652206,"byte_end":652278,"line_start":1028,"line_end":1028,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652283,"byte_end":652290,"line_start":1029,"line_end":1029,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652295,"byte_end":652304,"line_start":1030,"line_end":1030,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4822},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652869,"byte_end":652878,"line_start":1047,"line_end":1047,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<UnitQuaternion<N>>::conjugate","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the conjugate of this unit quaternion.","sig":null,"attributes":[{"value":"/ Compute the conjugate of this unit quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652387,"byte_end":652437,"line_start":1035,"line_end":1035,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652442,"byte_end":652445,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652450,"byte_end":652463,"line_start":1037,"line_end":1037,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652468,"byte_end":652475,"line_start":1038,"line_end":1038,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Unit, UnitQuaternion, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652480,"byte_end":652532,"line_start":1039,"line_end":1039,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652537,"byte_end":652601,"line_start":1040,"line_end":1040,"column_start":5,"column_end":69}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 1.78);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652606,"byte_end":652665,"line_start":1041,"line_end":1041,"column_start":5,"column_end":64}},{"value":"/ let conj = rot.conjugate();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652670,"byte_end":652701,"line_start":1042,"line_end":1042,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(conj, UnitQuaternion::from_axis_angle(&-axis, 1.78));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652706,"byte_end":652774,"line_start":1043,"line_end":1043,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652779,"byte_end":652786,"line_start":1044,"line_end":1044,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652791,"byte_end":652800,"line_start":1045,"line_end":1045,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use conjugate_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652805,"byte_end":652857,"line_start":1046,"line_end":1046,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4823},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":653480,"byte_end":653487,"line_start":1064,"line_end":1064,"column_start":12,"column_end":19},"name":"inverse","qualname":"<UnitQuaternion<N>>::inverse","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts this quaternion if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this quaternion if it is not zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":652962,"byte_end":653008,"line_start":1051,"line_end":1051,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":653013,"byte_end":653016,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":653021,"byte_end":653034,"line_start":1053,"line_end":1053,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":653039,"byte_end":653046,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Unit, UnitQuaternion, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":653051,"byte_end":653103,"line_start":1055,"line_end":1055,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":653108,"byte_end":653172,"line_start":1056,"line_end":1056,"column_start":5,"column_end":69}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 1.78);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":653177,"byte_end":653236,"line_start":1057,"line_end":1057,"column_start":5,"column_end":64}},{"value":"/ let inv = rot.inverse();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":653241,"byte_end":653269,"line_start":1058,"line_end":1058,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(rot * inv, UnitQuaternion::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":653274,"byte_end":653328,"line_start":1059,"line_end":1059,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(inv * rot, UnitQuaternion::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":653333,"byte_end":653387,"line_start":1060,"line_end":1060,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":653392,"byte_end":653399,"line_start":1061,"line_end":1061,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":653404,"byte_end":653413,"line_start":1062,"line_end":1062,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":653418,"byte_end":653468,"line_start":1063,"line_end":1063,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4824},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":654012,"byte_end":654020,"line_start":1079,"line_end":1079,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<UnitQuaternion<N>>::angle_to","value":"fn (&self, other: &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation angle needed to make `self` and `other` coincide.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":653541,"byte_end":653607,"line_start":1068,"line_end":1068,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":653612,"byte_end":653615,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":653620,"byte_end":653633,"line_start":1070,"line_end":1070,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":653638,"byte_end":653645,"line_start":1071,"line_end":1071,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":653650,"byte_end":653689,"line_start":1072,"line_end":1072,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":653694,"byte_end":653740,"line_start":1073,"line_end":1073,"column_start":5,"column_end":51}},{"value":"/ let rot1 = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":653745,"byte_end":653817,"line_start":1074,"line_end":1074,"column_start":5,"column_end":77}},{"value":"/ let rot2 = UnitQuaternion::from_axis_angle(&Vector3::x_axis(), 0.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":653822,"byte_end":653894,"line_start":1075,"line_end":1075,"column_start":5,"column_end":77}},{"value":"/ assert_relative_eq!(rot1.angle_to(&rot2), 1.0045657, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":653899,"byte_end":653974,"line_start":1076,"line_end":1076,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":653979,"byte_end":653986,"line_start":1077,"line_end":1077,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":653991,"byte_end":654000,"line_start":1078,"line_end":1078,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4825},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":654717,"byte_end":654728,"line_start":1098,"line_end":1098,"column_start":12,"column_end":23},"name":"rotation_to","qualname":"<UnitQuaternion<N>>::rotation_to","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The unit quaternion needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The unit quaternion needed to make `self` and `other` coincide.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":654127,"byte_end":654194,"line_start":1084,"line_end":1084,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":654199,"byte_end":654202,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ The result is such that: `self.rotation_to(other) * self == other`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":654207,"byte_end":654278,"line_start":1086,"line_end":1086,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":654283,"byte_end":654286,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":654291,"byte_end":654304,"line_start":1088,"line_end":1088,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":654309,"byte_end":654316,"line_start":1089,"line_end":1089,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":654321,"byte_end":654360,"line_start":1090,"line_end":1090,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":654365,"byte_end":654411,"line_start":1091,"line_end":1091,"column_start":5,"column_end":51}},{"value":"/ let rot1 = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":654416,"byte_end":654488,"line_start":1092,"line_end":1092,"column_start":5,"column_end":77}},{"value":"/ let rot2 = UnitQuaternion::from_axis_angle(&Vector3::x_axis(), 0.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":654493,"byte_end":654565,"line_start":1093,"line_end":1093,"column_start":5,"column_end":77}},{"value":"/ let rot_to = rot1.rotation_to(&rot2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":654570,"byte_end":654611,"line_start":1094,"line_end":1094,"column_start":5,"column_end":46}},{"value":"/ assert_relative_eq!(rot_to * rot1, rot2, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":654616,"byte_end":654679,"line_start":1095,"line_end":1095,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":654684,"byte_end":654691,"line_start":1096,"line_end":1096,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":654696,"byte_end":654705,"line_start":1097,"line_end":1097,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4826},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":655268,"byte_end":655272,"line_start":1114,"line_end":1114,"column_start":12,"column_end":16},"name":"lerp","qualname":"<UnitQuaternion<N>>::lerp","value":"fn (&self, other: &Self, t: N) -> Quaternion<N>","parent":null,"children":[],"decl_id":null,"docs":" Linear interpolation between two unit quaternions.","sig":null,"attributes":[{"value":"/ Linear interpolation between two unit quaternions.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":654792,"byte_end":654846,"line_start":1102,"line_end":1102,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":654851,"byte_end":654854,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ The result is not normalized.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":654859,"byte_end":654892,"line_start":1104,"line_end":1104,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":654897,"byte_end":654900,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":654905,"byte_end":654918,"line_start":1106,"line_end":1106,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":654923,"byte_end":654930,"line_start":1107,"line_end":1107,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Quaternion};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":654935,"byte_end":654984,"line_start":1108,"line_end":1108,"column_start":5,"column_end":54}},{"value":"/ let q1 = UnitQuaternion::new_normalize(Quaternion::new(1.0, 0.0, 0.0, 0.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":654989,"byte_end":655069,"line_start":1109,"line_end":1109,"column_start":5,"column_end":85}},{"value":"/ let q2 = UnitQuaternion::new_normalize(Quaternion::new(0.0, 1.0, 0.0, 0.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":655074,"byte_end":655154,"line_start":1110,"line_end":1110,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(q1.lerp(&q2, 0.1), Quaternion::new(0.9, 0.1, 0.0, 0.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":655159,"byte_end":655230,"line_start":1111,"line_end":1111,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":655235,"byte_end":655242,"line_start":1112,"line_end":1112,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":655247,"byte_end":655256,"line_start":1113,"line_end":1113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4827},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":655935,"byte_end":655940,"line_start":1130,"line_end":1130,"column_start":12,"column_end":17},"name":"nlerp","qualname":"<UnitQuaternion<N>>::nlerp","value":"fn (&self, other: &Self, t: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Normalized linear interpolation between two unit quaternions.","sig":null,"attributes":[{"value":"/ Normalized linear interpolation between two unit quaternions.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":655376,"byte_end":655441,"line_start":1118,"line_end":1118,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":655446,"byte_end":655449,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ This is the same as `self.lerp` except that the result is normalized.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":655454,"byte_end":655527,"line_start":1120,"line_end":1120,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":655532,"byte_end":655535,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":655540,"byte_end":655553,"line_start":1122,"line_end":1122,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":655558,"byte_end":655565,"line_start":1123,"line_end":1123,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Quaternion};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":655570,"byte_end":655619,"line_start":1124,"line_end":1124,"column_start":5,"column_end":54}},{"value":"/ let q1 = UnitQuaternion::new_normalize(Quaternion::new(1.0, 0.0, 0.0, 0.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":655624,"byte_end":655704,"line_start":1125,"line_end":1125,"column_start":5,"column_end":85}},{"value":"/ let q2 = UnitQuaternion::new_normalize(Quaternion::new(0.0, 1.0, 0.0, 0.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":655709,"byte_end":655789,"line_start":1126,"line_end":1126,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(q1.nlerp(&q2, 0.1), UnitQuaternion::new_normalize(Quaternion::new(0.9, 0.1, 0.0, 0.0)));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":655794,"byte_end":655897,"line_start":1127,"line_end":1127,"column_start":5,"column_end":108}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":655902,"byte_end":655909,"line_start":1128,"line_end":1128,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":655914,"byte_end":655923,"line_start":1129,"line_end":1129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4828},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":656807,"byte_end":656812,"line_start":1155,"line_end":1155,"column_start":12,"column_end":17},"name":"slerp","qualname":"<UnitQuaternion<N>>::slerp","value":"fn (&self, other: &Self, t: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Spherical linear interpolation between two unit quaternions.","sig":null,"attributes":[{"value":"/ Spherical linear interpolation between two unit quaternions.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":656103,"byte_end":656167,"line_start":1137,"line_end":1137,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":656172,"byte_end":656175,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ Panics if the angle between both quaternion is 180 degrees (in which case the interpolation","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":656180,"byte_end":656275,"line_start":1139,"line_end":1139,"column_start":5,"column_end":100}},{"value":"/ is not well-defined). Use `.try_slerp` instead to avoid the panic.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":656280,"byte_end":656350,"line_start":1140,"line_end":1140,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":656355,"byte_end":656358,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":656363,"byte_end":656378,"line_start":1142,"line_end":1142,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":656383,"byte_end":656386,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":656391,"byte_end":656398,"line_start":1144,"line_end":1144,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::geometry::UnitQuaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":656403,"byte_end":656448,"line_start":1145,"line_end":1145,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":656453,"byte_end":656456,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ let q1 = UnitQuaternion::from_euler_angles(std::f32::consts::FRAC_PI_4, 0.0, 0.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":656461,"byte_end":656547,"line_start":1147,"line_end":1147,"column_start":5,"column_end":91}},{"value":"/ let q2 = UnitQuaternion::from_euler_angles(-std::f32::consts::PI, 0.0, 0.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":656552,"byte_end":656632,"line_start":1148,"line_end":1148,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":656637,"byte_end":656640,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ let q = q1.slerp(&q2, 1.0 / 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":656645,"byte_end":656682,"line_start":1150,"line_end":1150,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":656687,"byte_end":656690,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q.euler_angles(), (std::f32::consts::FRAC_PI_2, 0.0, 0.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":656695,"byte_end":656769,"line_start":1152,"line_end":1152,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":656774,"byte_end":656781,"line_start":1153,"line_end":1153,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":656786,"byte_end":656795,"line_start":1154,"line_end":1154,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4829},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":657615,"byte_end":657624,"line_start":1174,"line_end":1174,"column_start":12,"column_end":21},"name":"try_slerp","qualname":"<UnitQuaternion<N>>::try_slerp","value":"fn (&self, other: &Self, t: N, epsilon: N) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes the spherical linear interpolation between two unit quaternions or returns `None`\n if both quaternions are approximately 180 degrees apart (in which case the interpolation is\n not well-defined).","sig":null,"attributes":[{"value":"/ Computes the spherical linear interpolation between two unit quaternions or returns `None`","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":657018,"byte_end":657112,"line_start":1163,"line_end":1163,"column_start":5,"column_end":99}},{"value":"/ if both quaternions are approximately 180 degrees apart (in which case the interpolation is","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":657117,"byte_end":657212,"line_start":1164,"line_end":1164,"column_start":5,"column_end":100}},{"value":"/ not well-defined).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":657217,"byte_end":657239,"line_start":1165,"line_end":1165,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":657244,"byte_end":657247,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":657252,"byte_end":657267,"line_start":1167,"line_end":1167,"column_start":5,"column_end":20}},{"value":"/ * `self`: the first quaternion to interpolate from.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":657272,"byte_end":657327,"line_start":1168,"line_end":1168,"column_start":5,"column_end":60}},{"value":"/ * `other`: the second quaternion to interpolate toward.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":657332,"byte_end":657391,"line_start":1169,"line_end":1169,"column_start":5,"column_end":64}},{"value":"/ * `t`: the interpolation parameter. Should be between 0 and 1.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":657396,"byte_end":657462,"line_start":1170,"line_end":1170,"column_start":5,"column_end":71}},{"value":"/ * `epsilon`: the value below which the sinus of the angle separating both quaternion","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":657467,"byte_end":657555,"line_start":1171,"line_end":1171,"column_start":5,"column_end":93}},{"value":"/ must be to return `None`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":657560,"byte_end":657589,"line_start":1172,"line_end":1172,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":657594,"byte_end":657603,"line_start":1173,"line_end":1173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4831},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":658323,"byte_end":658336,"line_start":1197,"line_end":1197,"column_start":12,"column_end":25},"name":"conjugate_mut","qualname":"<UnitQuaternion<N>>::conjugate_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Compute the conjugate of this unit quaternion in-place.\n","sig":null,"attributes":[{"value":"/ Compute the conjugate of this unit quaternion in-place.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":658238,"byte_end":658297,"line_start":1195,"line_end":1195,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":658302,"byte_end":658311,"line_start":1196,"line_end":1196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4832},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":658956,"byte_end":658967,"line_start":1214,"line_end":1214,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<UnitQuaternion<N>>::inverse_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inverts this quaternion if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this quaternion if it is not zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":658409,"byte_end":658455,"line_start":1201,"line_end":1201,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":658460,"byte_end":658463,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":658468,"byte_end":658481,"line_start":1203,"line_end":1203,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":658486,"byte_end":658493,"line_start":1204,"line_end":1204,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":658498,"byte_end":658537,"line_start":1205,"line_end":1205,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":658542,"byte_end":658594,"line_start":1206,"line_end":1206,"column_start":5,"column_end":57}},{"value":"/ let axisangle = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":658599,"byte_end":658647,"line_start":1207,"line_end":1207,"column_start":5,"column_end":53}},{"value":"/ let mut rot = UnitQuaternion::new(axisangle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":658652,"byte_end":658701,"line_start":1208,"line_end":1208,"column_start":5,"column_end":54}},{"value":"/ rot.inverse_mut();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":658706,"byte_end":658728,"line_start":1209,"line_end":1209,"column_start":5,"column_end":27}},{"value":"/ assert_relative_eq!(rot * UnitQuaternion::new(axisangle), UnitQuaternion::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":658733,"byte_end":658823,"line_start":1210,"line_end":1210,"column_start":5,"column_end":95}},{"value":"/ assert_relative_eq!(UnitQuaternion::new(axisangle) * rot, UnitQuaternion::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":658828,"byte_end":658918,"line_start":1211,"line_end":1211,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":658923,"byte_end":658930,"line_start":1212,"line_end":1212,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":658935,"byte_end":658944,"line_start":1213,"line_end":1213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4833},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":659601,"byte_end":659605,"line_start":1233,"line_end":1233,"column_start":12,"column_end":16},"name":"axis","qualname":"<UnitQuaternion<N>>::axis","value":"fn (&self) -> Option<Unit<Vector3<N>>>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis of this unit quaternion or `None` if the rotation is zero.","sig":null,"attributes":[{"value":"/ The rotation axis of this unit quaternion or `None` if the rotation is zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":659040,"byte_end":659120,"line_start":1218,"line_end":1218,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":659125,"byte_end":659128,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":659133,"byte_end":659146,"line_start":1220,"line_end":1220,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":659151,"byte_end":659158,"line_start":1221,"line_end":1221,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":659163,"byte_end":659215,"line_start":1222,"line_end":1222,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":659220,"byte_end":659284,"line_start":1223,"line_end":1223,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":659289,"byte_end":659309,"line_start":1224,"line_end":1224,"column_start":5,"column_end":25}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, angle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":659314,"byte_end":659374,"line_start":1225,"line_end":1225,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(rot.axis(), Some(axis));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":659379,"byte_end":659418,"line_start":1226,"line_end":1226,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":659423,"byte_end":659426,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ // Case with a zero angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":659431,"byte_end":659461,"line_start":1228,"line_end":1228,"column_start":5,"column_end":35}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 0.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":659466,"byte_end":659524,"line_start":1229,"line_end":1229,"column_start":5,"column_end":63}},{"value":"/ assert!(rot.axis().is_none());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":659529,"byte_end":659563,"line_start":1230,"line_end":1230,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":659568,"byte_end":659575,"line_start":1231,"line_end":1231,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":659580,"byte_end":659589,"line_start":1232,"line_end":1232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4834},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":660337,"byte_end":660348,"line_start":1257,"line_end":1257,"column_start":12,"column_end":23},"name":"scaled_axis","qualname":"<UnitQuaternion<N>>::scaled_axis","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis of this unit quaternion multiplied by the rotation angle.","sig":null,"attributes":[{"value":"/ The rotation axis of this unit quaternion multiplied by the rotation angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":659901,"byte_end":659980,"line_start":1246,"line_end":1246,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":659985,"byte_end":659988,"line_start":1247,"line_end":1247,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":659993,"byte_end":660006,"line_start":1248,"line_end":1248,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":660011,"byte_end":660018,"line_start":1249,"line_end":1249,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":660023,"byte_end":660062,"line_start":1250,"line_end":1250,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":660067,"byte_end":660119,"line_start":1251,"line_end":1251,"column_start":5,"column_end":57}},{"value":"/ let axisangle = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":660124,"byte_end":660172,"line_start":1252,"line_end":1252,"column_start":5,"column_end":53}},{"value":"/ let rot = UnitQuaternion::new(axisangle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":660177,"byte_end":660222,"line_start":1253,"line_end":1253,"column_start":5,"column_end":50}},{"value":"/ assert_relative_eq!(rot.scaled_axis(), axisangle, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":660227,"byte_end":660299,"line_start":1254,"line_end":1254,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":660304,"byte_end":660311,"line_start":1255,"line_end":1255,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":660316,"byte_end":660325,"line_start":1256,"line_end":1256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4835},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":661183,"byte_end":661193,"line_start":1285,"line_end":1285,"column_start":12,"column_end":22},"name":"axis_angle","qualname":"<UnitQuaternion<N>>::axis_angle","value":"fn (&self) -> Option<(Unit<Vector3<N>>, N)>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis and angle in ]0, pi] of this unit quaternion.","sig":null,"attributes":[{"value":"/ The rotation axis and angle in ]0, pi] of this unit quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":660561,"byte_end":660628,"line_start":1268,"line_end":1268,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":660633,"byte_end":660636,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the angle is zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":660641,"byte_end":660681,"line_start":1270,"line_end":1270,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":660686,"byte_end":660689,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":660694,"byte_end":660707,"line_start":1272,"line_end":1272,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":660712,"byte_end":660719,"line_start":1273,"line_end":1273,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":660724,"byte_end":660776,"line_start":1274,"line_end":1274,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":660781,"byte_end":660845,"line_start":1275,"line_end":1275,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":660850,"byte_end":660870,"line_start":1276,"line_end":1276,"column_start":5,"column_end":25}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, angle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":660875,"byte_end":660935,"line_start":1277,"line_end":1277,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(rot.axis_angle(), Some((axis, angle)));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":660940,"byte_end":660994,"line_start":1278,"line_end":1278,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":660999,"byte_end":661002,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ // Case with a zero angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":661007,"byte_end":661037,"line_start":1280,"line_end":1280,"column_start":5,"column_end":35}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 0.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":661042,"byte_end":661100,"line_start":1281,"line_end":1281,"column_start":5,"column_end":63}},{"value":"/ assert!(rot.axis_angle().is_none());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":661105,"byte_end":661145,"line_start":1282,"line_end":1282,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":661150,"byte_end":661157,"line_start":1283,"line_end":1283,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":661162,"byte_end":661171,"line_start":1284,"line_end":1284,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4837},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":661507,"byte_end":661510,"line_start":1296,"line_end":1296,"column_start":12,"column_end":15},"name":"exp","qualname":"<UnitQuaternion<N>>::exp","value":"fn (&self) -> Quaternion<N>","parent":null,"children":[],"decl_id":null,"docs":" Compute the exponential of a quaternion.","sig":null,"attributes":[{"value":"/ Compute the exponential of a quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":661336,"byte_end":661380,"line_start":1292,"line_end":1292,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":661385,"byte_end":661388,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ Note that this function yields a `Quaternion<N>` because it loses the unit property.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":661393,"byte_end":661481,"line_start":1294,"line_end":1294,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":661486,"byte_end":661495,"line_start":1295,"line_end":1295,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4838},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":662226,"byte_end":662228,"line_start":1315,"line_end":1315,"column_start":12,"column_end":14},"name":"ln","qualname":"<UnitQuaternion<N>>::ln","value":"fn (&self) -> Quaternion<N>","parent":null,"children":[],"decl_id":null,"docs":" Compute the natural logarithm of a quaternion.","sig":null,"attributes":[{"value":"/ Compute the natural logarithm of a quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":661576,"byte_end":661626,"line_start":1300,"line_end":1300,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":661631,"byte_end":661634,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ Note that this function yields a `Quaternion<N>` because it loses the unit property.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":661639,"byte_end":661727,"line_start":1302,"line_end":1302,"column_start":5,"column_end":93}},{"value":"/ The vector part of the return value corresponds to the axis-angle representation (divided","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":661732,"byte_end":661825,"line_start":1303,"line_end":1303,"column_start":5,"column_end":98}},{"value":"/ by 2.0) of this unit quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":661830,"byte_end":661866,"line_start":1304,"line_end":1304,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":661871,"byte_end":661874,"line_start":1305,"line_end":1305,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":661879,"byte_end":661892,"line_start":1306,"line_end":1306,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":661897,"byte_end":661904,"line_start":1307,"line_end":1307,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":661909,"byte_end":661948,"line_start":1308,"line_end":1308,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, UnitQuaternion};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":661953,"byte_end":661999,"line_start":1309,"line_end":1309,"column_start":5,"column_end":51}},{"value":"/ let axisangle = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":662004,"byte_end":662052,"line_start":1310,"line_end":1310,"column_start":5,"column_end":53}},{"value":"/ let q = UnitQuaternion::new(axisangle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":662057,"byte_end":662100,"line_start":1311,"line_end":1311,"column_start":5,"column_end":48}},{"value":"/ assert_relative_eq!(q.ln().vector().into_owned(), axisangle, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":662105,"byte_end":662188,"line_start":1312,"line_end":1312,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":662193,"byte_end":662200,"line_start":1313,"line_end":1313,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":662205,"byte_end":662214,"line_start":1314,"line_end":1314,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4839},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":663135,"byte_end":663139,"line_start":1343,"line_end":1343,"column_start":12,"column_end":16},"name":"powf","qualname":"<UnitQuaternion<N>>::powf","value":"fn (&self, n: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise the quaternion to a given floating power.","sig":null,"attributes":[{"value":"/ Raise the quaternion to a given floating power.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":662464,"byte_end":662515,"line_start":1326,"line_end":1326,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":662520,"byte_end":662523,"line_start":1327,"line_end":1327,"column_start":5,"column_end":8}},{"value":"/ This returns the unit quaternion that identifies a rotation with axis `self.axis()` and","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":662528,"byte_end":662619,"line_start":1328,"line_end":1328,"column_start":5,"column_end":96}},{"value":"/ angle `self.angle() × n`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":662624,"byte_end":662654,"line_start":1329,"line_end":1329,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":662659,"byte_end":662662,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":662667,"byte_end":662680,"line_start":1331,"line_end":1331,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":662685,"byte_end":662692,"line_start":1332,"line_end":1332,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":662697,"byte_end":662736,"line_start":1333,"line_end":1333,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":662741,"byte_end":662793,"line_start":1334,"line_end":1334,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":662798,"byte_end":662862,"line_start":1335,"line_end":1335,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":662867,"byte_end":662887,"line_start":1336,"line_end":1336,"column_start":5,"column_end":25}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, angle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":662892,"byte_end":662952,"line_start":1337,"line_end":1337,"column_start":5,"column_end":65}},{"value":"/ let pow = rot.powf(2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":662957,"byte_end":662985,"line_start":1338,"line_end":1338,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(pow.axis().unwrap(), axis, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":662990,"byte_end":663059,"line_start":1339,"line_end":1339,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(pow.angle(), 2.4);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":663064,"byte_end":663097,"line_start":1340,"line_end":1340,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":663102,"byte_end":663109,"line_start":1341,"line_end":1341,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":663114,"byte_end":663123,"line_start":1342,"line_end":1342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4840},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":664033,"byte_end":664051,"line_start":1371,"line_end":1371,"column_start":12,"column_end":30},"name":"to_rotation_matrix","qualname":"<UnitQuaternion<N>>::to_rotation_matrix","value":"fn (&self) -> Rotation<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix from this unit quaternion.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix from this unit quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":663361,"byte_end":663416,"line_start":1354,"line_end":1354,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":663421,"byte_end":663424,"line_start":1355,"line_end":1355,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":663429,"byte_end":663442,"line_start":1356,"line_end":1356,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":663447,"byte_end":663450,"line_start":1357,"line_end":1357,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":663455,"byte_end":663462,"line_start":1358,"line_end":1358,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":663467,"byte_end":663506,"line_start":1359,"line_end":1359,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":663511,"byte_end":663530,"line_start":1360,"line_end":1360,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Matrix3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":663535,"byte_end":663590,"line_start":1361,"line_end":1361,"column_start":5,"column_end":60}},{"value":"/ let q = UnitQuaternion::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":663595,"byte_end":663683,"line_start":1362,"line_end":1362,"column_start":5,"column_end":93}},{"value":"/ let rot = q.to_rotation_matrix();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":663688,"byte_end":663725,"line_start":1363,"line_end":1363,"column_start":5,"column_end":42}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":663730,"byte_end":663788,"line_start":1364,"line_end":1364,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":663793,"byte_end":663851,"line_start":1365,"line_end":1365,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":663856,"byte_end":663915,"line_start":1366,"line_end":1366,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":663920,"byte_end":663923,"line_start":1367,"line_end":1367,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(*rot.matrix(), expected, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":663928,"byte_end":663995,"line_start":1368,"line_end":1368,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":664000,"byte_end":664007,"line_start":1369,"line_end":1369,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":664012,"byte_end":664021,"line_start":1370,"line_end":1370,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4841},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":665138,"byte_end":665153,"line_start":1406,"line_end":1406,"column_start":12,"column_end":27},"name":"to_euler_angles","qualname":"<UnitQuaternion<N>>::to_euler_angles","value":"fn (&self) -> (N, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Converts this unit quaternion into its equivalent Euler angles.","sig":null,"attributes":[{"value":"/ Converts this unit quaternion into its equivalent Euler angles.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":664903,"byte_end":664970,"line_start":1401,"line_end":1401,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":664975,"byte_end":664978,"line_start":1402,"line_end":1402,"column_start":5,"column_end":8}},{"value":"/ The angles are produced in the form (roll, pitch, yaw).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":664983,"byte_end":665042,"line_start":1403,"line_end":1403,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":665047,"byte_end":665056,"line_start":1404,"line_end":1404,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"This is renamed to use `.euler_angles()`.\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":665061,"byte_end":665126,"line_start":1405,"line_end":1405,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4842},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":665843,"byte_end":665855,"line_start":1428,"line_end":1428,"column_start":12,"column_end":24},"name":"euler_angles","qualname":"<UnitQuaternion<N>>::euler_angles","value":"fn (&self) -> (N, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the euler angles corresponding to this unit quaternion.","sig":null,"attributes":[{"value":"/ Retrieves the euler angles corresponding to this unit quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":665251,"byte_end":665320,"line_start":1413,"line_end":1413,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":665325,"byte_end":665328,"line_start":1414,"line_end":1414,"column_start":5,"column_end":8}},{"value":"/ The angles are produced in the form (roll, pitch, yaw).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":665333,"byte_end":665392,"line_start":1415,"line_end":1415,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":665397,"byte_end":665400,"line_start":1416,"line_end":1416,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":665405,"byte_end":665418,"line_start":1417,"line_end":1417,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":665423,"byte_end":665430,"line_start":1418,"line_end":1418,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":665435,"byte_end":665474,"line_start":1419,"line_end":1419,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitQuaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":665479,"byte_end":665514,"line_start":1420,"line_end":1420,"column_start":5,"column_end":40}},{"value":"/ let rot = UnitQuaternion::from_euler_angles(0.1, 0.2, 0.3);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":665519,"byte_end":665582,"line_start":1421,"line_end":1421,"column_start":5,"column_end":68}},{"value":"/ let euler = rot.euler_angles();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":665587,"byte_end":665622,"line_start":1422,"line_end":1422,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(euler.0, 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":665627,"byte_end":665683,"line_start":1423,"line_end":1423,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.1, 0.2, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":665688,"byte_end":665744,"line_start":1424,"line_end":1424,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.2, 0.3, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":665749,"byte_end":665805,"line_start":1425,"line_end":1425,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":665810,"byte_end":665817,"line_start":1426,"line_end":1426,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":665822,"byte_end":665831,"line_start":1427,"line_end":1427,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4843},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666729,"byte_end":666743,"line_start":1452,"line_end":1452,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<UnitQuaternion<N>>::to_homogeneous","value":"fn (&self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Converts this unit quaternion into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this unit quaternion into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":665974,"byte_end":666062,"line_start":1435,"line_end":1435,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666067,"byte_end":666070,"line_start":1436,"line_end":1436,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666075,"byte_end":666088,"line_start":1437,"line_end":1437,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666093,"byte_end":666096,"line_start":1438,"line_end":1438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666101,"byte_end":666108,"line_start":1439,"line_end":1439,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666113,"byte_end":666152,"line_start":1440,"line_end":1440,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666157,"byte_end":666176,"line_start":1441,"line_end":1441,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Matrix4};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666181,"byte_end":666236,"line_start":1442,"line_end":1442,"column_start":5,"column_end":60}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666241,"byte_end":666331,"line_start":1443,"line_end":1443,"column_start":5,"column_end":95}},{"value":"/ let expected = Matrix4::new(0.8660254, -0.5,      0.0, 0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666336,"byte_end":666399,"line_start":1444,"line_end":1444,"column_start":5,"column_end":68}},{"value":"/                             0.5,       0.8660254, 0.0, 0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666404,"byte_end":666467,"line_start":1445,"line_end":1445,"column_start":5,"column_end":68}},{"value":"/                             0.0,       0.0,       1.0, 0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666472,"byte_end":666535,"line_start":1446,"line_end":1446,"column_start":5,"column_end":68}},{"value":"/                             0.0,       0.0,       0.0, 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666540,"byte_end":666604,"line_start":1447,"line_end":1447,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666609,"byte_end":666612,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot.to_homogeneous(), expected, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666617,"byte_end":666691,"line_start":1449,"line_end":1449,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666696,"byte_end":666703,"line_start":1450,"line_end":1450,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666708,"byte_end":666717,"line_start":1451,"line_end":1451,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4844},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":667431,"byte_end":667446,"line_start":1472,"line_end":1472,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<UnitQuaternion<N>>::transform_point","value":"fn (&self, pt: &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a point by this unit quaternion.","sig":null,"attributes":[{"value":"/ Rotate a point by this unit quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666829,"byte_end":666872,"line_start":1456,"line_end":1456,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666877,"byte_end":666880,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666885,"byte_end":666940,"line_start":1458,"line_end":1458,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666945,"byte_end":666948,"line_start":1459,"line_end":1459,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666953,"byte_end":666966,"line_start":1460,"line_end":1460,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666971,"byte_end":666974,"line_start":1461,"line_end":1461,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666979,"byte_end":666986,"line_start":1462,"line_end":1462,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":666991,"byte_end":667030,"line_start":1463,"line_end":1463,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":667035,"byte_end":667054,"line_start":1464,"line_end":1464,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":667059,"byte_end":667113,"line_start":1465,"line_end":1465,"column_start":5,"column_end":59}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":667118,"byte_end":667208,"line_start":1466,"line_end":1466,"column_start":5,"column_end":95}},{"value":"/ let transformed_point = rot.transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":667213,"byte_end":667290,"line_start":1467,"line_end":1467,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":667295,"byte_end":667298,"line_start":1468,"line_end":1468,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":667303,"byte_end":667393,"line_start":1469,"line_end":1469,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":667398,"byte_end":667405,"line_start":1470,"line_end":1470,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":667410,"byte_end":667419,"line_start":1471,"line_end":1471,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4845},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":668113,"byte_end":668129,"line_start":1492,"line_end":1492,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<UnitQuaternion<N>>::transform_vector","value":"fn (&self, v: &Vector3<N>) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a vector by this unit quaternion.","sig":null,"attributes":[{"value":"/ Rotate a vector by this unit quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":667514,"byte_end":667558,"line_start":1476,"line_end":1476,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":667563,"byte_end":667566,"line_start":1477,"line_end":1477,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":667571,"byte_end":667625,"line_start":1478,"line_end":1478,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":667630,"byte_end":667633,"line_start":1479,"line_end":1479,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":667638,"byte_end":667651,"line_start":1480,"line_end":1480,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":667656,"byte_end":667659,"line_start":1481,"line_end":1481,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":667664,"byte_end":667671,"line_start":1482,"line_end":1482,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":667676,"byte_end":667715,"line_start":1483,"line_end":1483,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":667720,"byte_end":667739,"line_start":1484,"line_end":1484,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":667744,"byte_end":667790,"line_start":1485,"line_end":1485,"column_start":5,"column_end":51}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":667795,"byte_end":667885,"line_start":1486,"line_end":1486,"column_start":5,"column_end":95}},{"value":"/ let transformed_vector = rot.transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":667890,"byte_end":667970,"line_start":1487,"line_end":1487,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":667975,"byte_end":667978,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":667983,"byte_end":668075,"line_start":1489,"line_end":1489,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":668080,"byte_end":668087,"line_start":1490,"line_end":1490,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":668092,"byte_end":668101,"line_start":1491,"line_end":1491,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4846},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":668853,"byte_end":668876,"line_start":1512,"line_end":1512,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<UnitQuaternion<N>>::inverse_transform_point","value":"fn (&self, pt: &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a point by the inverse of this unit quaternion. This may be\n cheaper than inverting the unit quaternion and transforming the\n point.","sig":null,"attributes":[{"value":"/ Rotate a point by the inverse of this unit quaternion. This may be","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":668197,"byte_end":668267,"line_start":1496,"line_end":1496,"column_start":5,"column_end":75}},{"value":"/ cheaper than inverting the unit quaternion and transforming the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":668272,"byte_end":668339,"line_start":1497,"line_end":1497,"column_start":5,"column_end":72}},{"value":"/ point.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":668344,"byte_end":668354,"line_start":1498,"line_end":1498,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":668359,"byte_end":668362,"line_start":1499,"line_end":1499,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":668367,"byte_end":668380,"line_start":1500,"line_end":1500,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":668385,"byte_end":668388,"line_start":1501,"line_end":1501,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":668393,"byte_end":668400,"line_start":1502,"line_end":1502,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":668405,"byte_end":668444,"line_start":1503,"line_end":1503,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":668449,"byte_end":668468,"line_start":1504,"line_end":1504,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":668473,"byte_end":668527,"line_start":1505,"line_end":1505,"column_start":5,"column_end":59}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":668532,"byte_end":668622,"line_start":1506,"line_end":1506,"column_start":5,"column_end":95}},{"value":"/ let transformed_point = rot.inverse_transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":668627,"byte_end":668712,"line_start":1507,"line_end":1507,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":668717,"byte_end":668720,"line_start":1508,"line_end":1508,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":668725,"byte_end":668815,"line_start":1509,"line_end":1509,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":668820,"byte_end":668827,"line_start":1510,"line_end":1510,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":668832,"byte_end":668841,"line_start":1511,"line_end":1511,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4847},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":669766,"byte_end":669790,"line_start":1534,"line_end":1534,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<UnitQuaternion<N>>::inverse_transform_vector","value":"fn (&self, v: &Vector3<N>) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a vector by the inverse of this unit quaternion. This may be\n cheaper than inverting the unit quaternion and transforming the\n vector.","sig":null,"attributes":[{"value":"/ Rotate a vector by the inverse of this unit quaternion. This may be","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":669111,"byte_end":669182,"line_start":1518,"line_end":1518,"column_start":5,"column_end":76}},{"value":"/ cheaper than inverting the unit quaternion and transforming the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":669187,"byte_end":669254,"line_start":1519,"line_end":1519,"column_start":5,"column_end":72}},{"value":"/ vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":669259,"byte_end":669270,"line_start":1520,"line_end":1520,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":669275,"byte_end":669278,"line_start":1521,"line_end":1521,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":669283,"byte_end":669296,"line_start":1522,"line_end":1522,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":669301,"byte_end":669304,"line_start":1523,"line_end":1523,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":669309,"byte_end":669316,"line_start":1524,"line_end":1524,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":669321,"byte_end":669360,"line_start":1525,"line_end":1525,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":669365,"byte_end":669384,"line_start":1526,"line_end":1526,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":669389,"byte_end":669435,"line_start":1527,"line_end":1527,"column_start":5,"column_end":51}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":669440,"byte_end":669530,"line_start":1528,"line_end":1528,"column_start":5,"column_end":95}},{"value":"/ let transformed_vector = rot.inverse_transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":669535,"byte_end":669623,"line_start":1529,"line_end":1529,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":669628,"byte_end":669631,"line_start":1530,"line_end":1530,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":669636,"byte_end":669728,"line_start":1531,"line_end":1531,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":669733,"byte_end":669740,"line_start":1532,"line_end":1532,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":669745,"byte_end":669754,"line_start":1533,"line_end":1533,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4895},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":672447,"byte_end":672458,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"from_vector","qualname":"<Quaternion<N>>::from_vector","value":"fn (vector: Vector4<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a quaternion from a 4D vector. The quaternion scalar part corresponds to the `w`\n vector component.\n","sig":null,"attributes":[{"value":"/ Creates a quaternion from a 4D vector. The quaternion scalar part corresponds to the `w`","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":672253,"byte_end":672345,"line_start":23,"line_end":23,"column_start":5,"column_end":97}},{"value":"/ vector component.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":672350,"byte_end":672371,"line_start":24,"line_end":24,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":672376,"byte_end":672385,"line_start":25,"line_end":25,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"Use `::from` instead.\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":672390,"byte_end":672435,"line_start":26,"line_end":26,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4896},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":673120,"byte_end":673123,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Quaternion<N>>::new","value":"fn (w: N, i: N, j: N, k: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new quaternion from its individual components. Note that the arguments order does\n **not** follow the storage order.","sig":null,"attributes":[{"value":"/ Creates a new quaternion from its individual components. Note that the arguments order does","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":672532,"byte_end":672627,"line_start":31,"line_end":31,"column_start":5,"column_end":100}},{"value":"/ **not** follow the storage order.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":672632,"byte_end":672669,"line_start":32,"line_end":32,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":672674,"byte_end":672677,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The storage order is `[ i, j, k, w ]` while the arguments for this functions are in the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":672682,"byte_end":672773,"line_start":34,"line_end":34,"column_start":5,"column_end":96}},{"value":"/ order `(w, i, j, k)`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":672778,"byte_end":672803,"line_start":35,"line_end":35,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":672808,"byte_end":672811,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":672816,"byte_end":672829,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":672834,"byte_end":672841,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Quaternion, Vector4};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":672846,"byte_end":672888,"line_start":39,"line_end":39,"column_start":5,"column_end":47}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":672893,"byte_end":672941,"line_start":40,"line_end":40,"column_start":5,"column_end":53}},{"value":"/ assert!(q.i == 2.0 && q.j == 3.0 && q.k == 4.0 && q.w == 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":672946,"byte_end":673012,"line_start":41,"line_end":41,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(*q.as_vector(), Vector4::new(2.0, 3.0, 4.0, 1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":673017,"byte_end":673082,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":673087,"byte_end":673094,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":673099,"byte_end":673108,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4899},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":673314,"byte_end":673323,"line_start":53,"line_end":53,"column_start":12,"column_end":21},"name":"from_imag","qualname":"<Quaternion<N>>::from_imag","value":"fn (vector: Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a pure quaternion.\n","sig":null,"attributes":[{"value":"/ Constructs a pure quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":673255,"byte_end":673288,"line_start":51,"line_end":51,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":673293,"byte_end":673302,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4900},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":674038,"byte_end":674048,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Quaternion<N>>::from_parts","value":"fn <SB> (scalar: N, vector: Vector<N, U3, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new quaternion from its scalar and vector parts. Note that the arguments order does\n **not** follow the storage order.","sig":null,"attributes":[{"value":"/ Creates a new quaternion from its scalar and vector parts. Note that the arguments order does","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":673409,"byte_end":673506,"line_start":57,"line_end":57,"column_start":5,"column_end":102}},{"value":"/ **not** follow the storage order.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":673511,"byte_end":673548,"line_start":58,"line_end":58,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":673553,"byte_end":673556,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The storage order is [ vector, scalar ].","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":673561,"byte_end":673605,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":673610,"byte_end":673613,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":673618,"byte_end":673631,"line_start":62,"line_end":62,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":673636,"byte_end":673643,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Quaternion, Vector3, Vector4};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":673648,"byte_end":673699,"line_start":64,"line_end":64,"column_start":5,"column_end":56}},{"value":"/ let w = 1.0;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":673704,"byte_end":673720,"line_start":65,"line_end":65,"column_start":5,"column_end":21}},{"value":"/ let ijk = Vector3::new(2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":673725,"byte_end":673767,"line_start":66,"line_end":66,"column_start":5,"column_end":47}},{"value":"/ let q = Quaternion::from_parts(w, ijk);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":673772,"byte_end":673815,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ assert!(q.i == 2.0 && q.j == 3.0 && q.k == 4.0 && q.w == 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":673820,"byte_end":673886,"line_start":68,"line_end":68,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(*q.as_vector(), Vector4::new(2.0, 3.0, 4.0, 1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":673891,"byte_end":673956,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":673961,"byte_end":673968,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":673973,"byte_end":673982,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4902},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":674272,"byte_end":674281,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"name":"from_real","qualname":"<Quaternion<N>>::from_real","value":"fn (r: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a real quaternion.\n","sig":null,"attributes":[{"value":"/ Constructs a real quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":674213,"byte_end":674246,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":674251,"byte_end":674260,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4903},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":674675,"byte_end":674683,"line_start":98,"line_end":98,"column_start":12,"column_end":20},"name":"identity","qualname":"<Quaternion<N>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The quaternion multiplicative identity.","sig":null,"attributes":[{"value":"/ The quaternion multiplicative identity.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":674354,"byte_end":674397,"line_start":86,"line_end":86,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":674402,"byte_end":674405,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":674410,"byte_end":674423,"line_start":88,"line_end":88,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":674428,"byte_end":674435,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":674440,"byte_end":674471,"line_start":90,"line_end":90,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":674476,"byte_end":674511,"line_start":91,"line_end":91,"column_start":5,"column_end":40}},{"value":"/ let q2 = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":674516,"byte_end":674565,"line_start":92,"line_end":92,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":674570,"byte_end":674573,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q * q2, q2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":674578,"byte_end":674605,"line_start":94,"line_end":94,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(q2 * q, q2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":674610,"byte_end":674637,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":674642,"byte_end":674649,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":674654,"byte_end":674663,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4906},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":675037,"byte_end":675061,"line_start":112,"line_end":112,"column_start":12,"column_end":36},"name":"from_polar_decomposition","qualname":"<Quaternion<N>>::from_polar_decomposition","value":"fn <SB> (scale: N, theta: N, axis: Unit<Vector<N, U3, SB>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new quaternion from its polar decomposition.","sig":null,"attributes":[{"value":"/ Creates a new quaternion from its polar decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":674860,"byte_end":674918,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":674923,"byte_end":674926,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Note that `axis` is assumed to be a unit vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":674931,"byte_end":674983,"line_start":110,"line_end":110,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4922},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":676883,"byte_end":676891,"line_start":193,"line_end":193,"column_start":12,"column_end":20},"name":"identity","qualname":"<UnitQuaternion<N>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The rotation identity.","sig":null,"attributes":[{"value":"/ The rotation identity.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":676407,"byte_end":676433,"line_start":177,"line_end":177,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":676438,"byte_end":676441,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":676446,"byte_end":676459,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":676464,"byte_end":676471,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":676476,"byte_end":676530,"line_start":181,"line_end":181,"column_start":5,"column_end":59}},{"value":"/ let q = UnitQuaternion::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":676535,"byte_end":676574,"line_start":182,"line_end":182,"column_start":5,"column_end":44}},{"value":"/ let q2 = UnitQuaternion::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":676579,"byte_end":676641,"line_start":183,"line_end":183,"column_start":5,"column_end":67}},{"value":"/ let v = Vector3::new_random();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":676646,"byte_end":676680,"line_start":184,"line_end":184,"column_start":5,"column_end":39}},{"value":"/ let p = Point3::from(v);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":676685,"byte_end":676713,"line_start":185,"line_end":185,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":676718,"byte_end":676721,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q * q2, q2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":676726,"byte_end":676753,"line_start":187,"line_end":187,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(q2 * q, q2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":676758,"byte_end":676785,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(q * v, v);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":676790,"byte_end":676815,"line_start":189,"line_end":189,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(q * p, p);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":676820,"byte_end":676845,"line_start":190,"line_end":190,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":676850,"byte_end":676857,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":676862,"byte_end":676871,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4923},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":677998,"byte_end":678013,"line_start":221,"line_end":221,"column_start":12,"column_end":27},"name":"from_axis_angle","qualname":"<UnitQuaternion<N>>::from_axis_angle","value":"fn <SB> (axis: &Unit<Vector<N, U3, SB>>, angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new quaternion from a unit vector (the rotation axis) and an angle\n (the rotation angle).","sig":null,"attributes":[{"value":"/ Creates a new quaternion from a unit vector (the rotation axis) and an angle","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":676967,"byte_end":677047,"line_start":197,"line_end":197,"column_start":5,"column_end":85}},{"value":"/ (the rotation angle).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":677052,"byte_end":677077,"line_start":198,"line_end":198,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":677082,"byte_end":677085,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":677090,"byte_end":677103,"line_start":200,"line_end":200,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":677108,"byte_end":677115,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":677120,"byte_end":677159,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":677164,"byte_end":677183,"line_start":203,"line_end":203,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":677188,"byte_end":677242,"line_start":204,"line_end":204,"column_start":5,"column_end":59}},{"value":"/ let axis = Vector3::y_axis();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":677247,"byte_end":677280,"line_start":205,"line_end":205,"column_start":5,"column_end":38}},{"value":"/ let angle = f32::consts::FRAC_PI_2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":677285,"byte_end":677324,"line_start":206,"line_end":206,"column_start":5,"column_end":44}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":677329,"byte_end":677384,"line_start":207,"line_end":207,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":677389,"byte_end":677429,"line_start":208,"line_end":208,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":677434,"byte_end":677476,"line_start":209,"line_end":209,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::from_axis_angle(&axis, angle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":677481,"byte_end":677539,"line_start":210,"line_end":210,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":677544,"byte_end":677547,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q.axis().unwrap(), axis);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":677552,"byte_end":677592,"line_start":212,"line_end":212,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(q.angle(), angle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":677597,"byte_end":677630,"line_start":213,"line_end":213,"column_start":5,"column_end":38}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":677635,"byte_end":677714,"line_start":214,"line_end":214,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":677719,"byte_end":677800,"line_start":215,"line_end":215,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":677805,"byte_end":677808,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":677813,"byte_end":677853,"line_start":217,"line_end":217,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(UnitQuaternion::from_scaled_axis(Vector3::<f32>::zeros()), UnitQuaternion::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":677858,"byte_end":677960,"line_start":218,"line_end":218,"column_start":5,"column_end":107}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":677965,"byte_end":677972,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":677977,"byte_end":677986,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4925},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":678434,"byte_end":678449,"line_start":235,"line_end":235,"column_start":12,"column_end":27},"name":"from_quaternion","qualname":"<UnitQuaternion<N>>::from_quaternion","value":"fn (q: Quaternion<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion from a quaternion.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion from a quaternion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":678299,"byte_end":678351,"line_start":231,"line_end":231,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":678356,"byte_end":678359,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ The input quaternion will be normalized.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":678364,"byte_end":678408,"line_start":233,"line_end":233,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":678413,"byte_end":678422,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4926},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":679115,"byte_end":679132,"line_start":254,"line_end":254,"column_start":12,"column_end":29},"name":"from_euler_angles","qualname":"<UnitQuaternion<N>>::from_euler_angles","value":"fn (roll: N, pitch: N, yaw: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion from Euler angles.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion from Euler angles.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":678520,"byte_end":678572,"line_start":239,"line_end":239,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":678577,"byte_end":678580,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ The primitive rotations are applied in order: 1 roll − 2 pitch − 3 yaw.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":678585,"byte_end":678664,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":678669,"byte_end":678672,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":678677,"byte_end":678690,"line_start":243,"line_end":243,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":678695,"byte_end":678702,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":678707,"byte_end":678746,"line_start":245,"line_end":245,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitQuaternion;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":678751,"byte_end":678786,"line_start":246,"line_end":246,"column_start":5,"column_end":40}},{"value":"/ let rot = UnitQuaternion::from_euler_angles(0.1, 0.2, 0.3);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":678791,"byte_end":678854,"line_start":247,"line_end":247,"column_start":5,"column_end":68}},{"value":"/ let euler = rot.euler_angles();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":678859,"byte_end":678894,"line_start":248,"line_end":248,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(euler.0, 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":678899,"byte_end":678955,"line_start":249,"line_end":249,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.1, 0.2, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":678960,"byte_end":679016,"line_start":250,"line_end":250,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.2, 0.3, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":679021,"byte_end":679077,"line_start":251,"line_end":251,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":679082,"byte_end":679089,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":679094,"byte_end":679103,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4927},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":680287,"byte_end":680307,"line_start":284,"line_end":284,"column_start":12,"column_end":32},"name":"from_rotation_matrix","qualname":"<UnitQuaternion<N>>::from_rotation_matrix","value":"fn (rotmat: &Rotation3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit quaternion from a rotation matrix.","sig":null,"attributes":[{"value":"/ Builds an unit quaternion from a rotation matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":679635,"byte_end":679688,"line_start":269,"line_end":269,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":679693,"byte_end":679696,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":679701,"byte_end":679714,"line_start":271,"line_end":271,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":679719,"byte_end":679726,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":679731,"byte_end":679770,"line_start":273,"line_end":273,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":679775,"byte_end":679832,"line_start":274,"line_end":274,"column_start":5,"column_end":62}},{"value":"/ let axis = Vector3::y_axis();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":679837,"byte_end":679870,"line_start":275,"line_end":275,"column_start":5,"column_end":38}},{"value":"/ let angle = 0.1;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":679875,"byte_end":679895,"line_start":276,"line_end":276,"column_start":5,"column_end":25}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":679900,"byte_end":679955,"line_start":277,"line_end":277,"column_start":5,"column_end":60}},{"value":"/ let q = UnitQuaternion::from_rotation_matrix(&rot);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":679960,"byte_end":680015,"line_start":278,"line_end":278,"column_start":5,"column_end":60}},{"value":"/ assert_relative_eq!(q.to_rotation_matrix(), rot, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":680020,"byte_end":680091,"line_start":279,"line_end":279,"column_start":5,"column_end":76}},{"value":"/ assert_relative_eq!(q.axis().unwrap(), rot.axis().unwrap(), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":680096,"byte_end":680178,"line_start":280,"line_end":280,"column_start":5,"column_end":87}},{"value":"/ assert_relative_eq!(q.angle(), rot.angle(), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":680183,"byte_end":680249,"line_start":281,"line_end":281,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":680254,"byte_end":680261,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":680266,"byte_end":680275,"line_start":283,"line_end":283,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4934},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":683179,"byte_end":683190,"line_start":349,"line_end":349,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<UnitQuaternion<N>>::from_matrix","value":"fn (m: &Matrix3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit quaternion by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds an unit quaternion by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":682827,"byte_end":682921,"line_start":344,"line_end":344,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":682926,"byte_end":682929,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This is an iterative method. See `.from_matrix_eps` to provide mover","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":682934,"byte_end":683006,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ convergence parameters and starting solution.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":683011,"byte_end":683060,"line_start":347,"line_end":347,"column_start":5,"column_end":54}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":683065,"byte_end":683167,"line_start":348,"line_end":348,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":4935},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":684111,"byte_end":684126,"line_start":368,"line_end":368,"column_start":12,"column_end":27},"name":"from_matrix_eps","qualname":"<UnitQuaternion<N>>::from_matrix_eps","value":"fn (m: &Matrix3<N>, eps: N, max_iter: usize, guess: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit quaternion by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds an unit quaternion by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":683305,"byte_end":683399,"line_start":356,"line_end":356,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":683404,"byte_end":683407,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":683412,"byte_end":683514,"line_start":358,"line_end":358,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":683519,"byte_end":683522,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":683527,"byte_end":683543,"line_start":360,"line_end":360,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":683548,"byte_end":683551,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ * `m`: the matrix from which the rotational part is to be extracted.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":683556,"byte_end":683628,"line_start":362,"line_end":362,"column_start":5,"column_end":77}},{"value":"/ * `eps`: the angular errors tolerated between the current rotation and the optimal one.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":683633,"byte_end":683724,"line_start":363,"line_end":363,"column_start":5,"column_end":96}},{"value":"/ * `max_iter`: the maximum number of iterations. Loops indefinitely until convergence if set to `0`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":683729,"byte_end":683832,"line_start":364,"line_end":364,"column_start":5,"column_end":108}},{"value":"/ * `guess`: an estimate of the solution. Convergence will be significantly faster if an initial solution close","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":683837,"byte_end":683950,"line_start":365,"line_end":365,"column_start":5,"column_end":118}},{"value":"/           to the actual solution is provided. Can be set to `UnitQuaternion::identity()` if no other","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":683955,"byte_end":684059,"line_start":366,"line_end":366,"column_start":5,"column_end":109}},{"value":"/           guesses come to mind.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":684064,"byte_end":684099,"line_start":367,"line_end":367,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4936},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":684873,"byte_end":684889,"line_start":390,"line_end":390,"column_start":12,"column_end":28},"name":"rotation_between","qualname":"<UnitQuaternion<N>>::rotation_between","value":"fn <SB, SC> (a: &Vector<N, U3, SB>, b: &Vector<N, U3, SC>) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" The unit quaternion needed to make `a` and `b` be collinear and point toward the same\n direction.","sig":null,"attributes":[{"value":"/ The unit quaternion needed to make `a` and `b` be collinear and point toward the same","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":684349,"byte_end":684438,"line_start":376,"line_end":376,"column_start":5,"column_end":94}},{"value":"/ direction.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":684443,"byte_end":684457,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":684462,"byte_end":684465,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":684470,"byte_end":684483,"line_start":379,"line_end":379,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":684488,"byte_end":684495,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":684500,"byte_end":684539,"line_start":381,"line_end":381,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, UnitQuaternion};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":684544,"byte_end":684590,"line_start":382,"line_end":382,"column_start":5,"column_end":51}},{"value":"/ let a = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":684595,"byte_end":684635,"line_start":383,"line_end":383,"column_start":5,"column_end":45}},{"value":"/ let b = Vector3::new(3.0, 1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":684640,"byte_end":684680,"line_start":384,"line_end":384,"column_start":5,"column_end":45}},{"value":"/ let q = UnitQuaternion::rotation_between(&a, &b).unwrap();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":684685,"byte_end":684747,"line_start":385,"line_end":385,"column_start":5,"column_end":67}},{"value":"/ assert_relative_eq!(q * a, b);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":684752,"byte_end":684786,"line_start":386,"line_end":386,"column_start":5,"column_end":39}},{"value":"/ assert_relative_eq!(q.inverse() * b, a);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":684791,"byte_end":684835,"line_start":387,"line_end":387,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":684840,"byte_end":684847,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":684852,"byte_end":684861,"line_start":389,"line_end":389,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4939},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":685813,"byte_end":685836,"line_start":414,"line_end":414,"column_start":12,"column_end":35},"name":"scaled_rotation_between","qualname":"<UnitQuaternion<N>>::scaled_rotation_between","value":"fn <SB, SC> (a: &Vector<N, U3, SB>, b: &Vector<N, U3, SC>, s: N) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":685119,"byte_end":685207,"line_start":399,"line_end":399,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":685212,"byte_end":685251,"line_start":400,"line_end":400,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":685256,"byte_end":685259,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":685264,"byte_end":685277,"line_start":402,"line_end":402,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":685282,"byte_end":685289,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":685294,"byte_end":685333,"line_start":404,"line_end":404,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, UnitQuaternion};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":685338,"byte_end":685384,"line_start":405,"line_end":405,"column_start":5,"column_end":51}},{"value":"/ let a = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":685389,"byte_end":685429,"line_start":406,"line_end":406,"column_start":5,"column_end":45}},{"value":"/ let b = Vector3::new(3.0, 1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":685434,"byte_end":685474,"line_start":407,"line_end":407,"column_start":5,"column_end":45}},{"value":"/ let q2 = UnitQuaternion::scaled_rotation_between(&a, &b, 0.2).unwrap();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":685479,"byte_end":685554,"line_start":408,"line_end":408,"column_start":5,"column_end":80}},{"value":"/ let q5 = UnitQuaternion::scaled_rotation_between(&a, &b, 0.5).unwrap();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":685559,"byte_end":685634,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ assert_relative_eq!(q2 * q2 * q2 * q2 * q2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":685639,"byte_end":685712,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ assert_relative_eq!(q5 * q5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":685717,"byte_end":685775,"line_start":411,"line_end":411,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":685780,"byte_end":685787,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":685792,"byte_end":685801,"line_start":413,"line_end":413,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4942},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":686955,"byte_end":686976,"line_start":449,"line_end":449,"column_start":12,"column_end":33},"name":"rotation_between_axis","qualname":"<UnitQuaternion<N>>::rotation_between_axis","value":"fn <SB, SC> (a: &Unit<Vector<N, U3, SB>>, b: &Unit<Vector<N, U3, SC>>) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" The unit quaternion needed to make `a` and `b` be collinear and point toward the same\n direction.","sig":null,"attributes":[{"value":"/ The unit quaternion needed to make `a` and `b` be collinear and point toward the same","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":686383,"byte_end":686472,"line_start":435,"line_end":435,"column_start":5,"column_end":94}},{"value":"/ direction.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":686477,"byte_end":686491,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":686496,"byte_end":686499,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":686504,"byte_end":686517,"line_start":438,"line_end":438,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":686522,"byte_end":686529,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":686534,"byte_end":686573,"line_start":440,"line_end":440,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Vector3, UnitQuaternion};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":686578,"byte_end":686630,"line_start":441,"line_end":441,"column_start":5,"column_end":57}},{"value":"/ let a = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":686635,"byte_end":686696,"line_start":442,"line_end":442,"column_start":5,"column_end":66}},{"value":"/ let b = Unit::new_normalize(Vector3::new(3.0, 1.0, 2.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":686701,"byte_end":686762,"line_start":443,"line_end":443,"column_start":5,"column_end":66}},{"value":"/ let q = UnitQuaternion::rotation_between(&a, &b).unwrap();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":686767,"byte_end":686829,"line_start":444,"line_end":444,"column_start":5,"column_end":67}},{"value":"/ assert_relative_eq!(q * a, b);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":686834,"byte_end":686868,"line_start":445,"line_end":445,"column_start":5,"column_end":39}},{"value":"/ assert_relative_eq!(q.inverse() * b, a);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":686873,"byte_end":686917,"line_start":446,"line_end":446,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":686922,"byte_end":686929,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":686934,"byte_end":686943,"line_start":448,"line_end":448,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4945},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":687988,"byte_end":688016,"line_start":476,"line_end":476,"column_start":12,"column_end":40},"name":"scaled_rotation_between_axis","qualname":"<UnitQuaternion<N>>::scaled_rotation_between_axis","value":"fn <SB, SC> (na: &Unit<Vector<N, U3, SB>>, nb: &Unit<Vector<N, U3, SC>>, s: N) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":687246,"byte_end":687334,"line_start":461,"line_end":461,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":687339,"byte_end":687378,"line_start":462,"line_end":462,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":687383,"byte_end":687386,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":687391,"byte_end":687404,"line_start":464,"line_end":464,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":687409,"byte_end":687416,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":687421,"byte_end":687460,"line_start":466,"line_end":466,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Vector3, UnitQuaternion};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":687465,"byte_end":687517,"line_start":467,"line_end":467,"column_start":5,"column_end":57}},{"value":"/ let a = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":687522,"byte_end":687583,"line_start":468,"line_end":468,"column_start":5,"column_end":66}},{"value":"/ let b = Unit::new_normalize(Vector3::new(3.0, 1.0, 2.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":687588,"byte_end":687649,"line_start":469,"line_end":469,"column_start":5,"column_end":66}},{"value":"/ let q2 = UnitQuaternion::scaled_rotation_between(&a, &b, 0.2).unwrap();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":687654,"byte_end":687729,"line_start":470,"line_end":470,"column_start":5,"column_end":80}},{"value":"/ let q5 = UnitQuaternion::scaled_rotation_between(&a, &b, 0.5).unwrap();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":687734,"byte_end":687809,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ assert_relative_eq!(q2 * q2 * q2 * q2 * q2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":687814,"byte_end":687887,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ assert_relative_eq!(q5 * q5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":687892,"byte_end":687950,"line_start":473,"line_end":473,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":687955,"byte_end":687962,"line_start":474,"line_end":474,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":687967,"byte_end":687976,"line_start":475,"line_end":475,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4948},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":689967,"byte_end":689979,"line_start":535,"line_end":535,"column_start":12,"column_end":24},"name":"face_towards","qualname":"<UnitQuaternion<N>>::face_towards","value":"fn <SB, SC> (dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an unit quaternion that corresponds to the local frame of an observer standing at the\n origin and looking toward `dir`.","sig":null,"attributes":[{"value":"/ Creates an unit quaternion that corresponds to the local frame of an observer standing at the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":689064,"byte_end":689161,"line_start":512,"line_end":512,"column_start":5,"column_end":102}},{"value":"/ origin and looking toward `dir`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":689166,"byte_end":689202,"line_start":513,"line_end":513,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":689207,"byte_end":689210,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ It maps the `z` axis to the direction `dir`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":689215,"byte_end":689263,"line_start":515,"line_end":515,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":689268,"byte_end":689271,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":689276,"byte_end":689291,"line_start":517,"line_end":517,"column_start":5,"column_end":20}},{"value":"/   * dir - The look direction. It does not need to be normalized.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":689296,"byte_end":689364,"line_start":518,"line_end":518,"column_start":5,"column_end":73}},{"value":"/   * up - The vertical direction. It does not need to be normalized.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":689369,"byte_end":689440,"line_start":519,"line_end":519,"column_start":5,"column_end":76}},{"value":"/   The only requirement of this parameter is to not be collinear to `dir`. Non-collinearity","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":689445,"byte_end":689539,"line_start":520,"line_end":520,"column_start":5,"column_end":99}},{"value":"/   is not checked.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":689544,"byte_end":689565,"line_start":521,"line_end":521,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":689570,"byte_end":689573,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":689578,"byte_end":689591,"line_start":523,"line_end":523,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":689596,"byte_end":689603,"line_start":524,"line_end":524,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":689608,"byte_end":689647,"line_start":525,"line_end":525,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":689652,"byte_end":689671,"line_start":526,"line_end":526,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":689676,"byte_end":689722,"line_start":527,"line_end":527,"column_start":5,"column_end":51}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":689727,"byte_end":689769,"line_start":528,"line_end":528,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":689774,"byte_end":689800,"line_start":529,"line_end":529,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":689805,"byte_end":689808,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ let q = UnitQuaternion::face_towards(&dir, &up);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":689813,"byte_end":689865,"line_start":531,"line_end":531,"column_start":5,"column_end":57}},{"value":"/ assert_relative_eq!(q * Vector3::z(), dir.normalize());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":689870,"byte_end":689929,"line_start":532,"line_end":532,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":689934,"byte_end":689941,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":689946,"byte_end":689955,"line_start":534,"line_end":534,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4951},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":690323,"byte_end":690342,"line_start":545,"line_end":545,"column_start":12,"column_end":31},"name":"new_observer_frames","qualname":"<UnitQuaternion<N>>::new_observer_frames","value":"fn <SB, SC> (dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Deprecated: Use [UnitQuaternion::face_towards] instead.\n","sig":null,"attributes":[{"value":"/ Deprecated: Use [UnitQuaternion::face_towards] instead.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":690198,"byte_end":690257,"line_start":543,"line_end":543,"column_start":5,"column_end":64}},{"value":"deprecated(note = \"renamed to `face_towards`\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":690262,"byte_end":690311,"line_start":544,"line_end":544,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4954},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":691494,"byte_end":691504,"line_start":576,"line_end":576,"column_start":12,"column_end":22},"name":"look_at_rh","qualname":"<UnitQuaternion<N>>::look_at_rh","value":"fn <SB, SC> (dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a right-handed look-at view matrix without translation.","sig":null,"attributes":[{"value":"/ Builds a right-handed look-at view matrix without translation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":690527,"byte_end":690593,"line_start":553,"line_end":553,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":690598,"byte_end":690601,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `dir` to the **negative** `z` axis.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":690606,"byte_end":690672,"line_start":555,"line_end":555,"column_start":5,"column_end":71}},{"value":"/ This conforms to the common notion of right handed look-at matrix from the computer","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":690677,"byte_end":690764,"line_start":556,"line_end":556,"column_start":5,"column_end":92}},{"value":"/ graphics community.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":690769,"byte_end":690792,"line_start":557,"line_end":557,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":690797,"byte_end":690800,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":690805,"byte_end":690820,"line_start":559,"line_end":559,"column_start":5,"column_end":20}},{"value":"/   * dir − The view direction. It does not need to be normalized.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":690825,"byte_end":690895,"line_start":560,"line_end":560,"column_start":5,"column_end":73}},{"value":"/   * up - A vector approximately aligned with required the vertical axis. It does not need","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":690900,"byte_end":690993,"line_start":561,"line_end":561,"column_start":5,"column_end":98}},{"value":"/   to be normalized. The only requirement of this parameter is to not be collinear to `dir`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":690998,"byte_end":691093,"line_start":562,"line_end":562,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":691098,"byte_end":691101,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":691106,"byte_end":691119,"line_start":564,"line_end":564,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":691124,"byte_end":691131,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":691136,"byte_end":691175,"line_start":566,"line_end":566,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":691180,"byte_end":691199,"line_start":567,"line_end":567,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":691204,"byte_end":691250,"line_start":568,"line_end":568,"column_start":5,"column_end":51}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":691255,"byte_end":691297,"line_start":569,"line_end":569,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":691302,"byte_end":691328,"line_start":570,"line_end":570,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":691333,"byte_end":691336,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ let q = UnitQuaternion::look_at_rh(&dir, &up);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":691341,"byte_end":691391,"line_start":572,"line_end":572,"column_start":5,"column_end":55}},{"value":"/ assert_relative_eq!(q * dir.normalize(), -Vector3::z());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":691396,"byte_end":691456,"line_start":573,"line_end":573,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":691461,"byte_end":691468,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":691473,"byte_end":691482,"line_start":575,"line_end":575,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4957},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":692630,"byte_end":692640,"line_start":607,"line_end":607,"column_start":12,"column_end":22},"name":"look_at_lh","qualname":"<UnitQuaternion<N>>::look_at_lh","value":"fn <SB, SC> (dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a left-handed look-at view matrix without translation.","sig":null,"attributes":[{"value":"/ Builds a left-handed look-at view matrix without translation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":691701,"byte_end":691766,"line_start":584,"line_end":584,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":691771,"byte_end":691774,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `dir` to the **positive** `z` axis.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":691779,"byte_end":691845,"line_start":586,"line_end":586,"column_start":5,"column_end":71}},{"value":"/ This conforms to the common notion of left handed look-at matrix from the computer","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":691850,"byte_end":691936,"line_start":587,"line_end":587,"column_start":5,"column_end":91}},{"value":"/ graphics community.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":691941,"byte_end":691964,"line_start":588,"line_end":588,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":691969,"byte_end":691972,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":691977,"byte_end":691992,"line_start":590,"line_end":590,"column_start":5,"column_end":20}},{"value":"/   * dir − The view direction. It does not need to be normalized.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":691997,"byte_end":692067,"line_start":591,"line_end":591,"column_start":5,"column_end":73}},{"value":"/   * up - A vector approximately aligned with required the vertical axis. The only","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":692072,"byte_end":692157,"line_start":592,"line_end":592,"column_start":5,"column_end":90}},{"value":"/   requirement of this parameter is to not be collinear to `dir`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":692162,"byte_end":692230,"line_start":593,"line_end":593,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":692235,"byte_end":692238,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":692243,"byte_end":692256,"line_start":595,"line_end":595,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":692261,"byte_end":692268,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":692273,"byte_end":692312,"line_start":597,"line_end":597,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":692317,"byte_end":692336,"line_start":598,"line_end":598,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":692341,"byte_end":692387,"line_start":599,"line_end":599,"column_start":5,"column_end":51}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":692392,"byte_end":692434,"line_start":600,"line_end":600,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":692439,"byte_end":692465,"line_start":601,"line_end":601,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":692470,"byte_end":692473,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ let q = UnitQuaternion::look_at_lh(&dir, &up);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":692478,"byte_end":692528,"line_start":603,"line_end":603,"column_start":5,"column_end":55}},{"value":"/ assert_relative_eq!(q * dir.normalize(), Vector3::z());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":692533,"byte_end":692592,"line_start":604,"line_end":604,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":692597,"byte_end":692604,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":692609,"byte_end":692618,"line_start":606,"line_end":606,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4960},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":693839,"byte_end":693842,"line_start":637,"line_end":637,"column_start":12,"column_end":15},"name":"new","qualname":"<UnitQuaternion<N>>::new","value":"fn <SB> (axisangle: Vector<N, U3, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":692835,"byte_end":692928,"line_start":615,"line_end":615,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":692933,"byte_end":692936,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ If `axisangle` has a magnitude smaller than `N::default_epsilon()`, this returns the identity rotation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":692941,"byte_end":693048,"line_start":617,"line_end":617,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":693053,"byte_end":693056,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":693061,"byte_end":693074,"line_start":619,"line_end":619,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":693079,"byte_end":693086,"line_start":620,"line_end":620,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":693091,"byte_end":693130,"line_start":621,"line_end":621,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":693135,"byte_end":693154,"line_start":622,"line_end":622,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":693159,"byte_end":693213,"line_start":623,"line_end":623,"column_start":5,"column_end":59}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":693218,"byte_end":693276,"line_start":624,"line_end":624,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":693281,"byte_end":693336,"line_start":625,"line_end":625,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":693341,"byte_end":693381,"line_start":626,"line_end":626,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":693386,"byte_end":693428,"line_start":627,"line_end":627,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::new(axisangle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":693433,"byte_end":693476,"line_start":628,"line_end":628,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":693481,"byte_end":693484,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":693489,"byte_end":693568,"line_start":630,"line_end":630,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":693573,"byte_end":693654,"line_start":631,"line_end":631,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":693659,"byte_end":693662,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":693667,"byte_end":693707,"line_start":633,"line_end":633,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(UnitQuaternion::new(Vector3::<f32>::zeros()), UnitQuaternion::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":693712,"byte_end":693801,"line_start":634,"line_end":634,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":693806,"byte_end":693813,"line_start":635,"line_end":635,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":693818,"byte_end":693827,"line_start":636,"line_end":636,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4962},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":695115,"byte_end":695122,"line_start":668,"line_end":668,"column_start":12,"column_end":19},"name":"new_eps","qualname":"<UnitQuaternion<N>>::new_eps","value":"fn <SB> (axisangle: Vector<N, U3, SB>, eps: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":694083,"byte_end":694176,"line_start":646,"line_end":646,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":694181,"byte_end":694184,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ If `axisangle` has a magnitude smaller than `eps`, this returns the identity rotation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":694189,"byte_end":694279,"line_start":648,"line_end":648,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":694284,"byte_end":694287,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":694292,"byte_end":694305,"line_start":650,"line_end":650,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":694310,"byte_end":694317,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":694322,"byte_end":694361,"line_start":652,"line_end":652,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":694366,"byte_end":694385,"line_start":653,"line_end":653,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":694390,"byte_end":694444,"line_start":654,"line_end":654,"column_start":5,"column_end":59}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":694449,"byte_end":694507,"line_start":655,"line_end":655,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":694512,"byte_end":694567,"line_start":656,"line_end":656,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":694572,"byte_end":694612,"line_start":657,"line_end":657,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":694617,"byte_end":694659,"line_start":658,"line_end":658,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::new_eps(axisangle, 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":694664,"byte_end":694719,"line_start":659,"line_end":659,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":694724,"byte_end":694727,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":694732,"byte_end":694811,"line_start":661,"line_end":661,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":694816,"byte_end":694897,"line_start":662,"line_end":662,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":694902,"byte_end":694905,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ // An almost zero vector yields an identity.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":694910,"byte_end":694958,"line_start":664,"line_end":664,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(UnitQuaternion::new_eps(Vector3::new(1.0e-8, 1.0e-9, 1.0e-7), 1.0e-6), UnitQuaternion::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":694963,"byte_end":695077,"line_start":665,"line_end":665,"column_start":5,"column_end":119}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":695082,"byte_end":695089,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":695094,"byte_end":695103,"line_start":667,"line_end":667,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4964},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":696448,"byte_end":696464,"line_start":700,"line_end":700,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<UnitQuaternion<N>>::from_scaled_axis","value":"fn <SB> (axisangle: Vector<N, U3, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":695378,"byte_end":695471,"line_start":677,"line_end":677,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":695476,"byte_end":695479,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ If `axisangle` has a magnitude smaller than `N::default_epsilon()`, this returns the identity rotation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":695484,"byte_end":695591,"line_start":679,"line_end":679,"column_start":5,"column_end":112}},{"value":"/ Same as `Self::new(axisangle)`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":695596,"byte_end":695631,"line_start":680,"line_end":680,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":695636,"byte_end":695639,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":695644,"byte_end":695657,"line_start":682,"line_end":682,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":695662,"byte_end":695669,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":695674,"byte_end":695713,"line_start":684,"line_end":684,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":695718,"byte_end":695737,"line_start":685,"line_end":685,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":695742,"byte_end":695796,"line_start":686,"line_end":686,"column_start":5,"column_end":59}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":695801,"byte_end":695859,"line_start":687,"line_end":687,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":695864,"byte_end":695919,"line_start":688,"line_end":688,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":695924,"byte_end":695964,"line_start":689,"line_end":689,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":695969,"byte_end":696011,"line_start":690,"line_end":690,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::from_scaled_axis(axisangle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":696016,"byte_end":696072,"line_start":691,"line_end":691,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":696077,"byte_end":696080,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":696085,"byte_end":696164,"line_start":693,"line_end":693,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":696169,"byte_end":696250,"line_start":694,"line_end":694,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":696255,"byte_end":696258,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":696263,"byte_end":696303,"line_start":696,"line_end":696,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(UnitQuaternion::from_scaled_axis(Vector3::<f32>::zeros()), UnitQuaternion::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":696308,"byte_end":696410,"line_start":697,"line_end":697,"column_start":5,"column_end":107}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":696415,"byte_end":696422,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":696427,"byte_end":696436,"line_start":699,"line_end":699,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4966},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":697698,"byte_end":697718,"line_start":730,"line_end":730,"column_start":12,"column_end":32},"name":"from_scaled_axis_eps","qualname":"<UnitQuaternion<N>>::from_scaled_axis_eps","value":"fn <SB> (axisangle: Vector<N, U3, SB>, eps: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":696591,"byte_end":696684,"line_start":707,"line_end":707,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":696689,"byte_end":696692,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ If `axisangle` has a magnitude smaller than `eps`, this returns the identity rotation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":696697,"byte_end":696787,"line_start":709,"line_end":709,"column_start":5,"column_end":95}},{"value":"/ Same as `Self::new_eps(axisangle, eps)`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":696792,"byte_end":696836,"line_start":710,"line_end":710,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":696841,"byte_end":696844,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":696849,"byte_end":696862,"line_start":712,"line_end":712,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":696867,"byte_end":696874,"line_start":713,"line_end":713,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":696879,"byte_end":696918,"line_start":714,"line_end":714,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":696923,"byte_end":696942,"line_start":715,"line_end":715,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":696947,"byte_end":697001,"line_start":716,"line_end":716,"column_start":5,"column_end":59}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":697006,"byte_end":697064,"line_start":717,"line_end":717,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":697069,"byte_end":697124,"line_start":718,"line_end":718,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":697129,"byte_end":697169,"line_start":719,"line_end":719,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":697174,"byte_end":697216,"line_start":720,"line_end":720,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::from_scaled_axis_eps(axisangle, 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":697221,"byte_end":697289,"line_start":721,"line_end":721,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":697294,"byte_end":697297,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":697302,"byte_end":697381,"line_start":723,"line_end":723,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":697386,"byte_end":697467,"line_start":724,"line_end":724,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":697472,"byte_end":697475,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ // An almost zero vector yields an identity.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":697480,"byte_end":697528,"line_start":726,"line_end":726,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(UnitQuaternion::from_scaled_axis_eps(Vector3::new(1.0e-8, 1.0e-9, 1.0e-7), 1.0e-6), UnitQuaternion::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":697533,"byte_end":697660,"line_start":727,"line_end":727,"column_start":5,"column_end":132}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":697665,"byte_end":697672,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":697677,"byte_end":697686,"line_start":729,"line_end":729,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4968},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":698953,"byte_end":698960,"line_start":762,"line_end":762,"column_start":12,"column_end":19},"name":"mean_of","qualname":"<UnitQuaternion<N>>::mean_of","value":"fn (unit_quaternions: impl IntoIterator<Item = Self>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create the mean unit quaternion from a data structure implementing IntoIterator\n returning unit quaternions.","sig":null,"attributes":[{"value":"/ Create the mean unit quaternion from a data structure implementing IntoIterator","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":697862,"byte_end":697945,"line_start":737,"line_end":737,"column_start":5,"column_end":88}},{"value":"/ returning unit quaternions.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":697950,"byte_end":697981,"line_start":738,"line_end":738,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":697986,"byte_end":697989,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ The method will panic if the iterator does not return any quaternions.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":697994,"byte_end":698068,"line_start":740,"line_end":740,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":698073,"byte_end":698076,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ Algorithm from: Oshman, Yaakov, and Avishy Carmi. \"Attitude estimation from vector","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":698081,"byte_end":698167,"line_start":742,"line_end":742,"column_start":5,"column_end":91}},{"value":"/ observations using a genetic-algorithm-embedded quaternion particle filter.\" Journal of","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":698172,"byte_end":698263,"line_start":743,"line_end":743,"column_start":5,"column_end":96}},{"value":"/ Guidance, Control, and Dynamics 29.4 (2006): 879-891.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":698268,"byte_end":698325,"line_start":744,"line_end":744,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":698330,"byte_end":698333,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":698338,"byte_end":698351,"line_start":746,"line_end":746,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":698356,"byte_end":698363,"line_start":747,"line_end":747,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":698368,"byte_end":698407,"line_start":748,"line_end":748,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":698412,"byte_end":698431,"line_start":749,"line_end":749,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":698436,"byte_end":698473,"line_start":750,"line_end":750,"column_start":5,"column_end":42}},{"value":"/ let q1 = UnitQuaternion::from_euler_angles(0.0, 0.0, 0.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":698478,"byte_end":698540,"line_start":751,"line_end":751,"column_start":5,"column_end":67}},{"value":"/ let q2 = UnitQuaternion::from_euler_angles(-0.1, 0.0, 0.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":698545,"byte_end":698608,"line_start":752,"line_end":752,"column_start":5,"column_end":68}},{"value":"/ let q3 = UnitQuaternion::from_euler_angles(0.1, 0.0, 0.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":698613,"byte_end":698675,"line_start":753,"line_end":753,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":698680,"byte_end":698683,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ let quat_vec = vec![q1, q2, q3];","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":698688,"byte_end":698724,"line_start":755,"line_end":755,"column_start":5,"column_end":41}},{"value":"/ let q_mean = UnitQuaternion::mean_of(quat_vec);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":698729,"byte_end":698780,"line_start":756,"line_end":756,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":698785,"byte_end":698788,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ let euler_angles_mean = q_mean.euler_angles();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":698793,"byte_end":698843,"line_start":758,"line_end":758,"column_start":5,"column_end":55}},{"value":"/ assert_relative_eq!(euler_angles_mean.0, 0.0, epsilon = 1.0e-7)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":698848,"byte_end":698915,"line_start":759,"line_end":759,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":698920,"byte_end":698927,"line_start":760,"line_end":760,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":698932,"byte_end":698941,"line_start":761,"line_end":761,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":5230},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":735187,"byte_end":735198,"line_start":11,"line_end":11,"column_start":10,"column_end":21},"name":"UnitComplex","qualname":"::geometry::unit_complex::UnitComplex","value":"Unit<Complex<N>>","parent":null,"children":[],"decl_id":null,"docs":" A complex number with a norm equal to 1.\n","sig":null,"attributes":[{"value":"/ A complex number with a norm equal to 1.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":735133,"byte_end":735177,"line_start":10,"line_end":10,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":5241},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736328,"byte_end":736333,"line_start":56,"line_end":56,"column_start":12,"column_end":17},"name":"angle","qualname":"<UnitComplex<N>>::angle","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle in `]-pi; pi]` of this unit complex number.","sig":null,"attributes":[{"value":"/ The rotation angle in `]-pi; pi]` of this unit complex number.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736068,"byte_end":736134,"line_start":47,"line_end":47,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736139,"byte_end":736142,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736147,"byte_end":736160,"line_start":49,"line_end":49,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736165,"byte_end":736172,"line_start":50,"line_end":50,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736177,"byte_end":736209,"line_start":51,"line_end":51,"column_start":5,"column_end":37}},{"value":"/ let rot = UnitComplex::new(1.78);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736214,"byte_end":736251,"line_start":52,"line_end":52,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(rot.angle(), 1.78);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736256,"byte_end":736290,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736295,"byte_end":736302,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736307,"byte_end":736316,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5242},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736665,"byte_end":736674,"line_start":70,"line_end":70,"column_start":12,"column_end":21},"name":"sin_angle","qualname":"<UnitComplex<N>>::sin_angle","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The sine of the rotation angle.","sig":null,"attributes":[{"value":"/ The sine of the rotation angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736395,"byte_end":736430,"line_start":60,"line_end":60,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736435,"byte_end":736438,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736443,"byte_end":736456,"line_start":62,"line_end":62,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736461,"byte_end":736468,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736473,"byte_end":736505,"line_start":64,"line_end":64,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.78f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736510,"byte_end":736534,"line_start":65,"line_end":65,"column_start":5,"column_end":29}},{"value":"/ let rot = UnitComplex::new(angle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736539,"byte_end":736577,"line_start":66,"line_end":66,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(rot.sin_angle(), angle.sin());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736582,"byte_end":736627,"line_start":67,"line_end":67,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736632,"byte_end":736639,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736644,"byte_end":736653,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5243},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736987,"byte_end":736996,"line_start":84,"line_end":84,"column_start":12,"column_end":21},"name":"cos_angle","qualname":"<UnitComplex<N>>::cos_angle","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The cosine of the rotation angle.","sig":null,"attributes":[{"value":"/ The cosine of the rotation angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736716,"byte_end":736753,"line_start":74,"line_end":74,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736758,"byte_end":736761,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736766,"byte_end":736779,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736784,"byte_end":736791,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736796,"byte_end":736828,"line_start":78,"line_end":78,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.78f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736833,"byte_end":736857,"line_start":79,"line_end":79,"column_start":5,"column_end":29}},{"value":"/ let rot = UnitComplex::new(angle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736862,"byte_end":736900,"line_start":80,"line_end":80,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(rot.cos_angle(),angle.cos());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736905,"byte_end":736949,"line_start":81,"line_end":81,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736954,"byte_end":736961,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736966,"byte_end":736975,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5244},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":737260,"byte_end":737271,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"scaled_axis","qualname":"<UnitComplex<N>>::scaled_axis","value":"fn (&self) -> Vector1<N>","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle returned as a 1-dimensional vector.","sig":null,"attributes":[{"value":"/ The rotation angle returned as a 1-dimensional vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":737038,"byte_end":737096,"line_start":88,"line_end":88,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":737101,"byte_end":737104,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":737109,"byte_end":737180,"line_start":90,"line_end":90,"column_start":5,"column_end":76}},{"value":"/ the `.angle()` method instead is more common.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":737185,"byte_end":737234,"line_start":91,"line_end":91,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":737239,"byte_end":737248,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5245},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":737616,"byte_end":737626,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"axis_angle","qualname":"<UnitComplex<N>>::axis_angle","value":"fn (&self) -> Option<(Unit<Vector1<N>>, N)>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis and angle in ]0, pi] of this complex number.","sig":null,"attributes":[{"value":"/ The rotation axis and angle in ]0, pi] of this complex number.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":737341,"byte_end":737407,"line_start":97,"line_end":97,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":737412,"byte_end":737415,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":737420,"byte_end":737491,"line_start":99,"line_end":99,"column_start":5,"column_end":76}},{"value":"/ the `.angle()` method instead is more common.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":737496,"byte_end":737545,"line_start":100,"line_end":100,"column_start":5,"column_end":54}},{"value":"/ Returns `None` if the angle is zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":737550,"byte_end":737590,"line_start":101,"line_end":101,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":737595,"byte_end":737604,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5246},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738396,"byte_end":738403,"line_start":132,"line_end":132,"column_start":12,"column_end":19},"name":"complex","qualname":"<UnitComplex<N>>::complex","value":"fn (&self) -> &Complex<N>","parent":null,"children":[],"decl_id":null,"docs":" The underlying complex number.","sig":null,"attributes":[{"value":"/ The underlying complex number.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":737988,"byte_end":738022,"line_start":118,"line_end":118,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738027,"byte_end":738030,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Same as `self.as_ref()`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738035,"byte_end":738063,"line_start":120,"line_end":120,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738068,"byte_end":738071,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738076,"byte_end":738089,"line_start":122,"line_end":122,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738094,"byte_end":738101,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ # extern crate num_complex;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738106,"byte_end":738137,"line_start":124,"line_end":124,"column_start":5,"column_end":36}},{"value":"/ # use num_complex::Complex;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738142,"byte_end":738173,"line_start":125,"line_end":125,"column_start":5,"column_end":36}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738178,"byte_end":738210,"line_start":126,"line_end":126,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.78f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738215,"byte_end":738239,"line_start":127,"line_end":127,"column_start":5,"column_end":29}},{"value":"/ let rot = UnitComplex::new(angle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738244,"byte_end":738282,"line_start":128,"line_end":128,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(*rot.complex(), Complex::new(angle.cos(), angle.sin()));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738287,"byte_end":738358,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738363,"byte_end":738370,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738375,"byte_end":738384,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5247},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738878,"byte_end":738887,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<UnitComplex<N>>::conjugate","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the conjugate of this unit complex number.","sig":null,"attributes":[{"value":"/ Compute the conjugate of this unit complex number.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738461,"byte_end":738515,"line_start":136,"line_end":136,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738520,"byte_end":738523,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738528,"byte_end":738541,"line_start":138,"line_end":138,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738546,"byte_end":738553,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738558,"byte_end":738590,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/ let rot = UnitComplex::new(1.78);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738595,"byte_end":738632,"line_start":141,"line_end":141,"column_start":5,"column_end":42}},{"value":"/ let conj = rot.conjugate();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738637,"byte_end":738668,"line_start":142,"line_end":142,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(rot.complex().im, -conj.complex().im);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738673,"byte_end":738726,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(rot.complex().re, conj.complex().re);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738731,"byte_end":738783,"line_start":144,"line_end":144,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738788,"byte_end":738795,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738800,"byte_end":738809,"line_start":146,"line_end":146,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use conjugate_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738814,"byte_end":738866,"line_start":147,"line_end":147,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5248},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739459,"byte_end":739466,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"inverse","qualname":"<UnitComplex<N>>::inverse","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts this complex number if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this complex number if it is not zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":738957,"byte_end":739007,"line_start":152,"line_end":152,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739012,"byte_end":739015,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739020,"byte_end":739033,"line_start":154,"line_end":154,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739038,"byte_end":739045,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739050,"byte_end":739089,"line_start":156,"line_end":156,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739094,"byte_end":739126,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ let rot = UnitComplex::new(1.2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739131,"byte_end":739167,"line_start":158,"line_end":158,"column_start":5,"column_end":41}},{"value":"/ let inv = rot.inverse();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739172,"byte_end":739200,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(rot * inv, UnitComplex::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739205,"byte_end":739283,"line_start":160,"line_end":160,"column_start":5,"column_end":83}},{"value":"/ assert_relative_eq!(inv * rot, UnitComplex::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739288,"byte_end":739366,"line_start":161,"line_end":161,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739371,"byte_end":739378,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739383,"byte_end":739392,"line_start":163,"line_end":163,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739397,"byte_end":739447,"line_start":164,"line_end":164,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5249},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739883,"byte_end":739891,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<UnitComplex<N>>::angle_to","value":"fn (&self, other: &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation angle needed to make `self` and `other` coincide.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739520,"byte_end":739586,"line_start":169,"line_end":169,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739591,"byte_end":739594,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739599,"byte_end":739612,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739617,"byte_end":739624,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739629,"byte_end":739668,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739673,"byte_end":739705,"line_start":174,"line_end":174,"column_start":5,"column_end":37}},{"value":"/ let rot1 = UnitComplex::new(0.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739710,"byte_end":739747,"line_start":175,"line_end":175,"column_start":5,"column_end":42}},{"value":"/ let rot2 = UnitComplex::new(1.7);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739752,"byte_end":739789,"line_start":176,"line_end":176,"column_start":5,"column_end":42}},{"value":"/ assert_relative_eq!(rot1.angle_to(&rot2), 1.6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739794,"byte_end":739845,"line_start":177,"line_end":177,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739850,"byte_end":739857,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739862,"byte_end":739871,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5250},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740558,"byte_end":740569,"line_start":201,"line_end":201,"column_start":12,"column_end":23},"name":"rotation_to","qualname":"<UnitComplex<N>>::rotation_to","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The unit complex number needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The unit complex number needed to make `self` and `other` coincide.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":739998,"byte_end":740069,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740074,"byte_end":740077,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ The result is such that: `self.rotation_to(other) * self == other`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740082,"byte_end":740153,"line_start":187,"line_end":187,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740158,"byte_end":740161,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740166,"byte_end":740179,"line_start":189,"line_end":189,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740184,"byte_end":740191,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740196,"byte_end":740235,"line_start":191,"line_end":191,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740240,"byte_end":740272,"line_start":192,"line_end":192,"column_start":5,"column_end":37}},{"value":"/ let rot1 = UnitComplex::new(0.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740277,"byte_end":740314,"line_start":193,"line_end":193,"column_start":5,"column_end":42}},{"value":"/ let rot2 = UnitComplex::new(1.7);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740319,"byte_end":740356,"line_start":194,"line_end":194,"column_start":5,"column_end":42}},{"value":"/ let rot_to = rot1.rotation_to(&rot2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740361,"byte_end":740402,"line_start":195,"line_end":195,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740407,"byte_end":740410,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot_to * rot1, rot2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740415,"byte_end":740460,"line_start":197,"line_end":197,"column_start":5,"column_end":50}},{"value":"/ assert_relative_eq!(rot_to.inverse() * rot2, rot1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740465,"byte_end":740520,"line_start":198,"line_end":198,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740525,"byte_end":740532,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740537,"byte_end":740546,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5251},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741114,"byte_end":741127,"line_start":219,"line_end":219,"column_start":12,"column_end":25},"name":"conjugate_mut","qualname":"<UnitComplex<N>>::conjugate_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Compute in-place the conjugate of this unit complex number.","sig":null,"attributes":[{"value":"/ Compute in-place the conjugate of this unit complex number.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740633,"byte_end":740696,"line_start":205,"line_end":205,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740701,"byte_end":740704,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740709,"byte_end":740722,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740727,"byte_end":740734,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740739,"byte_end":740778,"line_start":209,"line_end":209,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740783,"byte_end":740815,"line_start":210,"line_end":210,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.7;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740820,"byte_end":740840,"line_start":211,"line_end":211,"column_start":5,"column_end":25}},{"value":"/ let rot = UnitComplex::new(angle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740845,"byte_end":740883,"line_start":212,"line_end":212,"column_start":5,"column_end":43}},{"value":"/ let mut conj = UnitComplex::new(angle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740888,"byte_end":740931,"line_start":213,"line_end":213,"column_start":5,"column_end":48}},{"value":"/ conj.conjugate_mut();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740936,"byte_end":740961,"line_start":214,"line_end":214,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(rot.complex().im, -conj.complex().im);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":740966,"byte_end":741019,"line_start":215,"line_end":215,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(rot.complex().re, conj.complex().re);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741024,"byte_end":741076,"line_start":216,"line_end":216,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741081,"byte_end":741088,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741093,"byte_end":741102,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5252},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741690,"byte_end":741701,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<UnitComplex<N>>::inverse_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inverts in-place this unit complex number.","sig":null,"attributes":[{"value":"/ Inverts in-place this unit complex number.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741218,"byte_end":741264,"line_start":224,"line_end":224,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741269,"byte_end":741272,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741277,"byte_end":741290,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741295,"byte_end":741302,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741307,"byte_end":741346,"line_start":228,"line_end":228,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741351,"byte_end":741383,"line_start":229,"line_end":229,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.7;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741388,"byte_end":741408,"line_start":230,"line_end":230,"column_start":5,"column_end":25}},{"value":"/ let mut rot = UnitComplex::new(angle);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741413,"byte_end":741455,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/ rot.inverse_mut();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741460,"byte_end":741482,"line_start":232,"line_end":232,"column_start":5,"column_end":27}},{"value":"/ assert_relative_eq!(rot * UnitComplex::new(angle), UnitComplex::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741487,"byte_end":741567,"line_start":233,"line_end":233,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(UnitComplex::new(angle) * rot, UnitComplex::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741572,"byte_end":741652,"line_start":234,"line_end":234,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741657,"byte_end":741664,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741669,"byte_end":741678,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5253},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":742226,"byte_end":742230,"line_start":255,"line_end":255,"column_start":12,"column_end":16},"name":"powf","qualname":"<UnitComplex<N>>::powf","value":"fn (&self, n: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise this unit complex number to a given floating power.","sig":null,"attributes":[{"value":"/ Raise this unit complex number to a given floating power.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741755,"byte_end":741816,"line_start":241,"line_end":241,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741821,"byte_end":741824,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This returns the unit complex number that identifies a rotation angle equal to","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741829,"byte_end":741911,"line_start":243,"line_end":243,"column_start":5,"column_end":87}},{"value":"/ `self.angle() × n`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741916,"byte_end":741940,"line_start":244,"line_end":244,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741945,"byte_end":741948,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741953,"byte_end":741966,"line_start":246,"line_end":246,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741971,"byte_end":741978,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":741983,"byte_end":742022,"line_start":248,"line_end":248,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":742027,"byte_end":742059,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/ let rot = UnitComplex::new(0.78);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":742064,"byte_end":742101,"line_start":250,"line_end":250,"column_start":5,"column_end":42}},{"value":"/ let pow = rot.powf(2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":742106,"byte_end":742134,"line_start":251,"line_end":251,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(pow.angle(), 2.0 * 0.78);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":742139,"byte_end":742188,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":742193,"byte_end":742200,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":742205,"byte_end":742214,"line_start":254,"line_end":254,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5254},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":742710,"byte_end":742728,"line_start":270,"line_end":270,"column_start":12,"column_end":30},"name":"to_rotation_matrix","qualname":"<UnitComplex<N>>::to_rotation_matrix","value":"fn (&self) -> Rotation2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds the rotation matrix corresponding to this unit complex number.","sig":null,"attributes":[{"value":"/ Builds the rotation matrix corresponding to this unit complex number.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":742308,"byte_end":742381,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":742386,"byte_end":742389,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":742394,"byte_end":742407,"line_start":261,"line_end":261,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":742412,"byte_end":742419,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitComplex, Rotation2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":742424,"byte_end":742469,"line_start":263,"line_end":263,"column_start":5,"column_end":50}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":742474,"byte_end":742493,"line_start":264,"line_end":264,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":742498,"byte_end":742553,"line_start":265,"line_end":265,"column_start":5,"column_end":60}},{"value":"/ let expected = Rotation2::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":742558,"byte_end":742616,"line_start":266,"line_end":266,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(rot.to_rotation_matrix(), expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":742621,"byte_end":742672,"line_start":267,"line_end":267,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":742677,"byte_end":742684,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":742689,"byte_end":742698,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5255},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":743426,"byte_end":743440,"line_start":290,"line_end":290,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<UnitComplex<N>>::to_homogeneous","value":"fn (&self) -> Matrix3<N>","parent":null,"children":[],"decl_id":null,"docs":" Converts this unit complex number into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this unit complex number into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":742884,"byte_end":742976,"line_start":277,"line_end":277,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":742981,"byte_end":742984,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":742989,"byte_end":743002,"line_start":279,"line_end":279,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":743007,"byte_end":743014,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitComplex, Matrix3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":743019,"byte_end":743062,"line_start":281,"line_end":281,"column_start":5,"column_end":48}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":743067,"byte_end":743086,"line_start":282,"line_end":282,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":743091,"byte_end":743146,"line_start":283,"line_end":283,"column_start":5,"column_end":60}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":743151,"byte_end":743209,"line_start":284,"line_end":284,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":743214,"byte_end":743272,"line_start":285,"line_end":285,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":743277,"byte_end":743336,"line_start":286,"line_end":286,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(rot.to_homogeneous(), expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":743341,"byte_end":743388,"line_start":287,"line_end":287,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":743393,"byte_end":743400,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":743405,"byte_end":743414,"line_start":289,"line_end":289,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5256},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744067,"byte_end":744082,"line_start":308,"line_end":308,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<UnitComplex<N>>::transform_point","value":"fn (&self, pt: &Point2<N>) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given point by this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given point by this unit complex number.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":743526,"byte_end":743581,"line_start":294,"line_end":294,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":743586,"byte_end":743589,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":743594,"byte_end":743649,"line_start":296,"line_end":296,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":743654,"byte_end":743657,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":743662,"byte_end":743675,"line_start":298,"line_end":298,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":743680,"byte_end":743687,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":743692,"byte_end":743731,"line_start":300,"line_end":300,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Point2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":743736,"byte_end":743778,"line_start":301,"line_end":301,"column_start":5,"column_end":47}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":743783,"byte_end":743802,"line_start":302,"line_end":302,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":743807,"byte_end":743862,"line_start":303,"line_end":303,"column_start":5,"column_end":60}},{"value":"/ let transformed_point = rot.transform_point(&Point2::new(1.0, 2.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":743867,"byte_end":743939,"line_start":304,"line_end":304,"column_start":5,"column_end":77}},{"value":"/ assert_relative_eq!(transformed_point, Point2::new(-2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":743944,"byte_end":744029,"line_start":305,"line_end":305,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744034,"byte_end":744041,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744046,"byte_end":744055,"line_start":307,"line_end":307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5257},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744697,"byte_end":744713,"line_start":326,"line_end":326,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<UnitComplex<N>>::transform_vector","value":"fn (&self, v: &Vector2<N>) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector by this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given vector by this unit complex number.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744150,"byte_end":744206,"line_start":312,"line_end":312,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744211,"byte_end":744214,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744219,"byte_end":744273,"line_start":314,"line_end":314,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744278,"byte_end":744281,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744286,"byte_end":744299,"line_start":316,"line_end":316,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744304,"byte_end":744311,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744316,"byte_end":744355,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Vector2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744360,"byte_end":744403,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744408,"byte_end":744427,"line_start":320,"line_end":320,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744432,"byte_end":744487,"line_start":321,"line_end":321,"column_start":5,"column_end":60}},{"value":"/ let transformed_vector = rot.transform_vector(&Vector2::new(1.0, 2.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744492,"byte_end":744567,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ assert_relative_eq!(transformed_vector, Vector2::new(-2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744572,"byte_end":744659,"line_start":323,"line_end":323,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744664,"byte_end":744671,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744676,"byte_end":744685,"line_start":325,"line_end":325,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5258},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":745277,"byte_end":745300,"line_start":342,"line_end":342,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<UnitComplex<N>>::inverse_transform_point","value":"fn (&self, pt: &Point2<N>) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given point by the inverse of this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given point by the inverse of this unit complex number.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744781,"byte_end":744851,"line_start":330,"line_end":330,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744856,"byte_end":744859,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744864,"byte_end":744877,"line_start":332,"line_end":332,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744882,"byte_end":744889,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744894,"byte_end":744933,"line_start":334,"line_end":334,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Point2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744938,"byte_end":744980,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":744985,"byte_end":745004,"line_start":336,"line_end":336,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":745009,"byte_end":745064,"line_start":337,"line_end":337,"column_start":5,"column_end":60}},{"value":"/ let transformed_point = rot.inverse_transform_point(&Point2::new(1.0, 2.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":745069,"byte_end":745149,"line_start":338,"line_end":338,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(transformed_point, Point2::new(2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":745154,"byte_end":745239,"line_start":339,"line_end":339,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":745244,"byte_end":745251,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":745256,"byte_end":745265,"line_start":341,"line_end":341,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5259},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":746038,"byte_end":746062,"line_start":360,"line_end":360,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<UnitComplex<N>>::inverse_transform_vector","value":"fn (&self, v: &Vector2<N>) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector by the inverse of this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given vector by the inverse of this unit complex number.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":745535,"byte_end":745606,"line_start":348,"line_end":348,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":745611,"byte_end":745614,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":745619,"byte_end":745632,"line_start":350,"line_end":350,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":745637,"byte_end":745644,"line_start":351,"line_end":351,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":745649,"byte_end":745688,"line_start":352,"line_end":352,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Vector2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":745693,"byte_end":745736,"line_start":353,"line_end":353,"column_start":5,"column_end":48}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":745741,"byte_end":745760,"line_start":354,"line_end":354,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":745765,"byte_end":745820,"line_start":355,"line_end":355,"column_start":5,"column_end":60}},{"value":"/ let transformed_vector = rot.inverse_transform_vector(&Vector2::new(1.0, 2.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":745825,"byte_end":745908,"line_start":356,"line_end":356,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(transformed_vector, Vector2::new(2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":745913,"byte_end":746000,"line_start":357,"line_end":357,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":746005,"byte_end":746012,"line_start":358,"line_end":358,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":746017,"byte_end":746026,"line_start":359,"line_end":359,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5299},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748322,"byte_end":748330,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"identity","qualname":"<UnitComplex<N>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The unit complex number multiplicative identity.","sig":null,"attributes":[{"value":"/ The unit complex number multiplicative identity.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":747985,"byte_end":748037,"line_start":20,"line_end":20,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748042,"byte_end":748045,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748050,"byte_end":748063,"line_start":22,"line_end":22,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748068,"byte_end":748075,"line_start":23,"line_end":23,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748080,"byte_end":748112,"line_start":24,"line_end":24,"column_start":5,"column_end":37}},{"value":"/ let rot1 = UnitComplex::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748117,"byte_end":748156,"line_start":25,"line_end":25,"column_start":5,"column_end":44}},{"value":"/ let rot2 = UnitComplex::new(1.7);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748161,"byte_end":748198,"line_start":26,"line_end":26,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748203,"byte_end":748206,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(rot1 * rot2, rot2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748211,"byte_end":748245,"line_start":28,"line_end":28,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(rot2 * rot1, rot2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748250,"byte_end":748284,"line_start":29,"line_end":29,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748289,"byte_end":748296,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748301,"byte_end":748310,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5300},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748852,"byte_end":748855,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<UnitComplex<N>>::new","value":"fn (angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds the unit complex number corresponding to the rotation with the given angle.","sig":null,"attributes":[{"value":"/ Builds the unit complex number corresponding to the rotation with the given angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748417,"byte_end":748503,"line_start":36,"line_end":36,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748508,"byte_end":748511,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748516,"byte_end":748529,"line_start":38,"line_end":38,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748534,"byte_end":748537,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748542,"byte_end":748549,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748554,"byte_end":748593,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748598,"byte_end":748617,"line_start":42,"line_end":42,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitComplex, Point2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748622,"byte_end":748664,"line_start":43,"line_end":43,"column_start":5,"column_end":47}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748669,"byte_end":748724,"line_start":44,"line_end":44,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748729,"byte_end":748732,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * Point2::new(3.0, 4.0), Point2::new(-4.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748737,"byte_end":748814,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748819,"byte_end":748826,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748831,"byte_end":748840,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5301},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749491,"byte_end":749501,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"from_angle","qualname":"<UnitComplex<N>>::from_angle","value":"fn (angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds the unit complex number corresponding to the rotation with the angle.","sig":null,"attributes":[{"value":"/ Builds the unit complex number corresponding to the rotation with the angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":748981,"byte_end":749061,"line_start":54,"line_end":54,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749066,"byte_end":749069,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Same as `Self::new(angle)`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749074,"byte_end":749105,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749110,"byte_end":749113,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749118,"byte_end":749131,"line_start":58,"line_end":58,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749136,"byte_end":749139,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749144,"byte_end":749151,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749156,"byte_end":749195,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749200,"byte_end":749219,"line_start":62,"line_end":62,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitComplex, Point2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749224,"byte_end":749266,"line_start":63,"line_end":63,"column_start":5,"column_end":47}},{"value":"/ let rot = UnitComplex::from_angle(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749271,"byte_end":749333,"line_start":64,"line_end":64,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749338,"byte_end":749341,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * Point2::new(3.0, 4.0), Point2::new(-4.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749346,"byte_end":749423,"line_start":66,"line_end":66,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749428,"byte_end":749435,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749470,"byte_end":749479,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5302},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":750247,"byte_end":750269,"line_start":91,"line_end":91,"column_start":12,"column_end":34},"name":"from_cos_sin_unchecked","qualname":"<UnitComplex<N>>::from_cos_sin_unchecked","value":"fn (cos: N, sin: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds the unit complex number from the sinus and cosinus of the rotation angle.","sig":null,"attributes":[{"value":"/ Builds the unit complex number from the sinus and cosinus of the rotation angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749558,"byte_end":749642,"line_start":74,"line_end":74,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749647,"byte_end":749650,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The input values are not checked to actually be cosines and sine of the same value.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749655,"byte_end":749742,"line_start":76,"line_end":76,"column_start":5,"column_end":92}},{"value":"/ Is is generally preferable to use the `::new(angle)` constructor instead.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749747,"byte_end":749824,"line_start":77,"line_end":77,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749829,"byte_end":749832,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749837,"byte_end":749850,"line_start":79,"line_end":79,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749855,"byte_end":749858,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749863,"byte_end":749870,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749875,"byte_end":749914,"line_start":82,"line_end":82,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749919,"byte_end":749938,"line_start":83,"line_end":83,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitComplex, Vector2, Point2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749943,"byte_end":749994,"line_start":84,"line_end":84,"column_start":5,"column_end":56}},{"value":"/ let angle = f32::consts::FRAC_PI_2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":749999,"byte_end":750038,"line_start":85,"line_end":85,"column_start":5,"column_end":44}},{"value":"/ let rot = UnitComplex::from_cos_sin_unchecked(angle.cos(), angle.sin());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":750043,"byte_end":750119,"line_start":86,"line_end":86,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":750124,"byte_end":750127,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * Point2::new(3.0, 4.0), Point2::new(-4.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":750132,"byte_end":750209,"line_start":88,"line_end":88,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":750214,"byte_end":750221,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":750226,"byte_end":750235,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5303},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":750620,"byte_end":750636,"line_start":100,"line_end":100,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<UnitComplex<N>>::from_scaled_axis","value":"fn <SB> (axisangle: Vector<N, U1, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a unit complex rotation from an angle in radian wrapped in a 1-dimensional vector.","sig":null,"attributes":[{"value":"/ Builds a unit complex rotation from an angle in radian wrapped in a 1-dimensional vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":750359,"byte_end":750452,"line_start":95,"line_end":95,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":750457,"byte_end":750460,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":750465,"byte_end":750536,"line_start":97,"line_end":97,"column_start":5,"column_end":76}},{"value":"/ the `::new(angle)` method instead is more common.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":750541,"byte_end":750594,"line_start":98,"line_end":98,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":750599,"byte_end":750608,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5305},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":750894,"byte_end":750906,"line_start":108,"line_end":108,"column_start":12,"column_end":24},"name":"from_complex","qualname":"<UnitComplex<N>>::from_complex","value":"fn (q: Complex<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit complex number from a complex number.","sig":null,"attributes":[{"value":"/ Creates a new unit complex number from a complex number.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":750747,"byte_end":750807,"line_start":104,"line_end":104,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":750812,"byte_end":750815,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ The input complex number will be normalized.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":750820,"byte_end":750868,"line_start":106,"line_end":106,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":750873,"byte_end":750882,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5306},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":751178,"byte_end":751198,"line_start":116,"line_end":116,"column_start":12,"column_end":32},"name":"from_complex_and_get","qualname":"<UnitComplex<N>>::from_complex_and_get","value":"fn (q: Complex<N>) -> (Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit complex number from a complex number.","sig":null,"attributes":[{"value":"/ Creates a new unit complex number from a complex number.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":750983,"byte_end":751043,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":751048,"byte_end":751051,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ The input complex number will be normalized. Returns the norm of the complex number as well.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":751056,"byte_end":751152,"line_start":114,"line_end":114,"column_start":5,"column_end":101}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":751157,"byte_end":751166,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5307},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":751753,"byte_end":751773,"line_start":132,"line_end":132,"column_start":12,"column_end":32},"name":"from_rotation_matrix","qualname":"<UnitComplex<N>>::from_rotation_matrix","value":"fn (rotmat: &Rotation2<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds the unit complex number from the corresponding 2D rotation matrix.","sig":null,"attributes":[{"value":"/ Builds the unit complex number from the corresponding 2D rotation matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":751346,"byte_end":751423,"line_start":121,"line_end":121,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":751428,"byte_end":751431,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":751436,"byte_end":751449,"line_start":123,"line_end":123,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":751454,"byte_end":751461,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, UnitComplex};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":751466,"byte_end":751511,"line_start":125,"line_end":125,"column_start":5,"column_end":50}},{"value":"/ let rot = Rotation2::new(1.7);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":751516,"byte_end":751550,"line_start":126,"line_end":126,"column_start":5,"column_end":39}},{"value":"/ let complex = UnitComplex::from_rotation_matrix(&rot);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":751555,"byte_end":751613,"line_start":127,"line_end":127,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(complex, UnitComplex::new(1.7));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":751618,"byte_end":751665,"line_start":128,"line_end":128,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":751670,"byte_end":751677,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":751732,"byte_end":751741,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5308},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":752241,"byte_end":752252,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<UnitComplex<N>>::from_matrix","value":"fn (m: &Matrix2<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit complex by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds an unit complex by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":751892,"byte_end":751983,"line_start":136,"line_end":136,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":751988,"byte_end":751991,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ This is an iterative method. See `.from_matrix_eps` to provide mover","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":751996,"byte_end":752068,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ convergence parameters and starting solution.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":752073,"byte_end":752122,"line_start":139,"line_end":139,"column_start":5,"column_end":54}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":752127,"byte_end":752229,"line_start":140,"line_end":140,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":5309},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":753170,"byte_end":753185,"line_start":160,"line_end":160,"column_start":12,"column_end":27},"name":"from_matrix_eps","qualname":"<UnitComplex<N>>::from_matrix_eps","value":"fn (m: &Matrix2<N>, eps: N, max_iter: usize, guess: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit complex by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds an unit complex by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":752367,"byte_end":752458,"line_start":148,"line_end":148,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":752463,"byte_end":752466,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":752471,"byte_end":752573,"line_start":150,"line_end":150,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":752578,"byte_end":752581,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":752586,"byte_end":752602,"line_start":152,"line_end":152,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":752607,"byte_end":752610,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ * `m`: the matrix from which the rotational part is to be extracted.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":752615,"byte_end":752687,"line_start":154,"line_end":154,"column_start":5,"column_end":77}},{"value":"/ * `eps`: the angular errors tolerated between the current rotation and the optimal one.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":752692,"byte_end":752783,"line_start":155,"line_end":155,"column_start":5,"column_end":96}},{"value":"/ * `max_iter`: the maximum number of iterations. Loops indefinitely until convergence if set to `0`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":752788,"byte_end":752891,"line_start":156,"line_end":156,"column_start":5,"column_end":108}},{"value":"/ * `guess`: an estimate of the solution. Convergence will be significantly faster if an initial solution close","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":752896,"byte_end":753009,"line_start":157,"line_end":157,"column_start":5,"column_end":118}},{"value":"/           to the actual solution is provided. Can be set to `UnitQuaternion::identity()` if no other","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":753014,"byte_end":753118,"line_start":158,"line_end":158,"column_start":5,"column_end":109}},{"value":"/           guesses come to mind.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":753123,"byte_end":753158,"line_start":159,"line_end":159,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5310},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":753910,"byte_end":753926,"line_start":182,"line_end":182,"column_start":12,"column_end":28},"name":"rotation_between","qualname":"<UnitComplex<N>>::rotation_between","value":"fn <SB, SC> (a: &Vector<N, U2, SB>, b: &Vector<N, U2, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The unit complex needed to make `a` and `b` be collinear and point toward the same\n direction.","sig":null,"attributes":[{"value":"/ The unit complex needed to make `a` and `b` be collinear and point toward the same","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":753408,"byte_end":753494,"line_start":168,"line_end":168,"column_start":5,"column_end":91}},{"value":"/ direction.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":753499,"byte_end":753513,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":753518,"byte_end":753521,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":753526,"byte_end":753539,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":753544,"byte_end":753551,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":753556,"byte_end":753595,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, UnitComplex};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":753600,"byte_end":753643,"line_start":174,"line_end":174,"column_start":5,"column_end":48}},{"value":"/ let a = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":753648,"byte_end":753683,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/ let b = Vector2::new(2.0, 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":753688,"byte_end":753723,"line_start":176,"line_end":176,"column_start":5,"column_end":40}},{"value":"/ let rot = UnitComplex::rotation_between(&a, &b);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":753728,"byte_end":753780,"line_start":177,"line_end":177,"column_start":5,"column_end":57}},{"value":"/ assert_relative_eq!(rot * a, b);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":753785,"byte_end":753821,"line_start":178,"line_end":178,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(rot.inverse() * b, a);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":753826,"byte_end":753872,"line_start":179,"line_end":179,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":753877,"byte_end":753884,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":753889,"byte_end":753898,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5313},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":754823,"byte_end":754846,"line_start":206,"line_end":206,"column_start":12,"column_end":35},"name":"scaled_rotation_between","qualname":"<UnitComplex<N>>::scaled_rotation_between","value":"fn <SB, SC> (a: &Vector<N, U2, SB>, b: &Vector<N, U2, SC>, s: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":754148,"byte_end":754236,"line_start":191,"line_end":191,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":754241,"byte_end":754280,"line_start":192,"line_end":192,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":754285,"byte_end":754288,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":754293,"byte_end":754306,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":754311,"byte_end":754318,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":754323,"byte_end":754362,"line_start":196,"line_end":196,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, UnitComplex};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":754367,"byte_end":754410,"line_start":197,"line_end":197,"column_start":5,"column_end":48}},{"value":"/ let a = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":754415,"byte_end":754450,"line_start":198,"line_end":198,"column_start":5,"column_end":40}},{"value":"/ let b = Vector2::new(2.0, 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":754455,"byte_end":754490,"line_start":199,"line_end":199,"column_start":5,"column_end":40}},{"value":"/ let rot2 = UnitComplex::scaled_rotation_between(&a, &b, 0.2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":754495,"byte_end":754560,"line_start":200,"line_end":200,"column_start":5,"column_end":70}},{"value":"/ let rot5 = UnitComplex::scaled_rotation_between(&a, &b, 0.5);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":754565,"byte_end":754630,"line_start":201,"line_end":201,"column_start":5,"column_end":70}},{"value":"/ assert_relative_eq!(rot2 * rot2 * rot2 * rot2 * rot2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":754635,"byte_end":754718,"line_start":202,"line_end":202,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(rot5 * rot5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":754723,"byte_end":754785,"line_start":203,"line_end":203,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":754790,"byte_end":754797,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":754802,"byte_end":754811,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5316},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":755934,"byte_end":755955,"line_start":241,"line_end":241,"column_start":12,"column_end":33},"name":"rotation_between_axis","qualname":"<UnitComplex<N>>::rotation_between_axis","value":"fn <SB, SC> (a: &Unit<Vector<N, U2, SB>>, b: &Unit<Vector<N, U2, SC>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The unit complex needed to make `a` and `b` be collinear and point toward the same\n direction.","sig":null,"attributes":[{"value":"/ The unit complex needed to make `a` and `b` be collinear and point toward the same","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":755379,"byte_end":755465,"line_start":227,"line_end":227,"column_start":5,"column_end":91}},{"value":"/ direction.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":755470,"byte_end":755484,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":755489,"byte_end":755492,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":755497,"byte_end":755510,"line_start":230,"line_end":230,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":755515,"byte_end":755522,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":755527,"byte_end":755566,"line_start":232,"line_end":232,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Vector2, UnitComplex};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":755571,"byte_end":755620,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/ let a = Unit::new_normalize(Vector2::new(1.0, 2.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":755625,"byte_end":755681,"line_start":234,"line_end":234,"column_start":5,"column_end":61}},{"value":"/ let b = Unit::new_normalize(Vector2::new(2.0, 1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":755686,"byte_end":755742,"line_start":235,"line_end":235,"column_start":5,"column_end":61}},{"value":"/ let rot = UnitComplex::rotation_between_axis(&a, &b);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":755747,"byte_end":755804,"line_start":236,"line_end":236,"column_start":5,"column_end":62}},{"value":"/ assert_relative_eq!(rot * a, b);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":755809,"byte_end":755845,"line_start":237,"line_end":237,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(rot.inverse() * b, a);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":755850,"byte_end":755896,"line_start":238,"line_end":238,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":755901,"byte_end":755908,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":755913,"byte_end":755922,"line_start":240,"line_end":240,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5319},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":756928,"byte_end":756956,"line_start":267,"line_end":267,"column_start":12,"column_end":40},"name":"scaled_rotation_between_axis","qualname":"<UnitComplex<N>>::scaled_rotation_between_axis","value":"fn <SB, SC> (na: &Unit<Vector<N, U2, SB>>, nb: &Unit<Vector<N, U2, SC>>, s: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":756195,"byte_end":756283,"line_start":252,"line_end":252,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":756288,"byte_end":756327,"line_start":253,"line_end":253,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":756332,"byte_end":756335,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":756340,"byte_end":756353,"line_start":255,"line_end":255,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":756358,"byte_end":756365,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":756370,"byte_end":756409,"line_start":257,"line_end":257,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Vector2, UnitComplex};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":756414,"byte_end":756463,"line_start":258,"line_end":258,"column_start":5,"column_end":54}},{"value":"/ let a = Unit::new_normalize(Vector2::new(1.0, 2.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":756468,"byte_end":756524,"line_start":259,"line_end":259,"column_start":5,"column_end":61}},{"value":"/ let b = Unit::new_normalize(Vector2::new(2.0, 1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":756529,"byte_end":756585,"line_start":260,"line_end":260,"column_start":5,"column_end":61}},{"value":"/ let rot2 = UnitComplex::scaled_rotation_between_axis(&a, &b, 0.2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":756590,"byte_end":756660,"line_start":261,"line_end":261,"column_start":5,"column_end":75}},{"value":"/ let rot5 = UnitComplex::scaled_rotation_between_axis(&a, &b, 0.5);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":756665,"byte_end":756735,"line_start":262,"line_end":262,"column_start":5,"column_end":75}},{"value":"/ assert_relative_eq!(rot2 * rot2 * rot2 * rot2 * rot2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":756740,"byte_end":756823,"line_start":263,"line_end":263,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(rot5 * rot5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":756828,"byte_end":756890,"line_start":264,"line_end":264,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":756895,"byte_end":756902,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":756907,"byte_end":756916,"line_start":266,"line_end":266,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":18472},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":780237,"byte_end":780248,"line_start":26,"line_end":26,"column_start":12,"column_end":23},"name":"Translation","qualname":"::geometry::translation::Translation","value":"Translation { vector }","parent":null,"children":[{"krate":0,"index":18475}],"decl_id":null,"docs":" A translation.\n","sig":null,"attributes":[{"value":"/ A translation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":780179,"byte_end":780197,"line_start":23,"line_end":23,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":780198,"byte_end":780208,"line_start":24,"line_end":24,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":18475},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":780444,"byte_end":780450,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"name":"vector","qualname":"::geometry::translation::Translation::vector","value":"base::matrix::Matrix<N, D, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, D>>::Buffer>","parent":{"krate":0,"index":18472},"children":[],"decl_id":null,"docs":" The translation coordinates, i.e., how much is added to a point's coordinates when it is\n translated.\n","sig":null,"attributes":[{"value":"/ The translation coordinates, i.e., how much is added to a point's coordinates when it is","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":780323,"byte_end":780415,"line_start":30,"line_end":30,"column_start":5,"column_end":97}},{"value":"/ translated.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":780420,"byte_end":780435,"line_start":31,"line_end":31,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5598},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":782575,"byte_end":782586,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"from_vector","qualname":"<Translation<N, D>>::from_vector","value":"fn (vector: VectorN<N, D>) -> Translation<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new translation from the given vector.\n","sig":null,"attributes":[{"value":"/ Creates a new translation from the given vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":782447,"byte_end":782499,"line_start":118,"line_end":118,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":782504,"byte_end":782513,"line_start":119,"line_end":119,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"Use `::from` instead.\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":782518,"byte_end":782563,"line_start":120,"line_end":120,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":5599},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":783277,"byte_end":783284,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Translation<N, D>>::inverse","value":"fn (&self) -> Translation<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self`.","sig":null,"attributes":[{"value":"/ Inverts `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":782683,"byte_end":782702,"line_start":125,"line_end":125,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":782707,"byte_end":782710,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":782715,"byte_end":782728,"line_start":127,"line_end":127,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":782733,"byte_end":782740,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation2, Translation3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":782745,"byte_end":782794,"line_start":129,"line_end":129,"column_start":5,"column_end":54}},{"value":"/ let t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":782799,"byte_end":782844,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(t * t.inverse(), Translation3::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":782849,"byte_end":782907,"line_start":131,"line_end":131,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(t.inverse() * t, Translation3::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":782912,"byte_end":782970,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":782975,"byte_end":782978,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ // Work in all dimensions.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":782983,"byte_end":783013,"line_start":134,"line_end":134,"column_start":5,"column_end":35}},{"value":"/ let t = Translation2::new(1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":783018,"byte_end":783058,"line_start":135,"line_end":135,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(t * t.inverse(), Translation2::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":783063,"byte_end":783121,"line_start":136,"line_end":136,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(t.inverse() * t, Translation2::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":783126,"byte_end":783184,"line_start":137,"line_end":137,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":783189,"byte_end":783196,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":783201,"byte_end":783210,"line_start":139,"line_end":139,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":783215,"byte_end":783265,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5600},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":784227,"byte_end":784241,"line_start":167,"line_end":167,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Translation<N, D>>::to_homogeneous","value":"fn (&self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this translation into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this translation into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":783403,"byte_end":783487,"line_start":148,"line_end":148,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":783492,"byte_end":783495,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":783500,"byte_end":783513,"line_start":150,"line_end":150,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":783518,"byte_end":783525,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation2, Translation3, Matrix3, Matrix4};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":783530,"byte_end":783597,"line_start":152,"line_end":152,"column_start":5,"column_end":72}},{"value":"/ let t = Translation3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":783602,"byte_end":783650,"line_start":153,"line_end":153,"column_start":5,"column_end":53}},{"value":"/ let expected = Matrix4::new(1.0, 0.0, 0.0, 10.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":783655,"byte_end":783707,"line_start":154,"line_end":154,"column_start":5,"column_end":57}},{"value":"/                             0.0, 1.0, 0.0, 20.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":783712,"byte_end":783764,"line_start":155,"line_end":155,"column_start":5,"column_end":57}},{"value":"/                             0.0, 0.0, 1.0, 30.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":783769,"byte_end":783821,"line_start":156,"line_end":156,"column_start":5,"column_end":57}},{"value":"/                             0.0, 0.0, 0.0, 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":783826,"byte_end":783878,"line_start":157,"line_end":157,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(t.to_homogeneous(), expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":783883,"byte_end":783928,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":783933,"byte_end":783936,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ let t = Translation2::new(10.0, 20.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":783941,"byte_end":783983,"line_start":160,"line_end":160,"column_start":5,"column_end":47}},{"value":"/ let expected = Matrix3::new(1.0, 0.0, 10.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":783988,"byte_end":784035,"line_start":161,"line_end":161,"column_start":5,"column_end":52}},{"value":"/                             0.0, 1.0, 20.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":784040,"byte_end":784087,"line_start":162,"line_end":162,"column_start":5,"column_end":52}},{"value":"/                             0.0, 0.0, 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":784092,"byte_end":784139,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(t.to_homogeneous(), expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":784144,"byte_end":784189,"line_start":164,"line_end":164,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":784194,"byte_end":784201,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":784206,"byte_end":784215,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5601},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":785298,"byte_end":785309,"line_start":199,"line_end":199,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Translation<N, D>>::inverse_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self` in-place.","sig":null,"attributes":[{"value":"/ Inverts `self` in-place.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":784605,"byte_end":784633,"line_start":180,"line_end":180,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":784638,"byte_end":784641,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":784646,"byte_end":784659,"line_start":182,"line_end":182,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":784664,"byte_end":784671,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation2, Translation3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":784676,"byte_end":784725,"line_start":184,"line_end":184,"column_start":5,"column_end":54}},{"value":"/ let t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":784730,"byte_end":784775,"line_start":185,"line_end":185,"column_start":5,"column_end":50}},{"value":"/ let mut inv_t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":784780,"byte_end":784833,"line_start":186,"line_end":186,"column_start":5,"column_end":58}},{"value":"/ inv_t.inverse_mut();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":784838,"byte_end":784862,"line_start":187,"line_end":187,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(t * inv_t, Translation3::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":784867,"byte_end":784919,"line_start":188,"line_end":188,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(inv_t * t, Translation3::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":784924,"byte_end":784976,"line_start":189,"line_end":189,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":784981,"byte_end":784984,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ // Work in all dimensions.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":784989,"byte_end":785019,"line_start":191,"line_end":191,"column_start":5,"column_end":35}},{"value":"/ let t = Translation2::new(1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":785024,"byte_end":785064,"line_start":192,"line_end":192,"column_start":5,"column_end":45}},{"value":"/ let mut inv_t = Translation2::new(1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":785069,"byte_end":785117,"line_start":193,"line_end":193,"column_start":5,"column_end":53}},{"value":"/ inv_t.inverse_mut();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":785122,"byte_end":785146,"line_start":194,"line_end":194,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(t * inv_t, Translation2::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":785151,"byte_end":785203,"line_start":195,"line_end":195,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(inv_t * t, Translation2::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":785208,"byte_end":785260,"line_start":196,"line_end":196,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":785265,"byte_end":785272,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":785277,"byte_end":785286,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5605},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":785914,"byte_end":785929,"line_start":222,"line_end":222,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Translation<N, D>>::transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Translate the given point.","sig":null,"attributes":[{"value":"/ Translate the given point.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":785507,"byte_end":785537,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":785542,"byte_end":785545,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":785550,"byte_end":785605,"line_start":213,"line_end":213,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":785610,"byte_end":785613,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":785618,"byte_end":785631,"line_start":215,"line_end":215,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":785636,"byte_end":785643,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation3, Point3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":785648,"byte_end":785691,"line_start":217,"line_end":217,"column_start":5,"column_end":48}},{"value":"/ let t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":785696,"byte_end":785741,"line_start":218,"line_end":218,"column_start":5,"column_end":50}},{"value":"/ let transformed_point = t.transform_point(&Point3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":785746,"byte_end":785821,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(transformed_point, Point3::new(5.0, 7.0, 9.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":785826,"byte_end":785888,"line_start":220,"line_end":220,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":785893,"byte_end":785902,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5609},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":786498,"byte_end":786521,"line_start":240,"line_end":240,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Translation<N, D>>::inverse_transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Translate the given point by the inverse of this translation.","sig":null,"attributes":[{"value":"/ Translate the given point by the inverse of this translation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":786116,"byte_end":786181,"line_start":231,"line_end":231,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":786186,"byte_end":786189,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":786194,"byte_end":786207,"line_start":233,"line_end":233,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":786212,"byte_end":786219,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation3, Point3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":786224,"byte_end":786267,"line_start":235,"line_end":235,"column_start":5,"column_end":48}},{"value":"/ let t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":786272,"byte_end":786317,"line_start":236,"line_end":236,"column_start":5,"column_end":50}},{"value":"/ let transformed_point = t.inverse_transform_point(&Point3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":786322,"byte_end":786405,"line_start":237,"line_end":237,"column_start":5,"column_end":88}},{"value":"/ assert_eq!(transformed_point, Point3::new(3.0, 3.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":786410,"byte_end":786472,"line_start":238,"line_end":238,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":786477,"byte_end":786486,"line_start":239,"line_end":239,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":5646},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alias.rs","byte_start":788782,"byte_end":788794,"line_start":6,"line_end":6,"column_start":10,"column_end":22},"name":"Translation1","qualname":"::geometry::translation_alias::Translation1","value":"Translation<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A 1-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 1-dimensional translation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alias.rs","byte_start":788740,"byte_end":788772,"line_start":5,"line_end":5,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":5648},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alias.rs","byte_start":788863,"byte_end":788875,"line_start":9,"line_end":9,"column_start":10,"column_end":22},"name":"Translation2","qualname":"::geometry::translation_alias::Translation2","value":"Translation<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional translation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alias.rs","byte_start":788821,"byte_end":788853,"line_start":8,"line_end":8,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":5650},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alias.rs","byte_start":788944,"byte_end":788956,"line_start":12,"line_end":12,"column_start":10,"column_end":22},"name":"Translation3","qualname":"::geometry::translation_alias::Translation3","value":"Translation<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional translation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alias.rs","byte_start":788902,"byte_end":788934,"line_start":11,"line_end":11,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":5652},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alias.rs","byte_start":789025,"byte_end":789037,"line_start":15,"line_end":15,"column_start":10,"column_end":22},"name":"Translation4","qualname":"::geometry::translation_alias::Translation4","value":"Translation<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A 4-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 4-dimensional translation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alias.rs","byte_start":788983,"byte_end":789015,"line_start":14,"line_end":14,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":5654},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alias.rs","byte_start":789106,"byte_end":789118,"line_start":18,"line_end":18,"column_start":10,"column_end":22},"name":"Translation5","qualname":"::geometry::translation_alias::Translation5","value":"Translation<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A 5-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 5-dimensional translation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alias.rs","byte_start":789064,"byte_end":789096,"line_start":17,"line_end":17,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":5656},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alias.rs","byte_start":789187,"byte_end":789199,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"Translation6","qualname":"::geometry::translation_alias::Translation6","value":"Translation<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A 6-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 6-dimensional translation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_alias.rs","byte_start":789145,"byte_end":789177,"line_start":20,"line_end":20,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":5684},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs","byte_start":790226,"byte_end":790234,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"identity","qualname":"<Translation<N, D>>::identity","value":"fn () -> Translation<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity translation.","sig":null,"attributes":[{"value":"/ Creates a new identity translation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs","byte_start":789770,"byte_end":789809,"line_start":22,"line_end":22,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs","byte_start":789814,"byte_end":789817,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs","byte_start":789822,"byte_end":789835,"line_start":24,"line_end":24,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs","byte_start":789840,"byte_end":789847,"line_start":25,"line_end":25,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3, Translation2, Translation3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs","byte_start":789852,"byte_end":789917,"line_start":26,"line_end":26,"column_start":5,"column_end":70}},{"value":"/ let t = Translation2::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs","byte_start":789922,"byte_end":789959,"line_start":27,"line_end":27,"column_start":5,"column_end":42}},{"value":"/ let p = Point2::new(1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs","byte_start":789964,"byte_end":789998,"line_start":28,"line_end":28,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(t * p, p);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs","byte_start":790003,"byte_end":790028,"line_start":29,"line_end":29,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs","byte_start":790033,"byte_end":790036,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ // Works in all dimensions.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs","byte_start":790041,"byte_end":790072,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/ let t = Translation3::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs","byte_start":790077,"byte_end":790114,"line_start":32,"line_end":32,"column_start":5,"column_end":42}},{"value":"/ let p = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs","byte_start":790119,"byte_end":790158,"line_start":33,"line_end":33,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(t * p, p);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs","byte_start":790163,"byte_end":790188,"line_start":34,"line_end":34,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs","byte_start":790193,"byte_end":790200,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs","byte_start":790205,"byte_end":790214,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":18630},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":811021,"byte_end":811029,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"Isometry","qualname":"::geometry::isometry::Isometry","value":"Isometry { rotation, translation }","parent":null,"children":[{"krate":0,"index":18634},{"krate":0,"index":18635}],"decl_id":null,"docs":" A direct isometry, i.e., a rotation followed by a translation, aka. a rigid-body motion, aka. an element of a Special Euclidean (SE) group.\n","sig":null,"attributes":[{"value":"/ A direct isometry, i.e., a rotation followed by a translation, aka. a rigid-body motion, aka. an element of a Special Euclidean (SE) group.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":810357,"byte_end":810500,"line_start":22,"line_end":22,"column_start":1,"column_end":144}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":810501,"byte_end":810511,"line_start":23,"line_end":23,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":18634},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":811162,"byte_end":811170,"line_start":43,"line_end":43,"column_start":9,"column_end":17},"name":"rotation","qualname":"::geometry::isometry::Isometry::rotation","value":"R","parent":{"krate":0,"index":18630},"children":[],"decl_id":null,"docs":" The pure rotational part of this isometry.\n","sig":null,"attributes":[{"value":"/ The pure rotational part of this isometry.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":811107,"byte_end":811153,"line_start":42,"line_end":42,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":18635},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":811237,"byte_end":811248,"line_start":45,"line_end":45,"column_start":9,"column_end":20},"name":"translation","qualname":"::geometry::isometry::Isometry::translation","value":"geometry::translation::Translation<N, D>","parent":{"krate":0,"index":18630},"children":[],"decl_id":null,"docs":" The pure translational part of this isometry.\n","sig":null,"attributes":[{"value":"/ The pure translational part of this isometry.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":811179,"byte_end":811228,"line_start":44,"line_end":44,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5916},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":813467,"byte_end":813477,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Isometry<N, D, R>>::from_parts","value":"fn (translation: Translation<N, D>, rotation: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from its rotational and translational parts.","sig":null,"attributes":[{"value":"/ Creates a new isometry from its rotational and translational parts.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":812855,"byte_end":812926,"line_start":107,"line_end":107,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":812931,"byte_end":812934,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":812939,"byte_end":812952,"line_start":109,"line_end":109,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":812957,"byte_end":812960,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":812965,"byte_end":812972,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":812977,"byte_end":813016,"line_start":112,"line_end":112,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":813021,"byte_end":813040,"line_start":113,"line_end":113,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":813045,"byte_end":813124,"line_start":114,"line_end":114,"column_start":5,"column_end":84}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":813129,"byte_end":813176,"line_start":115,"line_end":115,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::PI);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":813181,"byte_end":813260,"line_start":116,"line_end":116,"column_start":5,"column_end":84}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":813265,"byte_end":813311,"line_start":117,"line_end":117,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":813316,"byte_end":813319,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso * Point3::new(1.0, 2.0, 3.0), Point3::new(-1.0, 2.0, 0.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":813324,"byte_end":813429,"line_start":119,"line_end":119,"column_start":5,"column_end":110}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":813434,"byte_end":813441,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":813446,"byte_end":813455,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5921},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814217,"byte_end":814224,"line_start":150,"line_end":150,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Isometry<N, D, R>>::inverse","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self`.","sig":null,"attributes":[{"value":"/ Inverts `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":813776,"byte_end":813795,"line_start":135,"line_end":135,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":813800,"byte_end":813803,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":813808,"byte_end":813821,"line_start":137,"line_end":137,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":813826,"byte_end":813829,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":813834,"byte_end":813841,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":813846,"byte_end":813865,"line_start":140,"line_end":140,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Point2, Vector2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":813870,"byte_end":813919,"line_start":141,"line_end":141,"column_start":5,"column_end":54}},{"value":"/ let iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":813924,"byte_end":814001,"line_start":142,"line_end":142,"column_start":5,"column_end":82}},{"value":"/ let inv = iso.inverse();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814006,"byte_end":814034,"line_start":143,"line_end":143,"column_start":5,"column_end":33}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814039,"byte_end":814074,"line_start":144,"line_end":144,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814079,"byte_end":814082,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(inv * (iso * pt), pt);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814087,"byte_end":814124,"line_start":146,"line_end":146,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814129,"byte_end":814136,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814141,"byte_end":814150,"line_start":148,"line_end":148,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814155,"byte_end":814205,"line_start":149,"line_end":149,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5922},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814764,"byte_end":814775,"line_start":171,"line_end":171,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Isometry<N, D, R>>::inverse_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self` in-place.","sig":null,"attributes":[{"value":"/ Inverts `self` in-place.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814328,"byte_end":814356,"line_start":156,"line_end":156,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814361,"byte_end":814364,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814369,"byte_end":814382,"line_start":158,"line_end":158,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814387,"byte_end":814390,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814395,"byte_end":814402,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814407,"byte_end":814426,"line_start":161,"line_end":161,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Point2, Vector2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814431,"byte_end":814480,"line_start":162,"line_end":162,"column_start":5,"column_end":54}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814485,"byte_end":814566,"line_start":163,"line_end":163,"column_start":5,"column_end":86}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814571,"byte_end":814606,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/ let transformed_pt = iso * pt;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814611,"byte_end":814645,"line_start":165,"line_end":165,"column_start":5,"column_end":39}},{"value":"/ iso.inverse_mut();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814650,"byte_end":814672,"line_start":166,"line_end":166,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814677,"byte_end":814680,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso * transformed_pt, pt);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814685,"byte_end":814726,"line_start":168,"line_end":168,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814731,"byte_end":814738,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814743,"byte_end":814752,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5923},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815477,"byte_end":815499,"line_start":192,"line_end":192,"column_start":12,"column_end":34},"name":"append_translation_mut","qualname":"<Isometry<N, D, R>>::append_translation_mut","value":"fn (&mut self, t: &Translation<N, D>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends to `self` the given translation in-place.","sig":null,"attributes":[{"value":"/ Appends to `self` the given translation in-place.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":814969,"byte_end":815022,"line_start":177,"line_end":177,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815027,"byte_end":815030,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815035,"byte_end":815048,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815053,"byte_end":815056,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815061,"byte_end":815068,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815073,"byte_end":815092,"line_start":182,"line_end":182,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Translation2, Vector2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815097,"byte_end":815152,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815157,"byte_end":815238,"line_start":184,"line_end":184,"column_start":5,"column_end":86}},{"value":"/ let tra = Translation2::new(3.0, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815243,"byte_end":815285,"line_start":185,"line_end":185,"column_start":5,"column_end":47}},{"value":"/ // Same as `iso = tra * iso`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815290,"byte_end":815323,"line_start":186,"line_end":186,"column_start":5,"column_end":38}},{"value":"/ iso.append_translation_mut(&tra);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815328,"byte_end":815365,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815370,"byte_end":815373,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso.translation, Translation2::new(4.0, 6.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815378,"byte_end":815439,"line_start":189,"line_end":189,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815444,"byte_end":815451,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815456,"byte_end":815465,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5924},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":816218,"byte_end":816237,"line_start":212,"line_end":212,"column_start":12,"column_end":31},"name":"append_rotation_mut","qualname":"<Isometry<N, D, R>>::append_rotation_mut","value":"fn (&mut self, r: &R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends to `self` the given rotation in-place.","sig":null,"attributes":[{"value":"/ Appends to `self` the given rotation in-place.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815592,"byte_end":815642,"line_start":196,"line_end":196,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815647,"byte_end":815650,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815655,"byte_end":815668,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815673,"byte_end":815676,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815681,"byte_end":815688,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815693,"byte_end":815732,"line_start":201,"line_end":201,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815737,"byte_end":815756,"line_start":202,"line_end":202,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Translation2, UnitComplex, Vector2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815761,"byte_end":815829,"line_start":203,"line_end":203,"column_start":5,"column_end":73}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::PI / 6.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815834,"byte_end":815914,"line_start":204,"line_end":204,"column_start":5,"column_end":85}},{"value":"/ let rot = UnitComplex::new(f32::consts::PI / 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815919,"byte_end":815973,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/ // Same as `iso = rot * iso`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":815978,"byte_end":816011,"line_start":206,"line_end":206,"column_start":5,"column_end":38}},{"value":"/ iso.append_rotation_mut(&rot);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":816016,"byte_end":816050,"line_start":207,"line_end":207,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":816055,"byte_end":816058,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso, Isometry2::new(Vector2::new(-2.0, 1.0), f32::consts::PI * 2.0 / 3.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":816063,"byte_end":816180,"line_start":209,"line_end":209,"column_start":5,"column_end":122}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":816185,"byte_end":816192,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":816197,"byte_end":816206,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5925},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":817090,"byte_end":817119,"line_start":234,"line_end":234,"column_start":12,"column_end":41},"name":"append_rotation_wrt_point_mut","qualname":"<Isometry<N, D, R>>::append_rotation_wrt_point_mut","value":"fn (&mut self, r: &R, p: &Point<N, D>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that\n lets `p` invariant.","sig":null,"attributes":[{"value":"/ Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":816408,"byte_end":816500,"line_start":217,"line_end":217,"column_start":5,"column_end":97}},{"value":"/ lets `p` invariant.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":816505,"byte_end":816528,"line_start":218,"line_end":218,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":816533,"byte_end":816536,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":816541,"byte_end":816554,"line_start":220,"line_end":220,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":816559,"byte_end":816562,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":816567,"byte_end":816574,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":816579,"byte_end":816618,"line_start":223,"line_end":223,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":816623,"byte_end":816642,"line_start":224,"line_end":224,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Translation2, UnitComplex, Vector2, Point2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":816647,"byte_end":816723,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":816728,"byte_end":816809,"line_start":226,"line_end":226,"column_start":5,"column_end":86}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":816814,"byte_end":816869,"line_start":227,"line_end":227,"column_start":5,"column_end":60}},{"value":"/ let pt = Point2::new(1.0, 0.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":816874,"byte_end":816909,"line_start":228,"line_end":228,"column_start":5,"column_end":40}},{"value":"/ iso.append_rotation_wrt_point_mut(&rot, &pt);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":816914,"byte_end":816963,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":816968,"byte_end":816971,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso * pt, Point2::new(-2.0, 0.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":816976,"byte_end":817052,"line_start":231,"line_end":231,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":817057,"byte_end":817064,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":817069,"byte_end":817078,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5926},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":817992,"byte_end":818022,"line_start":257,"line_end":257,"column_start":12,"column_end":42},"name":"append_rotation_wrt_center_mut","qualname":"<Isometry<N, D, R>>::append_rotation_wrt_center_mut","value":"fn (&mut self, r: &R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends in-place to `self` a rotation centered at the point with coordinates\n `self.translation`.","sig":null,"attributes":[{"value":"/ Appends in-place to `self` a rotation centered at the point with coordinates","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":817297,"byte_end":817377,"line_start":240,"line_end":240,"column_start":5,"column_end":85}},{"value":"/ `self.translation`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":817382,"byte_end":817405,"line_start":241,"line_end":241,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":817410,"byte_end":817413,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":817418,"byte_end":817431,"line_start":243,"line_end":243,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":817436,"byte_end":817439,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":817444,"byte_end":817451,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":817456,"byte_end":817475,"line_start":246,"line_end":246,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Translation2, UnitComplex, Vector2, Point2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":817480,"byte_end":817556,"line_start":247,"line_end":247,"column_start":5,"column_end":81}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":817561,"byte_end":817642,"line_start":248,"line_end":248,"column_start":5,"column_end":86}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":817647,"byte_end":817702,"line_start":249,"line_end":249,"column_start":5,"column_end":60}},{"value":"/ iso.append_rotation_wrt_center_mut(&rot);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":817707,"byte_end":817752,"line_start":250,"line_end":250,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":817757,"byte_end":817760,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ // The translation part should not have changed.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":817765,"byte_end":817817,"line_start":252,"line_end":252,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(iso.translation.vector, Vector2::new(1.0, 2.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":817822,"byte_end":817885,"line_start":253,"line_end":253,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(iso.rotation, UnitComplex::new(f32::consts::PI));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":817890,"byte_end":817954,"line_start":254,"line_end":254,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":817959,"byte_end":817966,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":817971,"byte_end":817980,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5927},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":818842,"byte_end":818857,"line_start":279,"line_end":279,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Isometry<N, D, R>>::transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by this isometry.","sig":null,"attributes":[{"value":"/ Transform the given point by this isometry.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":818113,"byte_end":818160,"line_start":261,"line_end":261,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":818165,"byte_end":818168,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":818173,"byte_end":818228,"line_start":263,"line_end":263,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":818233,"byte_end":818236,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":818241,"byte_end":818254,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":818259,"byte_end":818262,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":818267,"byte_end":818274,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":818279,"byte_end":818318,"line_start":268,"line_end":268,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":818323,"byte_end":818342,"line_start":269,"line_end":269,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":818347,"byte_end":818426,"line_start":270,"line_end":270,"column_start":5,"column_end":84}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":818431,"byte_end":818478,"line_start":271,"line_end":271,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":818483,"byte_end":818569,"line_start":272,"line_end":272,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":818574,"byte_end":818620,"line_start":273,"line_end":273,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":818625,"byte_end":818628,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":818633,"byte_end":818710,"line_start":275,"line_end":275,"column_start":5,"column_end":82}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(3.0, 2.0, 2.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":818715,"byte_end":818804,"line_start":276,"line_end":276,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":818809,"byte_end":818816,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":818821,"byte_end":818830,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5928},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":819714,"byte_end":819730,"line_start":302,"line_end":302,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Isometry<N, D, R>>::transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by this isometry, ignoring the translation\n component of the isometry.","sig":null,"attributes":[{"value":"/ Transform the given vector by this isometry, ignoring the translation","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":818929,"byte_end":819002,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ component of the isometry.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":819007,"byte_end":819037,"line_start":284,"line_end":284,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":819042,"byte_end":819045,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":819050,"byte_end":819104,"line_start":286,"line_end":286,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":819109,"byte_end":819112,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":819117,"byte_end":819130,"line_start":288,"line_end":288,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":819135,"byte_end":819138,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":819143,"byte_end":819150,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":819155,"byte_end":819194,"line_start":291,"line_end":291,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":819199,"byte_end":819218,"line_start":292,"line_end":292,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":819223,"byte_end":819294,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":819299,"byte_end":819346,"line_start":294,"line_end":294,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":819351,"byte_end":819437,"line_start":295,"line_end":295,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":819442,"byte_end":819488,"line_start":296,"line_end":296,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":819493,"byte_end":819496,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":819501,"byte_end":819580,"line_start":298,"line_end":298,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(transformed_point, Vector3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":819585,"byte_end":819676,"line_start":299,"line_end":299,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":819681,"byte_end":819688,"line_start":300,"line_end":300,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":819693,"byte_end":819702,"line_start":301,"line_end":301,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5929},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":820607,"byte_end":820630,"line_start":324,"line_end":324,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Isometry<N, D, R>>::inverse_transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by the inverse of this isometry. This may be\n less expensive than computing the entire isometry inverse and then\n transforming the point.","sig":null,"attributes":[{"value":"/ Transform the given point by the inverse of this isometry. This may be","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":819804,"byte_end":819878,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ less expensive than computing the entire isometry inverse and then","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":819883,"byte_end":819953,"line_start":307,"line_end":307,"column_start":5,"column_end":75}},{"value":"/ transforming the point.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":819958,"byte_end":819985,"line_start":308,"line_end":308,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":819990,"byte_end":819993,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":819998,"byte_end":820011,"line_start":310,"line_end":310,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":820016,"byte_end":820019,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":820024,"byte_end":820031,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":820036,"byte_end":820075,"line_start":313,"line_end":313,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":820080,"byte_end":820099,"line_start":314,"line_end":314,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":820104,"byte_end":820183,"line_start":315,"line_end":315,"column_start":5,"column_end":84}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":820188,"byte_end":820235,"line_start":316,"line_end":316,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":820240,"byte_end":820326,"line_start":317,"line_end":317,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":820331,"byte_end":820377,"line_start":318,"line_end":318,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":820382,"byte_end":820385,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.inverse_transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":820390,"byte_end":820475,"line_start":320,"line_end":320,"column_start":5,"column_end":90}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(0.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":820480,"byte_end":820569,"line_start":321,"line_end":321,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":820574,"byte_end":820581,"line_start":322,"line_end":322,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":820586,"byte_end":820595,"line_start":323,"line_end":323,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5930},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":821637,"byte_end":821661,"line_start":348,"line_end":348,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<Isometry<N, D, R>>::inverse_transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by the inverse of this isometry, ignoring the\n translation component of the isometry. This may be\n less expensive than computing the entire isometry inverse and then\n transforming the point.","sig":null,"attributes":[{"value":"/ Transform the given vector by the inverse of this isometry, ignoring the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":820777,"byte_end":820853,"line_start":329,"line_end":329,"column_start":5,"column_end":81}},{"value":"/ translation component of the isometry. This may be","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":820858,"byte_end":820912,"line_start":330,"line_end":330,"column_start":5,"column_end":59}},{"value":"/ less expensive than computing the entire isometry inverse and then","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":820917,"byte_end":820987,"line_start":331,"line_end":331,"column_start":5,"column_end":75}},{"value":"/ transforming the point.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":820992,"byte_end":821019,"line_start":332,"line_end":332,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":821024,"byte_end":821027,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":821032,"byte_end":821045,"line_start":334,"line_end":334,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":821050,"byte_end":821053,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":821058,"byte_end":821065,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":821070,"byte_end":821109,"line_start":337,"line_end":337,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":821114,"byte_end":821133,"line_start":338,"line_end":338,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":821138,"byte_end":821209,"line_start":339,"line_end":339,"column_start":5,"column_end":76}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":821214,"byte_end":821261,"line_start":340,"line_end":340,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":821266,"byte_end":821352,"line_start":341,"line_end":341,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":821357,"byte_end":821403,"line_start":342,"line_end":342,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":821408,"byte_end":821411,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.inverse_transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":821416,"byte_end":821503,"line_start":344,"line_end":344,"column_start":5,"column_end":92}},{"value":"/ assert_relative_eq!(transformed_point, Vector3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":821508,"byte_end":821599,"line_start":345,"line_end":345,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":821604,"byte_end":821611,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":821616,"byte_end":821625,"line_start":347,"line_end":347,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5935},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":822867,"byte_end":822881,"line_start":377,"line_end":377,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Isometry<N, D, R>>::to_homogeneous","value":"fn (&self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this isometry into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this isometry into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":822216,"byte_end":822297,"line_start":361,"line_end":361,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":822302,"byte_end":822305,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":822310,"byte_end":822323,"line_start":363,"line_end":363,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":822328,"byte_end":822331,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":822336,"byte_end":822343,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":822348,"byte_end":822387,"line_start":366,"line_end":366,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":822392,"byte_end":822411,"line_start":367,"line_end":367,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Vector2, Matrix3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":822416,"byte_end":822466,"line_start":368,"line_end":368,"column_start":5,"column_end":55}},{"value":"/ let iso = Isometry2::new(Vector2::new(10.0, 20.0), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":822471,"byte_end":822550,"line_start":369,"line_end":369,"column_start":5,"column_end":84}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      10.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":822555,"byte_end":822614,"line_start":370,"line_end":370,"column_start":5,"column_end":64}},{"value":"/                             0.5,       0.8660254, 20.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":822619,"byte_end":822678,"line_start":371,"line_end":371,"column_start":5,"column_end":64}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":822683,"byte_end":822742,"line_start":372,"line_end":372,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":822747,"byte_end":822750,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso.to_homogeneous(), expected, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":822755,"byte_end":822829,"line_start":374,"line_end":374,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":822834,"byte_end":822841,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":822846,"byte_end":822855,"line_start":376,"line_end":376,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":5979},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alias.rs","byte_start":826304,"byte_end":826313,"line_start":6,"line_end":6,"column_start":10,"column_end":19},"name":"Isometry2","qualname":"::geometry::isometry_alias::Isometry2","value":"Isometry<N, U2, UnitComplex<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional direct isometry using a unit complex number for its rotational part. Also known as a rigid-body motion, or as an element of SE(2).\n","sig":null,"attributes":[{"value":"/ A 2-dimensional direct isometry using a unit complex number for its rotational part. Also known as a rigid-body motion, or as an element of SE(2).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alias.rs","byte_start":826144,"byte_end":826294,"line_start":5,"line_end":5,"column_start":1,"column_end":151}}]},{"kind":"Type","id":{"krate":0,"index":5981},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alias.rs","byte_start":826509,"byte_end":826518,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"Isometry3","qualname":"::geometry::isometry_alias::Isometry3","value":"Isometry<N, U3, UnitQuaternion<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional direct isometry using a unit quaternion for its rotational part. Also known as a rigid-body motion, or as an element of SE(3).\n","sig":null,"attributes":[{"value":"/ A 3-dimensional direct isometry using a unit quaternion for its rotational part. Also known as a rigid-body motion, or as an element of SE(3).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alias.rs","byte_start":826353,"byte_end":826499,"line_start":8,"line_end":8,"column_start":1,"column_end":147}}]},{"kind":"Type","id":{"krate":0,"index":5983},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alias.rs","byte_start":826717,"byte_end":826732,"line_start":12,"line_end":12,"column_start":10,"column_end":25},"name":"IsometryMatrix2","qualname":"::geometry::isometry_alias::IsometryMatrix2","value":"Isometry<N, U2, Rotation2<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional direct isometry using a rotation matrix for its rotational part. Also known as a rigid-body motion, or as an element of SE(2).\n","sig":null,"attributes":[{"value":"/ A 2-dimensional direct isometry using a rotation matrix for its rotational part. Also known as a rigid-body motion, or as an element of SE(2).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alias.rs","byte_start":826561,"byte_end":826707,"line_start":11,"line_end":11,"column_start":1,"column_end":147}}]},{"kind":"Type","id":{"krate":0,"index":5985},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alias.rs","byte_start":826926,"byte_end":826941,"line_start":15,"line_end":15,"column_start":10,"column_end":25},"name":"IsometryMatrix3","qualname":"::geometry::isometry_alias::IsometryMatrix3","value":"Isometry<N, U3, Rotation3<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional direct isometry using a rotation matrix for its rotational part. Also known as a rigid-body motion, or as an element of SE(3).\n","sig":null,"attributes":[{"value":"/ A 3-dimensional direct isometry using a rotation matrix for its rotational part. Also known as a rigid-body motion, or as an element of SE(3).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_alias.rs","byte_start":826770,"byte_end":826916,"line_start":14,"line_end":14,"column_start":1,"column_end":147}}]},{"kind":"Method","id":{"krate":0,"index":6021},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828170,"byte_end":828178,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"identity","qualname":"<Isometry<N, D, R>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity isometry.","sig":null,"attributes":[{"value":"/ Creates a new identity isometry.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":827735,"byte_end":827771,"line_start":27,"line_end":27,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":827776,"byte_end":827779,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":827784,"byte_end":827797,"line_start":29,"line_end":29,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":827802,"byte_end":827805,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":827810,"byte_end":827817,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Isometry2, Point2, Isometry3, Point3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":827822,"byte_end":827881,"line_start":32,"line_end":32,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":827886,"byte_end":827889,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let iso = Isometry2::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":827894,"byte_end":827930,"line_start":34,"line_end":34,"column_start":5,"column_end":41}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":827935,"byte_end":827970,"line_start":35,"line_end":35,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(iso * pt, pt);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":827975,"byte_end":828004,"line_start":36,"line_end":36,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828009,"byte_end":828012,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let iso = Isometry3::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828017,"byte_end":828053,"line_start":38,"line_end":38,"column_start":5,"column_end":41}},{"value":"/ let pt = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828058,"byte_end":828098,"line_start":39,"line_end":39,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(iso * pt, pt);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828103,"byte_end":828132,"line_start":40,"line_end":40,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828137,"byte_end":828144,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828149,"byte_end":828158,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6022},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828946,"byte_end":828964,"line_start":64,"line_end":64,"column_start":12,"column_end":30},"name":"rotation_wrt_point","qualname":"<Isometry<N, D, R>>::rotation_wrt_point","value":"fn (r: R, p: Point<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The isometry that applies the rotation `r` with its axis passing through the point `p`.\n This effectively lets `p` invariant.","sig":null,"attributes":[{"value":"/ The isometry that applies the rotation `r` with its axis passing through the point `p`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828267,"byte_end":828358,"line_start":47,"line_end":47,"column_start":5,"column_end":96}},{"value":"/ This effectively lets `p` invariant.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828363,"byte_end":828403,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828408,"byte_end":828411,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828416,"byte_end":828429,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828434,"byte_end":828437,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828442,"byte_end":828449,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828454,"byte_end":828493,"line_start":53,"line_end":53,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828498,"byte_end":828517,"line_start":54,"line_end":54,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Point2, UnitComplex};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828522,"byte_end":828575,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/ let rot = UnitComplex::new(f32::consts::PI);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828580,"byte_end":828628,"line_start":56,"line_end":56,"column_start":5,"column_end":53}},{"value":"/ let pt = Point2::new(1.0, 0.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828633,"byte_end":828668,"line_start":57,"line_end":57,"column_start":5,"column_end":40}},{"value":"/ let iso = Isometry2::rotation_wrt_point(rot, pt);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828673,"byte_end":828726,"line_start":58,"line_end":58,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828731,"byte_end":828734,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso * pt, pt); // The rotation center is not affected.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828739,"byte_end":828808,"line_start":60,"line_end":60,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(iso * Point2::new(1.0, 2.0), Point2::new(1.0, -2.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828813,"byte_end":828908,"line_start":61,"line_end":61,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828913,"byte_end":828920,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":828925,"byte_end":828934,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6037},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":830835,"byte_end":830838,"line_start":134,"line_end":134,"column_start":12,"column_end":15},"name":"new","qualname":"<Isometry<N, U2, Rotation2<N>>>::new","value":"fn (translation: Vector2<N>, angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new 2D isometry from a translation and a rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new 2D isometry from a translation and a rotation angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":830363,"byte_end":830433,"line_start":120,"line_end":120,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":830438,"byte_end":830441,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Its rotational part is represented as a 2x2 rotation matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":830446,"byte_end":830510,"line_start":122,"line_end":122,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":830515,"byte_end":830518,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":830523,"byte_end":830536,"line_start":124,"line_end":124,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":830541,"byte_end":830544,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":830549,"byte_end":830556,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":830561,"byte_end":830580,"line_start":127,"line_end":127,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Vector2, Point2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":830585,"byte_end":830634,"line_start":128,"line_end":128,"column_start":5,"column_end":54}},{"value":"/ let iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":830639,"byte_end":830716,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":830721,"byte_end":830724,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso * Point2::new(3.0, 4.0), Point2::new(-3.0, 5.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":830729,"byte_end":830797,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":830802,"byte_end":830809,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":830814,"byte_end":830823,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6038},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":831110,"byte_end":831121,"line_start":143,"line_end":143,"column_start":12,"column_end":23},"name":"translation","qualname":"<Isometry<N, U2, Rotation2<N>>>::translation","value":"fn (x: N, y: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from the given translation coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new isometry from the given translation coordinates.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":831018,"byte_end":831084,"line_start":141,"line_end":141,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":831089,"byte_end":831098,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6039},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":831287,"byte_end":831295,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"rotation","qualname":"<Isometry<N, U2, Rotation2<N>>>::rotation","value":"fn (angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from the given rotation angle.\n","sig":null,"attributes":[{"value":"/ Creates a new isometry from the given rotation angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":831204,"byte_end":831261,"line_start":147,"line_end":147,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":831266,"byte_end":831275,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6042},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":831951,"byte_end":831954,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"new","qualname":"<Isometry<N, U2, UnitComplex<N>>>::new","value":"fn (translation: Vector2<N>, angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new 2D isometry from a translation and a rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new 2D isometry from a translation and a rotation angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":831466,"byte_end":831536,"line_start":158,"line_end":158,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":831541,"byte_end":831544,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Its rotational part is represented as an unit complex number.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":831549,"byte_end":831614,"line_start":160,"line_end":160,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":831619,"byte_end":831622,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":831627,"byte_end":831640,"line_start":162,"line_end":162,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":831645,"byte_end":831648,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":831653,"byte_end":831660,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":831665,"byte_end":831684,"line_start":165,"line_end":165,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{IsometryMatrix2, Point2, Vector2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":831689,"byte_end":831744,"line_start":166,"line_end":166,"column_start":5,"column_end":60}},{"value":"/ let iso = IsometryMatrix2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":831749,"byte_end":831832,"line_start":167,"line_end":167,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":831837,"byte_end":831840,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso * Point2::new(3.0, 4.0), Point2::new(-3.0, 5.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":831845,"byte_end":831913,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":831918,"byte_end":831925,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":831930,"byte_end":831939,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6043},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":832227,"byte_end":832238,"line_start":181,"line_end":181,"column_start":12,"column_end":23},"name":"translation","qualname":"<Isometry<N, U2, UnitComplex<N>>>::translation","value":"fn (x: N, y: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from the given translation coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new isometry from the given translation coordinates.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":832135,"byte_end":832201,"line_start":179,"line_end":179,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":832206,"byte_end":832215,"line_start":180,"line_end":180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6044},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":832430,"byte_end":832438,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"rotation","qualname":"<Isometry<N, U2, UnitComplex<N>>>::rotation","value":"fn (angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from the given rotation angle.\n","sig":null,"attributes":[{"value":"/ Creates a new isometry from the given rotation angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":832347,"byte_end":832404,"line_start":185,"line_end":185,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":832409,"byte_end":832418,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":19238},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":875064,"byte_end":875074,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"Similarity","qualname":"::geometry::similarity::Similarity","value":"Similarity { isometry }","parent":null,"children":[{"krate":0,"index":19242},{"krate":0,"index":19243}],"decl_id":null,"docs":" A similarity, i.e., an uniform scaling, followed by a rotation, followed by a translation.\n","sig":null,"attributes":[{"value":"/ A similarity, i.e., an uniform scaling, followed by a rotation, followed by a translation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":874370,"byte_end":874464,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":874465,"byte_end":874475,"line_start":25,"line_end":25,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":19242},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":875234,"byte_end":875242,"line_start":47,"line_end":47,"column_start":9,"column_end":17},"name":"isometry","qualname":"::geometry::similarity::Similarity::isometry","value":"geometry::isometry::Isometry<N, D, R>","parent":{"krate":0,"index":19238},"children":[],"decl_id":null,"docs":" The part of this similarity that does not include the scaling factor.\n","sig":null,"attributes":[{"value":"/ The part of this similarity that does not include the scaling factor.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":875152,"byte_end":875225,"line_start":46,"line_end":46,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":6261},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":876817,"byte_end":876827,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Similarity<N, D, R>>::from_parts","value":"fn (translation: Translation<N, D>, rotation: R, scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity from its rotational and translational parts.\n","sig":null,"attributes":[{"value":"/ Creates a new similarity from its rotational and translational parts.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":876718,"byte_end":876791,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":876796,"byte_end":876805,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6262},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":877087,"byte_end":877100,"line_start":113,"line_end":113,"column_start":12,"column_end":25},"name":"from_isometry","qualname":"<Similarity<N, D, R>>::from_isometry","value":"fn (isometry: Isometry<N, D, R>, scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity from its rotational and translational parts.\n","sig":null,"attributes":[{"value":"/ Creates a new similarity from its rotational and translational parts.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":876988,"byte_end":877061,"line_start":111,"line_end":111,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":877066,"byte_end":877075,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6263},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":877359,"byte_end":877370,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"set_scaling","qualname":"<Similarity<N, D, R>>::set_scaling","value":"fn (&mut self, scaling: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The scaling factor of this similarity transformation.\n","sig":null,"attributes":[{"value":"/ The scaling factor of this similarity transformation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":877276,"byte_end":877333,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":877338,"byte_end":877347,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6268},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":877745,"byte_end":877752,"line_start":137,"line_end":137,"column_start":12,"column_end":19},"name":"scaling","qualname":"<Similarity<N, D, R>>::scaling","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The scaling factor of this similarity transformation.\n","sig":null,"attributes":[{"value":"/ The scaling factor of this similarity transformation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":877662,"byte_end":877719,"line_start":135,"line_end":135,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":877724,"byte_end":877733,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6273},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":878074,"byte_end":878086,"line_start":150,"line_end":150,"column_start":12,"column_end":24},"name":"from_scaling","qualname":"<Similarity<N, D, R>>::from_scaling","value":"fn (scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity that applies only a scaling factor.\n","sig":null,"attributes":[{"value":"/ Creates a new similarity that applies only a scaling factor.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":877984,"byte_end":878048,"line_start":148,"line_end":148,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":878053,"byte_end":878062,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6274},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":878279,"byte_end":878286,"line_start":157,"line_end":157,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Similarity<N, D, R>>::inverse","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self`.\n","sig":null,"attributes":[{"value":"/ Inverts `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":878179,"byte_end":878198,"line_start":154,"line_end":154,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":878203,"byte_end":878212,"line_start":155,"line_end":155,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":878217,"byte_end":878267,"line_start":156,"line_end":156,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6275},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":878444,"byte_end":878455,"line_start":165,"line_end":165,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Similarity<N, D, R>>::inverse_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self` in-place.\n","sig":null,"attributes":[{"value":"/ Inverts `self` in-place.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":878390,"byte_end":878418,"line_start":163,"line_end":163,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":878423,"byte_end":878432,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6276},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":878800,"byte_end":878815,"line_start":174,"line_end":174,"column_start":12,"column_end":27},"name":"prepend_scaling","qualname":"<Similarity<N, D, R>>::prepend_scaling","value":"fn (&self, scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The similarity transformation that applies a scaling factor `scaling` before `self`.\n","sig":null,"attributes":[{"value":"/ The similarity transformation that applies a scaling factor `scaling` before `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":878623,"byte_end":878711,"line_start":171,"line_end":171,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":878716,"byte_end":878725,"line_start":172,"line_end":172,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use prepend_scaling_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":878730,"byte_end":878788,"line_start":173,"line_end":173,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6277},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":879229,"byte_end":879243,"line_start":186,"line_end":186,"column_start":12,"column_end":26},"name":"append_scaling","qualname":"<Similarity<N, D, R>>::append_scaling","value":"fn (&self, scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The similarity transformation that applies a scaling factor `scaling` after `self`.\n","sig":null,"attributes":[{"value":"/ The similarity transformation that applies a scaling factor `scaling` after `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":879054,"byte_end":879141,"line_start":183,"line_end":183,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":879146,"byte_end":879155,"line_start":184,"line_end":184,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use append_scaling_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":879160,"byte_end":879217,"line_start":185,"line_end":185,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6278},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":879728,"byte_end":879747,"line_start":201,"line_end":201,"column_start":12,"column_end":31},"name":"prepend_scaling_mut","qualname":"<Similarity<N, D, R>>::prepend_scaling_mut","value":"fn (&mut self, scaling: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to the similarity transformation that applies a scaling factor `scaling` before `self`.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the similarity transformation that applies a scaling factor `scaling` before `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":879599,"byte_end":879702,"line_start":199,"line_end":199,"column_start":5,"column_end":108}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":879707,"byte_end":879716,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6279},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":880067,"byte_end":880085,"line_start":212,"line_end":212,"column_start":12,"column_end":30},"name":"append_scaling_mut","qualname":"<Similarity<N, D, R>>::append_scaling_mut","value":"fn (&mut self, scaling: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to the similarity transformation that applies a scaling factor `scaling` after `self`.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the similarity transformation that applies a scaling factor `scaling` after `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":879939,"byte_end":880041,"line_start":210,"line_end":210,"column_start":5,"column_end":107}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":880046,"byte_end":880055,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6280},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":880410,"byte_end":880432,"line_start":224,"line_end":224,"column_start":12,"column_end":34},"name":"append_translation_mut","qualname":"<Similarity<N, D, R>>::append_translation_mut","value":"fn (&mut self, t: &Translation<N, D>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends to `self` the given translation in-place.\n","sig":null,"attributes":[{"value":"/ Appends to `self` the given translation in-place.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":880331,"byte_end":880384,"line_start":222,"line_end":222,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":880389,"byte_end":880398,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6281},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":880604,"byte_end":880623,"line_start":230,"line_end":230,"column_start":12,"column_end":31},"name":"append_rotation_mut","qualname":"<Similarity<N, D, R>>::append_rotation_mut","value":"fn (&mut self, r: &R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends to `self` the given rotation in-place.\n","sig":null,"attributes":[{"value":"/ Appends to `self` the given rotation in-place.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":880528,"byte_end":880578,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":880583,"byte_end":880592,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6282},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":880846,"byte_end":880875,"line_start":237,"line_end":237,"column_start":12,"column_end":41},"name":"append_rotation_wrt_point_mut","qualname":"<Similarity<N, D, R>>::append_rotation_wrt_point_mut","value":"fn (&mut self, r: &R, p: &Point<N, D>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that\n lets `p` invariant.\n","sig":null,"attributes":[{"value":"/ Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":880700,"byte_end":880792,"line_start":234,"line_end":234,"column_start":5,"column_end":97}},{"value":"/ lets `p` invariant.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":880797,"byte_end":880820,"line_start":235,"line_end":235,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":880825,"byte_end":880834,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6283},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":881116,"byte_end":881146,"line_start":244,"line_end":244,"column_start":12,"column_end":42},"name":"append_rotation_wrt_center_mut","qualname":"<Similarity<N, D, R>>::append_rotation_wrt_center_mut","value":"fn (&mut self, r: &R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends in-place to `self` a rotation centered at the point with coordinates\n `self.translation`.\n","sig":null,"attributes":[{"value":"/ Appends in-place to `self` a rotation centered at the point with coordinates","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":880982,"byte_end":881062,"line_start":241,"line_end":241,"column_start":5,"column_end":85}},{"value":"/ `self.translation`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":881067,"byte_end":881090,"line_start":242,"line_end":242,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":881095,"byte_end":881104,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6284},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":881913,"byte_end":881928,"line_start":264,"line_end":264,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Similarity<N, D, R>>::transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by this similarity.","sig":null,"attributes":[{"value":"/ Transform the given point by this similarity.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":881234,"byte_end":881283,"line_start":248,"line_end":248,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":881288,"byte_end":881291,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":881296,"byte_end":881351,"line_start":250,"line_end":250,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":881356,"byte_end":881359,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":881364,"byte_end":881377,"line_start":252,"line_end":252,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":881382,"byte_end":881389,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":881394,"byte_end":881433,"line_start":254,"line_end":254,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":881438,"byte_end":881457,"line_start":255,"line_end":255,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Point3, Similarity3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":881462,"byte_end":881513,"line_start":256,"line_end":256,"column_start":5,"column_end":56}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":881518,"byte_end":881576,"line_start":257,"line_end":257,"column_start":5,"column_end":63}},{"value":"/ let translation = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":881581,"byte_end":881631,"line_start":258,"line_end":258,"column_start":5,"column_end":55}},{"value":"/ let sim = Similarity3::new(translation, axisangle, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":881636,"byte_end":881696,"line_start":259,"line_end":259,"column_start":5,"column_end":65}},{"value":"/ let transformed_point = sim.transform_point(&Point3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":881701,"byte_end":881778,"line_start":260,"line_end":260,"column_start":5,"column_end":82}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(19.0, 17.0, -9.0), epsilon = 1.0e-5);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":881783,"byte_end":881875,"line_start":261,"line_end":261,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":881880,"byte_end":881887,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":881892,"byte_end":881901,"line_start":263,"line_end":263,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6285},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":882723,"byte_end":882739,"line_start":285,"line_end":285,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Similarity<N, D, R>>::transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by this similarity, ignoring the translational\n component.","sig":null,"attributes":[{"value":"/ Transform the given vector by this similarity, ignoring the translational","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":882000,"byte_end":882077,"line_start":268,"line_end":268,"column_start":5,"column_end":82}},{"value":"/ component.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":882082,"byte_end":882096,"line_start":269,"line_end":269,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":882101,"byte_end":882104,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * t`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":882109,"byte_end":882163,"line_start":271,"line_end":271,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":882168,"byte_end":882171,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":882176,"byte_end":882189,"line_start":273,"line_end":273,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":882194,"byte_end":882201,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":882206,"byte_end":882245,"line_start":275,"line_end":275,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":882250,"byte_end":882269,"line_start":276,"line_end":276,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Similarity3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":882274,"byte_end":882317,"line_start":277,"line_end":277,"column_start":5,"column_end":48}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":882322,"byte_end":882380,"line_start":278,"line_end":278,"column_start":5,"column_end":63}},{"value":"/ let translation = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":882385,"byte_end":882435,"line_start":279,"line_end":279,"column_start":5,"column_end":55}},{"value":"/ let sim = Similarity3::new(translation, axisangle, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":882440,"byte_end":882500,"line_start":280,"line_end":280,"column_start":5,"column_end":65}},{"value":"/ let transformed_vector = sim.transform_vector(&Vector3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":882505,"byte_end":882585,"line_start":281,"line_end":281,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(18.0, 15.0, -12.0), epsilon = 1.0e-5);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":882590,"byte_end":882685,"line_start":282,"line_end":282,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":882690,"byte_end":882697,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":882702,"byte_end":882711,"line_start":284,"line_end":284,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6286},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":883550,"byte_end":883573,"line_start":305,"line_end":305,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Similarity<N, D, R>>::inverse_transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by the inverse of this similarity. This may\n be cheaper than inverting the similarity and then transforming the\n given point.","sig":null,"attributes":[{"value":"/ Transform the given point by the inverse of this similarity. This may","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":882813,"byte_end":882886,"line_start":289,"line_end":289,"column_start":5,"column_end":78}},{"value":"/ be cheaper than inverting the similarity and then transforming the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":882891,"byte_end":882961,"line_start":290,"line_end":290,"column_start":5,"column_end":75}},{"value":"/ given point.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":882966,"byte_end":882982,"line_start":291,"line_end":291,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":882987,"byte_end":882990,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":882995,"byte_end":883008,"line_start":293,"line_end":293,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":883013,"byte_end":883020,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":883025,"byte_end":883064,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":883069,"byte_end":883088,"line_start":296,"line_end":296,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Point3, Similarity3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":883093,"byte_end":883144,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":883149,"byte_end":883207,"line_start":298,"line_end":298,"column_start":5,"column_end":63}},{"value":"/ let translation = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":883212,"byte_end":883262,"line_start":299,"line_end":299,"column_start":5,"column_end":55}},{"value":"/ let sim = Similarity3::new(translation, axisangle, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":883267,"byte_end":883327,"line_start":300,"line_end":300,"column_start":5,"column_end":65}},{"value":"/ let transformed_point = sim.inverse_transform_point(&Point3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":883332,"byte_end":883417,"line_start":301,"line_end":301,"column_start":5,"column_end":90}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(-1.5, 1.5, 1.5), epsilon = 1.0e-5);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":883422,"byte_end":883512,"line_start":302,"line_end":302,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":883517,"byte_end":883524,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":883529,"byte_end":883538,"line_start":304,"line_end":304,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6287},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":884468,"byte_end":884492,"line_start":325,"line_end":325,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<Similarity<N, D, R>>::inverse_transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by the inverse of this similarity,\n ignoring the translational component. This may be cheaper than\n inverting the similarity and then transforming the given vector.","sig":null,"attributes":[{"value":"/ Transform the given vector by the inverse of this similarity,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":883694,"byte_end":883759,"line_start":309,"line_end":309,"column_start":5,"column_end":70}},{"value":"/ ignoring the translational component. This may be cheaper than","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":883764,"byte_end":883830,"line_start":310,"line_end":310,"column_start":5,"column_end":71}},{"value":"/ inverting the similarity and then transforming the given vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":883835,"byte_end":883903,"line_start":311,"line_end":311,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":883908,"byte_end":883911,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":883916,"byte_end":883929,"line_start":313,"line_end":313,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":883934,"byte_end":883941,"line_start":314,"line_end":314,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":883946,"byte_end":883985,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":883990,"byte_end":884009,"line_start":316,"line_end":316,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Similarity3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":884014,"byte_end":884057,"line_start":317,"line_end":317,"column_start":5,"column_end":48}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":884062,"byte_end":884120,"line_start":318,"line_end":318,"column_start":5,"column_end":63}},{"value":"/ let translation = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":884125,"byte_end":884175,"line_start":319,"line_end":319,"column_start":5,"column_end":55}},{"value":"/ let sim = Similarity3::new(translation, axisangle, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":884180,"byte_end":884240,"line_start":320,"line_end":320,"column_start":5,"column_end":65}},{"value":"/ let transformed_vector = sim.inverse_transform_vector(&Vector3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":884245,"byte_end":884333,"line_start":321,"line_end":321,"column_start":5,"column_end":93}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(-3.0, 2.5, 2.0), epsilon = 1.0e-5);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":884338,"byte_end":884430,"line_start":322,"line_end":322,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":884435,"byte_end":884442,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":884447,"byte_end":884456,"line_start":324,"line_end":324,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6292},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":885184,"byte_end":885198,"line_start":340,"line_end":340,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Similarity<N, D, R>>::to_homogeneous","value":"fn (&self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this similarity into its equivalent homogeneous transformation matrix.\n","sig":null,"attributes":[{"value":"/ Converts this similarity into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":885075,"byte_end":885158,"line_start":338,"line_end":338,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":885163,"byte_end":885172,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":6336},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alias.rs","byte_start":888497,"byte_end":888508,"line_start":6,"line_end":6,"column_start":10,"column_end":21},"name":"Similarity2","qualname":"::geometry::similarity_alias::Similarity2","value":"Similarity<N, U2, UnitComplex<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional similarity.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional similarity.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alias.rs","byte_start":888456,"byte_end":888487,"line_start":5,"line_end":5,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":6338},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alias.rs","byte_start":888591,"byte_end":888602,"line_start":9,"line_end":9,"column_start":10,"column_end":21},"name":"Similarity3","qualname":"::geometry::similarity_alias::Similarity3","value":"Similarity<N, U3, UnitQuaternion<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional similarity.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional similarity.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alias.rs","byte_start":888550,"byte_end":888581,"line_start":8,"line_end":8,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":6340},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alias.rs","byte_start":888734,"byte_end":888751,"line_start":12,"line_end":12,"column_start":10,"column_end":27},"name":"SimilarityMatrix2","qualname":"::geometry::similarity_alias::SimilarityMatrix2","value":"Similarity<N, U2, Rotation2<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional similarity using a rotation matrix for its rotation part.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional similarity using a rotation matrix for its rotation part.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alias.rs","byte_start":888647,"byte_end":888724,"line_start":11,"line_end":11,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":6342},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alias.rs","byte_start":888878,"byte_end":888895,"line_start":15,"line_end":15,"column_start":10,"column_end":27},"name":"SimilarityMatrix3","qualname":"::geometry::similarity_alias::SimilarityMatrix3","value":"Similarity<N, U3, Rotation3<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional similarity using a rotation matrix for its rotation part.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional similarity using a rotation matrix for its rotation part.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_alias.rs","byte_start":888791,"byte_end":888868,"line_start":14,"line_end":14,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":6376},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":890119,"byte_end":890127,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"identity","qualname":"<Similarity<N, D, R>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity similarity.","sig":null,"attributes":[{"value":"/ Creates a new identity similarity.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":889674,"byte_end":889712,"line_start":28,"line_end":28,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":889717,"byte_end":889720,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":889725,"byte_end":889738,"line_start":30,"line_end":30,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":889743,"byte_end":889746,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":889751,"byte_end":889758,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Similarity2, Point2, Similarity3, Point3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":889763,"byte_end":889826,"line_start":33,"line_end":33,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":889831,"byte_end":889834,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ let sim = Similarity2::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":889839,"byte_end":889877,"line_start":35,"line_end":35,"column_start":5,"column_end":43}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":889882,"byte_end":889917,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(sim * pt, pt);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":889922,"byte_end":889951,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":889956,"byte_end":889959,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let sim = Similarity3::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":889964,"byte_end":890002,"line_start":39,"line_end":39,"column_start":5,"column_end":43}},{"value":"/ let pt = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":890007,"byte_end":890047,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(sim * pt, pt);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":890052,"byte_end":890081,"line_start":41,"line_end":41,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":890086,"byte_end":890093,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":890098,"byte_end":890107,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6393},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":891767,"byte_end":891785,"line_start":101,"line_end":101,"column_start":12,"column_end":30},"name":"rotation_wrt_point","qualname":"<Similarity<N, D, R>>::rotation_wrt_point","value":"fn (r: R, p: Point<N, D>, scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The similarity that applies the scaling factor `scaling`, followed by the rotation `r` with\n its axis passing through the point `p`.","sig":null,"attributes":[{"value":"/ The similarity that applies the scaling factor `scaling`, followed by the rotation `r` with","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":891139,"byte_end":891234,"line_start":85,"line_end":85,"column_start":5,"column_end":100}},{"value":"/ its axis passing through the point `p`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":891239,"byte_end":891282,"line_start":86,"line_end":86,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":891287,"byte_end":891290,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":891295,"byte_end":891308,"line_start":88,"line_end":88,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":891313,"byte_end":891316,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":891321,"byte_end":891328,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":891333,"byte_end":891372,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":891377,"byte_end":891396,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Similarity2, Point2, UnitComplex};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":891401,"byte_end":891456,"line_start":93,"line_end":93,"column_start":5,"column_end":60}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":891461,"byte_end":891516,"line_start":94,"line_end":94,"column_start":5,"column_end":60}},{"value":"/ let pt = Point2::new(3.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":891521,"byte_end":891556,"line_start":95,"line_end":95,"column_start":5,"column_end":40}},{"value":"/ let sim = Similarity2::rotation_wrt_point(rot, pt, 4.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":891561,"byte_end":891621,"line_start":96,"line_end":96,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":891626,"byte_end":891629,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(sim * Point2::new(1.0, 2.0), Point2::new(-3.0, 3.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":891634,"byte_end":891729,"line_start":98,"line_end":98,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":891734,"byte_end":891741,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":891746,"byte_end":891755,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6396},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":893183,"byte_end":893186,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"new","qualname":"<Similarity<N, U2, Rotation2<N>>>::new","value":"fn (translation: Vector2<N>, angle: N, scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity from a translation, a rotation, and an uniform scaling factor.","sig":null,"attributes":[{"value":"/ Creates a new similarity from a translation, a rotation, and an uniform scaling factor.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":892674,"byte_end":892765,"line_start":138,"line_end":138,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":892770,"byte_end":892773,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":892778,"byte_end":892791,"line_start":140,"line_end":140,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":892796,"byte_end":892799,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":892804,"byte_end":892811,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":892816,"byte_end":892855,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":892860,"byte_end":892879,"line_start":144,"line_end":144,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{SimilarityMatrix2, Vector2, Point2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":892884,"byte_end":892941,"line_start":145,"line_end":145,"column_start":5,"column_end":62}},{"value":"/ let sim = SimilarityMatrix2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":892946,"byte_end":893036,"line_start":146,"line_end":146,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":893041,"byte_end":893044,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(sim * Point2::new(2.0, 4.0), Point2::new(-11.0, 8.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":893049,"byte_end":893145,"line_start":148,"line_end":148,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":893150,"byte_end":893157,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":893162,"byte_end":893171,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6399},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":893964,"byte_end":893967,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<Similarity<N, U2, UnitComplex<N>>>::new","value":"fn (translation: Vector2<N>, angle: N, scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity from a translation and a rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new similarity from a translation and a rotation angle.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":893489,"byte_end":893558,"line_start":164,"line_end":164,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":893563,"byte_end":893566,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":893571,"byte_end":893584,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":893589,"byte_end":893592,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":893597,"byte_end":893604,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":893609,"byte_end":893648,"line_start":169,"line_end":169,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":893653,"byte_end":893672,"line_start":170,"line_end":170,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Similarity2, Vector2, Point2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":893677,"byte_end":893728,"line_start":171,"line_end":171,"column_start":5,"column_end":56}},{"value":"/ let sim = Similarity2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":893733,"byte_end":893817,"line_start":172,"line_end":172,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":893822,"byte_end":893825,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(sim * Point2::new(2.0, 4.0), Point2::new(-11.0, 8.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":893830,"byte_end":893926,"line_start":174,"line_end":174,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":893931,"byte_end":893938,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":893943,"byte_end":893952,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":19863},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936658,"byte_end":936660,"line_start":27,"line_end":27,"column_start":15,"column_end":17},"name":"xx","qualname":"<Point<N, D>>::xx","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19864},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936695,"byte_end":936698,"line_start":28,"line_end":28,"column_start":15,"column_end":18},"name":"xxx","qualname":"<Point<N, D>>::xxx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19868},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936736,"byte_end":936738,"line_start":30,"line_end":30,"column_start":15,"column_end":17},"name":"xy","qualname":"<Point<N, D>>::xy","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19869},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936773,"byte_end":936775,"line_start":31,"line_end":31,"column_start":15,"column_end":17},"name":"yx","qualname":"<Point<N, D>>::yx","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19870},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936810,"byte_end":936812,"line_start":32,"line_end":32,"column_start":15,"column_end":17},"name":"yy","qualname":"<Point<N, D>>::yy","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19871},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936847,"byte_end":936850,"line_start":33,"line_end":33,"column_start":15,"column_end":18},"name":"xxy","qualname":"<Point<N, D>>::xxy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19872},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936887,"byte_end":936890,"line_start":34,"line_end":34,"column_start":15,"column_end":18},"name":"xyx","qualname":"<Point<N, D>>::xyx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19873},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936927,"byte_end":936930,"line_start":35,"line_end":35,"column_start":15,"column_end":18},"name":"xyy","qualname":"<Point<N, D>>::xyy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19874},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936967,"byte_end":936970,"line_start":36,"line_end":36,"column_start":15,"column_end":18},"name":"yxx","qualname":"<Point<N, D>>::yxx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19875},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937007,"byte_end":937010,"line_start":37,"line_end":37,"column_start":15,"column_end":18},"name":"yxy","qualname":"<Point<N, D>>::yxy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19876},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937047,"byte_end":937050,"line_start":38,"line_end":38,"column_start":15,"column_end":18},"name":"yyx","qualname":"<Point<N, D>>::yyx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19877},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937087,"byte_end":937090,"line_start":39,"line_end":39,"column_start":15,"column_end":18},"name":"yyy","qualname":"<Point<N, D>>::yyy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19881},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937128,"byte_end":937130,"line_start":41,"line_end":41,"column_start":15,"column_end":17},"name":"xz","qualname":"<Point<N, D>>::xz","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19882},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937165,"byte_end":937167,"line_start":42,"line_end":42,"column_start":15,"column_end":17},"name":"yz","qualname":"<Point<N, D>>::yz","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19883},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937202,"byte_end":937204,"line_start":43,"line_end":43,"column_start":15,"column_end":17},"name":"zx","qualname":"<Point<N, D>>::zx","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19884},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937239,"byte_end":937241,"line_start":44,"line_end":44,"column_start":15,"column_end":17},"name":"zy","qualname":"<Point<N, D>>::zy","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19885},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937276,"byte_end":937278,"line_start":45,"line_end":45,"column_start":15,"column_end":17},"name":"zz","qualname":"<Point<N, D>>::zz","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19886},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937313,"byte_end":937316,"line_start":46,"line_end":46,"column_start":15,"column_end":18},"name":"xxz","qualname":"<Point<N, D>>::xxz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19887},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937353,"byte_end":937356,"line_start":47,"line_end":47,"column_start":15,"column_end":18},"name":"xyz","qualname":"<Point<N, D>>::xyz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19888},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937393,"byte_end":937396,"line_start":48,"line_end":48,"column_start":15,"column_end":18},"name":"xzx","qualname":"<Point<N, D>>::xzx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19889},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937433,"byte_end":937436,"line_start":49,"line_end":49,"column_start":15,"column_end":18},"name":"xzy","qualname":"<Point<N, D>>::xzy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19890},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937473,"byte_end":937476,"line_start":50,"line_end":50,"column_start":15,"column_end":18},"name":"xzz","qualname":"<Point<N, D>>::xzz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19891},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937513,"byte_end":937516,"line_start":51,"line_end":51,"column_start":15,"column_end":18},"name":"yxz","qualname":"<Point<N, D>>::yxz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19892},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937553,"byte_end":937556,"line_start":52,"line_end":52,"column_start":15,"column_end":18},"name":"yyz","qualname":"<Point<N, D>>::yyz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19893},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937593,"byte_end":937596,"line_start":53,"line_end":53,"column_start":15,"column_end":18},"name":"yzx","qualname":"<Point<N, D>>::yzx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19894},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937633,"byte_end":937636,"line_start":54,"line_end":54,"column_start":15,"column_end":18},"name":"yzy","qualname":"<Point<N, D>>::yzy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19895},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937673,"byte_end":937676,"line_start":55,"line_end":55,"column_start":15,"column_end":18},"name":"yzz","qualname":"<Point<N, D>>::yzz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19896},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937713,"byte_end":937716,"line_start":56,"line_end":56,"column_start":15,"column_end":18},"name":"zxx","qualname":"<Point<N, D>>::zxx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19897},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937753,"byte_end":937756,"line_start":57,"line_end":57,"column_start":15,"column_end":18},"name":"zxy","qualname":"<Point<N, D>>::zxy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19898},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937793,"byte_end":937796,"line_start":58,"line_end":58,"column_start":15,"column_end":18},"name":"zxz","qualname":"<Point<N, D>>::zxz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19899},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937833,"byte_end":937836,"line_start":59,"line_end":59,"column_start":15,"column_end":18},"name":"zyx","qualname":"<Point<N, D>>::zyx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19900},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937873,"byte_end":937876,"line_start":60,"line_end":60,"column_start":15,"column_end":18},"name":"zyy","qualname":"<Point<N, D>>::zyy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19901},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937913,"byte_end":937916,"line_start":61,"line_end":61,"column_start":15,"column_end":18},"name":"zyz","qualname":"<Point<N, D>>::zyz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19902},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937953,"byte_end":937956,"line_start":62,"line_end":62,"column_start":15,"column_end":18},"name":"zzx","qualname":"<Point<N, D>>::zzx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19903},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":937993,"byte_end":937996,"line_start":63,"line_end":63,"column_start":15,"column_end":18},"name":"zzy","qualname":"<Point<N, D>>::zzy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19904},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":938033,"byte_end":938036,"line_start":64,"line_end":64,"column_start":15,"column_end":18},"name":"zzz","qualname":"<Point<N, D>>::zzz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936350,"byte_end":936399,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/swizzle.rs","byte_start":936420,"byte_end":936429,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":6597},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":938723,"byte_end":938732,"line_start":21,"line_end":21,"column_start":11,"column_end":20},"name":"TCategory","qualname":"::geometry::transform::TCategory","value":"TCategory: Any + Debug + Copy + PartialEq + Send","parent":null,"children":[{"krate":0,"index":6598},{"krate":0,"index":6599}],"decl_id":null,"docs":" Trait implemented by phantom types identifying the projective transformation type.","sig":null,"attributes":[{"value":"/ Trait implemented by phantom types identifying the projective transformation type.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":938534,"byte_end":938620,"line_start":18,"line_end":18,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":938621,"byte_end":938624,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ NOTE: this trait is not intended to be implemented outside of the `nalgebra` crate.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":938625,"byte_end":938712,"line_start":20,"line_end":20,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":6598},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":938912,"byte_end":938926,"line_start":25,"line_end":25,"column_start":8,"column_end":22},"name":"has_normalizer","qualname":"::geometry::transform::TCategory::has_normalizer","value":"fn () -> bool","parent":{"krate":0,"index":6597},"children":[],"decl_id":null,"docs":" Indicates whether a `Transform` with the category `Self` has a bottom-row different from\n `0 0 .. 1`.\n","sig":null,"attributes":[{"value":"/ Indicates whether a `Transform` with the category `Self` has a bottom-row different from","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":938778,"byte_end":938870,"line_start":22,"line_end":22,"column_start":5,"column_end":97}},{"value":"/ `0 0 .. 1`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":938875,"byte_end":938890,"line_start":23,"line_end":23,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":938895,"byte_end":938904,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6599},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":939087,"byte_end":939115,"line_start":31,"line_end":31,"column_start":8,"column_end":36},"name":"check_homogeneous_invariants","qualname":"::geometry::transform::TCategory::check_homogeneous_invariants","value":"fn <N, D> (mat: &MatrixN<N, D>) -> bool","parent":{"krate":0,"index":6597},"children":[],"decl_id":null,"docs":" Checks that the given matrix is a valid homogeneous representation of an element of the\n category `Self`.\n","sig":null,"attributes":[{"value":"/ Checks that the given matrix is a valid homogeneous representation of an element of the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":938963,"byte_end":939054,"line_start":29,"line_end":29,"column_start":5,"column_end":96}},{"value":"/ category `Self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":939059,"byte_end":939079,"line_start":30,"line_end":30,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":6602},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":939429,"byte_end":939441,"line_start":39,"line_end":39,"column_start":11,"column_end":23},"name":"TCategoryMul","qualname":"::geometry::transform::TCategoryMul","value":"TCategoryMul<Other: TCategory>: TCategory","parent":null,"children":[{"krate":0,"index":6604}],"decl_id":null,"docs":" Traits that gives the `Transform` category that is compatible with the result of the\n multiplication of transformations with categories `Self` and `Other`.\n","sig":null,"attributes":[{"value":"/ Traits that gives the `Transform` category that is compatible with the result of the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":939256,"byte_end":939344,"line_start":37,"line_end":37,"column_start":1,"column_end":89}},{"value":"/ multiplication of transformations with categories `Self` and `Other`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":939345,"byte_end":939418,"line_start":38,"line_end":38,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":6604},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":939698,"byte_end":939712,"line_start":43,"line_end":43,"column_start":10,"column_end":24},"name":"Representative","qualname":"::geometry::transform::TCategoryMul::Representative","value":"type Representative: TCategory;","parent":{"krate":0,"index":6602},"children":[],"decl_id":null,"docs":" The transform category that results from the multiplication of a `Transform<Self>` to a\n `Transform<Other>`. This is usually equal to `Self` or `Other`, whichever is the most\n general category.\n","sig":null,"attributes":[{"value":"/ The transform category that results from the multiplication of a `Transform<Self>` to a","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":939477,"byte_end":939568,"line_start":40,"line_end":40,"column_start":5,"column_end":96}},{"value":"/ `Transform<Other>`. This is usually equal to `Self` or `Other`, whichever is the most","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":939573,"byte_end":939662,"line_start":41,"line_end":41,"column_start":5,"column_end":94}},{"value":"/ general category.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":939667,"byte_end":939688,"line_start":42,"line_end":42,"column_start":5,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":6605},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":939817,"byte_end":939833,"line_start":47,"line_end":47,"column_start":11,"column_end":27},"name":"SuperTCategoryOf","qualname":"::geometry::transform::SuperTCategoryOf","value":"SuperTCategoryOf<Other: TCategory>: TCategory","parent":null,"children":[],"decl_id":null,"docs":" Indicates that `Self` is a more general `Transform` category than `Other`.\n","sig":null,"attributes":[{"value":"/ Indicates that `Self` is a more general `Transform` category than `Other`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":939728,"byte_end":939806,"line_start":46,"line_end":46,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":6607},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":940020,"byte_end":940034,"line_start":52,"line_end":52,"column_start":11,"column_end":25},"name":"SubTCategoryOf","qualname":"::geometry::transform::SubTCategoryOf","value":"SubTCategoryOf<Other: TCategory>: TCategory","parent":null,"children":[],"decl_id":null,"docs":" Indicates that `Self` is a more specific `Transform` category than `Other`.","sig":null,"attributes":[{"value":"/ Indicates that `Self` is a more specific `Transform` category than `Other`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":939867,"byte_end":939946,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":939947,"byte_end":939950,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Automatically implemented based on `SuperTCategoryOf`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":939951,"byte_end":940009,"line_start":51,"line_end":51,"column_start":1,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":19905},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":940311,"byte_end":940319,"line_start":62,"line_end":62,"column_start":10,"column_end":18},"name":"TGeneral","qualname":"::geometry::transform::TGeneral","value":"TGeneral::{}","parent":null,"children":[],"decl_id":null,"docs":" Tag representing the most general (not necessarily inversible) `Transform` type.\n","sig":null,"attributes":[{"value":"/ Tag representing the most general (not necessarily inversible) `Transform` type.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":940166,"byte_end":940250,"line_start":60,"line_end":60,"column_start":1,"column_end":85}}]},{"kind":"Enum","id":{"krate":0,"index":19920},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":940451,"byte_end":940462,"line_start":66,"line_end":66,"column_start":10,"column_end":21},"name":"TProjective","qualname":"::geometry::transform::TProjective","value":"TProjective::{}","parent":null,"children":[],"decl_id":null,"docs":" Tag representing the most general inversible `Transform` type.\n","sig":null,"attributes":[{"value":"/ Tag representing the most general inversible `Transform` type.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":940324,"byte_end":940390,"line_start":64,"line_end":64,"column_start":1,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":19935},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":940617,"byte_end":940624,"line_start":70,"line_end":70,"column_start":10,"column_end":17},"name":"TAffine","qualname":"::geometry::transform::TAffine","value":"TAffine::{}","parent":null,"children":[],"decl_id":null,"docs":" Tag representing an affine `Transform`. Its bottom-row is equal to `(0, 0 ... 0, 1)`.\n","sig":null,"attributes":[{"value":"/ Tag representing an affine `Transform`. Its bottom-row is equal to `(0, 0 ... 0, 1)`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":940467,"byte_end":940556,"line_start":68,"line_end":68,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":19965},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":942831,"byte_end":942840,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"Transform","qualname":"::geometry::transform::Transform","value":"Transform {  }","parent":null,"children":[{"krate":0,"index":19969},{"krate":0,"index":19970}],"decl_id":null,"docs":" A transformation matrix in homogeneous coordinates.","sig":null,"attributes":[{"value":"/ A transformation matrix in homogeneous coordinates.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":942611,"byte_end":942666,"line_start":154,"line_end":154,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":942667,"byte_end":942670,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ It is stored as a matrix with dimensions `(D + 1, D + 1)`, e.g., it stores a 4x4 matrix for a","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":942671,"byte_end":942768,"line_start":156,"line_end":156,"column_start":1,"column_end":98}},{"value":"/ 3D transformation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":942769,"byte_end":942791,"line_start":157,"line_end":157,"column_start":1,"column_end":23}},{"value":"repr(C)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":942792,"byte_end":942802,"line_start":158,"line_end":158,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":6655},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":945693,"byte_end":945714,"line_start":246,"line_end":246,"column_start":12,"column_end":33},"name":"from_matrix_unchecked","qualname":"<Transform<N, D, C>>::from_matrix_unchecked","value":"fn (matrix: MatrixN<N, DimNameSum<D, U1>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new transformation from the given homogeneous matrix. The transformation category\n of `Self` is not checked to be verified by the given matrix.\n","sig":null,"attributes":[{"value":"/ Creates a new transformation from the given homogeneous matrix. The transformation category","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":945503,"byte_end":945598,"line_start":243,"line_end":243,"column_start":5,"column_end":100}},{"value":"/ of `Self` is not checked to be verified by the given matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":945603,"byte_end":945667,"line_start":244,"line_end":244,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":945672,"byte_end":945681,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6656},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946262,"byte_end":946272,"line_start":266,"line_end":266,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Transform<N, D, C>>::into_inner","value":"fn (self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying matrix.","sig":null,"attributes":[{"value":"/ Retrieves the underlying matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":945868,"byte_end":945904,"line_start":253,"line_end":253,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":945909,"byte_end":945912,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":945917,"byte_end":945931,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":945936,"byte_end":945943,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":945948,"byte_end":945990,"line_start":257,"line_end":257,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":945995,"byte_end":945998,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(1.0, 2.0, 0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946003,"byte_end":946042,"line_start":259,"line_end":259,"column_start":5,"column_end":44}},{"value":"/                      3.0, 4.0, 0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946047,"byte_end":946086,"line_start":260,"line_end":260,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946091,"byte_end":946131,"line_start":261,"line_end":261,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946136,"byte_end":946185,"line_start":262,"line_end":262,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(t.into_inner(), m);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946190,"byte_end":946224,"line_start":263,"line_end":263,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946229,"byte_end":946236,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946241,"byte_end":946250,"line_start":265,"line_end":265,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6657},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946520,"byte_end":946526,"line_start":274,"line_end":274,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Transform<N, D, C>>::unwrap","value":"fn (self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying matrix.\n Deprecated: Use [Transform::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946345,"byte_end":946381,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/ Deprecated: Use [Transform::into_inner] instead.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946386,"byte_end":946438,"line_start":271,"line_end":271,"column_start":5,"column_end":57}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946443,"byte_end":946494,"line_start":272,"line_end":272,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946499,"byte_end":946508,"line_start":273,"line_end":273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6658},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946995,"byte_end":947001,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"matrix","qualname":"<Transform<N, D, C>>::matrix","value":"fn (&self) -> &MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the underlying matrix.","sig":null,"attributes":[{"value":"/ A reference to the underlying matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946599,"byte_end":946640,"line_start":278,"line_end":278,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946645,"byte_end":946648,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946653,"byte_end":946667,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946672,"byte_end":946679,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946684,"byte_end":946726,"line_start":282,"line_end":282,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946731,"byte_end":946734,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(1.0, 2.0, 0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946739,"byte_end":946778,"line_start":284,"line_end":284,"column_start":5,"column_end":44}},{"value":"/                      3.0, 4.0, 0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946783,"byte_end":946822,"line_start":285,"line_end":285,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946827,"byte_end":946867,"line_start":286,"line_end":286,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946872,"byte_end":946921,"line_start":287,"line_end":287,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(*t.matrix(), m);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946926,"byte_end":946957,"line_start":288,"line_end":288,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946962,"byte_end":946969,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":946974,"byte_end":946983,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6659},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":947908,"byte_end":947928,"line_start":318,"line_end":318,"column_start":12,"column_end":32},"name":"matrix_mut_unchecked","qualname":"<Transform<N, D, C>>::matrix_mut_unchecked","value":"fn (&mut self) -> &mut MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A mutable reference to the underlying matrix.","sig":null,"attributes":[{"value":"/ A mutable reference to the underlying matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":947077,"byte_end":947126,"line_start":295,"line_end":295,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":947131,"byte_end":947134,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ It is `_unchecked` because direct modifications of this matrix may break invariants","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":947139,"byte_end":947226,"line_start":297,"line_end":297,"column_start":5,"column_end":92}},{"value":"/ identified by this transformation category.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":947231,"byte_end":947278,"line_start":298,"line_end":298,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":947283,"byte_end":947286,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":947291,"byte_end":947305,"line_start":300,"line_end":300,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":947310,"byte_end":947317,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":947322,"byte_end":947364,"line_start":302,"line_end":302,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":947369,"byte_end":947372,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(1.0, 2.0, 0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":947377,"byte_end":947416,"line_start":304,"line_end":304,"column_start":5,"column_end":44}},{"value":"/                      3.0, 4.0, 0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":947421,"byte_end":947460,"line_start":305,"line_end":305,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":947465,"byte_end":947505,"line_start":306,"line_end":306,"column_start":5,"column_end":45}},{"value":"/ let mut t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":947510,"byte_end":947563,"line_start":307,"line_end":307,"column_start":5,"column_end":58}},{"value":"/ t.matrix_mut_unchecked().m12 = 42.0;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":947568,"byte_end":947608,"line_start":308,"line_end":308,"column_start":5,"column_end":45}},{"value":"/ t.matrix_mut_unchecked().m23 = 90.0;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":947613,"byte_end":947653,"line_start":309,"line_end":309,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":947658,"byte_end":947661,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":947666,"byte_end":947669,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let expected = Matrix3::new(1.0, 42.0, 0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":947674,"byte_end":947721,"line_start":312,"line_end":312,"column_start":5,"column_end":52}},{"value":"/                             3.0, 4.0,  90.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":947726,"byte_end":947774,"line_start":313,"line_end":313,"column_start":5,"column_end":53}},{"value":"/                             0.0, 0.0,  1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":947779,"byte_end":947827,"line_start":314,"line_end":314,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(*t.matrix(), expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":947832,"byte_end":947870,"line_start":315,"line_end":315,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":947875,"byte_end":947882,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":947887,"byte_end":947896,"line_start":317,"line_end":317,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6660},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":948400,"byte_end":948412,"line_start":329,"line_end":329,"column_start":12,"column_end":24},"name":"set_category","qualname":"<Transform<N, D, C>>::set_category","value":"fn <CNew> (self) -> Transform<N, D, CNew>","parent":null,"children":[],"decl_id":null,"docs":" Sets the category of this transform.","sig":null,"attributes":[{"value":"/ Sets the category of this transform.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":948016,"byte_end":948056,"line_start":322,"line_end":322,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":948061,"byte_end":948064,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This can be done only if the new category is more general than the current one, e.g., a","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":948069,"byte_end":948160,"line_start":324,"line_end":324,"column_start":5,"column_end":96}},{"value":"/ transform with category `TProjective` cannot be converted to a transform with category","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":948165,"byte_end":948255,"line_start":325,"line_end":325,"column_start":5,"column_end":95}},{"value":"/ `TAffine` because not all projective transformations are affine (the other way-round is","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":948260,"byte_end":948351,"line_start":326,"line_end":326,"column_start":5,"column_end":96}},{"value":"/ valid though).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":948356,"byte_end":948374,"line_start":327,"line_end":327,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":948379,"byte_end":948388,"line_start":328,"line_end":328,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6662},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":948774,"byte_end":948785,"line_start":338,"line_end":338,"column_start":12,"column_end":23},"name":"clone_owned","qualname":"<Transform<N, D, C>>::clone_owned","value":"fn (&self) -> Transform<N, D, C>","parent":null,"children":[],"decl_id":null,"docs":" Clones this transform into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Clones this transform into one that owns its data.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":948538,"byte_end":948592,"line_start":333,"line_end":333,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":948597,"byte_end":948606,"line_start":334,"line_end":334,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This method is redundant with automatic `Copy` and the `.clone()` method and will be removed in a future release.\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":948611,"byte_end":948762,"line_start":335,"line_end":337,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":6663},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":949336,"byte_end":949350,"line_start":355,"line_end":355,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Transform<N, D, C>>::to_homogeneous","value":"fn (&self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this transform into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this transform into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":948896,"byte_end":948978,"line_start":342,"line_end":342,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":948983,"byte_end":948986,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":948991,"byte_end":949005,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":949010,"byte_end":949017,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":949022,"byte_end":949064,"line_start":346,"line_end":346,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":949069,"byte_end":949072,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(1.0, 2.0, 0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":949077,"byte_end":949116,"line_start":348,"line_end":348,"column_start":5,"column_end":44}},{"value":"/                      3.0, 4.0, 0.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":949121,"byte_end":949160,"line_start":349,"line_end":349,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":949165,"byte_end":949205,"line_start":350,"line_end":350,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":949210,"byte_end":949259,"line_start":351,"line_end":351,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(t.into_inner(), m);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":949264,"byte_end":949298,"line_start":352,"line_end":352,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":949303,"byte_end":949310,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":949315,"byte_end":949324,"line_start":354,"line_end":354,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6664},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":950502,"byte_end":950513,"line_start":384,"line_end":384,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<Transform<N, D, C>>::try_inverse","value":"fn (self) -> Option<Transform<N, D, C>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to invert this transformation. You may use `.inverse` instead of this\n transformation has a subcategory of `TProjective` (i.e. if it is a `Projective{2,3}` or `Affine{2,3}`).","sig":null,"attributes":[{"value":"/ Attempts to invert this transformation. You may use `.inverse` instead of this","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":949440,"byte_end":949522,"line_start":359,"line_end":359,"column_start":5,"column_end":87}},{"value":"/ transformation has a subcategory of `TProjective` (i.e. if it is a `Projective{2,3}` or `Affine{2,3}`).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":949527,"byte_end":949634,"line_start":360,"line_end":360,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":949639,"byte_end":949642,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":949647,"byte_end":949661,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":949666,"byte_end":949673,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":949678,"byte_end":949717,"line_start":364,"line_end":364,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":949722,"byte_end":949764,"line_start":365,"line_end":365,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":949769,"byte_end":949772,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(2.0, 2.0, -0.3,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":949777,"byte_end":949817,"line_start":367,"line_end":367,"column_start":5,"column_end":45}},{"value":"/                      3.0, 4.0, 0.1,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":949822,"byte_end":949861,"line_start":368,"line_end":368,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":949866,"byte_end":949906,"line_start":369,"line_end":369,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":949911,"byte_end":949960,"line_start":370,"line_end":370,"column_start":5,"column_end":54}},{"value":"/ let inv_t = t.try_inverse().unwrap();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":949965,"byte_end":950006,"line_start":371,"line_end":371,"column_start":5,"column_end":46}},{"value":"/ assert_relative_eq!(t * inv_t, Transform2::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":950011,"byte_end":950070,"line_start":372,"line_end":372,"column_start":5,"column_end":64}},{"value":"/ assert_relative_eq!(inv_t * t, Transform2::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":950075,"byte_end":950134,"line_start":373,"line_end":373,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":950139,"byte_end":950142,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ // Non-invertible case.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":950147,"byte_end":950174,"line_start":375,"line_end":375,"column_start":5,"column_end":32}},{"value":"/ let m = Matrix3::new(0.0, 2.0, 1.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":950179,"byte_end":950218,"line_start":376,"line_end":376,"column_start":5,"column_end":44}},{"value":"/                      3.0, 0.0, 5.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":950223,"byte_end":950262,"line_start":377,"line_end":377,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 0.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":950267,"byte_end":950307,"line_start":378,"line_end":378,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":950312,"byte_end":950361,"line_start":379,"line_end":379,"column_start":5,"column_end":54}},{"value":"/ assert!(t.try_inverse().is_none());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":950366,"byte_end":950405,"line_start":380,"line_end":380,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":950410,"byte_end":950417,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":950422,"byte_end":950431,"line_start":382,"line_end":382,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use try_inverse_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":950436,"byte_end":950490,"line_start":383,"line_end":383,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6665},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":951465,"byte_end":951472,"line_start":410,"line_end":410,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Transform<N, D, C>>::inverse","value":"fn (self) -> Transform<N, D, C>","parent":null,"children":[],"decl_id":null,"docs":" Inverts this transformation. Use `.try_inverse` if this transform has the `TGeneral`\n category (i.e., a `Transform{2,3}` may not be invertible).","sig":null,"attributes":[{"value":"/ Inverts this transformation. Use `.try_inverse` if this transform has the `TGeneral`","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":950714,"byte_end":950802,"line_start":392,"line_end":392,"column_start":5,"column_end":93}},{"value":"/ category (i.e., a `Transform{2,3}` may not be invertible).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":950807,"byte_end":950869,"line_start":393,"line_end":393,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":950874,"byte_end":950877,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":950882,"byte_end":950896,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":950901,"byte_end":950908,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":950913,"byte_end":950952,"line_start":397,"line_end":397,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3, Projective2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":950957,"byte_end":951000,"line_start":398,"line_end":398,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":951005,"byte_end":951008,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(2.0, 2.0, -0.3,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":951013,"byte_end":951053,"line_start":400,"line_end":400,"column_start":5,"column_end":45}},{"value":"/                      3.0, 4.0, 0.1,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":951058,"byte_end":951097,"line_start":401,"line_end":401,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":951102,"byte_end":951142,"line_start":402,"line_end":402,"column_start":5,"column_end":45}},{"value":"/ let proj = Projective2::from_matrix_unchecked(m);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":951147,"byte_end":951200,"line_start":403,"line_end":403,"column_start":5,"column_end":58}},{"value":"/ let inv_t = proj.inverse();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":951205,"byte_end":951236,"line_start":404,"line_end":404,"column_start":5,"column_end":36}},{"value":"/ assert_relative_eq!(proj * inv_t, Projective2::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":951241,"byte_end":951304,"line_start":405,"line_end":405,"column_start":5,"column_end":68}},{"value":"/ assert_relative_eq!(inv_t * proj, Projective2::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":951309,"byte_end":951372,"line_start":406,"line_end":406,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":951377,"byte_end":951384,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":951389,"byte_end":951398,"line_start":408,"line_end":408,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":951403,"byte_end":951453,"line_start":409,"line_end":409,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6666},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":952672,"byte_end":952687,"line_start":443,"line_end":443,"column_start":12,"column_end":27},"name":"try_inverse_mut","qualname":"<Transform<N, D, C>>::try_inverse_mut","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Attempts to invert this transformation in-place. You may use `.inverse_mut` instead of this\n transformation has a subcategory of `TProjective`.","sig":null,"attributes":[{"value":"/ Attempts to invert this transformation in-place. You may use `.inverse_mut` instead of this","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":951687,"byte_end":951782,"line_start":418,"line_end":418,"column_start":5,"column_end":100}},{"value":"/ transformation has a subcategory of `TProjective`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":951787,"byte_end":951841,"line_start":419,"line_end":419,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":951846,"byte_end":951849,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":951854,"byte_end":951868,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":951873,"byte_end":951880,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":951885,"byte_end":951924,"line_start":423,"line_end":423,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":951929,"byte_end":951971,"line_start":424,"line_end":424,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":951976,"byte_end":951979,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(2.0, 2.0, -0.3,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":951984,"byte_end":952024,"line_start":426,"line_end":426,"column_start":5,"column_end":45}},{"value":"/                      3.0, 4.0, 0.1,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":952029,"byte_end":952068,"line_start":427,"line_end":427,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":952073,"byte_end":952113,"line_start":428,"line_end":428,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":952118,"byte_end":952167,"line_start":429,"line_end":429,"column_start":5,"column_end":54}},{"value":"/ let mut inv_t = t;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":952172,"byte_end":952194,"line_start":430,"line_end":430,"column_start":5,"column_end":27}},{"value":"/ assert!(inv_t.try_inverse_mut());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":952199,"byte_end":952236,"line_start":431,"line_end":431,"column_start":5,"column_end":42}},{"value":"/ assert_relative_eq!(t * inv_t, Transform2::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":952241,"byte_end":952300,"line_start":432,"line_end":432,"column_start":5,"column_end":64}},{"value":"/ assert_relative_eq!(inv_t * t, Transform2::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":952305,"byte_end":952364,"line_start":433,"line_end":433,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":952369,"byte_end":952372,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ // Non-invertible case.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":952377,"byte_end":952404,"line_start":435,"line_end":435,"column_start":5,"column_end":32}},{"value":"/ let m = Matrix3::new(0.0, 2.0, 1.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":952409,"byte_end":952448,"line_start":436,"line_end":436,"column_start":5,"column_end":44}},{"value":"/                      3.0, 0.0, 5.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":952453,"byte_end":952492,"line_start":437,"line_end":437,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 0.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":952497,"byte_end":952537,"line_start":438,"line_end":438,"column_start":5,"column_end":45}},{"value":"/ let mut t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":952542,"byte_end":952595,"line_start":439,"line_end":439,"column_start":5,"column_end":58}},{"value":"/ assert!(!t.try_inverse_mut());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":952600,"byte_end":952634,"line_start":440,"line_end":440,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":952639,"byte_end":952646,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":952651,"byte_end":952660,"line_start":442,"line_end":442,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6667},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":953468,"byte_end":953479,"line_start":465,"line_end":465,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Transform<N, D, C>>::inverse_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inverts this transformation in-place. Use `.try_inverse_mut` if this transform has the\n `TGeneral` category (it may not be invertible).","sig":null,"attributes":[{"value":"/ Inverts this transformation in-place. Use `.try_inverse_mut` if this transform has the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":952758,"byte_end":952848,"line_start":447,"line_end":447,"column_start":5,"column_end":95}},{"value":"/ `TGeneral` category (it may not be invertible).","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":952853,"byte_end":952904,"line_start":448,"line_end":448,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":952909,"byte_end":952912,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":952917,"byte_end":952931,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":952936,"byte_end":952943,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":952948,"byte_end":952987,"line_start":452,"line_end":452,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3, Projective2};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":952992,"byte_end":953035,"line_start":453,"line_end":453,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":953040,"byte_end":953043,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(2.0, 2.0, -0.3,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":953048,"byte_end":953088,"line_start":455,"line_end":455,"column_start":5,"column_end":45}},{"value":"/                      3.0, 4.0, 0.1,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":953093,"byte_end":953132,"line_start":456,"line_end":456,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":953137,"byte_end":953177,"line_start":457,"line_end":457,"column_start":5,"column_end":45}},{"value":"/ let proj = Projective2::from_matrix_unchecked(m);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":953182,"byte_end":953235,"line_start":458,"line_end":458,"column_start":5,"column_end":58}},{"value":"/ let mut inv_t = proj;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":953240,"byte_end":953265,"line_start":459,"line_end":459,"column_start":5,"column_end":30}},{"value":"/ inv_t.inverse_mut();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":953270,"byte_end":953294,"line_start":460,"line_end":460,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj * inv_t, Projective2::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":953299,"byte_end":953362,"line_start":461,"line_end":461,"column_start":5,"column_end":68}},{"value":"/ assert_relative_eq!(inv_t * proj, Projective2::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":953367,"byte_end":953430,"line_start":462,"line_end":462,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":953435,"byte_end":953442,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":953447,"byte_end":953456,"line_start":464,"line_end":464,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6672},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":954018,"byte_end":954033,"line_start":486,"line_end":486,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Transform<N, D, C>>::transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by this transformation.","sig":null,"attributes":[{"value":"/ Transform the given point by this transformation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":953871,"byte_end":953924,"line_start":482,"line_end":482,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":953929,"byte_end":953932,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":953937,"byte_end":953992,"line_start":484,"line_end":484,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":953997,"byte_end":954006,"line_start":485,"line_end":485,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6673},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":954320,"byte_end":954336,"line_start":495,"line_end":495,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Transform<N, D, C>>::transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by this transformation, ignoring the\n translational component of the transformation.","sig":null,"attributes":[{"value":"/ Transform the given vector by this transformation, ignoring the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":954105,"byte_end":954172,"line_start":490,"line_end":490,"column_start":5,"column_end":72}},{"value":"/ translational component of the transformation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":954177,"byte_end":954227,"line_start":491,"line_end":491,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":954232,"byte_end":954235,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":954240,"byte_end":954294,"line_start":493,"line_end":493,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":954299,"byte_end":954308,"line_start":494,"line_end":494,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6678},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":954890,"byte_end":954913,"line_start":512,"line_end":512,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Transform<N, D, C>>::inverse_transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by the inverse of this transformation.\n This may be cheaper than inverting the transformation and transforming\n the point.\n","sig":null,"attributes":[{"value":"/ Transform the given point by the inverse of this transformation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":954698,"byte_end":954766,"line_start":508,"line_end":508,"column_start":5,"column_end":73}},{"value":"/ This may be cheaper than inverting the transformation and transforming","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":954771,"byte_end":954845,"line_start":509,"line_end":509,"column_start":5,"column_end":79}},{"value":"/ the point.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":954850,"byte_end":954864,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":954869,"byte_end":954878,"line_start":511,"line_end":511,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6679},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":955197,"byte_end":955221,"line_start":520,"line_end":520,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<Transform<N, D, C>>::inverse_transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by the inverse of this transformation.\n This may be cheaper than inverting the transformation and transforming\n the vector.\n","sig":null,"attributes":[{"value":"/ Transform the given vector by the inverse of this transformation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":955003,"byte_end":955072,"line_start":516,"line_end":516,"column_start":5,"column_end":74}},{"value":"/ This may be cheaper than inverting the transformation and transforming","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":955077,"byte_end":955151,"line_start":517,"line_end":517,"column_start":5,"column_end":79}},{"value":"/ the vector.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":955156,"byte_end":955171,"line_start":518,"line_end":518,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":955176,"byte_end":955185,"line_start":519,"line_end":519,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6683},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":955627,"byte_end":955637,"line_start":532,"line_end":532,"column_start":12,"column_end":22},"name":"matrix_mut","qualname":"<Transform<N, D, TGeneral>>::matrix_mut","value":"fn (&mut self) -> &mut MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A mutable reference to underlying matrix. Use `.matrix_mut_unchecked` instead if this\n transformation category is not `TGeneral`.\n","sig":null,"attributes":[{"value":"/ A mutable reference to underlying matrix. Use `.matrix_mut_unchecked` instead if this","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":955461,"byte_end":955550,"line_start":529,"line_end":529,"column_start":5,"column_end":94}},{"value":"/ transformation category is not `TGeneral`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":955555,"byte_end":955601,"line_start":530,"line_end":530,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":955606,"byte_end":955615,"line_start":531,"line_end":531,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":6712},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alias.rs","byte_start":957666,"byte_end":957676,"line_start":6,"line_end":6,"column_start":10,"column_end":20},"name":"Transform2","qualname":"::geometry::transform_alias::Transform2","value":"Transform<N, U2, TGeneral>","parent":null,"children":[],"decl_id":null,"docs":" A 2D general transformation that may not be invertible. Stored as a homogeneous 3x3 matrix.\n","sig":null,"attributes":[{"value":"/ A 2D general transformation that may not be invertible. Stored as a homogeneous 3x3 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alias.rs","byte_start":957561,"byte_end":957656,"line_start":5,"line_end":5,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":6714},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alias.rs","byte_start":957800,"byte_end":957811,"line_start":8,"line_end":8,"column_start":10,"column_end":21},"name":"Projective2","qualname":"::geometry::transform_alias::Projective2","value":"Transform<N, U2, TProjective>","parent":null,"children":[],"decl_id":null,"docs":" An invertible 2D general transformation. Stored as a homogeneous 3x3 matrix.\n","sig":null,"attributes":[{"value":"/ An invertible 2D general transformation. Stored as a homogeneous 3x3 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alias.rs","byte_start":957710,"byte_end":957790,"line_start":7,"line_end":7,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":6716},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alias.rs","byte_start":957925,"byte_end":957932,"line_start":10,"line_end":10,"column_start":10,"column_end":17},"name":"Affine2","qualname":"::geometry::transform_alias::Affine2","value":"Transform<N, U2, TAffine>","parent":null,"children":[],"decl_id":null,"docs":" A 2D affine transformation. Stored as a homogeneous 3x3 matrix.\n","sig":null,"attributes":[{"value":"/ A 2D affine transformation. Stored as a homogeneous 3x3 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alias.rs","byte_start":957848,"byte_end":957915,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":6718},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alias.rs","byte_start":958071,"byte_end":958081,"line_start":13,"line_end":13,"column_start":10,"column_end":20},"name":"Transform3","qualname":"::geometry::transform_alias::Transform3","value":"Transform<N, U3, TGeneral>","parent":null,"children":[],"decl_id":null,"docs":" A 3D general transformation that may not be inversible. Stored as a homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ A 3D general transformation that may not be inversible. Stored as a homogeneous 4x4 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alias.rs","byte_start":957966,"byte_end":958061,"line_start":12,"line_end":12,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":6720},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alias.rs","byte_start":958205,"byte_end":958216,"line_start":15,"line_end":15,"column_start":10,"column_end":21},"name":"Projective3","qualname":"::geometry::transform_alias::Projective3","value":"Transform<N, U3, TProjective>","parent":null,"children":[],"decl_id":null,"docs":" An invertible 3D general transformation. Stored as a homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ An invertible 3D general transformation. Stored as a homogeneous 4x4 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alias.rs","byte_start":958115,"byte_end":958195,"line_start":14,"line_end":14,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":6722},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alias.rs","byte_start":958330,"byte_end":958337,"line_start":17,"line_end":17,"column_start":10,"column_end":17},"name":"Affine3","qualname":"::geometry::transform_alias::Affine3","value":"Transform<N, U3, TAffine>","parent":null,"children":[],"decl_id":null,"docs":" A 3D affine transformation. Stored as a homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ A 3D affine transformation. Stored as a homogeneous 4x4 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_alias.rs","byte_start":958253,"byte_end":958320,"line_start":16,"line_end":16,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6742},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":959601,"byte_end":959609,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"identity","qualname":"<Transform<N, D, C>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity transform.","sig":null,"attributes":[{"value":"/ Creates a new identity transform.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":958764,"byte_end":958801,"line_start":15,"line_end":15,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":958806,"byte_end":958809,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":958814,"byte_end":958827,"line_start":17,"line_end":17,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":958832,"byte_end":958835,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":958840,"byte_end":958847,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Transform2, Projective2, Affine2, Transform3, Projective3, Affine3, Point2, Point3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":958852,"byte_end":958957,"line_start":20,"line_end":20,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":958962,"byte_end":958965,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":958970,"byte_end":959005,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"/ let t = Projective2::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":959010,"byte_end":959046,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(t * pt, pt);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":959051,"byte_end":959078,"line_start":24,"line_end":24,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":959083,"byte_end":959086,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ let aff = Affine2::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":959091,"byte_end":959125,"line_start":26,"line_end":26,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(aff * pt, pt);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":959130,"byte_end":959159,"line_start":27,"line_end":27,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":959164,"byte_end":959167,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let aff = Transform2::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":959172,"byte_end":959209,"line_start":29,"line_end":29,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(aff * pt, pt);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":959214,"byte_end":959243,"line_start":30,"line_end":30,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":959248,"byte_end":959251,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ // Also works in 3D.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":959256,"byte_end":959280,"line_start":32,"line_end":32,"column_start":5,"column_end":29}},{"value":"/ let pt = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":959285,"byte_end":959325,"line_start":33,"line_end":33,"column_start":5,"column_end":45}},{"value":"/ let t = Projective3::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":959330,"byte_end":959366,"line_start":34,"line_end":34,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(t * pt, pt);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":959371,"byte_end":959398,"line_start":35,"line_end":35,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":959403,"byte_end":959406,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let aff = Affine3::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":959411,"byte_end":959445,"line_start":37,"line_end":37,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(aff * pt, pt);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":959450,"byte_end":959479,"line_start":38,"line_end":38,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":959484,"byte_end":959487,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let aff = Transform3::identity();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":959492,"byte_end":959529,"line_start":40,"line_end":40,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(aff * pt, pt);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":959534,"byte_end":959563,"line_start":41,"line_end":41,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":959568,"byte_end":959575,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":959580,"byte_end":959589,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6891},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs","byte_start":987596,"byte_end":987606,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"Reflection","qualname":"::geometry::reflection::Reflection","value":"Reflection {  }","parent":null,"children":[{"krate":0,"index":6895},{"krate":0,"index":6896}],"decl_id":null,"docs":" A reflection wrt. a plane.\n","sig":null,"attributes":[{"value":"/ A reflection wrt. a plane.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs","byte_start":987554,"byte_end":987584,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":6901},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs","byte_start":988018,"byte_end":988021,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<Reflection<N, D, S>>::new","value":"fn (axis: Unit<Vector<N, D, S>>, bias: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reflection wrt the plane orthogonal to the given axis and bias.","sig":null,"attributes":[{"value":"/ Creates a new reflection wrt the plane orthogonal to the given axis and bias.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs","byte_start":987763,"byte_end":987844,"line_start":17,"line_end":17,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs","byte_start":987849,"byte_end":987852,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ The bias is the position of the plane on the axis. In particular, a bias equal to zero","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs","byte_start":987857,"byte_end":987947,"line_start":19,"line_end":19,"column_start":5,"column_end":95}},{"value":"/ represents a plane that passes through the origin.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs","byte_start":987952,"byte_end":988006,"line_start":20,"line_end":20,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6902},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs","byte_start":988287,"byte_end":988307,"line_start":30,"line_end":30,"column_start":12,"column_end":32},"name":"new_containing_point","qualname":"<Reflection<N, D, S>>::new_containing_point","value":"fn (axis: Unit<Vector<N, D, S>>, pt: &Point<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reflection wrt. the plane orthogonal to the given axis and that contains the\n point `pt`.\n","sig":null,"attributes":[{"value":"/ Creates a new reflection wrt. the plane orthogonal to the given axis and that contains the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs","byte_start":988161,"byte_end":988255,"line_start":28,"line_end":28,"column_start":5,"column_end":99}},{"value":"/ point `pt`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs","byte_start":988260,"byte_end":988275,"line_start":29,"line_end":29,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6903},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs","byte_start":988560,"byte_end":988564,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"axis","qualname":"<Reflection<N, D, S>>::axis","value":"fn (&self) -> &Vector<N, D, S>","parent":null,"children":[],"decl_id":null,"docs":" The reflexion axis.\n","sig":null,"attributes":[{"value":"/ The reflexion axis.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs","byte_start":988525,"byte_end":988548,"line_start":39,"line_end":39,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":6904},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs","byte_start":988749,"byte_end":988756,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"reflect","qualname":"<Reflection<N, D, S>>::reflect","value":"fn <R2, C2, S2> (&self, rhs: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies the reflection to the columns of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies the reflection to the columns of `rhs`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs","byte_start":988686,"byte_end":988737,"line_start":45,"line_end":45,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6908},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs","byte_start":989545,"byte_end":989562,"line_start":63,"line_end":63,"column_start":12,"column_end":29},"name":"reflect_with_sign","qualname":"<Reflection<N, D, S>>::reflect_with_sign","value":"fn <R2, C2, S2> (&self, rhs: &mut Matrix<N, R2, C2, S2>, sign: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies the reflection to the columns of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies the reflection to the columns of `rhs`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs","byte_start":989482,"byte_end":989533,"line_start":62,"line_end":62,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6912},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs","byte_start":990300,"byte_end":990312,"line_start":79,"line_end":79,"column_start":12,"column_end":24},"name":"reflect_rows","qualname":"<Reflection<N, D, S>>::reflect_rows","value":"fn <R2, C2, S2, S3> (&self, lhs: &mut Matrix<N, R2, C2, S2>, work: &mut Vector<N, R2, S3>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies the reflection to the rows of `lhs`.\n","sig":null,"attributes":[{"value":"/ Applies the reflection to the rows of `lhs`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs","byte_start":990240,"byte_end":990288,"line_start":78,"line_end":78,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":6917},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs","byte_start":990892,"byte_end":990914,"line_start":99,"line_end":99,"column_start":12,"column_end":34},"name":"reflect_rows_with_sign","qualname":"<Reflection<N, D, S>>::reflect_rows_with_sign","value":"fn <R2, C2, S2, S3> (&self, lhs: &mut Matrix<N, R2, C2, S2>, work: &mut Vector<N, R2, S3>, sign: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies the reflection to the rows of `lhs`.\n","sig":null,"attributes":[{"value":"/ Applies the reflection to the rows of `lhs`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs","byte_start":990832,"byte_end":990880,"line_start":98,"line_end":98,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":6940},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":992006,"byte_end":992019,"line_start":20,"line_end":20,"column_start":12,"column_end":25},"name":"Orthographic3","qualname":"::geometry::orthographic::Orthographic3","value":"Orthographic3 {  }","parent":null,"children":[{"krate":0,"index":6942}],"decl_id":null,"docs":" A 3D orthographic projection stored as a homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ A 3D orthographic projection stored as a homogeneous 4x4 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":991926,"byte_end":991994,"line_start":19,"line_end":19,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":6956},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":995792,"byte_end":995795,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"new","qualname":"<Orthographic3<N>>::new","value":"fn (left: N, right: N, bottom: N, top: N, znear: N, zfar: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new orthographic projection matrix.","sig":null,"attributes":[{"value":"/ Creates a new orthographic projection matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":993237,"byte_end":993286,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":993291,"byte_end":993294,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This follows the OpenGL convention, so this will flip the `z` axis.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":993299,"byte_end":993370,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":993375,"byte_end":993378,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":993383,"byte_end":993396,"line_start":73,"line_end":73,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":993401,"byte_end":993408,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":993413,"byte_end":993452,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":993457,"byte_end":993501,"line_start":76,"line_end":76,"column_start":5,"column_end":49}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":993506,"byte_end":993575,"line_start":77,"line_end":77,"column_start":5,"column_end":74}},{"value":"/ // Check this projection actually transforms the view cuboid into the double-unit cube.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":993580,"byte_end":993671,"line_start":78,"line_end":78,"column_start":5,"column_end":96}},{"value":"/ // See https://www.nalgebra.org/projections/#orthographic-projection for more details.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":993676,"byte_end":993766,"line_start":79,"line_end":79,"column_start":5,"column_end":95}},{"value":"/ let p1 = Point3::new(1.0, 2.0, -0.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":993771,"byte_end":993812,"line_start":80,"line_end":80,"column_start":5,"column_end":46}},{"value":"/ let p2 = Point3::new(1.0, 2.0, -1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":993817,"byte_end":993861,"line_start":81,"line_end":81,"column_start":5,"column_end":49}},{"value":"/ let p3 = Point3::new(1.0, 20.0, -0.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":993866,"byte_end":993908,"line_start":82,"line_end":82,"column_start":5,"column_end":47}},{"value":"/ let p4 = Point3::new(1.0, 20.0, -1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":993913,"byte_end":993958,"line_start":83,"line_end":83,"column_start":5,"column_end":50}},{"value":"/ let p5 = Point3::new(10.0, 2.0, -0.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":993963,"byte_end":994005,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/ let p6 = Point3::new(10.0, 2.0, -1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":994010,"byte_end":994055,"line_start":85,"line_end":85,"column_start":5,"column_end":50}},{"value":"/ let p7 = Point3::new(10.0, 20.0, -0.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":994060,"byte_end":994103,"line_start":86,"line_end":86,"column_start":5,"column_end":48}},{"value":"/ let p8 = Point3::new(10.0, 20.0, -1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":994108,"byte_end":994154,"line_start":87,"line_end":87,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":994159,"byte_end":994162,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.project_point(&p1), Point3::new(-1.0, -1.0, -1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":994167,"byte_end":994247,"line_start":89,"line_end":89,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p2), Point3::new(-1.0, -1.0,  1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":994252,"byte_end":994332,"line_start":90,"line_end":90,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p3), Point3::new(-1.0,  1.0, -1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":994337,"byte_end":994417,"line_start":91,"line_end":91,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p4), Point3::new(-1.0,  1.0,  1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":994422,"byte_end":994502,"line_start":92,"line_end":92,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p5), Point3::new( 1.0, -1.0, -1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":994507,"byte_end":994587,"line_start":93,"line_end":93,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p6), Point3::new( 1.0, -1.0,  1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":994592,"byte_end":994672,"line_start":94,"line_end":94,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p7), Point3::new( 1.0,  1.0, -1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":994677,"byte_end":994757,"line_start":95,"line_end":95,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p8), Point3::new( 1.0,  1.0,  1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":994762,"byte_end":994842,"line_start":96,"line_end":96,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":994847,"byte_end":994850,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ // This also works with flipped axis. In other words, we allow that","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":994855,"byte_end":994926,"line_start":98,"line_end":98,"column_start":5,"column_end":76}},{"value":"/ // `left > right`, `bottom > top`, and/or `znear > zfar`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":994931,"byte_end":994992,"line_start":99,"line_end":99,"column_start":5,"column_end":66}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":994997,"byte_end":995066,"line_start":100,"line_end":100,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":995071,"byte_end":995074,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.project_point(&p1), Point3::new( 1.0,  1.0,  1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":995079,"byte_end":995159,"line_start":102,"line_end":102,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p2), Point3::new( 1.0,  1.0, -1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":995164,"byte_end":995244,"line_start":103,"line_end":103,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p3), Point3::new( 1.0, -1.0,  1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":995249,"byte_end":995329,"line_start":104,"line_end":104,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p4), Point3::new( 1.0, -1.0, -1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":995334,"byte_end":995414,"line_start":105,"line_end":105,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p5), Point3::new(-1.0,  1.0,  1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":995419,"byte_end":995499,"line_start":106,"line_end":106,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p6), Point3::new(-1.0,  1.0, -1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":995504,"byte_end":995584,"line_start":107,"line_end":107,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p7), Point3::new(-1.0, -1.0,  1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":995589,"byte_end":995669,"line_start":108,"line_end":108,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p8), Point3::new(-1.0, -1.0, -1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":995674,"byte_end":995754,"line_start":109,"line_end":109,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":995759,"byte_end":995766,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":995771,"byte_end":995780,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6957},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":996882,"byte_end":996903,"line_start":141,"line_end":141,"column_start":12,"column_end":33},"name":"from_matrix_unchecked","qualname":"<Orthographic3<N>>::from_matrix_unchecked","value":"fn (matrix: Matrix4<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given matrix to interpret it as a 3D orthographic matrix.","sig":null,"attributes":[{"value":"/ Wraps the given matrix to interpret it as a 3D orthographic matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":996129,"byte_end":996200,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":996205,"byte_end":996208,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ It is not checked whether or not the given matrix actually represents an orthographic","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":996213,"byte_end":996302,"line_start":125,"line_end":125,"column_start":5,"column_end":94}},{"value":"/ projection.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":996307,"byte_end":996322,"line_start":126,"line_end":126,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":996327,"byte_end":996330,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":996335,"byte_end":996348,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":996353,"byte_end":996360,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":996365,"byte_end":996418,"line_start":130,"line_end":130,"column_start":5,"column_end":58}},{"value":"/ let mat = Matrix4::new(","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":996423,"byte_end":996450,"line_start":131,"line_end":131,"column_start":5,"column_end":32}},{"value":"/     2.0 / 9.0, 0.0,        0.0,         -11.0 / 9.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":996455,"byte_end":996511,"line_start":132,"line_end":132,"column_start":5,"column_end":61}},{"value":"/     0.0,       2.0 / 18.0, 0.0,         -22.0 / 18.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":996516,"byte_end":996573,"line_start":133,"line_end":133,"column_start":5,"column_end":62}},{"value":"/     0.0,       0.0,       -2.0 / 999.9, -1000.1 / 999.9,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":996578,"byte_end":996638,"line_start":134,"line_end":134,"column_start":5,"column_end":65}},{"value":"/     0.0,       0.0,        0.0,         1.0","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":996643,"byte_end":996690,"line_start":135,"line_end":135,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":996695,"byte_end":996701,"line_start":136,"line_end":136,"column_start":5,"column_end":11}},{"value":"/ let proj = Orthographic3::from_matrix_unchecked(mat);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":996706,"byte_end":996763,"line_start":137,"line_end":137,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(proj, Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":996768,"byte_end":996844,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":996849,"byte_end":996856,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":996861,"byte_end":996870,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6958},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":997104,"byte_end":997112,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"name":"from_fov","qualname":"<Orthographic3<N>>::from_fov","value":"fn (aspect: N, vfov: N, znear: N, zfar: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new orthographic projection matrix from an aspect ratio and the vertical field of view.\n","sig":null,"attributes":[{"value":"/ Creates a new orthographic projection matrix from an aspect ratio and the vertical field of view.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":996977,"byte_end":997078,"line_start":145,"line_end":145,"column_start":5,"column_end":106}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":997083,"byte_end":997092,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6959},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":998489,"byte_end":998496,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Orthographic3<N>>::inverse","value":"fn (&self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the inverse of the underlying homogeneous matrix.","sig":null,"attributes":[{"value":"/ Retrieves the inverse of the underlying homogeneous matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":997720,"byte_end":997783,"line_start":171,"line_end":171,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":997788,"byte_end":997791,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":997796,"byte_end":997809,"line_start":173,"line_end":173,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":997814,"byte_end":997821,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":997826,"byte_end":997865,"line_start":175,"line_end":175,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":997870,"byte_end":997923,"line_start":176,"line_end":176,"column_start":5,"column_end":58}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":997928,"byte_end":997997,"line_start":177,"line_end":177,"column_start":5,"column_end":74}},{"value":"/ let inv = proj.inverse();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":998002,"byte_end":998031,"line_start":178,"line_end":178,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":998036,"byte_end":998039,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(inv * proj.as_matrix(), Matrix4::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":998044,"byte_end":998113,"line_start":180,"line_end":180,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.as_matrix() * inv, Matrix4::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":998118,"byte_end":998187,"line_start":181,"line_end":181,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":998192,"byte_end":998195,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":998200,"byte_end":998269,"line_start":183,"line_end":183,"column_start":5,"column_end":74}},{"value":"/ let inv = proj.inverse();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":998274,"byte_end":998303,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(inv * proj.as_matrix(), Matrix4::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":998308,"byte_end":998377,"line_start":185,"line_end":185,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.as_matrix() * inv, Matrix4::identity());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":998382,"byte_end":998451,"line_start":186,"line_end":186,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":998456,"byte_end":998463,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":998468,"byte_end":998477,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6960},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":999608,"byte_end":999622,"line_start":222,"line_end":222,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Orthographic3<N>>::to_homogeneous","value":"fn (&self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the corresponding homogeneous matrix.","sig":null,"attributes":[{"value":"/ Computes the corresponding homogeneous matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":999009,"byte_end":999059,"line_start":207,"line_end":207,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":999064,"byte_end":999067,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":999072,"byte_end":999085,"line_start":209,"line_end":209,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":999090,"byte_end":999097,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":999102,"byte_end":999155,"line_start":211,"line_end":211,"column_start":5,"column_end":58}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":999160,"byte_end":999229,"line_start":212,"line_end":212,"column_start":5,"column_end":74}},{"value":"/ let expected = Matrix4::new(","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":999234,"byte_end":999266,"line_start":213,"line_end":213,"column_start":5,"column_end":37}},{"value":"/     2.0 / 9.0, 0.0,        0.0,         -11.0 / 9.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":999271,"byte_end":999327,"line_start":214,"line_end":214,"column_start":5,"column_end":61}},{"value":"/     0.0,       2.0 / 18.0, 0.0,         -22.0 / 18.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":999332,"byte_end":999389,"line_start":215,"line_end":215,"column_start":5,"column_end":62}},{"value":"/     0.0,       0.0,       -2.0 / 999.9, -1000.1 / 999.9,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":999394,"byte_end":999454,"line_start":216,"line_end":216,"column_start":5,"column_end":65}},{"value":"/     0.0,       0.0,        0.0,         1.0","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":999459,"byte_end":999506,"line_start":217,"line_end":217,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":999511,"byte_end":999517,"line_start":218,"line_end":218,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(proj.to_homogeneous(), expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":999522,"byte_end":999570,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":999575,"byte_end":999582,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":999587,"byte_end":999596,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6961},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000290,"byte_end":1000299,"line_start":241,"line_end":241,"column_start":12,"column_end":21},"name":"as_matrix","qualname":"<Orthographic3<N>>::as_matrix","value":"fn (&self) -> &Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the underlying homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ A reference to the underlying homogeneous transformation matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":999677,"byte_end":999745,"line_start":226,"line_end":226,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":999750,"byte_end":999753,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":999758,"byte_end":999771,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":999776,"byte_end":999783,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":999788,"byte_end":999841,"line_start":230,"line_end":230,"column_start":5,"column_end":58}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":999846,"byte_end":999915,"line_start":231,"line_end":231,"column_start":5,"column_end":74}},{"value":"/ let expected = Matrix4::new(","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":999920,"byte_end":999952,"line_start":232,"line_end":232,"column_start":5,"column_end":37}},{"value":"/     2.0 / 9.0, 0.0,        0.0,         -11.0 / 9.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":999957,"byte_end":1000013,"line_start":233,"line_end":233,"column_start":5,"column_end":61}},{"value":"/     0.0,       2.0 / 18.0, 0.0,         -22.0 / 18.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000018,"byte_end":1000075,"line_start":234,"line_end":234,"column_start":5,"column_end":62}},{"value":"/     0.0,       0.0,       -2.0 / 999.9, -1000.1 / 999.9,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000080,"byte_end":1000140,"line_start":235,"line_end":235,"column_start":5,"column_end":65}},{"value":"/     0.0,       0.0,        0.0,         1.0","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000145,"byte_end":1000192,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000197,"byte_end":1000203,"line_start":237,"line_end":237,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(*proj.as_matrix(), expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000208,"byte_end":1000252,"line_start":238,"line_end":238,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000257,"byte_end":1000264,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000269,"byte_end":1000278,"line_start":240,"line_end":240,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6962},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000690,"byte_end":1000703,"line_start":254,"line_end":254,"column_start":12,"column_end":25},"name":"as_projective","qualname":"<Orthographic3<N>>::as_projective","value":"fn (&self) -> &Projective3<N>","parent":null,"children":[],"decl_id":null,"docs":" A reference to this transformation seen as a `Projective3`.","sig":null,"attributes":[{"value":"/ A reference to this transformation seen as a `Projective3`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000356,"byte_end":1000419,"line_start":245,"line_end":245,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000424,"byte_end":1000427,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000432,"byte_end":1000445,"line_start":247,"line_end":247,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000450,"byte_end":1000457,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000462,"byte_end":1000496,"line_start":249,"line_end":249,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000501,"byte_end":1000570,"line_start":250,"line_end":250,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(proj.as_projective().to_homogeneous(), proj.to_homogeneous());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000575,"byte_end":1000652,"line_start":251,"line_end":251,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000657,"byte_end":1000664,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000669,"byte_end":1000678,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6963},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1001102,"byte_end":1001115,"line_start":267,"line_end":267,"column_start":12,"column_end":25},"name":"to_projective","qualname":"<Orthographic3<N>>::to_projective","value":"fn (&self) -> Projective3<N>","parent":null,"children":[],"decl_id":null,"docs":" This transformation seen as a `Projective3`.","sig":null,"attributes":[{"value":"/ This transformation seen as a `Projective3`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000783,"byte_end":1000831,"line_start":258,"line_end":258,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000836,"byte_end":1000839,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000844,"byte_end":1000857,"line_start":260,"line_end":260,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000862,"byte_end":1000869,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000874,"byte_end":1000908,"line_start":262,"line_end":262,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000913,"byte_end":1000982,"line_start":263,"line_end":263,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(proj.to_projective().to_homogeneous(), proj.to_homogeneous());","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1000987,"byte_end":1001064,"line_start":264,"line_end":264,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1001069,"byte_end":1001076,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1001081,"byte_end":1001090,"line_start":266,"line_end":266,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6964},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1001847,"byte_end":1001857,"line_start":287,"line_end":287,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Orthographic3<N>>::into_inner","value":"fn (self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying homogeneous matrix.","sig":null,"attributes":[{"value":"/ Retrieves the underlying homogeneous matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1001210,"byte_end":1001258,"line_start":271,"line_end":271,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1001263,"byte_end":1001266,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1001271,"byte_end":1001284,"line_start":273,"line_end":273,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1001289,"byte_end":1001296,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1001301,"byte_end":1001340,"line_start":275,"line_end":275,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1001345,"byte_end":1001398,"line_start":276,"line_end":276,"column_start":5,"column_end":58}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1001403,"byte_end":1001472,"line_start":277,"line_end":277,"column_start":5,"column_end":74}},{"value":"/ let expected = Matrix4::new(","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1001477,"byte_end":1001509,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/     2.0 / 9.0, 0.0,        0.0,         -11.0 / 9.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1001514,"byte_end":1001570,"line_start":279,"line_end":279,"column_start":5,"column_end":61}},{"value":"/     0.0,       2.0 / 18.0, 0.0,         -22.0 / 18.0,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1001575,"byte_end":1001632,"line_start":280,"line_end":280,"column_start":5,"column_end":62}},{"value":"/     0.0,       0.0,       -2.0 / 999.9, -1000.1 / 999.9,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1001637,"byte_end":1001697,"line_start":281,"line_end":281,"column_start":5,"column_end":65}},{"value":"/     0.0,       0.0,        0.0,         1.0","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1001702,"byte_end":1001749,"line_start":282,"line_end":282,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1001754,"byte_end":1001760,"line_start":283,"line_end":283,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(proj.into_inner(), expected);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1001765,"byte_end":1001809,"line_start":284,"line_end":284,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1001814,"byte_end":1001821,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1001826,"byte_end":1001835,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6965},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1002102,"byte_end":1002108,"line_start":295,"line_end":295,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Orthographic3<N>>::unwrap","value":"fn (self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying homogeneous matrix.\n Deprecated: Use [Orthographic3::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying homogeneous matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1001911,"byte_end":1001959,"line_start":291,"line_end":291,"column_start":5,"column_end":53}},{"value":"/ Deprecated: Use [Orthographic3::into_inner] instead.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1001964,"byte_end":1002020,"line_start":292,"line_end":292,"column_start":5,"column_end":61}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1002025,"byte_end":1002076,"line_start":293,"line_end":293,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1002081,"byte_end":1002090,"line_start":294,"line_end":294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6966},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1002629,"byte_end":1002633,"line_start":311,"line_end":311,"column_start":12,"column_end":16},"name":"left","qualname":"<Orthographic3<N>>::left","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The left offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The left offset of the view cuboid.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1002162,"byte_end":1002201,"line_start":299,"line_end":299,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1002206,"byte_end":1002209,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1002214,"byte_end":1002221,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1002226,"byte_end":1002265,"line_start":302,"line_end":302,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1002270,"byte_end":1002304,"line_start":303,"line_end":303,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1002309,"byte_end":1002378,"line_start":304,"line_end":304,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.left(), 1.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1002383,"byte_end":1002443,"line_start":305,"line_end":305,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1002448,"byte_end":1002451,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1002456,"byte_end":1002525,"line_start":307,"line_end":307,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.left(), 10.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1002530,"byte_end":1002591,"line_start":308,"line_end":308,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1002596,"byte_end":1002603,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1002608,"byte_end":1002617,"line_start":310,"line_end":310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6967},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1003193,"byte_end":1003198,"line_start":327,"line_end":327,"column_start":12,"column_end":17},"name":"right","qualname":"<Orthographic3<N>>::right","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The right offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The right offset of the view cuboid.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1002723,"byte_end":1002763,"line_start":315,"line_end":315,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1002768,"byte_end":1002771,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1002776,"byte_end":1002783,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1002788,"byte_end":1002827,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1002832,"byte_end":1002866,"line_start":319,"line_end":319,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1002871,"byte_end":1002940,"line_start":320,"line_end":320,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.right(), 10.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1002945,"byte_end":1003007,"line_start":321,"line_end":321,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1003012,"byte_end":1003015,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1003020,"byte_end":1003089,"line_start":323,"line_end":323,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.right(), 1.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1003094,"byte_end":1003155,"line_start":324,"line_end":324,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1003160,"byte_end":1003167,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1003172,"byte_end":1003181,"line_start":326,"line_end":326,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6968},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1003760,"byte_end":1003766,"line_start":343,"line_end":343,"column_start":12,"column_end":18},"name":"bottom","qualname":"<Orthographic3<N>>::bottom","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The bottom offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The bottom offset of the view cuboid.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1003287,"byte_end":1003328,"line_start":331,"line_end":331,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1003333,"byte_end":1003336,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1003341,"byte_end":1003348,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1003353,"byte_end":1003392,"line_start":334,"line_end":334,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1003397,"byte_end":1003431,"line_start":335,"line_end":335,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1003436,"byte_end":1003505,"line_start":336,"line_end":336,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.bottom(), 2.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1003510,"byte_end":1003572,"line_start":337,"line_end":337,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1003577,"byte_end":1003580,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1003585,"byte_end":1003654,"line_start":339,"line_end":339,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.bottom(), 20.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1003659,"byte_end":1003722,"line_start":340,"line_end":340,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1003727,"byte_end":1003734,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1003739,"byte_end":1003748,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6969},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1004320,"byte_end":1004323,"line_start":359,"line_end":359,"column_start":12,"column_end":15},"name":"top","qualname":"<Orthographic3<N>>::top","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The top offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The top offset of the view cuboid.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1003856,"byte_end":1003894,"line_start":347,"line_end":347,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1003899,"byte_end":1003902,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1003907,"byte_end":1003914,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1003919,"byte_end":1003958,"line_start":350,"line_end":350,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1003963,"byte_end":1003997,"line_start":351,"line_end":351,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1004002,"byte_end":1004071,"line_start":352,"line_end":352,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.top(), 20.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1004076,"byte_end":1004136,"line_start":353,"line_end":353,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1004141,"byte_end":1004144,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1004149,"byte_end":1004218,"line_start":355,"line_end":355,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.top(), 2.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1004223,"byte_end":1004282,"line_start":356,"line_end":356,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1004287,"byte_end":1004294,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1004299,"byte_end":1004308,"line_start":358,"line_end":358,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6970},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1004889,"byte_end":1004894,"line_start":375,"line_end":375,"column_start":12,"column_end":17},"name":"znear","qualname":"<Orthographic3<N>>::znear","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The near plane offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The near plane offset of the view cuboid.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1004412,"byte_end":1004457,"line_start":363,"line_end":363,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1004462,"byte_end":1004465,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1004470,"byte_end":1004477,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1004482,"byte_end":1004521,"line_start":366,"line_end":366,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1004526,"byte_end":1004560,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1004565,"byte_end":1004634,"line_start":368,"line_end":368,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.znear(), 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1004639,"byte_end":1004700,"line_start":369,"line_end":369,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1004705,"byte_end":1004708,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1004713,"byte_end":1004782,"line_start":371,"line_end":371,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.znear(), 1000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1004787,"byte_end":1004851,"line_start":372,"line_end":372,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1004856,"byte_end":1004863,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1004868,"byte_end":1004877,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6971},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1005457,"byte_end":1005461,"line_start":391,"line_end":391,"column_start":12,"column_end":16},"name":"zfar","qualname":"<Orthographic3<N>>::zfar","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The far plane offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The far plane offset of the view cuboid.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1004983,"byte_end":1005027,"line_start":379,"line_end":379,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1005032,"byte_end":1005035,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1005040,"byte_end":1005047,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1005052,"byte_end":1005091,"line_start":382,"line_end":382,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1005096,"byte_end":1005130,"line_start":383,"line_end":383,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1005135,"byte_end":1005204,"line_start":384,"line_end":384,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.zfar(), 1000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1005209,"byte_end":1005272,"line_start":385,"line_end":385,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1005277,"byte_end":1005280,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1005285,"byte_end":1005354,"line_start":387,"line_end":387,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.zfar(), 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1005359,"byte_end":1005419,"line_start":388,"line_end":388,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1005424,"byte_end":1005431,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1005436,"byte_end":1005445,"line_start":390,"line_end":390,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6972},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1007009,"byte_end":1007022,"line_start":423,"line_end":423,"column_start":12,"column_end":25},"name":"project_point","qualname":"<Orthographic3<N>>::project_point","value":"fn (&self, p: &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Projects a point. Faster than matrix multiplication.","sig":null,"attributes":[{"value":"/ Projects a point. Faster than matrix multiplication.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1005626,"byte_end":1005682,"line_start":396,"line_end":396,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1005687,"byte_end":1005690,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1005695,"byte_end":1005708,"line_start":398,"line_end":398,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1005713,"byte_end":1005720,"line_start":399,"line_end":399,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1005725,"byte_end":1005764,"line_start":400,"line_end":400,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1005769,"byte_end":1005813,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1005818,"byte_end":1005887,"line_start":402,"line_end":402,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1005892,"byte_end":1005895,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let p1 = Point3::new(1.0, 2.0, -0.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1005900,"byte_end":1005941,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ let p2 = Point3::new(1.0, 2.0, -1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1005946,"byte_end":1005990,"line_start":405,"line_end":405,"column_start":5,"column_end":49}},{"value":"/ let p3 = Point3::new(1.0, 20.0, -0.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1005995,"byte_end":1006037,"line_start":406,"line_end":406,"column_start":5,"column_end":47}},{"value":"/ let p4 = Point3::new(1.0, 20.0, -1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1006042,"byte_end":1006087,"line_start":407,"line_end":407,"column_start":5,"column_end":50}},{"value":"/ let p5 = Point3::new(10.0, 2.0, -0.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1006092,"byte_end":1006134,"line_start":408,"line_end":408,"column_start":5,"column_end":47}},{"value":"/ let p6 = Point3::new(10.0, 2.0, -1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1006139,"byte_end":1006184,"line_start":409,"line_end":409,"column_start":5,"column_end":50}},{"value":"/ let p7 = Point3::new(10.0, 20.0, -0.1);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1006189,"byte_end":1006232,"line_start":410,"line_end":410,"column_start":5,"column_end":48}},{"value":"/ let p8 = Point3::new(10.0, 20.0, -1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1006237,"byte_end":1006283,"line_start":411,"line_end":411,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1006288,"byte_end":1006291,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.project_point(&p1), Point3::new(-1.0, -1.0, -1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1006296,"byte_end":1006376,"line_start":413,"line_end":413,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p2), Point3::new(-1.0, -1.0,  1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1006381,"byte_end":1006461,"line_start":414,"line_end":414,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p3), Point3::new(-1.0,  1.0, -1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1006466,"byte_end":1006546,"line_start":415,"line_end":415,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p4), Point3::new(-1.0,  1.0,  1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1006551,"byte_end":1006631,"line_start":416,"line_end":416,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p5), Point3::new( 1.0, -1.0, -1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1006636,"byte_end":1006716,"line_start":417,"line_end":417,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p6), Point3::new( 1.0, -1.0,  1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1006721,"byte_end":1006801,"line_start":418,"line_end":418,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p7), Point3::new( 1.0,  1.0, -1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1006806,"byte_end":1006886,"line_start":419,"line_end":419,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p8), Point3::new( 1.0,  1.0,  1.0));","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1006891,"byte_end":1006971,"line_start":420,"line_end":420,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1006976,"byte_end":1006983,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1006988,"byte_end":1006997,"line_start":422,"line_end":422,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6973},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1008860,"byte_end":1008875,"line_start":458,"line_end":458,"column_start":12,"column_end":27},"name":"unproject_point","qualname":"<Orthographic3<N>>::unproject_point","value":"fn (&self, p: &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Un-projects a point. Faster than multiplication by the underlying matrix inverse.","sig":null,"attributes":[{"value":"/ Un-projects a point. Faster than multiplication by the underlying matrix inverse.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1007288,"byte_end":1007373,"line_start":431,"line_end":431,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1007378,"byte_end":1007381,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1007386,"byte_end":1007399,"line_start":433,"line_end":433,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1007404,"byte_end":1007411,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1007416,"byte_end":1007455,"line_start":435,"line_end":435,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1007460,"byte_end":1007504,"line_start":436,"line_end":436,"column_start":5,"column_end":49}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1007509,"byte_end":1007578,"line_start":437,"line_end":437,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1007583,"byte_end":1007586,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let p1 = Point3::new(-1.0, -1.0, -1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1007591,"byte_end":1007634,"line_start":439,"line_end":439,"column_start":5,"column_end":48}},{"value":"/ let p2 = Point3::new(-1.0, -1.0,  1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1007639,"byte_end":1007682,"line_start":440,"line_end":440,"column_start":5,"column_end":48}},{"value":"/ let p3 = Point3::new(-1.0,  1.0, -1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1007687,"byte_end":1007730,"line_start":441,"line_end":441,"column_start":5,"column_end":48}},{"value":"/ let p4 = Point3::new(-1.0,  1.0,  1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1007735,"byte_end":1007778,"line_start":442,"line_end":442,"column_start":5,"column_end":48}},{"value":"/ let p5 = Point3::new( 1.0, -1.0, -1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1007783,"byte_end":1007826,"line_start":443,"line_end":443,"column_start":5,"column_end":48}},{"value":"/ let p6 = Point3::new( 1.0, -1.0,  1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1007831,"byte_end":1007874,"line_start":444,"line_end":444,"column_start":5,"column_end":48}},{"value":"/ let p7 = Point3::new( 1.0,  1.0, -1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1007879,"byte_end":1007922,"line_start":445,"line_end":445,"column_start":5,"column_end":48}},{"value":"/ let p8 = Point3::new( 1.0,  1.0,  1.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1007927,"byte_end":1007970,"line_start":446,"line_end":446,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1007975,"byte_end":1007978,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p1), Point3::new(1.0, 2.0, -0.1), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1007983,"byte_end":1008081,"line_start":448,"line_end":448,"column_start":5,"column_end":103}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p2), Point3::new(1.0, 2.0, -1000.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1008086,"byte_end":1008187,"line_start":449,"line_end":449,"column_start":5,"column_end":106}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p3), Point3::new(1.0, 20.0, -0.1), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1008192,"byte_end":1008291,"line_start":450,"line_end":450,"column_start":5,"column_end":104}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p4), Point3::new(1.0, 20.0, -1000.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1008296,"byte_end":1008398,"line_start":451,"line_end":451,"column_start":5,"column_end":107}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p5), Point3::new(10.0, 2.0, -0.1), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1008403,"byte_end":1008502,"line_start":452,"line_end":452,"column_start":5,"column_end":104}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p6), Point3::new(10.0, 2.0, -1000.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1008507,"byte_end":1008609,"line_start":453,"line_end":453,"column_start":5,"column_end":107}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p7), Point3::new(10.0, 20.0, -0.1), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1008614,"byte_end":1008714,"line_start":454,"line_end":454,"column_start":5,"column_end":105}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p8), Point3::new(10.0, 20.0, -1000.0), epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1008719,"byte_end":1008822,"line_start":455,"line_end":455,"column_start":5,"column_end":108}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1008827,"byte_end":1008834,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1008839,"byte_end":1008848,"line_start":457,"line_end":457,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6974},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1009963,"byte_end":1009977,"line_start":486,"line_end":486,"column_start":12,"column_end":26},"name":"project_vector","qualname":"<Orthographic3<N>>::project_vector","value":"fn <SB> (&self, p: &Vector<N, U3, SB>) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Projects a vector. Faster than matrix multiplication.","sig":null,"attributes":[{"value":"/ Projects a vector. Faster than matrix multiplication.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1009222,"byte_end":1009279,"line_start":467,"line_end":467,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1009284,"byte_end":1009287,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ Vectors are not affected by the translation part of the projection.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1009292,"byte_end":1009363,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1009368,"byte_end":1009371,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1009376,"byte_end":1009389,"line_start":471,"line_end":471,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1009394,"byte_end":1009401,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1009406,"byte_end":1009445,"line_start":473,"line_end":473,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Vector3};","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1009450,"byte_end":1009495,"line_start":474,"line_end":474,"column_start":5,"column_end":50}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1009500,"byte_end":1009569,"line_start":475,"line_end":475,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1009574,"byte_end":1009577,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let v1 = Vector3::x();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1009582,"byte_end":1009608,"line_start":477,"line_end":477,"column_start":5,"column_end":31}},{"value":"/ let v2 = Vector3::y();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1009613,"byte_end":1009639,"line_start":478,"line_end":478,"column_start":5,"column_end":31}},{"value":"/ let v3 = Vector3::z();","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1009644,"byte_end":1009670,"line_start":479,"line_end":479,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1009675,"byte_end":1009678,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.project_vector(&v1), Vector3::x() * 2.0 / 9.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1009683,"byte_end":1009759,"line_start":481,"line_end":481,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(proj.project_vector(&v2), Vector3::y() * 2.0 / 18.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1009764,"byte_end":1009841,"line_start":482,"line_end":482,"column_start":5,"column_end":82}},{"value":"/ assert_relative_eq!(proj.project_vector(&v3), Vector3::z() * -2.0 / 999.9);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1009846,"byte_end":1009925,"line_start":483,"line_end":483,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1009930,"byte_end":1009937,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1009942,"byte_end":1009951,"line_start":485,"line_end":485,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6976},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1010772,"byte_end":1010780,"line_start":511,"line_end":511,"column_start":12,"column_end":20},"name":"set_left","qualname":"<Orthographic3<N>>::set_left","value":"fn (&mut self, left: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the left offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the left offset of the view cuboid.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1010233,"byte_end":1010277,"line_start":497,"line_end":497,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1010282,"byte_end":1010285,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1010290,"byte_end":1010297,"line_start":499,"line_end":499,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1010302,"byte_end":1010341,"line_start":500,"line_end":500,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1010346,"byte_end":1010380,"line_start":501,"line_end":501,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1010385,"byte_end":1010458,"line_start":502,"line_end":502,"column_start":5,"column_end":78}},{"value":"/ proj.set_left(2.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1010463,"byte_end":1010486,"line_start":503,"line_end":503,"column_start":5,"column_end":28}},{"value":"/ assert_relative_eq!(proj.left(), 2.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1010491,"byte_end":1010551,"line_start":504,"line_end":504,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1010556,"byte_end":1010559,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a left offset greater than the current right offset.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1010564,"byte_end":1010639,"line_start":506,"line_end":506,"column_start":5,"column_end":80}},{"value":"/ proj.set_left(20.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1010644,"byte_end":1010668,"line_start":507,"line_end":507,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj.left(), 20.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1010673,"byte_end":1010734,"line_start":508,"line_end":508,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1010739,"byte_end":1010746,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1010751,"byte_end":1010760,"line_start":510,"line_end":510,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6977},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1011440,"byte_end":1011449,"line_start":530,"line_end":530,"column_start":12,"column_end":21},"name":"set_right","qualname":"<Orthographic3<N>>::set_right","value":"fn (&mut self, right: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the right offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the right offset of the view cuboid.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1010894,"byte_end":1010939,"line_start":516,"line_end":516,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1010944,"byte_end":1010947,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1010952,"byte_end":1010959,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1010964,"byte_end":1011003,"line_start":519,"line_end":519,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1011008,"byte_end":1011042,"line_start":520,"line_end":520,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1011047,"byte_end":1011120,"line_start":521,"line_end":521,"column_start":5,"column_end":78}},{"value":"/ proj.set_right(15.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1011125,"byte_end":1011150,"line_start":522,"line_end":522,"column_start":5,"column_end":30}},{"value":"/ assert_relative_eq!(proj.right(), 15.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1011155,"byte_end":1011217,"line_start":523,"line_end":523,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1011222,"byte_end":1011225,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a right offset smaller than the current left offset.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1011230,"byte_end":1011305,"line_start":525,"line_end":525,"column_start":5,"column_end":80}},{"value":"/ proj.set_right(-3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1011310,"byte_end":1011335,"line_start":526,"line_end":526,"column_start":5,"column_end":30}},{"value":"/ assert_relative_eq!(proj.right(), -3.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1011340,"byte_end":1011402,"line_start":527,"line_end":527,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1011407,"byte_end":1011414,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1011419,"byte_end":1011428,"line_start":529,"line_end":529,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6978},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1012111,"byte_end":1012121,"line_start":549,"line_end":549,"column_start":12,"column_end":22},"name":"set_bottom","qualname":"<Orthographic3<N>>::set_bottom","value":"fn (&mut self, bottom: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the bottom offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the bottom offset of the view cuboid.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1011562,"byte_end":1011608,"line_start":535,"line_end":535,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1011613,"byte_end":1011616,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1011621,"byte_end":1011628,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1011633,"byte_end":1011672,"line_start":538,"line_end":538,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1011677,"byte_end":1011711,"line_start":539,"line_end":539,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1011716,"byte_end":1011789,"line_start":540,"line_end":540,"column_start":5,"column_end":78}},{"value":"/ proj.set_bottom(8.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1011794,"byte_end":1011819,"line_start":541,"line_end":541,"column_start":5,"column_end":30}},{"value":"/ assert_relative_eq!(proj.bottom(), 8.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1011824,"byte_end":1011886,"line_start":542,"line_end":542,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1011891,"byte_end":1011894,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a bottom offset greater than the current top offset.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1011899,"byte_end":1011974,"line_start":544,"line_end":544,"column_start":5,"column_end":80}},{"value":"/ proj.set_bottom(50.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1011979,"byte_end":1012005,"line_start":545,"line_end":545,"column_start":5,"column_end":31}},{"value":"/ assert_relative_eq!(proj.bottom(), 50.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1012010,"byte_end":1012073,"line_start":546,"line_end":546,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1012078,"byte_end":1012085,"line_start":547,"line_end":547,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1012090,"byte_end":1012099,"line_start":548,"line_end":548,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6979},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1012769,"byte_end":1012776,"line_start":568,"line_end":568,"column_start":12,"column_end":19},"name":"set_top","qualname":"<Orthographic3<N>>::set_top","value":"fn (&mut self, top: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the top offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the top offset of the view cuboid.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1012233,"byte_end":1012276,"line_start":554,"line_end":554,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1012281,"byte_end":1012284,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1012289,"byte_end":1012296,"line_start":556,"line_end":556,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1012301,"byte_end":1012340,"line_start":557,"line_end":557,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1012345,"byte_end":1012379,"line_start":558,"line_end":558,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1012384,"byte_end":1012457,"line_start":559,"line_end":559,"column_start":5,"column_end":78}},{"value":"/ proj.set_top(15.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1012462,"byte_end":1012485,"line_start":560,"line_end":560,"column_start":5,"column_end":28}},{"value":"/ assert_relative_eq!(proj.top(), 15.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1012490,"byte_end":1012550,"line_start":561,"line_end":561,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1012555,"byte_end":1012558,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a top offset smaller than the current bottom offset.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1012563,"byte_end":1012638,"line_start":563,"line_end":563,"column_start":5,"column_end":80}},{"value":"/ proj.set_top(-3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1012643,"byte_end":1012666,"line_start":564,"line_end":564,"column_start":5,"column_end":28}},{"value":"/ assert_relative_eq!(proj.top(), -3.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1012671,"byte_end":1012731,"line_start":565,"line_end":565,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1012736,"byte_end":1012743,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1012748,"byte_end":1012757,"line_start":567,"line_end":567,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6980},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1013430,"byte_end":1013439,"line_start":587,"line_end":587,"column_start":12,"column_end":21},"name":"set_znear","qualname":"<Orthographic3<N>>::set_znear","value":"fn (&mut self, znear: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the near plane offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the near plane offset of the view cuboid.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1012891,"byte_end":1012941,"line_start":573,"line_end":573,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1012946,"byte_end":1012949,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1012954,"byte_end":1012961,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1012966,"byte_end":1013005,"line_start":576,"line_end":576,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1013010,"byte_end":1013044,"line_start":577,"line_end":577,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1013049,"byte_end":1013122,"line_start":578,"line_end":578,"column_start":5,"column_end":78}},{"value":"/ proj.set_znear(8.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1013127,"byte_end":1013151,"line_start":579,"line_end":579,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj.znear(), 8.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1013156,"byte_end":1013217,"line_start":580,"line_end":580,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1013222,"byte_end":1013225,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a znear greater than the current zfar.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1013230,"byte_end":1013291,"line_start":582,"line_end":582,"column_start":5,"column_end":66}},{"value":"/ proj.set_znear(5000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1013296,"byte_end":1013323,"line_start":583,"line_end":583,"column_start":5,"column_end":32}},{"value":"/ assert_relative_eq!(proj.znear(), 5000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1013328,"byte_end":1013392,"line_start":584,"line_end":584,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1013397,"byte_end":1013404,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1013409,"byte_end":1013418,"line_start":586,"line_end":586,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6981},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1014084,"byte_end":1014092,"line_start":606,"line_end":606,"column_start":12,"column_end":20},"name":"set_zfar","qualname":"<Orthographic3<N>>::set_zfar","value":"fn (&mut self, zfar: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the far plane offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the far plane offset of the view cuboid.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1013552,"byte_end":1013601,"line_start":592,"line_end":592,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1013606,"byte_end":1013609,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1013614,"byte_end":1013621,"line_start":594,"line_end":594,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1013626,"byte_end":1013665,"line_start":595,"line_end":595,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1013670,"byte_end":1013704,"line_start":596,"line_end":596,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1013709,"byte_end":1013782,"line_start":597,"line_end":597,"column_start":5,"column_end":78}},{"value":"/ proj.set_zfar(15.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1013787,"byte_end":1013811,"line_start":598,"line_end":598,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj.zfar(), 15.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1013816,"byte_end":1013877,"line_start":599,"line_end":599,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1013882,"byte_end":1013885,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a zfar smaller than the current znear.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1013890,"byte_end":1013951,"line_start":601,"line_end":601,"column_start":5,"column_end":66}},{"value":"/ proj.set_zfar(-3.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1013956,"byte_end":1013980,"line_start":602,"line_end":602,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj.zfar(), -3.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1013985,"byte_end":1014046,"line_start":603,"line_end":603,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1014051,"byte_end":1014058,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1014063,"byte_end":1014072,"line_start":605,"line_end":605,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6982},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1014886,"byte_end":1014904,"line_start":627,"line_end":627,"column_start":12,"column_end":30},"name":"set_left_and_right","qualname":"<Orthographic3<N>>::set_left_and_right","value":"fn (&mut self, left: N, right: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the view cuboid offsets along the `x` axis.","sig":null,"attributes":[{"value":"/ Sets the view cuboid offsets along the `x` axis.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1014206,"byte_end":1014258,"line_start":611,"line_end":611,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1014263,"byte_end":1014266,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1014271,"byte_end":1014278,"line_start":613,"line_end":613,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1014283,"byte_end":1014322,"line_start":614,"line_end":614,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1014327,"byte_end":1014361,"line_start":615,"line_end":615,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1014366,"byte_end":1014439,"line_start":616,"line_end":616,"column_start":5,"column_end":78}},{"value":"/ proj.set_left_and_right(7.0, 70.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1014444,"byte_end":1014483,"line_start":617,"line_end":617,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(proj.left(), 7.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1014488,"byte_end":1014548,"line_start":618,"line_end":618,"column_start":5,"column_end":65}},{"value":"/ assert_relative_eq!(proj.right(), 70.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1014553,"byte_end":1014615,"line_start":619,"line_end":619,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1014620,"byte_end":1014623,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ // It is also OK to have `left > right`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1014628,"byte_end":1014672,"line_start":621,"line_end":621,"column_start":5,"column_end":49}},{"value":"/ proj.set_left_and_right(70.0, 7.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1014677,"byte_end":1014716,"line_start":622,"line_end":622,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(proj.left(), 70.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1014721,"byte_end":1014782,"line_start":623,"line_end":623,"column_start":5,"column_end":66}},{"value":"/ assert_relative_eq!(proj.right(), 7.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1014787,"byte_end":1014848,"line_start":624,"line_end":624,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1014853,"byte_end":1014860,"line_start":625,"line_end":625,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1014865,"byte_end":1014874,"line_start":626,"line_end":626,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6983},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1015892,"byte_end":1015910,"line_start":652,"line_end":652,"column_start":12,"column_end":30},"name":"set_bottom_and_top","qualname":"<Orthographic3<N>>::set_bottom_and_top","value":"fn (&mut self, bottom: N, top: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the view cuboid offsets along the `y` axis.","sig":null,"attributes":[{"value":"/ Sets the view cuboid offsets along the `y` axis.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1015212,"byte_end":1015264,"line_start":636,"line_end":636,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1015269,"byte_end":1015272,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1015277,"byte_end":1015284,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1015289,"byte_end":1015328,"line_start":639,"line_end":639,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1015333,"byte_end":1015367,"line_start":640,"line_end":640,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1015372,"byte_end":1015445,"line_start":641,"line_end":641,"column_start":5,"column_end":78}},{"value":"/ proj.set_bottom_and_top(7.0, 70.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1015450,"byte_end":1015489,"line_start":642,"line_end":642,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(proj.bottom(), 7.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1015494,"byte_end":1015556,"line_start":643,"line_end":643,"column_start":5,"column_end":67}},{"value":"/ assert_relative_eq!(proj.top(), 70.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1015561,"byte_end":1015621,"line_start":644,"line_end":644,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1015626,"byte_end":1015629,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ // It is also OK to have `bottom > top`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1015634,"byte_end":1015678,"line_start":646,"line_end":646,"column_start":5,"column_end":49}},{"value":"/ proj.set_bottom_and_top(70.0, 7.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1015683,"byte_end":1015722,"line_start":647,"line_end":647,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(proj.bottom(), 70.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1015727,"byte_end":1015790,"line_start":648,"line_end":648,"column_start":5,"column_end":68}},{"value":"/ assert_relative_eq!(proj.top(), 7.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1015795,"byte_end":1015854,"line_start":649,"line_end":649,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1015859,"byte_end":1015866,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1015871,"byte_end":1015880,"line_start":651,"line_end":651,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6984},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1016915,"byte_end":1016933,"line_start":677,"line_end":677,"column_start":12,"column_end":30},"name":"set_znear_and_zfar","qualname":"<Orthographic3<N>>::set_znear_and_zfar","value":"fn (&mut self, znear: N, zfar: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the near and far plane offsets of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the near and far plane offsets of the view cuboid.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1016218,"byte_end":1016277,"line_start":661,"line_end":661,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1016282,"byte_end":1016285,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1016290,"byte_end":1016297,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1016302,"byte_end":1016341,"line_start":664,"line_end":664,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1016346,"byte_end":1016380,"line_start":665,"line_end":665,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1016385,"byte_end":1016458,"line_start":666,"line_end":666,"column_start":5,"column_end":78}},{"value":"/ proj.set_znear_and_zfar(50.0, 5000.0);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1016463,"byte_end":1016505,"line_start":667,"line_end":667,"column_start":5,"column_end":47}},{"value":"/ assert_relative_eq!(proj.znear(), 50.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1016510,"byte_end":1016572,"line_start":668,"line_end":668,"column_start":5,"column_end":67}},{"value":"/ assert_relative_eq!(proj.zfar(), 5000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1016577,"byte_end":1016640,"line_start":669,"line_end":669,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1016645,"byte_end":1016648,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ // It is also OK to have `znear > zfar`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1016653,"byte_end":1016697,"line_start":671,"line_end":671,"column_start":5,"column_end":49}},{"value":"/ proj.set_znear_and_zfar(5000.0, 0.5);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1016702,"byte_end":1016743,"line_start":672,"line_end":672,"column_start":5,"column_end":46}},{"value":"/ assert_relative_eq!(proj.znear(), 5000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1016748,"byte_end":1016812,"line_start":673,"line_end":673,"column_start":5,"column_end":69}},{"value":"/ assert_relative_eq!(proj.zfar(), 0.5, epsilon = 1.0e-6);","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1016817,"byte_end":1016877,"line_start":674,"line_end":674,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1016882,"byte_end":1016889,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1016894,"byte_end":1016903,"line_start":676,"line_end":676,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7014},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1019023,"byte_end":1019035,"line_start":21,"line_end":21,"column_start":12,"column_end":24},"name":"Perspective3","qualname":"::geometry::perspective::Perspective3","value":"Perspective3 {  }","parent":null,"children":[{"krate":0,"index":7016}],"decl_id":null,"docs":" A 3D perspective projection stored as a homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ A 3D perspective projection stored as a homogeneous 4x4 matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1018944,"byte_end":1019011,"line_start":20,"line_end":20,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7030},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1020352,"byte_end":1020355,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<Perspective3<N>>::new","value":"fn (aspect: N, fovy: N, znear: N, zfar: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new perspective matrix from the aspect ratio, y field of view, and near/far planes.\n","sig":null,"attributes":[{"value":"/ Creates a new perspective matrix from the aspect ratio, y field of view, and near/far planes.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1020243,"byte_end":1020340,"line_start":70,"line_end":70,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":7031},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1021206,"byte_end":1021227,"line_start":99,"line_end":99,"column_start":12,"column_end":33},"name":"from_matrix_unchecked","qualname":"<Perspective3<N>>::from_matrix_unchecked","value":"fn (matrix: Matrix4<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given matrix to interpret it as a 3D perspective matrix.","sig":null,"attributes":[{"value":"/ Wraps the given matrix to interpret it as a 3D perspective matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1020990,"byte_end":1021060,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1021065,"byte_end":1021068,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ It is not checked whether or not the given matrix actually represents a perspective","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1021073,"byte_end":1021160,"line_start":96,"line_end":96,"column_start":5,"column_end":92}},{"value":"/ projection.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1021165,"byte_end":1021180,"line_start":97,"line_end":97,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1021185,"byte_end":1021194,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7032},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1021390,"byte_end":1021397,"line_start":105,"line_end":105,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Perspective3<N>>::inverse","value":"fn (&self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the inverse of the underlying homogeneous matrix.\n","sig":null,"attributes":[{"value":"/ Retrieves the inverse of the underlying homogeneous matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1021301,"byte_end":1021364,"line_start":103,"line_end":103,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1021369,"byte_end":1021378,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7033},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1021922,"byte_end":1021936,"line_start":124,"line_end":124,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Perspective3<N>>::to_homogeneous","value":"fn (&self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the corresponding homogeneous matrix.\n","sig":null,"attributes":[{"value":"/ Computes the corresponding homogeneous matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1021846,"byte_end":1021896,"line_start":122,"line_end":122,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1021901,"byte_end":1021910,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7034},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1022099,"byte_end":1022108,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"as_matrix","qualname":"<Perspective3<N>>::as_matrix","value":"fn (&self) -> &Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the underlying homogeneous transformation matrix.\n","sig":null,"attributes":[{"value":"/ A reference to the underlying homogeneous transformation matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1022005,"byte_end":1022073,"line_start":128,"line_end":128,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1022078,"byte_end":1022087,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7035},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1022254,"byte_end":1022267,"line_start":136,"line_end":136,"column_start":12,"column_end":25},"name":"as_projective","qualname":"<Perspective3<N>>::as_projective","value":"fn (&self) -> &Projective3<N>","parent":null,"children":[],"decl_id":null,"docs":" A reference to this transformation seen as a `Projective3`.\n","sig":null,"attributes":[{"value":"/ A reference to this transformation seen as a `Projective3`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1022165,"byte_end":1022228,"line_start":134,"line_end":134,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1022233,"byte_end":1022242,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7036},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1022421,"byte_end":1022434,"line_start":142,"line_end":142,"column_start":12,"column_end":25},"name":"to_projective","qualname":"<Perspective3<N>>::to_projective","value":"fn (&self) -> Projective3<N>","parent":null,"children":[],"decl_id":null,"docs":" This transformation seen as a `Projective3`.\n","sig":null,"attributes":[{"value":"/ This transformation seen as a `Projective3`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1022347,"byte_end":1022395,"line_start":140,"line_end":140,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1022400,"byte_end":1022409,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7037},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1022603,"byte_end":1022613,"line_start":148,"line_end":148,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Perspective3<N>>::into_inner","value":"fn (self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying homogeneous matrix.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying homogeneous matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1022529,"byte_end":1022577,"line_start":146,"line_end":146,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1022582,"byte_end":1022591,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7038},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1022857,"byte_end":1022863,"line_start":156,"line_end":156,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Perspective3<N>>::unwrap","value":"fn (self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying homogeneous matrix.\n Deprecated: Use [Perspective3::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying homogeneous matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1022667,"byte_end":1022715,"line_start":152,"line_end":152,"column_start":5,"column_end":53}},{"value":"/ Deprecated: Use [Perspective3::into_inner] instead.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1022720,"byte_end":1022775,"line_start":153,"line_end":153,"column_start":5,"column_end":60}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1022780,"byte_end":1022831,"line_start":154,"line_end":154,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1022836,"byte_end":1022845,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7039},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1023006,"byte_end":1023012,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"aspect","qualname":"<Perspective3<N>>::aspect","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Gets the `width / height` aspect ratio of the view frustum.\n","sig":null,"attributes":[{"value":"/ Gets the `width / height` aspect ratio of the view frustum.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1022917,"byte_end":1022980,"line_start":160,"line_end":160,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1022985,"byte_end":1022994,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7040},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1023163,"byte_end":1023167,"line_start":168,"line_end":168,"column_start":12,"column_end":16},"name":"fovy","qualname":"<Perspective3<N>>::fovy","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Gets the y field of view of the view frustum.\n","sig":null,"attributes":[{"value":"/ Gets the y field of view of the view frustum.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1023088,"byte_end":1023137,"line_start":166,"line_end":166,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1023142,"byte_end":1023151,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7041},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1023340,"byte_end":1023345,"line_start":174,"line_end":174,"column_start":12,"column_end":17},"name":"znear","qualname":"<Perspective3<N>>::znear","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Gets the near plane offset of the view frustum.\n","sig":null,"attributes":[{"value":"/ Gets the near plane offset of the view frustum.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1023263,"byte_end":1023314,"line_start":172,"line_end":172,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1023319,"byte_end":1023328,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7042},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1023655,"byte_end":1023659,"line_start":183,"line_end":183,"column_start":12,"column_end":16},"name":"zfar","qualname":"<Perspective3<N>>::zfar","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Gets the far plane offset of the view frustum.\n","sig":null,"attributes":[{"value":"/ Gets the far plane offset of the view frustum.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1023579,"byte_end":1023629,"line_start":181,"line_end":181,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1023634,"byte_end":1023643,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7043},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1024087,"byte_end":1024100,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"project_point","qualname":"<Perspective3<N>>::project_point","value":"fn (&self, p: &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Projects a point. Faster than matrix multiplication.\n","sig":null,"attributes":[{"value":"/ Projects a point. Faster than matrix multiplication.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1024005,"byte_end":1024061,"line_start":192,"line_end":192,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1024066,"byte_end":1024075,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7044},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1024518,"byte_end":1024533,"line_start":205,"line_end":205,"column_start":12,"column_end":27},"name":"unproject_point","qualname":"<Perspective3<N>>::unproject_point","value":"fn (&self, p: &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Un-projects a point. Faster than multiplication by the matrix inverse.\n","sig":null,"attributes":[{"value":"/ Un-projects a point. Faster than multiplication by the matrix inverse.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1024418,"byte_end":1024492,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1024497,"byte_end":1024506,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7045},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1024992,"byte_end":1025006,"line_start":218,"line_end":218,"column_start":12,"column_end":26},"name":"project_vector","qualname":"<Perspective3<N>>::project_vector","value":"fn <SB> (&self, p: &Vector<N, U3, SB>) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Projects a vector. Faster than matrix multiplication.\n","sig":null,"attributes":[{"value":"/ Projects a vector. Faster than matrix multiplication.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1024909,"byte_end":1024966,"line_start":216,"line_end":216,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1024971,"byte_end":1024980,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7047},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1025464,"byte_end":1025474,"line_start":233,"line_end":233,"column_start":12,"column_end":22},"name":"set_aspect","qualname":"<Perspective3<N>>::set_aspect","value":"fn (&mut self, aspect: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective matrix with a new `width / height` aspect ratio of the view\n frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective matrix with a new `width / height` aspect ratio of the view","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1025333,"byte_end":1025421,"line_start":230,"line_end":230,"column_start":5,"column_end":93}},{"value":"/ frustum.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1025426,"byte_end":1025438,"line_start":231,"line_end":231,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1025443,"byte_end":1025452,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7048},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1025795,"byte_end":1025803,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"set_fovy","qualname":"<Perspective3<N>>::set_fovy","value":"fn (&mut self, fovy: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective with a new y field of view of the view frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective with a new y field of view of the view frustum.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1025693,"byte_end":1025769,"line_start":241,"line_end":241,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1025774,"byte_end":1025783,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7049},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1026153,"byte_end":1026162,"line_start":251,"line_end":251,"column_start":12,"column_end":21},"name":"set_znear","qualname":"<Perspective3<N>>::set_znear","value":"fn (&mut self, znear: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective matrix with a new near plane offset of the view frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective matrix with a new near plane offset of the view frustum.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1026042,"byte_end":1026127,"line_start":249,"line_end":249,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1026132,"byte_end":1026141,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7050},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1026385,"byte_end":1026393,"line_start":258,"line_end":258,"column_start":12,"column_end":20},"name":"set_zfar","qualname":"<Perspective3<N>>::set_zfar","value":"fn (&mut self, zfar: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective matrix with a new far plane offset of the view frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective matrix with a new far plane offset of the view frustum.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1026275,"byte_end":1026359,"line_start":256,"line_end":256,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1026364,"byte_end":1026373,"line_start":257,"line_end":257,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7051},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1026625,"byte_end":1026643,"line_start":265,"line_end":265,"column_start":12,"column_end":30},"name":"set_znear_and_zfar","qualname":"<Perspective3<N>>::set_znear_and_zfar","value":"fn (&mut self, znear: N, zfar: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective matrix with new near and far plane offsets of the view frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective matrix with new near and far plane offsets of the view frustum.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1026507,"byte_end":1026599,"line_start":263,"line_end":263,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1026604,"byte_end":1026613,"line_start":264,"line_end":264,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":7080},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linalg","qualname":"::linalg","value":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs","parent":null,"children":[{"krate":0,"index":7081},{"krate":0,"index":7101},{"krate":0,"index":7149},{"krate":0,"index":7211},{"krate":0,"index":7241},{"krate":0,"index":7255},{"krate":0,"index":7310},{"krate":0,"index":7349},{"krate":0,"index":7384},{"krate":0,"index":7415},{"krate":0,"index":7441},{"krate":0,"index":7518},{"krate":0,"index":7567},{"krate":0,"index":7636},{"krate":0,"index":7699},{"krate":0,"index":7798},{"krate":0,"index":7865},{"krate":0,"index":7907},{"krate":0,"index":7942},{"krate":0,"index":7943},{"krate":0,"index":7944},{"krate":0,"index":7945},{"krate":0,"index":7946},{"krate":0,"index":7947},{"krate":0,"index":7948},{"krate":0,"index":7949},{"krate":0,"index":7950},{"krate":0,"index":7951},{"krate":0,"index":7952},{"krate":0,"index":7953}],"decl_id":null,"docs":" [Reexported at the root of this crate.] Factorization of real matrices.\n","sig":null,"attributes":[{"value":"! [Reexported at the root of this crate.] Factorization of real matrices.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs","byte_start":1027792,"byte_end":1027867,"line_start":1,"line_end":1,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":7081},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/balancing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"balancing","qualname":"::linalg::balancing","value":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/balancing.rs","parent":null,"children":[{"krate":0,"index":7082},{"krate":0,"index":7083},{"krate":0,"index":7086},{"krate":0,"index":7087},{"krate":0,"index":7090},{"krate":0,"index":7091},{"krate":0,"index":7095},{"krate":0,"index":7098}],"decl_id":null,"docs":" Functions for balancing a matrix.\n","sig":null,"attributes":[{"value":"! Functions for balancing a matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/balancing.rs","byte_start":1028640,"byte_end":1028677,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":7095},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/balancing.rs","byte_start":1029124,"byte_end":1029147,"line_start":15,"line_end":15,"column_start":8,"column_end":31},"name":"balance_parlett_reinsch","qualname":"::linalg::balancing::balance_parlett_reinsch","value":"fn <N, D> (m: &mut MatrixN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Applies in-place a modified Parlett and Reinsch matrix balancing with 2-norm to the matrix `m` and returns\n the corresponding diagonal transformation.","sig":null,"attributes":[{"value":"/ Applies in-place a modified Parlett and Reinsch matrix balancing with 2-norm to the matrix `m` and returns","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/balancing.rs","byte_start":1028911,"byte_end":1029021,"line_start":11,"line_end":11,"column_start":1,"column_end":111}},{"value":"/ the corresponding diagonal transformation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/balancing.rs","byte_start":1029022,"byte_end":1029068,"line_start":12,"line_end":12,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/balancing.rs","byte_start":1029069,"byte_end":1029072,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See https://arxiv.org/pdf/1401.5766.pdf","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/balancing.rs","byte_start":1029073,"byte_end":1029116,"line_start":14,"line_end":14,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":7098},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/balancing.rs","byte_start":1030551,"byte_end":1030560,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"unbalance","qualname":"::linalg::balancing::unbalance","value":"fn <N, D> (m: &mut MatrixN<N, D>, d: &VectorN<N, D>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place `D * m * D.inverse()`, where `D` is the matrix with diagonal `d`.\n","sig":null,"attributes":[{"value":"/ Computes in-place `D * m * D.inverse()`, where `D` is the matrix with diagonal `d`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/balancing.rs","byte_start":1030456,"byte_end":1030543,"line_start":68,"line_end":68,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":20658},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1032498,"byte_end":1032508,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"Bidiagonal","qualname":"::linalg::bidiagonal::Bidiagonal","value":"Bidiagonal {  }","parent":null,"children":[{"krate":0,"index":20662},{"krate":0,"index":20663},{"krate":0,"index":20664},{"krate":0,"index":20665}],"decl_id":null,"docs":" The bidiagonalization of a general matrix.\n","sig":null,"attributes":[{"value":"/ The bidiagonalization of a general matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1031414,"byte_end":1031460,"line_start":13,"line_end":13,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":7129},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1033918,"byte_end":1033921,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Bidiagonal<N, R, C>>::new","value":"fn (mut matrix: MatrixMN<N, R, C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Bidiagonal decomposition using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the Bidiagonal decomposition using householder reflections.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1033834,"byte_end":1033906,"line_start":74,"line_end":74,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":7130},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1036355,"byte_end":1036372,"line_start":150,"line_end":150,"column_start":12,"column_end":29},"name":"is_upper_diagonal","qualname":"<Bidiagonal<N, R, C>>::is_upper_diagonal","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether this decomposition contains an upper-diagonal matrix.\n","sig":null,"attributes":[{"value":"/ Indicates whether this decomposition contains an upper-diagonal matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1036254,"byte_end":1036329,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1036334,"byte_end":1036343,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7132},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1036763,"byte_end":1036769,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Bidiagonal<N, R, C>>::unpack","value":"fn (self) -> (MatrixMN<N, R, DimMinimum<R, C>>, MatrixN<N, DimMinimum<R, C>>,\n MatrixMN<N, DimMinimum<R, C>, C>)","parent":null,"children":[],"decl_id":null,"docs":" Unpacks this decomposition into its three matrix factors `(U, D, V^t)`.","sig":null,"attributes":[{"value":"/ Unpacks this decomposition into its three matrix factors `(U, D, V^t)`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1036593,"byte_end":1036668,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1036673,"byte_end":1036676,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The decomposed matrix `M` is equal to `U * D * V^t`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1036681,"byte_end":1036737,"line_start":165,"line_end":165,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1036742,"byte_end":1036751,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7133},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1037315,"byte_end":1037316,"line_start":185,"line_end":185,"column_start":12,"column_end":13},"name":"d","qualname":"<Bidiagonal<N, R, C>>::d","value":"fn (&self) -> MatrixN<N, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `R` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `R` of this decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1037217,"byte_end":1037289,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1037294,"byte_end":1037303,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7136},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1038109,"byte_end":1038110,"line_start":204,"line_end":204,"column_start":12,"column_end":13},"name":"u","qualname":"<Bidiagonal<N, R, C>>::u","value":"fn (&self) -> MatrixMN<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `U` of this `U * D * V` decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `U` of this `U * D * V` decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1037900,"byte_end":1037973,"line_start":201,"line_end":201,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":7137},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1039113,"byte_end":1039116,"line_start":234,"line_end":234,"column_start":12,"column_end":15},"name":"v_t","qualname":"<Bidiagonal<N, R, C>>::v_t","value":"fn (&self) -> MatrixMN<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `V_t` of this `U * D * V_t` decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `V_t` of this `U * D * V_t` decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1039024,"byte_end":1039101,"line_start":233,"line_end":233,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":7138},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1040463,"byte_end":1040471,"line_start":269,"line_end":269,"column_start":12,"column_end":20},"name":"diagonal","qualname":"<Bidiagonal<N, R, C>>::diagonal","value":"fn (&self) -> VectorN<N::RealField, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The diagonal part of this decomposed matrix.\n","sig":null,"attributes":[{"value":"/ The diagonal part of this decomposed matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1040403,"byte_end":1040451,"line_start":268,"line_end":268,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":7140},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1040725,"byte_end":1040737,"line_start":277,"line_end":277,"column_start":12,"column_end":24},"name":"off_diagonal","qualname":"<Bidiagonal<N, R, C>>::off_diagonal","value":"fn (&self) -> VectorN<N::RealField, DimDiff<DimMinimum<R, C>, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The off-diagonal part of this decomposed matrix.\n","sig":null,"attributes":[{"value":"/ The off-diagonal part of this decomposed matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1040661,"byte_end":1040713,"line_start":276,"line_end":276,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":7142},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1040983,"byte_end":1040994,"line_start":285,"line_end":285,"column_start":12,"column_end":23},"name":"uv_internal","qualname":"<Bidiagonal<N, R, C>>::uv_internal","value":"fn (&self) -> &MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7148},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1044463,"byte_end":1044476,"line_start":373,"line_end":373,"column_start":12,"column_end":25},"name":"bidiagonalize","qualname":"<Matrix<N, R, C, S>>::bidiagonalize","value":"fn (self) -> Bidiagonal<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the bidiagonalization using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the bidiagonalization using householder reflections.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1044386,"byte_end":1044451,"line_start":372,"line_end":372,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":20676},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1045467,"byte_end":1045475,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"Cholesky","qualname":"::linalg::cholesky::Cholesky","value":"Cholesky {  }","parent":null,"children":[{"krate":0,"index":20679}],"decl_id":null,"docs":" The Cholesky decomposition of a symmetric-definite-positive matrix.\n","sig":null,"attributes":[{"value":"/ The Cholesky decomposition of a symmetric-definite-positive matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1044980,"byte_end":1045051,"line_start":13,"line_end":13,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7180},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1046070,"byte_end":1046073,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<Cholesky<N, D>>::new","value":"fn (mut matrix: MatrixN<N, D>) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Cholesky decomposition of `matrix`.","sig":null,"attributes":[{"value":"/ Attempts to compute the Cholesky decomposition of `matrix`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1045822,"byte_end":1045885,"line_start":44,"line_end":44,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1045890,"byte_end":1045893,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the input matrix is not definite-positive. The input matrix is assumed","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1045898,"byte_end":1045990,"line_start":46,"line_end":46,"column_start":5,"column_end":97}},{"value":"/ to be symmetric and only the lower-triangular part is read.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1045995,"byte_end":1046058,"line_start":47,"line_end":47,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7181},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1047435,"byte_end":1047441,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Cholesky<N, D>>::unpack","value":"fn (mut self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly\n upper-triangular part filled with zeros.\n","sig":null,"attributes":[{"value":"/ Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1047285,"byte_end":1047374,"line_start":85,"line_end":85,"column_start":5,"column_end":94}},{"value":"/ upper-triangular part filled with zeros.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1047379,"byte_end":1047423,"line_start":86,"line_end":86,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":7182},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1047829,"byte_end":1047841,"line_start":97,"line_end":97,"column_start":12,"column_end":24},"name":"unpack_dirty","qualname":"<Cholesky<N, D>>::unpack_dirty","value":"fn (self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out\n its strict upper-triangular part.","sig":null,"attributes":[{"value":"/ Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1047553,"byte_end":1047645,"line_start":92,"line_end":92,"column_start":5,"column_end":97}},{"value":"/ its strict upper-triangular part.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1047650,"byte_end":1047687,"line_start":93,"line_end":93,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1047692,"byte_end":1047695,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ The values of the strict upper-triangular part are garbage and should be ignored by further","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1047700,"byte_end":1047795,"line_start":95,"line_end":95,"column_start":5,"column_end":100}},{"value":"/ computations.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1047800,"byte_end":1047817,"line_start":96,"line_end":96,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":7183},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1048046,"byte_end":1048047,"line_start":103,"line_end":103,"column_start":12,"column_end":13},"name":"l","qualname":"<Cholesky<N, D>>::l","value":"fn (&self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly\n uppen-triangular part filled with zeros.\n","sig":null,"attributes":[{"value":"/ Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1047896,"byte_end":1047985,"line_start":101,"line_end":101,"column_start":5,"column_end":94}},{"value":"/ uppen-triangular part filled with zeros.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1047990,"byte_end":1048034,"line_start":102,"line_end":102,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":7184},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1048446,"byte_end":1048453,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"name":"l_dirty","qualname":"<Cholesky<N, D>>::l_dirty","value":"fn (&self) -> &MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out\n its strict upper-triangular part.","sig":null,"attributes":[{"value":"/ Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1048120,"byte_end":1048212,"line_start":107,"line_end":107,"column_start":5,"column_end":97}},{"value":"/ its strict upper-triangular part.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1048217,"byte_end":1048254,"line_start":108,"line_end":108,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1048259,"byte_end":1048262,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ This is an allocation-less version of `self.l()`. The values of the strict upper-triangular","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1048267,"byte_end":1048362,"line_start":110,"line_end":110,"column_start":5,"column_end":100}},{"value":"/ part are garbage and should be ignored by further computations.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1048367,"byte_end":1048434,"line_start":111,"line_end":111,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7185},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1048663,"byte_end":1048672,"line_start":119,"line_end":119,"column_start":12,"column_end":21},"name":"solve_mut","qualname":"<Cholesky<N, D>>::solve_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.","sig":null,"attributes":[{"value":"/ Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1048511,"byte_end":1048606,"line_start":116,"line_end":116,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1048611,"byte_end":1048614,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The result is stored on `b`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1048619,"byte_end":1048651,"line_start":118,"line_end":118,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":7189},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1049094,"byte_end":1049099,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"solve","qualname":"<Cholesky<N, D>>::solve","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> MatrixMN<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Returns the solution of the system `self * x = b` where `self` is the decomposed matrix and\n `x` the unknown.\n","sig":null,"attributes":[{"value":"/ Returns the solution of the system `self * x = b` where `self` is the decomposed matrix and","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1048962,"byte_end":1049057,"line_start":128,"line_end":128,"column_start":5,"column_end":100}},{"value":"/ `x` the unknown.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1049062,"byte_end":1049082,"line_start":129,"line_end":129,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":7193},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1049483,"byte_end":1049490,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Cholesky<N, D>>::inverse","value":"fn (&self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1049421,"byte_end":1049471,"line_start":141,"line_end":141,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7194},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1049914,"byte_end":1049929,"line_start":153,"line_end":153,"column_start":12,"column_end":27},"name":"rank_one_update","qualname":"<Cholesky<N, D>>::rank_one_update","value":"fn <R2, S2> (&mut self, x: &Vector<N, R2, S2>, sigma: N::RealField) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Given the Cholesky decomposition of a matrix `M`, a scalar `sigma` and a vector `v`,\n performs a rank one update such that we end up with the decomposition of `M + sigma * (v * v.adjoint())`.\n","sig":null,"attributes":[{"value":"/ Given the Cholesky decomposition of a matrix `M`, a scalar `sigma` and a vector `v`,","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1049686,"byte_end":1049774,"line_start":150,"line_end":150,"column_start":5,"column_end":93}},{"value":"/ performs a rank one update such that we end up with the decomposition of `M + sigma * (v * v.adjoint())`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1049779,"byte_end":1049888,"line_start":151,"line_end":151,"column_start":5,"column_end":114}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1049893,"byte_end":1049902,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7197},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1050457,"byte_end":1050470,"line_start":164,"line_end":164,"column_start":12,"column_end":25},"name":"insert_column","qualname":"<Cholesky<N, D>>::insert_column","value":"fn <R2, S2> (&self, j: usize, col: Vector<N, R2, S2>) -> Cholesky<N, DimSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Updates the decomposition such that we get the decomposition of a matrix with the given column `col` in the `j`th position.\n Since the matrix is square, an identical row will be added in the `j`th row.\n","sig":null,"attributes":[{"value":"/ Updates the decomposition such that we get the decomposition of a matrix with the given column `col` in the `j`th position.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1050233,"byte_end":1050360,"line_start":162,"line_end":162,"column_start":5,"column_end":132}},{"value":"/ Since the matrix is square, an identical row will be added in the `j`th row.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1050365,"byte_end":1050445,"line_start":163,"line_end":163,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":7200},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1053529,"byte_end":1053542,"line_start":242,"line_end":242,"column_start":12,"column_end":25},"name":"remove_column","qualname":"<Cholesky<N, D>>::remove_column","value":"fn (&self, j: usize) -> Cholesky<N, DimDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Updates the decomposition such that we get the decomposition of the factored matrix with its `j`th column removed.\n Since the matrix is square, the `j`th row will also be removed.\n","sig":null,"attributes":[{"value":"/ Updates the decomposition such that we get the decomposition of the factored matrix with its `j`th column removed.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1053327,"byte_end":1053445,"line_start":240,"line_end":240,"column_start":5,"column_end":123}},{"value":"/ Since the matrix is square, the `j`th row will also be removed.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1053450,"byte_end":1053517,"line_start":241,"line_end":241,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7210},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1057612,"byte_end":1057620,"line_start":337,"line_end":337,"column_start":12,"column_end":20},"name":"cholesky","qualname":"<SquareMatrix<N, D, S>>::cholesky","value":"fn (self) -> Option<Cholesky<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Cholesky decomposition of this matrix.","sig":null,"attributes":[{"value":"/ Attempts to compute the Cholesky decomposition of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1057361,"byte_end":1057427,"line_start":333,"line_end":333,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1057432,"byte_end":1057435,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the input matrix is not definite-positive. The input matrix is assumed","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1057440,"byte_end":1057532,"line_start":335,"line_end":335,"column_start":5,"column_end":97}},{"value":"/ to be symmetric and only the lower-triangular part is read.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1057537,"byte_end":1057600,"line_start":336,"line_end":336,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7232},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1058285,"byte_end":1058298,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"name":"convolve_full","qualname":"<Vector<N, D1, S1>>::convolve_full","value":"fn <D2, S2> (&self, kernel: Vector<N, D2, S2>) -> VectorN<N, DimDiff<DimSum<D1, D2>, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the convolution of the target vector and a kernel.","sig":null,"attributes":[{"value":"/ Returns the convolution of the target vector and a kernel.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1058034,"byte_end":1058096,"line_start":10,"line_end":10,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1058101,"byte_end":1058104,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1058109,"byte_end":1058124,"line_start":12,"line_end":12,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1058129,"byte_end":1058132,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ * `kernel` - A Vector with size > 0","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1058137,"byte_end":1058176,"line_start":14,"line_end":14,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1058181,"byte_end":1058184,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1058189,"byte_end":1058201,"line_start":16,"line_end":16,"column_start":5,"column_end":17}},{"value":"/ Inputs must satisfy `vector.len() >= kernel.len() > 0`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1058206,"byte_end":1058265,"line_start":17,"line_end":17,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1058270,"byte_end":1058273,"line_start":18,"line_end":18,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7235},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1059836,"byte_end":1059850,"line_start":67,"line_end":67,"column_start":12,"column_end":26},"name":"convolve_valid","qualname":"<Vector<N, D1, S1>>::convolve_valid","value":"fn <D2, S2> (&self, kernel: Vector<N, D2, S2>) -> VectorN<N, DimDiff<DimSum<D1, U1>, D2>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the convolution of the target vector and a kernel.","sig":null,"attributes":[{"value":"/ Returns the convolution of the target vector and a kernel.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1059478,"byte_end":1059540,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1059545,"byte_end":1059548,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The output convolution consists only of those elements that do not rely on the zero-padding.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1059553,"byte_end":1059649,"line_start":58,"line_end":58,"column_start":5,"column_end":101}},{"value":"/ # Arguments","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1059654,"byte_end":1059669,"line_start":59,"line_end":59,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1059674,"byte_end":1059677,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ * `kernel` - A Vector with size > 0","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1059682,"byte_end":1059721,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1059726,"byte_end":1059729,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1059734,"byte_end":1059737,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1059742,"byte_end":1059754,"line_start":64,"line_end":64,"column_start":5,"column_end":17}},{"value":"/ Inputs must satisfy `self.len() >= kernel.len() > 0`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1059759,"byte_end":1059816,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1059821,"byte_end":1059824,"line_start":66,"line_end":66,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7238},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1061050,"byte_end":1061063,"line_start":105,"line_end":105,"column_start":12,"column_end":25},"name":"convolve_same","qualname":"<Vector<N, D1, S1>>::convolve_same","value":"fn <D2, S2> (&self, kernel: Vector<N, D2, S2>) -> VectorN<N, D1>","parent":null,"children":[],"decl_id":null,"docs":" Returns the convolution of the target vector and a kernel.","sig":null,"attributes":[{"value":"/ Returns the convolution of the target vector and a kernel.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1060702,"byte_end":1060764,"line_start":96,"line_end":96,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1060769,"byte_end":1060772,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The output convolution is the same size as vector, centered with respect to the ‘full’ output.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1060777,"byte_end":1060879,"line_start":98,"line_end":98,"column_start":5,"column_end":103}},{"value":"/ # Arguments","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1060884,"byte_end":1060899,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1060904,"byte_end":1060907,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ * `kernel` - A Vector with size > 0","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1060912,"byte_end":1060951,"line_start":101,"line_end":101,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1060956,"byte_end":1060959,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1060964,"byte_end":1060976,"line_start":103,"line_end":103,"column_start":5,"column_end":17}},{"value":"/ Inputs must satisfy `self.len() >= kernel.len() > 0`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1060981,"byte_end":1061038,"line_start":104,"line_end":104,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":7254},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/determinant.rs","byte_start":1062330,"byte_end":1062341,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"determinant","qualname":"<SquareMatrix<N, D, S>>::determinant","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the matrix determinant.","sig":null,"attributes":[{"value":"/ Computes the matrix determinant.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/determinant.rs","byte_start":1062178,"byte_end":1062214,"line_start":11,"line_end":11,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/determinant.rs","byte_start":1062219,"byte_end":1062222,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ If the matrix has a dimension larger than 3, an LU decomposition is used.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/determinant.rs","byte_start":1062227,"byte_end":1062304,"line_start":13,"line_end":13,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/determinant.rs","byte_start":1062309,"byte_end":1062318,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":20688},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1065177,"byte_end":1065186,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"FullPivLU","qualname":"::linalg::full_piv_lu::FullPivLU","value":"FullPivLU {  }","parent":null,"children":[{"krate":0,"index":20692},{"krate":0,"index":20693},{"krate":0,"index":20694}],"decl_id":null,"docs":" LU decomposition with full row and column pivoting.\n","sig":null,"attributes":[{"value":"/ LU decomposition with full row and column pivoting.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1064421,"byte_end":1064476,"line_start":14,"line_end":14,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":7283},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1066021,"byte_end":1066024,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"new","qualname":"<FullPivLU<N, R, C>>::new","value":"fn (mut matrix: MatrixMN<N, R, C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the LU decomposition with full pivoting of `matrix`.","sig":null,"attributes":[{"value":"/ Computes the LU decomposition with full pivoting of `matrix`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1065856,"byte_end":1065921,"line_start":52,"line_end":52,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1065926,"byte_end":1065929,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This effectively computes `P, L, U, Q` such that `P * matrix * Q = LU`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1065934,"byte_end":1066009,"line_start":54,"line_end":54,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":7284},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1067379,"byte_end":1067390,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"lu_internal","qualname":"<FullPivLU<N, R, C>>::lu_internal","value":"fn (&self) -> &MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7285},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1067530,"byte_end":1067531,"line_start":107,"line_end":107,"column_start":12,"column_end":13},"name":"l","qualname":"<FullPivLU<N, R, C>>::l","value":"fn (&self) -> MatrixMN<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The lower triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The lower triangular matrix of this decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1067450,"byte_end":1067504,"line_start":105,"line_end":105,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1067509,"byte_end":1067518,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7286},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1067963,"byte_end":1067964,"line_start":120,"line_end":120,"column_start":12,"column_end":13},"name":"u","qualname":"<FullPivLU<N, R, C>>::u","value":"fn (&self) -> MatrixMN<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" The upper triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The upper triangular matrix of this decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1067883,"byte_end":1067937,"line_start":118,"line_end":118,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1067942,"byte_end":1067951,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7287},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1068287,"byte_end":1068288,"line_start":130,"line_end":130,"column_start":12,"column_end":13},"name":"p","qualname":"<FullPivLU<N, R, C>>::p","value":"fn (&self) -> &PermutationSequence<DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The row permutations of this decomposition.\n","sig":null,"attributes":[{"value":"/ The row permutations of this decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1068214,"byte_end":1068261,"line_start":128,"line_end":128,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1068266,"byte_end":1068275,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7288},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1068443,"byte_end":1068444,"line_start":136,"line_end":136,"column_start":12,"column_end":13},"name":"q","qualname":"<FullPivLU<N, R, C>>::q","value":"fn (&self) -> &PermutationSequence<DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The column permutations of this decomposition.\n","sig":null,"attributes":[{"value":"/ The column permutations of this decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1068367,"byte_end":1068417,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1068422,"byte_end":1068431,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7289},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1068644,"byte_end":1068650,"line_start":142,"line_end":142,"column_start":12,"column_end":18},"name":"unpack","qualname":"<FullPivLU<N, R, C>>::unpack","value":"fn (self) -> (PermutationSequence<DimMinimum<R, C>>, MatrixMN<N, R, DimMinimum<R, C>>,\n MatrixMN<N, DimMinimum<R, C>, C>, PermutationSequence<DimMinimum<R, C>>)","parent":null,"children":[],"decl_id":null,"docs":" The two matrices of this decomposition and the row and column permutations: `(P, L, U, Q)`.\n","sig":null,"attributes":[{"value":"/ The two matrices of this decomposition and the row and column permutations: `(P, L, U, Q)`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1068523,"byte_end":1068618,"line_start":140,"line_end":140,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1068623,"byte_end":1068632,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7293},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1069478,"byte_end":1069483,"line_start":170,"line_end":170,"column_start":12,"column_end":17},"name":"solve","qualname":"<FullPivLU<N, D, D>>::solve","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1069304,"byte_end":1069391,"line_start":167,"line_end":167,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1069396,"byte_end":1069399,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the decomposed matrix is not invertible.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1069404,"byte_end":1069466,"line_start":169,"line_end":169,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":7297},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1070133,"byte_end":1070142,"line_start":191,"line_end":191,"column_start":12,"column_end":21},"name":"solve_mut","qualname":"<FullPivLU<N, D, D>>::solve_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1069894,"byte_end":1069981,"line_start":187,"line_end":187,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1069986,"byte_end":1069989,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ If the decomposed matrix is not invertible, this returns `false` and its input `b` may","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1069994,"byte_end":1070084,"line_start":189,"line_end":189,"column_start":5,"column_end":95}},{"value":"/ be overwritten with garbage.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1070089,"byte_end":1070121,"line_start":190,"line_end":190,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":7301},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1071041,"byte_end":1071052,"line_start":221,"line_end":221,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<FullPivLU<N, D, D>>::try_inverse","value":"fn (&self) -> Option<MatrixN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1070904,"byte_end":1070954,"line_start":218,"line_end":218,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1070959,"byte_end":1070962,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the decomposed matrix is not invertible.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1070967,"byte_end":1071029,"line_start":220,"line_end":220,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":7302},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1071531,"byte_end":1071544,"line_start":238,"line_end":238,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<FullPivLU<N, D, D>>::is_invertible","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if the decomposed matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Indicates if the decomposed matrix is invertible.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1071466,"byte_end":1071519,"line_start":237,"line_end":237,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":7303},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1071865,"byte_end":1071876,"line_start":249,"line_end":249,"column_start":12,"column_end":23},"name":"determinant","qualname":"<FullPivLU<N, D, D>>::determinant","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the determinant of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ Computes the determinant of the decomposed matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1071799,"byte_end":1071853,"line_start":248,"line_end":248,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7309},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1072746,"byte_end":1072757,"line_start":276,"line_end":276,"column_start":12,"column_end":23},"name":"full_piv_lu","qualname":"<Matrix<N, R, C, S>>::full_piv_lu","value":"fn (self) -> FullPivLU<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the LU decomposition with full pivoting of `matrix`.","sig":null,"attributes":[{"value":"/ Computes the LU decomposition with full pivoting of `matrix`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1072581,"byte_end":1072646,"line_start":273,"line_end":273,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1072651,"byte_end":1072654,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ This effectively computes `P, L, U, Q` such that `P * matrix * Q = LU`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1072659,"byte_end":1072734,"line_start":275,"line_end":275,"column_start":5,"column_end":80}}]},{"kind":"Mod","id":{"krate":0,"index":7310},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"givens","qualname":"::linalg::givens","value":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","parent":null,"children":[{"krate":0,"index":7311},{"krate":0,"index":7314},{"krate":0,"index":7315},{"krate":0,"index":7318},{"krate":0,"index":7321},{"krate":0,"index":7324},{"krate":0,"index":20705},{"krate":0,"index":20714},{"krate":0,"index":20711},{"krate":0,"index":20709},{"krate":0,"index":7327}],"decl_id":null,"docs":" Construction of givens rotations.\n","sig":null,"attributes":[{"value":"! Construction of givens rotations.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1072839,"byte_end":1072876,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":20705},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1073177,"byte_end":1073191,"line_start":13,"line_end":13,"column_start":12,"column_end":26},"name":"GivensRotation","qualname":"::linalg::givens::GivensRotation","value":"GivensRotation {  }","parent":null,"children":[{"krate":0,"index":20707},{"krate":0,"index":20708}],"decl_id":null,"docs":" A Givens rotation.\n","sig":null,"attributes":[{"value":"/ A Givens rotation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1073113,"byte_end":1073135,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":7329},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1073379,"byte_end":1073387,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"identity","qualname":"<GivensRotation<N>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The Givents rotation that does nothing.\n","sig":null,"attributes":[{"value":"/ The Givents rotation that does nothing.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1073324,"byte_end":1073367,"line_start":20,"line_end":20,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":7330},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1073696,"byte_end":1073709,"line_start":32,"line_end":32,"column_start":12,"column_end":25},"name":"new_unchecked","qualname":"<GivensRotation<N>>::new_unchecked","value":"fn (c: N::RealField, s: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initializes a Givens rotation from its components.","sig":null,"attributes":[{"value":"/ Initializes a Givens rotation from its components.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1073498,"byte_end":1073552,"line_start":28,"line_end":28,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1073557,"byte_end":1073560,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ The components are copies as-is. It is not checked whether they describe","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1073565,"byte_end":1073641,"line_start":30,"line_end":30,"column_start":5,"column_end":81}},{"value":"/ an actually valid Givens rotation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1073646,"byte_end":1073684,"line_start":31,"line_end":31,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":7331},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1073872,"byte_end":1073875,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<GivensRotation<N>>::new","value":"fn (c: N, s: N) -> (Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Initializes a Givens rotation from its non-normalized cosine an sine components.\n","sig":null,"attributes":[{"value":"/ Initializes a Givens rotation from its non-normalized cosine an sine components.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1073776,"byte_end":1073860,"line_start":36,"line_end":36,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7333},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1074132,"byte_end":1074139,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"try_new","qualname":"<GivensRotation<N>>::try_new","value":"fn (c: N, s: N, eps: N::RealField) -> Option<(Self, N)>","parent":null,"children":[],"decl_id":null,"docs":" Initializes a Givens rotation form its non-normalized cosine an sine components.\n","sig":null,"attributes":[{"value":"/ Initializes a Givens rotation form its non-normalized cosine an sine components.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1074036,"byte_end":1074120,"line_start":42,"line_end":42,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7334},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1074838,"byte_end":1074846,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"cancel_y","qualname":"<GivensRotation<N>>::cancel_y","value":"fn <S> (v: &Vector<N, U2, S>) -> Option<(Self, N)>","parent":null,"children":[],"decl_id":null,"docs":" Computes the rotation `R` required such that the `y` component of `R * v` is zero.","sig":null,"attributes":[{"value":"/ Computes the rotation `R` required such that the `y` component of `R * v` is zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1074526,"byte_end":1074612,"line_start":57,"line_end":57,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1074617,"byte_end":1074620,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no rotation is needed (i.e. if `v.y == 0`). Otherwise, this returns the norm","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1074625,"byte_end":1074723,"line_start":59,"line_end":59,"column_start":5,"column_end":103}},{"value":"/ of `v` and the rotation `r` such that `R * v = [ |v|, 0.0 ]^t` where `|v|` is the norm of `v`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1074728,"byte_end":1074826,"line_start":60,"line_end":60,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":7336},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1075584,"byte_end":1075592,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"cancel_x","qualname":"<GivensRotation<N>>::cancel_x","value":"fn <S> (v: &Vector<N, U2, S>) -> Option<(Self, N)>","parent":null,"children":[],"decl_id":null,"docs":" Computes the rotation `R` required such that the `x` component of `R * v` is zero.","sig":null,"attributes":[{"value":"/ Computes the rotation `R` required such that the `x` component of `R * v` is zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1075272,"byte_end":1075358,"line_start":74,"line_end":74,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1075363,"byte_end":1075366,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no rotation is needed (i.e. if `v.x == 0`). Otherwise, this returns the norm","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1075371,"byte_end":1075469,"line_start":76,"line_end":76,"column_start":5,"column_end":103}},{"value":"/ of `v` and the rotation `r` such that `R * v = [ 0.0, |v| ]^t` where `|v|` is the norm of `v`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1075474,"byte_end":1075572,"line_start":77,"line_end":77,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":7338},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1076079,"byte_end":1076080,"line_start":92,"line_end":92,"column_start":12,"column_end":13},"name":"c","qualname":"<GivensRotation<N>>::c","value":"fn (&self) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" The cos part of this roration.\n","sig":null,"attributes":[{"value":"/ The cos part of this roration.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1076033,"byte_end":1076067,"line_start":91,"line_end":91,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7339},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1076178,"byte_end":1076179,"line_start":97,"line_end":97,"column_start":12,"column_end":13},"name":"s","qualname":"<GivensRotation<N>>::s","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The sin part of this roration.\n","sig":null,"attributes":[{"value":"/ The sin part of this roration.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1076132,"byte_end":1076166,"line_start":96,"line_end":96,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7340},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1076272,"byte_end":1076279,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"inverse","qualname":"<GivensRotation<N>>::inverse","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The inverse of this givens rotation.\n","sig":null,"attributes":[{"value":"/ The inverse of this givens rotation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1076220,"byte_end":1076260,"line_start":101,"line_end":101,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":7341},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1076452,"byte_end":1076458,"line_start":110,"line_end":110,"column_start":12,"column_end":18},"name":"rotate","qualname":"<GivensRotation<N>>::rotate","value":"fn <R2, C2, S2> (&self, rhs: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs the multiplication `rhs = self * rhs` in-place.\n","sig":null,"attributes":[{"value":"/ Performs the multiplication `rhs = self * rhs` in-place.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1076380,"byte_end":1076440,"line_start":109,"line_end":109,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":7345},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1077238,"byte_end":1077249,"line_start":136,"line_end":136,"column_start":12,"column_end":23},"name":"rotate_rows","qualname":"<GivensRotation<N>>::rotate_rows","value":"fn <R2, C2, S2> (&self, lhs: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs the multiplication `lhs = lhs * self` in-place.\n","sig":null,"attributes":[{"value":"/ Performs the multiplication `lhs = lhs * self` in-place.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1077166,"byte_end":1077226,"line_start":135,"line_end":135,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":20717},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1079052,"byte_end":1079062,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"name":"Hessenberg","qualname":"::linalg::hessenberg::Hessenberg","value":"Hessenberg {  }","parent":null,"children":[{"krate":0,"index":20720},{"krate":0,"index":20721}],"decl_id":null,"docs":" Hessenberg decomposition of a general matrix.\n","sig":null,"attributes":[{"value":"/ Hessenberg decomposition of a general matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1078362,"byte_end":1078411,"line_start":12,"line_end":12,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7370},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1079696,"byte_end":1079699,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<Hessenberg<N, D>>::new","value":"fn (hess: MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Hessenberg decomposition using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the Hessenberg decomposition using householder reflections.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1079612,"byte_end":1079684,"line_start":49,"line_end":49,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":7371},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1080100,"byte_end":1080118,"line_start":59,"line_end":59,"column_start":12,"column_end":30},"name":"new_with_workspace","qualname":"<Hessenberg<N, D>>::new_with_workspace","value":"fn (mut hess: MatrixN<N, D>, work: &mut VectorN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Hessenberg decomposition using householder reflections.","sig":null,"attributes":[{"value":"/ Computes the Hessenberg decomposition using householder reflections.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1079888,"byte_end":1079960,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1079965,"byte_end":1079968,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The workspace containing `D` elements must be provided but its content does not have to be","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1079973,"byte_end":1080067,"line_start":57,"line_end":57,"column_start":5,"column_end":99}},{"value":"/ initialized.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1080072,"byte_end":1080088,"line_start":58,"line_end":58,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":7372},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1081149,"byte_end":1081155,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Hessenberg<N, D>>::unpack","value":"fn (self) -> (MatrixN<N, D>, MatrixN<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieves `(q, h)` with `q` the orthogonal matrix of this decomposition and `h` the\n hessenberg matrix.\n","sig":null,"attributes":[{"value":"/ Retrieves `(q, h)` with `q` the orthogonal matrix of this decomposition and `h` the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1081009,"byte_end":1081096,"line_start":90,"line_end":90,"column_start":5,"column_end":92}},{"value":"/ hessenberg matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1081101,"byte_end":1081123,"line_start":91,"line_end":91,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1081128,"byte_end":1081137,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7373},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1081363,"byte_end":1081371,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"unpack_h","qualname":"<Hessenberg<N, D>>::unpack_h","value":"fn (mut self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `H` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `H` of this decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1081265,"byte_end":1081337,"line_start":99,"line_end":99,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1081342,"byte_end":1081351,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7375},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1081912,"byte_end":1081913,"line_start":115,"line_end":115,"column_start":12,"column_end":13},"name":"h","qualname":"<Hessenberg<N, D>>::h","value":"fn (&self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `H` of this decomposition.","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `H` of this decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1081726,"byte_end":1081798,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1081803,"byte_end":1081806,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This is less efficient than `.unpack_h()` as it allocates a new matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1081811,"byte_end":1081886,"line_start":113,"line_end":113,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1081891,"byte_end":1081900,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7377},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1082302,"byte_end":1082303,"line_start":125,"line_end":125,"column_start":12,"column_end":13},"name":"q","qualname":"<Hessenberg<N, D>>::q","value":"fn (&self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `Q` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `Q` of this decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1082229,"byte_end":1082290,"line_start":124,"line_end":124,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":7378},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1082436,"byte_end":1082449,"line_start":130,"line_end":130,"column_start":12,"column_end":25},"name":"hess_internal","qualname":"<Hessenberg<N, D>>::hess_internal","value":"fn (&self) -> &MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7383},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1082787,"byte_end":1082797,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"hessenberg","qualname":"<SquareMatrix<N, D, S>>::hessenberg","value":"fn (self) -> Hessenberg<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the Hessenberg decomposition of this matrix using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the Hessenberg decomposition of this matrix using householder reflections.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1082688,"byte_end":1082775,"line_start":139,"line_end":139,"column_start":5,"column_end":92}}]},{"kind":"Mod","id":{"krate":0,"index":7384},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/householder.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"householder","qualname":"::linalg::householder","value":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/householder.rs","parent":null,"children":[{"krate":0,"index":7385},{"krate":0,"index":7386},{"krate":0,"index":7393},{"krate":0,"index":7394},{"krate":0,"index":7397},{"krate":0,"index":7398},{"krate":0,"index":7399},{"krate":0,"index":7400},{"krate":0,"index":7404},{"krate":0,"index":7408},{"krate":0,"index":7412}],"decl_id":null,"docs":" Construction of householder elementary reflections.\n","sig":null,"attributes":[{"value":"! Construction of householder elementary reflections.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/householder.rs","byte_start":1082878,"byte_end":1082933,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":7400},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/householder.rs","byte_start":1083537,"byte_end":1083556,"line_start":19,"line_end":19,"column_start":8,"column_end":27},"name":"reflection_axis_mut","qualname":"::linalg::householder::reflection_axis_mut","value":"fn <N, D, S> (column: &mut Vector<N, D, S>) -> (N, bool)","parent":null,"children":[],"decl_id":null,"docs":" Replaces `column` by the axis of the householder reflection that transforms `column` into\n `(+/-|column|, 0, ..., 0)`.","sig":null,"attributes":[{"value":"/ Replaces `column` by the axis of the householder reflection that transforms `column` into","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/householder.rs","byte_start":1083200,"byte_end":1083293,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"/ `(+/-|column|, 0, ..., 0)`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/householder.rs","byte_start":1083294,"byte_end":1083325,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/householder.rs","byte_start":1083326,"byte_end":1083329,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The unit-length axis is output to `column`. Returns what would be the first component of","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/householder.rs","byte_start":1083330,"byte_end":1083422,"line_start":15,"line_end":15,"column_start":1,"column_end":93}},{"value":"/ `column` after reflection and `false` if no reflection was necessary.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/householder.rs","byte_start":1083423,"byte_end":1083496,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"inline(always)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/householder.rs","byte_start":1083512,"byte_end":1083529,"line_start":18,"line_end":18,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":7404},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/householder.rs","byte_start":1084438,"byte_end":1084460,"line_start":47,"line_end":47,"column_start":8,"column_end":30},"name":"clear_column_unchecked","qualname":"::linalg::householder::clear_column_unchecked","value":"fn <N, R, C> (matrix: &mut MatrixMN<N, R, C>, diag_elt: &mut N, icol: usize, shift: usize, bilateral: Option<&mut VectorN<N, R>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Uses an householder reflection to zero out the `icol`-th column, starting with the `shift + 1`-th\n subdiagonal element.\n","sig":null,"attributes":[{"value":"/ Uses an householder reflection to zero out the `icol`-th column, starting with the `shift + 1`-th","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/householder.rs","byte_start":1084289,"byte_end":1084390,"line_start":44,"line_end":44,"column_start":1,"column_end":102}},{"value":"/ subdiagonal element.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/householder.rs","byte_start":1084391,"byte_end":1084415,"line_start":45,"line_end":45,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":7408},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/householder.rs","byte_start":1085454,"byte_end":1085473,"line_start":75,"line_end":75,"column_start":8,"column_end":27},"name":"clear_row_unchecked","qualname":"::linalg::householder::clear_row_unchecked","value":"fn <N, R, C> (matrix: &mut MatrixMN<N, R, C>, diag_elt: &mut N, axis_packed: &mut VectorN<N, C>, work: &mut VectorN<N, R>, irow: usize, shift: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Uses an householder reflection to zero out the `irow`-th row, ending before the `shift + 1`-th\n superdiagonal element.\n","sig":null,"attributes":[{"value":"/ Uses an householder reflection to zero out the `irow`-th row, ending before the `shift + 1`-th","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/householder.rs","byte_start":1085306,"byte_end":1085404,"line_start":72,"line_end":72,"column_start":1,"column_end":99}},{"value":"/ superdiagonal element.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/householder.rs","byte_start":1085405,"byte_end":1085431,"line_start":73,"line_end":73,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":7412},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/householder.rs","byte_start":1086802,"byte_end":1086812,"line_start":111,"line_end":111,"column_start":8,"column_end":18},"name":"assemble_q","qualname":"::linalg::householder::assemble_q","value":"fn <N, D> (m: &MatrixN<N, D>, signs: &[N]) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal transformation described by the elementary reflector axii stored on\n the lower-diagonal element of the given matrix.\n matrices.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal transformation described by the elementary reflector axii stored on","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/householder.rs","byte_start":1086618,"byte_end":1086713,"line_start":107,"line_end":107,"column_start":1,"column_end":96}},{"value":"/ the lower-diagonal element of the given matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/householder.rs","byte_start":1086714,"byte_end":1086765,"line_start":108,"line_end":108,"column_start":1,"column_end":52}},{"value":"/ matrices.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/householder.rs","byte_start":1086766,"byte_end":1086779,"line_start":109,"line_end":109,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7431},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/inverse.rs","byte_start":1087947,"byte_end":1087958,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<SquareMatrix<N, D, S>>::try_inverse","value":"fn (self) -> Option<MatrixN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to invert this matrix.\n","sig":null,"attributes":[{"value":"/ Attempts to invert this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/inverse.rs","byte_start":1087827,"byte_end":1087862,"line_start":11,"line_end":11,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/inverse.rs","byte_start":1087867,"byte_end":1087876,"line_start":12,"line_end":12,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use try_inverse_mut()?\"","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/inverse.rs","byte_start":1087881,"byte_end":1087935,"line_start":13,"line_end":13,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7436},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/inverse.rs","byte_start":1088424,"byte_end":1088439,"line_start":31,"line_end":31,"column_start":12,"column_end":27},"name":"try_inverse_mut","qualname":"<SquareMatrix<N, D, S>>::try_inverse_mut","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Attempts to invert this matrix in-place. Returns `false` and leaves `self` untouched if\n inversion fails.\n","sig":null,"attributes":[{"value":"/ Attempts to invert this matrix in-place. Returns `false` and leaves `self` untouched if","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/inverse.rs","byte_start":1088282,"byte_end":1088373,"line_start":28,"line_end":28,"column_start":5,"column_end":96}},{"value":"/ inversion fails.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/inverse.rs","byte_start":1088378,"byte_end":1088398,"line_start":29,"line_end":29,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/inverse.rs","byte_start":1088403,"byte_end":1088412,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":20730},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1096715,"byte_end":1096717,"line_start":31,"line_end":31,"column_start":12,"column_end":14},"name":"LU","qualname":"::linalg::lu::LU","value":"LU {  }","parent":null,"children":[{"krate":0,"index":20734},{"krate":0,"index":20735}],"decl_id":null,"docs":" LU decomposition with partial (row) pivoting.\n","sig":null,"attributes":[{"value":"/ LU decomposition with partial (row) pivoting.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1095965,"byte_end":1096014,"line_start":14,"line_end":14,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":7470},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1097354,"byte_end":1097367,"line_start":50,"line_end":50,"column_start":8,"column_end":21},"name":"try_invert_to","qualname":"::linalg::lu::try_invert_to","value":"fn <N, D, S> (mut matrix: MatrixN<N, D>, out: &mut Matrix<N, D, D, S>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Performs a LU decomposition to overwrite `out` with the inverse of `matrix`.","sig":null,"attributes":[{"value":"/ Performs a LU decomposition to overwrite `out` with the inverse of `matrix`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1097171,"byte_end":1097251,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1097252,"byte_end":1097255,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ If `matrix` is not invertible, `false` is returned and `out` may contain invalid data.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1097256,"byte_end":1097346,"line_start":49,"line_end":49,"column_start":1,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":7478},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1098521,"byte_end":1098524,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"new","qualname":"<LU<N, R, C>>::new","value":"fn (mut matrix: MatrixMN<N, R, C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the LU decomposition with partial (row) pivoting of `matrix`.\n","sig":null,"attributes":[{"value":"/ Computes the LU decomposition with partial (row) pivoting of `matrix`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1098435,"byte_end":1098509,"line_start":91,"line_end":91,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":7479},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1099480,"byte_end":1099491,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"lu_internal","qualname":"<LU<N, R, C>>::lu_internal","value":"fn (&self) -> &MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7480},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1099631,"byte_end":1099632,"line_start":130,"line_end":130,"column_start":12,"column_end":13},"name":"l","qualname":"<LU<N, R, C>>::l","value":"fn (&self) -> MatrixMN<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The lower triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The lower triangular matrix of this decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1099551,"byte_end":1099605,"line_start":128,"line_end":128,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1099610,"byte_end":1099619,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7482},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1100590,"byte_end":1100598,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"l_unpack","qualname":"<LU<N, R, C>>::l_unpack","value":"fn (self) -> MatrixMN<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The lower triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The lower triangular matrix of this decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1100510,"byte_end":1100564,"line_start":158,"line_end":158,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1100569,"byte_end":1100578,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7483},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1101038,"byte_end":1101039,"line_start":173,"line_end":173,"column_start":12,"column_end":13},"name":"u","qualname":"<LU<N, R, C>>::u","value":"fn (&self) -> MatrixMN<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" The upper triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The upper triangular matrix of this decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1100958,"byte_end":1101012,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1101017,"byte_end":1101026,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7484},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1101362,"byte_end":1101363,"line_start":183,"line_end":183,"column_start":12,"column_end":13},"name":"p","qualname":"<LU<N, R, C>>::p","value":"fn (&self) -> &PermutationSequence<DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The row permutations of this decomposition.\n","sig":null,"attributes":[{"value":"/ The row permutations of this decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1101289,"byte_end":1101336,"line_start":181,"line_end":181,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1101341,"byte_end":1101350,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7485},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1101556,"byte_end":1101562,"line_start":189,"line_end":189,"column_start":12,"column_end":18},"name":"unpack","qualname":"<LU<N, R, C>>::unpack","value":"fn (self) -> (PermutationSequence<DimMinimum<R, C>>, MatrixMN<N, R, DimMinimum<R, C>>,\n MatrixMN<N, DimMinimum<R, C>, C>)","parent":null,"children":[],"decl_id":null,"docs":" The row permutations and two triangular matrices of this decomposition: `(P, L, U)`.\n","sig":null,"attributes":[{"value":"/ The row permutations and two triangular matrices of this decomposition: `(P, L, U)`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1101442,"byte_end":1101530,"line_start":187,"line_end":187,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1101535,"byte_end":1101544,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7489},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1102357,"byte_end":1102362,"line_start":216,"line_end":216,"column_start":12,"column_end":17},"name":"solve","qualname":"<LU<N, D, D>>::solve","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1102198,"byte_end":1102285,"line_start":213,"line_end":213,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1102290,"byte_end":1102293,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self` is not invertible.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1102298,"byte_end":1102345,"line_start":215,"line_end":215,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":7493},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1103012,"byte_end":1103021,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"solve_mut","qualname":"<LU<N, D, D>>::solve_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1102773,"byte_end":1102860,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1102865,"byte_end":1102868,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ If the decomposed matrix is not invertible, this returns `false` and its input `b` may","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1102873,"byte_end":1102963,"line_start":235,"line_end":235,"column_start":5,"column_end":95}},{"value":"/ be overwritten with garbage.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1102968,"byte_end":1103000,"line_start":236,"line_end":236,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":7497},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1103737,"byte_end":1103748,"line_start":260,"line_end":260,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<LU<N, D, D>>::try_inverse","value":"fn (&self) -> Option<MatrixN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1103611,"byte_end":1103661,"line_start":257,"line_end":257,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1103666,"byte_end":1103669,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the matrix is not invertible.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1103674,"byte_end":1103725,"line_start":259,"line_end":259,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":7498},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1104385,"byte_end":1104399,"line_start":279,"line_end":279,"column_start":12,"column_end":26},"name":"try_inverse_to","qualname":"<LU<N, D, D>>::try_inverse_to","value":"fn <S2> (&self, out: &mut Matrix<N, D, D, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix and outputs the result to `out`.","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix and outputs the result to `out`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1104159,"byte_end":1104241,"line_start":275,"line_end":275,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1104246,"byte_end":1104249,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ If the decomposed matrix is not invertible, this returns `false` and `out` may be","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1104254,"byte_end":1104339,"line_start":277,"line_end":277,"column_start":5,"column_end":90}},{"value":"/ overwritten with garbage.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1104344,"byte_end":1104373,"line_start":278,"line_end":278,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":7500},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1104877,"byte_end":1104888,"line_start":294,"line_end":294,"column_start":12,"column_end":23},"name":"determinant","qualname":"<LU<N, D, D>>::determinant","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the determinant of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ Computes the determinant of the decomposed matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1104811,"byte_end":1104865,"line_start":293,"line_end":293,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7501},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1105330,"byte_end":1105343,"line_start":310,"line_end":310,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<LU<N, D, D>>::is_invertible","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if the decomposed matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Indicates if the decomposed matrix is invertible.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1105265,"byte_end":1105318,"line_start":309,"line_end":309,"column_start":5,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":7502},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1105831,"byte_end":1105841,"line_start":329,"line_end":329,"column_start":8,"column_end":18},"name":"gauss_step","qualname":"::linalg::lu::gauss_step","value":"fn <N, R, C, S> (matrix: &mut Matrix<N, R, C, S>, diag: N, i: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Executes one step of gaussian elimination on the i-th row and column of `matrix`. The diagonal\n element `matrix[(i, i)]` is provided as argument.\n","sig":null,"attributes":[{"value":"/ Executes one step of gaussian elimination on the i-th row and column of `matrix`. The diagonal","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1105671,"byte_end":1105769,"line_start":327,"line_end":327,"column_start":1,"column_end":99}},{"value":"/ element `matrix[(i, i)]` is provided as argument.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1105770,"byte_end":1105823,"line_start":328,"line_end":328,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":7507},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1106644,"byte_end":1106659,"line_start":354,"line_end":354,"column_start":8,"column_end":23},"name":"gauss_step_swap","qualname":"::linalg::lu::gauss_step_swap","value":"fn <N, R, C, S> (matrix: &mut Matrix<N, R, C, S>, diag: N, i: usize, piv: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Swaps the rows `i` with the row `piv` and executes one step of gaussian elimination on the i-th\n row and column of `matrix`. The diagonal element `matrix[(i, i)]` is provided as argument.\n","sig":null,"attributes":[{"value":"/ Swaps the rows `i` with the row `piv` and executes one step of gaussian elimination on the i-th","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1106442,"byte_end":1106541,"line_start":352,"line_end":352,"column_start":1,"column_end":100}},{"value":"/ row and column of `matrix`. The diagonal element `matrix[(i, i)]` is provided as argument.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1106542,"byte_end":1106636,"line_start":353,"line_end":353,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":7517},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1107671,"byte_end":1107673,"line_start":388,"line_end":388,"column_start":12,"column_end":14},"name":"lu","qualname":"<Matrix<N, R, C, S>>::lu","value":"fn (self) -> LU<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the LU decomposition with partial (row) pivoting of `matrix`.\n","sig":null,"attributes":[{"value":"/ Computes the LU decomposition with partial (row) pivoting of `matrix`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1107585,"byte_end":1107659,"line_start":387,"line_end":387,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":20746},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1108622,"byte_end":1108641,"line_start":27,"line_end":27,"column_start":12,"column_end":31},"name":"PermutationSequence","qualname":"::linalg::permutation_sequence::PermutationSequence","value":"PermutationSequence {  }","parent":null,"children":[{"krate":0,"index":20748},{"krate":0,"index":20749}],"decl_id":null,"docs":" A sequence of row or column permutations.\n","sig":null,"attributes":[{"value":"/ A sequence of row or column permutations.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1108109,"byte_end":1108154,"line_start":14,"line_end":14,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":7537},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1109120,"byte_end":1109128,"line_start":48,"line_end":48,"column_start":12,"column_end":20},"name":"identity","qualname":"<PermutationSequence<D>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new statically-allocated sequence of `D` identity permutations.\n","sig":null,"attributes":[{"value":"/ Creates a new statically-allocated sequence of `D` identity permutations.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1109017,"byte_end":1109094,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1109099,"byte_end":1109108,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7539},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1109448,"byte_end":1109456,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"identity","qualname":"<PermutationSequence<Dynamic>>::identity","value":"fn (n: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new dynamically-allocated sequence of `n` identity permutations.\n","sig":null,"attributes":[{"value":"/ Creates a new dynamically-allocated sequence of `n` identity permutations.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1109344,"byte_end":1109422,"line_start":58,"line_end":58,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1109427,"byte_end":1109436,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7542},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1109714,"byte_end":1109730,"line_start":71,"line_end":71,"column_start":12,"column_end":28},"name":"identity_generic","qualname":"<PermutationSequence<D>>::identity_generic","value":"fn (dim: D) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sequence of D identity permutations.\n","sig":null,"attributes":[{"value":"/ Creates a new sequence of D identity permutations.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1109634,"byte_end":1109688,"line_start":69,"line_end":69,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1109693,"byte_end":1109702,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7543},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1110060,"byte_end":1110078,"line_start":83,"line_end":83,"column_start":12,"column_end":30},"name":"append_permutation","qualname":"<PermutationSequence<D>>::append_permutation","value":"fn (&mut self, i: usize, i2: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds the interchange of the row (or column) `i` with the row (or column) `i2` to this\n sequence of permutations.\n","sig":null,"attributes":[{"value":"/ Adds the interchange of the row (or column) `i` with the row (or column) `i2` to this","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1109911,"byte_end":1110000,"line_start":80,"line_end":80,"column_start":5,"column_end":94}},{"value":"/ sequence of permutations.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1110005,"byte_end":1110034,"line_start":81,"line_end":81,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1110039,"byte_end":1110048,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7544},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1110453,"byte_end":1110465,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"name":"permute_rows","qualname":"<PermutationSequence<D>>::permute_rows","value":"fn <N, R2, C2, S2> (&self, rhs: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies this sequence of permutations to the rows of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies this sequence of permutations to the rows of `rhs`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1110364,"byte_end":1110427,"line_start":94,"line_end":94,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1110432,"byte_end":1110441,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7549},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1110806,"byte_end":1110822,"line_start":107,"line_end":107,"column_start":12,"column_end":28},"name":"inv_permute_rows","qualname":"<PermutationSequence<D>>::inv_permute_rows","value":"fn <N, R2, C2, S2> (&self, rhs: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies this sequence of permutations in reverse to the rows of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies this sequence of permutations in reverse to the rows of `rhs`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1110706,"byte_end":1110780,"line_start":105,"line_end":105,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1110785,"byte_end":1110794,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7554},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1111181,"byte_end":1111196,"line_start":119,"line_end":119,"column_start":12,"column_end":27},"name":"permute_columns","qualname":"<PermutationSequence<D>>::permute_columns","value":"fn <N, R2, C2, S2> (&self, rhs: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies this sequence of permutations to the columns of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies this sequence of permutations to the columns of `rhs`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1111089,"byte_end":1111155,"line_start":117,"line_end":117,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1111160,"byte_end":1111169,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7559},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1111543,"byte_end":1111562,"line_start":130,"line_end":130,"column_start":12,"column_end":31},"name":"inv_permute_columns","qualname":"<PermutationSequence<D>>::inv_permute_columns","value":"fn <N, R2, C2, S2> (&self, rhs: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies this sequence of permutations in reverse to the columns of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies this sequence of permutations in reverse to the columns of `rhs`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1111440,"byte_end":1111517,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1111522,"byte_end":1111531,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7564},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1111932,"byte_end":1111935,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"len","qualname":"<PermutationSequence<D>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of non-identity permutations applied by this sequence.\n","sig":null,"attributes":[{"value":"/ The number of non-identity permutations applied by this sequence.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1111851,"byte_end":1111920,"line_start":142,"line_end":142,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":7565},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1112076,"byte_end":1112087,"line_start":149,"line_end":149,"column_start":12,"column_end":23},"name":"determinant","qualname":"<PermutationSequence<D>>::determinant","value":"fn <N> (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The determinant of the matrix corresponding to this permutation.\n","sig":null,"attributes":[{"value":"/ The determinant of the matrix corresponding to this permutation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1111982,"byte_end":1112050,"line_start":147,"line_end":147,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1112055,"byte_end":1112064,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":20756},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1113406,"byte_end":1113408,"line_start":32,"line_end":32,"column_start":12,"column_end":14},"name":"QR","qualname":"::linalg::qr::QR","value":"QR {  }","parent":null,"children":[{"krate":0,"index":20760},{"krate":0,"index":20761}],"decl_id":null,"docs":" The QR decomposition of a general matrix.\n","sig":null,"attributes":[{"value":"/ The QR decomposition of a general matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1112704,"byte_end":1112749,"line_start":15,"line_end":15,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":7601},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1114058,"byte_end":1114061,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<QR<N, R, C>>::new","value":"fn (mut matrix: MatrixMN<N, R, C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the QR decomposition using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the QR decomposition using householder reflections.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1113982,"byte_end":1114046,"line_start":52,"line_end":52,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":7602},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1114774,"byte_end":1114775,"line_start":78,"line_end":78,"column_start":12,"column_end":13},"name":"r","qualname":"<QR<N, R, C>>::r","value":"fn (&self) -> MatrixMN<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `R` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `R` of this decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1114676,"byte_end":1114748,"line_start":76,"line_end":76,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1114753,"byte_end":1114762,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7604},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1115306,"byte_end":1115314,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"unpack_r","qualname":"<QR<N, R, C>>::unpack_r","value":"fn (self) -> MatrixMN<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `R` of this decomposition.","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `R` of this decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1115139,"byte_end":1115211,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1115216,"byte_end":1115219,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ This is usually faster than `r` but consumes `self`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1115224,"byte_end":1115280,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1115285,"byte_end":1115294,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7606},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1115805,"byte_end":1115806,"line_start":104,"line_end":104,"column_start":12,"column_end":13},"name":"q","qualname":"<QR<N, R, C>>::q","value":"fn (&self) -> MatrixMN<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `Q` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `Q` of this decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1115732,"byte_end":1115793,"line_start":103,"line_end":103,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":7607},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1116717,"byte_end":1116723,"line_start":128,"line_end":128,"column_start":12,"column_end":18},"name":"unpack","qualname":"<QR<N, R, C>>::unpack","value":"fn (self) -> (MatrixMN<N, R, DimMinimum<R, C>>, MatrixMN<N, DimMinimum<R, C>, C>)","parent":null,"children":[],"decl_id":null,"docs":" Unpacks this decomposition into its two matrix factors.\n","sig":null,"attributes":[{"value":"/ Unpacks this decomposition into its two matrix factors.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1116646,"byte_end":1116705,"line_start":127,"line_end":127,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":7608},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1117110,"byte_end":1117121,"line_start":143,"line_end":143,"column_start":12,"column_end":23},"name":"qr_internal","qualname":"<QR<N, R, C>>::qr_internal","value":"fn (&self) -> &MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7609},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1117285,"byte_end":1117293,"line_start":148,"line_end":148,"column_start":12,"column_end":20},"name":"q_tr_mul","qualname":"<QR<N, R, C>>::q_tr_mul","value":"fn <R2, C2, S2> (&self, rhs: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Multiplies the provided matrix by the transpose of the `Q` matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ Multiplies the provided matrix by the transpose of the `Q` matrix of this decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1117181,"byte_end":1117273,"line_start":147,"line_end":147,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":7616},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1118127,"byte_end":1118132,"line_start":172,"line_end":172,"column_start":12,"column_end":17},"name":"solve","qualname":"<QR<N, D, D>>::solve","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1117968,"byte_end":1118055,"line_start":169,"line_end":169,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1118060,"byte_end":1118063,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self` is not invertible.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1118068,"byte_end":1118115,"line_start":171,"line_end":171,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":7620},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1118779,"byte_end":1118788,"line_start":194,"line_end":194,"column_start":12,"column_end":21},"name":"solve_mut","qualname":"<QR<N, D, D>>::solve_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1118544,"byte_end":1118631,"line_start":190,"line_end":190,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1118636,"byte_end":1118639,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ If the decomposed matrix is not invertible, this returns `false` and its input `b` is","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1118644,"byte_end":1118733,"line_start":192,"line_end":192,"column_start":5,"column_end":94}},{"value":"/ overwritten with garbage.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1118738,"byte_end":1118767,"line_start":193,"line_end":193,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":7628},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1120377,"byte_end":1120388,"line_start":251,"line_end":251,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<QR<N, D, D>>::try_inverse","value":"fn (&self) -> Option<MatrixN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1120240,"byte_end":1120290,"line_start":248,"line_end":248,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1120295,"byte_end":1120298,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the decomposed matrix is not invertible.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1120303,"byte_end":1120365,"line_start":250,"line_end":250,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":7629},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1120909,"byte_end":1120922,"line_start":269,"line_end":269,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<QR<N, D, D>>::is_invertible","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if the decomposed matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Indicates if the decomposed matrix is invertible.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1120844,"byte_end":1120897,"line_start":268,"line_end":268,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":7635},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1121930,"byte_end":1121932,"line_start":303,"line_end":303,"column_start":12,"column_end":14},"name":"qr","qualname":"<Matrix<N, R, C, S>>::qr","value":"fn (self) -> QR<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the QR decomposition of this matrix.\n","sig":null,"attributes":[{"value":"/ Computes the QR decomposition of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1121869,"byte_end":1121918,"line_start":302,"line_end":302,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":20772},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1123118,"byte_end":1123123,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"Schur","qualname":"::linalg::schur::Schur","value":"Schur {  }","parent":null,"children":[{"krate":0,"index":20775},{"krate":0,"index":20776}],"decl_id":null,"docs":" Schur decomposition of a square matrix.","sig":null,"attributes":[{"value":"/ Schur decomposition of a square matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1122573,"byte_end":1122616,"line_start":19,"line_end":19,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1122617,"byte_end":1122620,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If this is a real matrix, this will be a RealField Schur decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1122621,"byte_end":1122696,"line_start":21,"line_end":21,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":7671},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1123684,"byte_end":1123687,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Schur<N, D>>::new","value":"fn (m: MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Schur decomposition of a square matrix.\n","sig":null,"attributes":[{"value":"/ Computes the Schur decomposition of a square matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1123616,"byte_end":1123672,"line_start":57,"line_end":57,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":7672},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1124368,"byte_end":1124375,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"try_new","qualname":"<Schur<N, D>>::try_new","value":"fn (m: MatrixN<N, D>, eps: N::RealField, max_niter: usize) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Schur decomposition of a square matrix.","sig":null,"attributes":[{"value":"/ Attempts to compute the Schur decomposition of a square matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1123797,"byte_end":1123864,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1123869,"byte_end":1123872,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ If only eigenvalues are needed, it is more efficient to call the matrix method","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1123877,"byte_end":1123959,"line_start":64,"line_end":64,"column_start":5,"column_end":87}},{"value":"/ `.eigenvalues()` instead.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1123964,"byte_end":1123993,"line_start":65,"line_end":65,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1123998,"byte_end":1124001,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1124006,"byte_end":1124021,"line_start":67,"line_end":67,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1124026,"byte_end":1124029,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1124034,"byte_end":1124112,"line_start":69,"line_end":69,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1124117,"byte_end":1124209,"line_start":70,"line_end":70,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1124214,"byte_end":1124306,"line_start":71,"line_end":71,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1124311,"byte_end":1124356,"line_start":72,"line_end":72,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7678},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1134282,"byte_end":1134288,"line_start":375,"line_end":375,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Schur<N, D>>::unpack","value":"fn (self) -> (MatrixN<N, D>, MatrixN<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the unitary matrix `Q` and the upper-quasitriangular matrix `T` such that the\n decomposed matrix equals `Q * T * Q.transpose()`.\n","sig":null,"attributes":[{"value":"/ Retrieves the unitary matrix `Q` and the upper-quasitriangular matrix `T` such that the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1134121,"byte_end":1134212,"line_start":373,"line_end":373,"column_start":5,"column_end":96}},{"value":"/ decomposed matrix equals `Q * T * Q.transpose()`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1134217,"byte_end":1134270,"line_start":374,"line_end":374,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":7679},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1134501,"byte_end":1134512,"line_start":382,"line_end":382,"column_start":12,"column_end":23},"name":"eigenvalues","qualname":"<Schur<N, D>>::eigenvalues","value":"fn (&self) -> Option<VectorN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the real eigenvalues of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the real eigenvalues of the decomposed matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1134367,"byte_end":1134426,"line_start":379,"line_end":379,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1134431,"byte_end":1134434,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Return `None` if some eigenvalues are complex.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1134439,"byte_end":1134489,"line_start":381,"line_end":381,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7680},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1134847,"byte_end":1134866,"line_start":392,"line_end":392,"column_start":12,"column_end":31},"name":"complex_eigenvalues","qualname":"<Schur<N, D>>::complex_eigenvalues","value":"fn (&self) -> VectorN<NumComplex<N>, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the complex eigenvalues of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ Computes the complex eigenvalues of the decomposed matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1134773,"byte_end":1134835,"line_start":391,"line_end":391,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":7695},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1138344,"byte_end":1138349,"line_start":502,"line_end":502,"column_start":12,"column_end":17},"name":"schur","qualname":"<SquareMatrix<N, D, S>>::schur","value":"fn (self) -> Schur<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the Schur decomposition of a square matrix.\n","sig":null,"attributes":[{"value":"/ Computes the Schur decomposition of a square matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1138276,"byte_end":1138332,"line_start":501,"line_end":501,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":7696},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1138993,"byte_end":1139002,"line_start":517,"line_end":517,"column_start":12,"column_end":21},"name":"try_schur","qualname":"<SquareMatrix<N, D, S>>::try_schur","value":"fn (self, eps: N::RealField, max_niter: usize) -> Option<Schur<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Schur decomposition of a square matrix.","sig":null,"attributes":[{"value":"/ Attempts to compute the Schur decomposition of a square matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1138422,"byte_end":1138489,"line_start":506,"line_end":506,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1138494,"byte_end":1138497,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ If only eigenvalues are needed, it is more efficient to call the matrix method","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1138502,"byte_end":1138584,"line_start":508,"line_end":508,"column_start":5,"column_end":87}},{"value":"/ `.eigenvalues()` instead.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1138589,"byte_end":1138618,"line_start":509,"line_end":509,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1138623,"byte_end":1138626,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1138631,"byte_end":1138646,"line_start":511,"line_end":511,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1138651,"byte_end":1138654,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1138659,"byte_end":1138737,"line_start":513,"line_end":513,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1138742,"byte_end":1138834,"line_start":514,"line_end":514,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1138839,"byte_end":1138931,"line_start":515,"line_end":515,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1138936,"byte_end":1138981,"line_start":516,"line_end":516,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7697},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1139196,"byte_end":1139207,"line_start":522,"line_end":522,"column_start":12,"column_end":23},"name":"eigenvalues","qualname":"<SquareMatrix<N, D, S>>::eigenvalues","value":"fn (&self) -> Option<VectorN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigenvalues of this matrix.\n","sig":null,"attributes":[{"value":"/ Computes the eigenvalues of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1139140,"byte_end":1139184,"line_start":521,"line_end":521,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":7698},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1140390,"byte_end":1140409,"line_start":562,"line_end":562,"column_start":12,"column_end":31},"name":"complex_eigenvalues","qualname":"<SquareMatrix<N, D, S>>::complex_eigenvalues","value":"fn (&self) -> VectorN<NumComplex<N>, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigenvalues of this matrix.\n","sig":null,"attributes":[{"value":"/ Computes the eigenvalues of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1140334,"byte_end":1140378,"line_start":561,"line_end":561,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":7722},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1141650,"byte_end":1141672,"line_start":13,"line_end":13,"column_start":12,"column_end":34},"name":"solve_lower_triangular","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self . x = b` where `x` is the unknown and only","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1141436,"byte_end":1141531,"line_start":10,"line_end":10,"column_start":5,"column_end":100}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1141536,"byte_end":1141624,"line_start":11,"line_end":11,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1141629,"byte_end":1141638,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7726},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1142314,"byte_end":1142336,"line_start":33,"line_end":33,"column_start":12,"column_end":34},"name":"solve_upper_triangular","qualname":"<SquareMatrix<N, D, S>>::solve_upper_triangular","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self . x = b` where `x` is the unknown and only","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1142100,"byte_end":1142195,"line_start":30,"line_end":30,"column_start":5,"column_end":100}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1142200,"byte_end":1142288,"line_start":31,"line_end":31,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1142293,"byte_end":1142302,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7730},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1142946,"byte_end":1142972,"line_start":52,"line_end":52,"column_start":12,"column_end":38},"name":"solve_lower_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1142764,"byte_end":1142845,"line_start":50,"line_end":50,"column_start":5,"column_end":86}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1142850,"byte_end":1142934,"line_start":51,"line_end":51,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7737},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1144446,"byte_end":1144482,"line_start":103,"line_end":103,"column_start":12,"column_end":48},"name":"solve_lower_triangular_with_diag_mut","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular_with_diag_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>, diag: N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` is considered not-zero. The diagonal is never read as it is\n assumed to be equal to `diag`. Returns `false` and does not modify its inputs if `diag` is zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1144148,"byte_end":1144229,"line_start":100,"line_end":100,"column_start":5,"column_end":86}},{"value":"/ lower-triangular part of `self` is considered not-zero. The diagonal is never read as it is","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1144234,"byte_end":1144329,"line_start":101,"line_end":101,"column_start":5,"column_end":100}},{"value":"/ assumed to be equal to `diag`. Returns `false` and does not modify its inputs if `diag` is zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1144334,"byte_end":1144434,"line_start":102,"line_end":102,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":7741},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1145349,"byte_end":1145375,"line_start":134,"line_end":134,"column_start":12,"column_end":38},"name":"solve_upper_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::solve_upper_triangular_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1145167,"byte_end":1145248,"line_start":132,"line_end":132,"column_start":5,"column_end":86}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1145253,"byte_end":1145337,"line_start":133,"line_end":133,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7748},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1146783,"byte_end":1146808,"line_start":189,"line_end":189,"column_start":12,"column_end":37},"name":"tr_solve_lower_triangular","qualname":"<SquareMatrix<N, D, S>>::tr_solve_lower_triangular","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1146557,"byte_end":1146664,"line_start":186,"line_end":186,"column_start":5,"column_end":112}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1146669,"byte_end":1146757,"line_start":187,"line_end":187,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1146762,"byte_end":1146771,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7752},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1147465,"byte_end":1147490,"line_start":209,"line_end":209,"column_start":12,"column_end":37},"name":"tr_solve_upper_triangular","qualname":"<SquareMatrix<N, D, S>>::tr_solve_upper_triangular","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1147239,"byte_end":1147346,"line_start":206,"line_end":206,"column_start":5,"column_end":112}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1147351,"byte_end":1147439,"line_start":207,"line_end":207,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1147444,"byte_end":1147453,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7756},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1148115,"byte_end":1148144,"line_start":228,"line_end":228,"column_start":12,"column_end":41},"name":"tr_solve_lower_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::tr_solve_lower_triangular_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1147921,"byte_end":1148014,"line_start":226,"line_end":226,"column_start":5,"column_end":98}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1148019,"byte_end":1148103,"line_start":227,"line_end":227,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7762},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1148837,"byte_end":1148866,"line_start":253,"line_end":253,"column_start":12,"column_end":41},"name":"tr_solve_upper_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::tr_solve_upper_triangular_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1148643,"byte_end":1148736,"line_start":251,"line_end":251,"column_start":5,"column_end":98}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1148741,"byte_end":1148825,"line_start":252,"line_end":252,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7768},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1149589,"byte_end":1149614,"line_start":279,"line_end":279,"column_start":12,"column_end":37},"name":"ad_solve_lower_triangular","qualname":"<SquareMatrix<N, D, S>>::ad_solve_lower_triangular","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1149365,"byte_end":1149470,"line_start":276,"line_end":276,"column_start":5,"column_end":110}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1149475,"byte_end":1149563,"line_start":277,"line_end":277,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1149568,"byte_end":1149577,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7772},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1150269,"byte_end":1150294,"line_start":299,"line_end":299,"column_start":12,"column_end":37},"name":"ad_solve_upper_triangular","qualname":"<SquareMatrix<N, D, S>>::ad_solve_upper_triangular","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1150045,"byte_end":1150150,"line_start":296,"line_end":296,"column_start":5,"column_end":110}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1150155,"byte_end":1150243,"line_start":297,"line_end":297,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1150248,"byte_end":1150257,"line_start":298,"line_end":298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7776},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1150917,"byte_end":1150946,"line_start":318,"line_end":318,"column_start":12,"column_end":41},"name":"ad_solve_lower_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::ad_solve_lower_triangular_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1150725,"byte_end":1150816,"line_start":316,"line_end":316,"column_start":5,"column_end":96}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1150821,"byte_end":1150905,"line_start":317,"line_end":317,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7782},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1151650,"byte_end":1151679,"line_start":343,"line_end":343,"column_start":12,"column_end":41},"name":"ad_solve_upper_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::ad_solve_upper_triangular_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1151458,"byte_end":1151549,"line_start":341,"line_end":341,"column_start":5,"column_end":96}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1151554,"byte_end":1151638,"line_start":342,"line_end":342,"column_start":5,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":20785},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1155623,"byte_end":1155626,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"SVD","qualname":"::linalg::svd::SVD","value":"SVD { u, v_t, singular_values }","parent":null,"children":[{"krate":0,"index":20789},{"krate":0,"index":20790},{"krate":0,"index":20791}],"decl_id":null,"docs":" Singular Value Decomposition of a general matrix.\n","sig":null,"attributes":[{"value":"/ Singular Value Decomposition of a general matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1154534,"byte_end":1154587,"line_start":18,"line_end":18,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":20789},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1155886,"byte_end":1155887,"line_start":50,"line_end":50,"column_start":9,"column_end":10},"name":"u","qualname":"::linalg::svd::SVD::u","value":"std::option::Option<base::matrix::Matrix<N, R, <R as base::dimension::DimMin<C>>::Output, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, R, <R as base::dimension::DimMin<C>>::Output>>::Buffer>>","parent":{"krate":0,"index":20785},"children":[],"decl_id":null,"docs":" The left-singular vectors `U` of this SVD.\n","sig":null,"attributes":[{"value":"/ The left-singular vectors `U` of this SVD.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1155831,"byte_end":1155877,"line_start":49,"line_end":49,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":20790},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1155993,"byte_end":1155996,"line_start":52,"line_end":52,"column_start":9,"column_end":12},"name":"v_t","qualname":"::linalg::svd::SVD::v_t","value":"std::option::Option<base::matrix::Matrix<N, <R as base::dimension::DimMin<C>>::Output, C, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, <R as base::dimension::DimMin<C>>::Output, C>>::Buffer>>","parent":{"krate":0,"index":20785},"children":[],"decl_id":null,"docs":" The right-singular vectors `V^t` of this SVD.\n","sig":null,"attributes":[{"value":"/ The right-singular vectors `V^t` of this SVD.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1155935,"byte_end":1155984,"line_start":51,"line_end":51,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":20791},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1156089,"byte_end":1156104,"line_start":54,"line_end":54,"column_start":9,"column_end":24},"name":"singular_values","qualname":"::linalg::svd::SVD::singular_values","value":"base::matrix::Matrix<<N as simba::scalar::complex::ComplexField>::RealField, <R as base::dimension::DimMin<C>>::Output, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<<N as simba::scalar::complex::ComplexField>::RealField, <R as base::dimension::DimMin<C>>::Output>>::Buffer>","parent":{"krate":0,"index":20785},"children":[],"decl_id":null,"docs":" The singular values of this SVD.\n","sig":null,"attributes":[{"value":"/ The singular values of this SVD.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1156044,"byte_end":1156080,"line_start":53,"line_end":53,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":7837},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1157126,"byte_end":1157129,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<SVD<N, R, C>>::new","value":"fn (matrix: MatrixMN<N, R, C>, compute_u: bool, compute_v: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Singular Value Decomposition of `matrix` using implicit shift.\n","sig":null,"attributes":[{"value":"/ Computes the Singular Value Decomposition of `matrix` using implicit shift.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1157035,"byte_end":1157114,"line_start":81,"line_end":81,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":7838},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1158048,"byte_end":1158055,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"try_new","qualname":"<SVD<N, R, C>>::try_new","value":"fn (mut matrix: MatrixMN<N, R, C>, compute_u: bool, compute_v: bool, eps: N::RealField, max_niter: usize) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.","sig":null,"attributes":[{"value":"/ Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1157389,"byte_end":1157479,"line_start":93,"line_end":93,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1157484,"byte_end":1157487,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1157492,"byte_end":1157507,"line_start":95,"line_end":95,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1157512,"byte_end":1157515,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ * `compute_u` − set this to `true` to enable the computation of left-singular vectors.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1157520,"byte_end":1157612,"line_start":97,"line_end":97,"column_start":5,"column_end":95}},{"value":"/ * `compute_v` − set this to `true` to enable the computation of left-singular vectors.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1157617,"byte_end":1157709,"line_start":98,"line_end":98,"column_start":5,"column_end":95}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1157714,"byte_end":1157792,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1157797,"byte_end":1157889,"line_start":100,"line_end":100,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1157894,"byte_end":1157986,"line_start":101,"line_end":101,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1157991,"byte_end":1158036,"line_start":102,"line_end":102,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7844},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1171889,"byte_end":1171893,"line_start":507,"line_end":507,"column_start":12,"column_end":16},"name":"rank","qualname":"<SVD<N, R, C>>::rank","value":"fn (&self, eps: N::RealField) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the rank of the decomposed matrix, i.e., the number of singular values greater\n than `eps`.\n","sig":null,"attributes":[{"value":"/ Computes the rank of the decomposed matrix, i.e., the number of singular values greater","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1171766,"byte_end":1171857,"line_start":505,"line_end":505,"column_start":5,"column_end":96}},{"value":"/ than `eps`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1171862,"byte_end":1171877,"line_start":506,"line_end":506,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7846},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1172386,"byte_end":1172395,"line_start":520,"line_end":520,"column_start":12,"column_end":21},"name":"recompose","qualname":"<SVD<N, R, C>>::recompose","value":"fn (self) -> Result<MatrixMN<N, R, C>, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Rebuild the original matrix.","sig":null,"attributes":[{"value":"/ Rebuild the original matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1172135,"byte_end":1172167,"line_start":515,"line_end":515,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1172172,"byte_end":1172175,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ This is useful if some of the singular values have been manually modified.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1172180,"byte_end":1172258,"line_start":517,"line_end":517,"column_start":5,"column_end":83}},{"value":"/ Returns `Err` if the right- and left- singular vectors have not been","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1172263,"byte_end":1172335,"line_start":518,"line_end":518,"column_start":5,"column_end":77}},{"value":"/ computed at construction-time.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1172340,"byte_end":1172374,"line_start":519,"line_end":519,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7847},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1173276,"byte_end":1173290,"line_start":540,"line_end":540,"column_start":12,"column_end":26},"name":"pseudo_inverse","qualname":"<SVD<N, R, C>>::pseudo_inverse","value":"fn (mut self, eps: N::RealField) -> Result<MatrixMN<N, C, R>, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Computes the pseudo-inverse of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the pseudo-inverse of the decomposed matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1173014,"byte_end":1173071,"line_start":535,"line_end":535,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1173076,"byte_end":1173079,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ Any singular value smaller than `eps` is assumed to be zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1173084,"byte_end":1173148,"line_start":537,"line_end":537,"column_start":5,"column_end":69}},{"value":"/ Returns `Err` if the right- and left- singular vectors have not","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1173153,"byte_end":1173220,"line_start":538,"line_end":538,"column_start":5,"column_end":72}},{"value":"/ been computed at construction-time.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1173225,"byte_end":1173264,"line_start":539,"line_end":539,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":7849},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1174314,"byte_end":1174319,"line_start":566,"line_end":566,"column_start":12,"column_end":17},"name":"solve","qualname":"<SVD<N, R, C>>::solve","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>, eps: N::RealField) -> Result<MatrixMN<N, C, C2>, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.","sig":null,"attributes":[{"value":"/ Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1173961,"byte_end":1174056,"line_start":561,"line_end":561,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1174061,"byte_end":1174064,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ Any singular value smaller than `eps` is assumed to be zero.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1174069,"byte_end":1174133,"line_start":563,"line_end":563,"column_start":5,"column_end":69}},{"value":"/ Returns `Err` if the singular vectors `U` and `V` have not been computed.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1174138,"byte_end":1174215,"line_start":564,"line_end":564,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":7858},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1176360,"byte_end":1176363,"line_start":620,"line_end":620,"column_start":12,"column_end":15},"name":"svd","qualname":"<Matrix<N, R, C, S>>::svd","value":"fn (self, compute_u: bool, compute_v: bool) -> SVD<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the Singular Value Decomposition using implicit shift.\n","sig":null,"attributes":[{"value":"/ Computes the Singular Value Decomposition using implicit shift.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1176281,"byte_end":1176348,"line_start":619,"line_end":619,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7859},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1177150,"byte_end":1177157,"line_start":634,"line_end":634,"column_start":12,"column_end":19},"name":"try_svd","qualname":"<Matrix<N, R, C, S>>::try_svd","value":"fn (self, compute_u: bool, compute_v: bool, eps: N::RealField, max_niter: usize) -> Option<SVD<N, R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.","sig":null,"attributes":[{"value":"/ Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1176491,"byte_end":1176581,"line_start":624,"line_end":624,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1176586,"byte_end":1176589,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1176594,"byte_end":1176609,"line_start":626,"line_end":626,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1176614,"byte_end":1176617,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ * `compute_u` − set this to `true` to enable the computation of left-singular vectors.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1176622,"byte_end":1176714,"line_start":628,"line_end":628,"column_start":5,"column_end":95}},{"value":"/ * `compute_v` − set this to `true` to enable the computation of left-singular vectors.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1176719,"byte_end":1176811,"line_start":629,"line_end":629,"column_start":5,"column_end":95}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1176816,"byte_end":1176894,"line_start":630,"line_end":630,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1176899,"byte_end":1176991,"line_start":631,"line_end":631,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1176996,"byte_end":1177088,"line_start":632,"line_end":632,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1177093,"byte_end":1177138,"line_start":633,"line_end":633,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7860},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1177457,"byte_end":1177472,"line_start":645,"line_end":645,"column_start":12,"column_end":27},"name":"singular_values","qualname":"<Matrix<N, R, C, S>>::singular_values","value":"fn (&self) -> VectorN<N::RealField, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the singular values of this matrix.\n","sig":null,"attributes":[{"value":"/ Computes the singular values of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1177397,"byte_end":1177445,"line_start":644,"line_end":644,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":7861},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1177727,"byte_end":1177731,"line_start":652,"line_end":652,"column_start":12,"column_end":16},"name":"rank","qualname":"<Matrix<N, R, C, S>>::rank","value":"fn (&self, eps: N::RealField) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the rank of this matrix.","sig":null,"attributes":[{"value":"/ Computes the rank of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1177603,"byte_end":1177640,"line_start":649,"line_end":649,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1177645,"byte_end":1177648,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ All singular values below `eps` are considered equal to 0.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1177653,"byte_end":1177715,"line_start":651,"line_end":651,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":7862},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1177998,"byte_end":1178012,"line_start":660,"line_end":660,"column_start":12,"column_end":26},"name":"pseudo_inverse","qualname":"<Matrix<N, R, C, S>>::pseudo_inverse","value":"fn (self, eps: N::RealField) -> Result<MatrixMN<N, C, R>, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Computes the pseudo-inverse of this matrix.","sig":null,"attributes":[{"value":"/ Computes the pseudo-inverse of this matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1177864,"byte_end":1177911,"line_start":657,"line_end":657,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1177916,"byte_end":1177919,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ All singular values below `eps` are considered equal to 0.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1177924,"byte_end":1177986,"line_start":659,"line_end":659,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":20802},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1180873,"byte_end":1180887,"line_start":33,"line_end":33,"column_start":12,"column_end":26},"name":"SymmetricEigen","qualname":"::linalg::symmetric_eigen::SymmetricEigen","value":"SymmetricEigen { eigenvectors, eigenvalues }","parent":null,"children":[{"krate":0,"index":20805},{"krate":0,"index":20806}],"decl_id":null,"docs":" Eigendecomposition of a symmetric matrix.\n","sig":null,"attributes":[{"value":"/ Eigendecomposition of a symmetric matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1180195,"byte_end":1180240,"line_start":16,"line_end":16,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":20805},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1181051,"byte_end":1181063,"line_start":38,"line_end":38,"column_start":9,"column_end":21},"name":"eigenvectors","qualname":"::linalg::symmetric_eigen::SymmetricEigen::eigenvectors","value":"base::matrix::Matrix<N, D, D, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, D, D>>::Buffer>","parent":{"krate":0,"index":20802},"children":[],"decl_id":null,"docs":" The eigenvectors of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ The eigenvectors of the decomposed matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1180996,"byte_end":1181042,"line_start":37,"line_end":37,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":20806},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1181148,"byte_end":1181159,"line_start":41,"line_end":41,"column_start":9,"column_end":20},"name":"eigenvalues","qualname":"::linalg::symmetric_eigen::SymmetricEigen::eigenvalues","value":"base::matrix::Matrix<<N as simba::scalar::complex::ComplexField>::RealField, D, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<<N as simba::scalar::complex::ComplexField>::RealField, D>>::Buffer>","parent":{"krate":0,"index":20802},"children":[],"decl_id":null,"docs":" The unsorted eigenvalues of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ The unsorted eigenvalues of the decomposed matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1181085,"byte_end":1181139,"line_start":40,"line_end":40,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7892},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1181694,"byte_end":1181697,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<SymmetricEigen<N, D>>::new","value":"fn (m: MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigendecomposition of the given symmetric matrix.","sig":null,"attributes":[{"value":"/ Computes the eigendecomposition of the given symmetric matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1181527,"byte_end":1181593,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1181598,"byte_end":1181601,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular parts (including its diagonal) of `m` is read.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1181606,"byte_end":1181682,"line_start":58,"line_end":58,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":7893},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1182522,"byte_end":1182529,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"try_new","qualname":"<SymmetricEigen<N, D>>::try_new","value":"fn (m: MatrixN<N, D>, eps: N::RealField, max_niter: usize) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigendecomposition of the given symmetric matrix with user-specified\n convergence parameters.","sig":null,"attributes":[{"value":"/ Computes the eigendecomposition of the given symmetric matrix with user-specified","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1181942,"byte_end":1182027,"line_start":67,"line_end":67,"column_start":5,"column_end":90}},{"value":"/ convergence parameters.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1182032,"byte_end":1182059,"line_start":68,"line_end":68,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1182064,"byte_end":1182067,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including its diagonal) of `m` is read.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1182072,"byte_end":1182147,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1182152,"byte_end":1182155,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1182160,"byte_end":1182175,"line_start":72,"line_end":72,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1182180,"byte_end":1182183,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1182188,"byte_end":1182266,"line_start":74,"line_end":74,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1182271,"byte_end":1182363,"line_start":75,"line_end":75,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1182368,"byte_end":1182460,"line_start":76,"line_end":76,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1182465,"byte_end":1182510,"line_start":77,"line_end":77,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7897},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1188510,"byte_end":1188519,"line_start":271,"line_end":271,"column_start":12,"column_end":21},"name":"recompose","qualname":"<SymmetricEigen<N, D>>::recompose","value":"fn (&self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rebuild the original matrix.","sig":null,"attributes":[{"value":"/ Rebuild the original matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1188379,"byte_end":1188411,"line_start":268,"line_end":268,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1188416,"byte_end":1188419,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This is useful if some of the eigenvalues have been manually modified.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1188424,"byte_end":1188498,"line_start":270,"line_end":270,"column_start":5,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":7898},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1189015,"byte_end":1189030,"line_start":288,"line_end":288,"column_start":8,"column_end":23},"name":"wilkinson_shift","qualname":"::linalg::symmetric_eigen::wilkinson_shift","value":"fn <N> (tmm: N, tnn: N, tmn: N) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the wilkinson shift, i.e., the 2x2 symmetric matrix eigenvalue to its tailing\n component `tnn`.","sig":null,"attributes":[{"value":"/ Computes the wilkinson shift, i.e., the 2x2 symmetric matrix eigenvalue to its tailing","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1188808,"byte_end":1188898,"line_start":282,"line_end":282,"column_start":1,"column_end":91}},{"value":"/ component `tnn`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1188899,"byte_end":1188919,"line_start":283,"line_end":283,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1188920,"byte_end":1188923,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ The inputs are interpreted as the 2x2 matrix:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1188924,"byte_end":1188973,"line_start":285,"line_end":285,"column_start":1,"column_end":50}},{"value":"/     tmm  tmn","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1188974,"byte_end":1188990,"line_start":286,"line_end":286,"column_start":1,"column_end":17}},{"value":"/     tmn  tnn","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1188991,"byte_end":1189007,"line_start":287,"line_end":287,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":7904},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1189843,"byte_end":1189858,"line_start":314,"line_end":314,"column_start":12,"column_end":27},"name":"symmetric_eigen","qualname":"<SquareMatrix<N, D, S>>::symmetric_eigen","value":"fn (self) -> SymmetricEigen<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigendecomposition of this symmetric matrix.","sig":null,"attributes":[{"value":"/ Computes the eigendecomposition of this symmetric matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1189682,"byte_end":1189743,"line_start":311,"line_end":311,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1189748,"byte_end":1189751,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including the diagonal) of `m` is read.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1189756,"byte_end":1189831,"line_start":313,"line_end":313,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":7905},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1190529,"byte_end":1190548,"line_start":329,"line_end":329,"column_start":12,"column_end":31},"name":"try_symmetric_eigen","qualname":"<SquareMatrix<N, D, S>>::try_symmetric_eigen","value":"fn (self, eps: N::RealField, max_niter: usize) -> Option<SymmetricEigen<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigendecomposition of the given symmetric matrix with user-specified\n convergence parameters.","sig":null,"attributes":[{"value":"/ Computes the eigendecomposition of the given symmetric matrix with user-specified","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1189949,"byte_end":1190034,"line_start":318,"line_end":318,"column_start":5,"column_end":90}},{"value":"/ convergence parameters.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1190039,"byte_end":1190066,"line_start":319,"line_end":319,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1190071,"byte_end":1190074,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including the diagonal) of `m` is read.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1190079,"byte_end":1190154,"line_start":321,"line_end":321,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1190159,"byte_end":1190162,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1190167,"byte_end":1190182,"line_start":323,"line_end":323,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1190187,"byte_end":1190190,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1190195,"byte_end":1190273,"line_start":325,"line_end":325,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1190278,"byte_end":1190370,"line_start":326,"line_end":326,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1190375,"byte_end":1190467,"line_start":327,"line_end":327,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1190472,"byte_end":1190517,"line_start":328,"line_end":328,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7906},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1190871,"byte_end":1190892,"line_start":340,"line_end":340,"column_start":12,"column_end":33},"name":"symmetric_eigenvalues","qualname":"<SquareMatrix<N, D, S>>::symmetric_eigenvalues","value":"fn (&self) -> VectorN<N::RealField, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigenvalues of this symmetric matrix.","sig":null,"attributes":[{"value":"/ Computes the eigenvalues of this symmetric matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1190735,"byte_end":1190789,"line_start":337,"line_end":337,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1190794,"byte_end":1190797,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part of the matrix is read.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1190802,"byte_end":1190859,"line_start":339,"line_end":339,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":20815},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1194243,"byte_end":1194263,"line_start":29,"line_end":29,"column_start":12,"column_end":32},"name":"SymmetricTridiagonal","qualname":"::linalg::symmetric_tridiagonal::SymmetricTridiagonal","value":"SymmetricTridiagonal {  }","parent":null,"children":[{"krate":0,"index":20818},{"krate":0,"index":20819}],"decl_id":null,"docs":" Tridiagonalization of a symmetric matrix.\n","sig":null,"attributes":[{"value":"/ Tridiagonalization of a symmetric matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1193557,"byte_end":1193602,"line_start":12,"line_end":12,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":7928},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1194983,"byte_end":1194986,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<SymmetricTridiagonal<N, D>>::new","value":"fn (mut m: MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the tridiagonalization of the symmetric matrix `m`.","sig":null,"attributes":[{"value":"/ Computes the tridiagonalization of the symmetric matrix `m`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1194819,"byte_end":1194883,"line_start":49,"line_end":49,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1194888,"byte_end":1194891,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including the diagonal) of `m` is read.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1194896,"byte_end":1194971,"line_start":51,"line_end":51,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":7929},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1196358,"byte_end":1196370,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"internal_tri","qualname":"<SymmetricTridiagonal<N, D>>::internal_tri","value":"fn (&self) -> &MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7930},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1196549,"byte_end":1196555,"line_start":100,"line_end":100,"column_start":12,"column_end":18},"name":"unpack","qualname":"<SymmetricTridiagonal<N, D>>::unpack","value":"fn (self) -> (MatrixN<N, D>, VectorN<N::RealField, D>,\n VectorN<N::RealField, DimDiff<D, U1>>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the orthogonal transformation, diagonal, and off diagonal elements of this\n decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieve the orthogonal transformation, diagonal, and off diagonal elements of this","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1196427,"byte_end":1196514,"line_start":98,"line_end":98,"column_start":5,"column_end":92}},{"value":"/ decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1196519,"byte_end":1196537,"line_start":99,"line_end":99,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":7931},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1197018,"byte_end":1197036,"line_start":117,"line_end":117,"column_start":12,"column_end":30},"name":"unpack_tridiagonal","qualname":"<SymmetricTridiagonal<N, D>>::unpack_tridiagonal","value":"fn (self) -> (VectorN<N::RealField, D>, VectorN<N::RealField, DimDiff<D, U1>>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the diagonal, and off diagonal elements of this decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieve the diagonal, and off diagonal elements of this decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1196931,"byte_end":1197006,"line_start":116,"line_end":116,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":7932},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1197396,"byte_end":1197404,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"diagonal","qualname":"<SymmetricTridiagonal<N, D>>::diagonal","value":"fn (&self) -> VectorN<N::RealField, D>","parent":null,"children":[],"decl_id":null,"docs":" The diagonal components of this decomposition.\n","sig":null,"attributes":[{"value":"/ The diagonal components of this decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1197334,"byte_end":1197384,"line_start":129,"line_end":129,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7934},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1197631,"byte_end":1197643,"line_start":138,"line_end":138,"column_start":12,"column_end":24},"name":"off_diagonal","qualname":"<SymmetricTridiagonal<N, D>>::off_diagonal","value":"fn (&self) -> VectorN<N::RealField, DimDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The off-diagonal components of this decomposition.\n","sig":null,"attributes":[{"value":"/ The off-diagonal components of this decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1197565,"byte_end":1197619,"line_start":137,"line_end":137,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7935},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1197901,"byte_end":1197902,"line_start":146,"line_end":146,"column_start":12,"column_end":13},"name":"q","qualname":"<SymmetricTridiagonal<N, D>>::q","value":"fn (&self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `Q` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `Q` of this decomposition.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1197828,"byte_end":1197889,"line_start":145,"line_end":145,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":7936},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1198070,"byte_end":1198079,"line_start":151,"line_end":151,"column_start":12,"column_end":21},"name":"recompose","qualname":"<SymmetricTridiagonal<N, D>>::recompose","value":"fn (mut self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Recomputes the original symmetric matrix.\n","sig":null,"attributes":[{"value":"/ Recomputes the original symmetric matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1198013,"byte_end":1198058,"line_start":150,"line_end":150,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7941},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1198816,"byte_end":1198840,"line_start":173,"line_end":173,"column_start":12,"column_end":36},"name":"symmetric_tridiagonalize","qualname":"<SquareMatrix<N, D, S>>::symmetric_tridiagonalize","value":"fn (self) -> SymmetricTridiagonal<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the tridiagonalization of this symmetric matrix.","sig":null,"attributes":[{"value":"/ Computes the tridiagonalization of this symmetric matrix.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1198655,"byte_end":1198716,"line_start":170,"line_end":170,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1198721,"byte_end":1198724,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including the diagonal) of `m` is read.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1198729,"byte_end":1198804,"line_start":172,"line_end":172,"column_start":5,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":7982},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":5073,"byte_end":5076,"line_start":165,"line_end":165,"column_start":8,"column_end":11},"name":"one","qualname":"::one","value":"fn <T> () -> T","parent":null,"children":[],"decl_id":null,"docs":" Gets the multiplicative identity element.","sig":null,"attributes":[{"value":"/ Gets the multiplicative identity element.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4912,"byte_end":4957,"line_start":158,"line_end":158,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4958,"byte_end":4961,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4962,"byte_end":4977,"line_start":160,"line_end":160,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4978,"byte_end":4981,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ * [`origin`](../nalgebra/fn.origin.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4982,"byte_end":5026,"line_start":162,"line_end":162,"column_start":1,"column_end":45}},{"value":"/ * [`zero`](fn.zero.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":5027,"byte_end":5055,"line_start":163,"line_end":163,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":5056,"byte_end":5065,"line_start":164,"line_end":164,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7984},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":5263,"byte_end":5267,"line_start":176,"line_end":176,"column_start":8,"column_end":12},"name":"zero","qualname":"::zero","value":"fn <T> () -> T","parent":null,"children":[],"decl_id":null,"docs":" Gets the additive identity element.","sig":null,"attributes":[{"value":"/ Gets the additive identity element.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":5110,"byte_end":5149,"line_start":169,"line_end":169,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":5150,"byte_end":5153,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":5154,"byte_end":5169,"line_start":171,"line_end":171,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":5170,"byte_end":5173,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ * [`one`](fn.one.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":5174,"byte_end":5200,"line_start":173,"line_end":173,"column_start":1,"column_end":27}},{"value":"/ * [`origin`](../nalgebra/fn.origin.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":5201,"byte_end":5245,"line_start":174,"line_end":174,"column_start":1,"column_end":45}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":5246,"byte_end":5255,"line_start":175,"line_end":175,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7986},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":5680,"byte_end":5684,"line_start":192,"line_end":192,"column_start":8,"column_end":12},"name":"wrap","qualname":"::wrap","value":"fn <T> (mut val: T, min: T, max: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Wraps `val` into the range `[min, max]` using modular arithmetics.","sig":null,"attributes":[{"value":"/ Wraps `val` into the range `[min, max]` using modular arithmetics.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":5555,"byte_end":5625,"line_start":188,"line_end":188,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":5626,"byte_end":5629,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ The range must not be empty.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":5630,"byte_end":5662,"line_start":190,"line_end":190,"column_start":1,"column_end":33}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":5663,"byte_end":5672,"line_start":191,"line_end":191,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7988},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":6399,"byte_end":6404,"line_start":227,"line_end":227,"column_start":8,"column_end":13},"name":"clamp","qualname":"::clamp","value":"fn <T> (val: T, min: T, max: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the input value clamped to the interval `[min, max]`.","sig":null,"attributes":[{"value":"/ Returns a reference to the input value clamped to the interval `[min, max]`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":6132,"byte_end":6212,"line_start":220,"line_end":220,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":6213,"byte_end":6216,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ In particular:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":6217,"byte_end":6235,"line_start":222,"line_end":222,"column_start":1,"column_end":19}},{"value":"/     * If `min < val < max`, this returns `val`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":6236,"byte_end":6287,"line_start":223,"line_end":223,"column_start":1,"column_end":52}},{"value":"/     * If `val <= min`, this returns `min`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":6288,"byte_end":6334,"line_start":224,"line_end":224,"column_start":1,"column_end":47}},{"value":"/     * If `val >= max`, this returns `max`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":6335,"byte_end":6381,"line_start":225,"line_end":225,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":6382,"byte_end":6391,"line_start":226,"line_end":226,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7990},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":6627,"byte_end":6630,"line_start":241,"line_end":241,"column_start":8,"column_end":11},"name":"max","qualname":"::max","value":"fn <T> (a: T, b: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Same as `cmp::max`.\n","sig":null,"attributes":[{"value":"/ Same as `cmp::max`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":6586,"byte_end":6609,"line_start":239,"line_end":239,"column_start":1,"column_end":24}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":6610,"byte_end":6619,"line_start":240,"line_end":240,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7992},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":6721,"byte_end":6724,"line_start":247,"line_end":247,"column_start":8,"column_end":11},"name":"min","qualname":"::min","value":"fn <T> (a: T, b: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Same as `cmp::min`.\n","sig":null,"attributes":[{"value":"/ Same as `cmp::min`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":6680,"byte_end":6703,"line_start":245,"line_end":245,"column_start":1,"column_end":24}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":6704,"byte_end":6713,"line_start":246,"line_end":246,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7994},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":6979,"byte_end":6982,"line_start":256,"line_end":256,"column_start":8,"column_end":11},"name":"abs","qualname":"::abs","value":"fn <T> (a: &T) -> T","parent":null,"children":[],"decl_id":null,"docs":" The absolute value of `a`.","sig":null,"attributes":[{"value":"/ The absolute value of `a`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":6774,"byte_end":6804,"line_start":251,"line_end":251,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":6805,"byte_end":6808,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ Deprecated: Use [Matrix::abs] or [RealField::abs] instead.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":6809,"byte_end":6871,"line_start":253,"line_end":253,"column_start":1,"column_end":63}},{"value":"deprecated(note =\n             \"use the inherent method `Matrix::abs` or `RealField::abs` instead\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":6872,"byte_end":6961,"line_start":254,"line_end":254,"column_start":1,"column_end":90}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":6962,"byte_end":6971,"line_start":255,"line_end":255,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7996},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":7150,"byte_end":7153,"line_start":263,"line_end":263,"column_start":8,"column_end":11},"name":"inf","qualname":"::inf","value":"fn <N, R, C> (a: &MatrixMN<N, R, C>, b: &MatrixMN<N, R, C>) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns the infimum of `a` and `b`.\n","sig":null,"attributes":[{"value":"/ Returns the infimum of `a` and `b`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":7023,"byte_end":7062,"line_start":260,"line_end":260,"column_start":1,"column_end":40}},{"value":"deprecated(note = \"use the inherent method `Matrix::inf` instead\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":7063,"byte_end":7132,"line_start":261,"line_end":261,"column_start":1,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":7133,"byte_end":7142,"line_start":262,"line_end":262,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8000},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":7466,"byte_end":7469,"line_start":274,"line_end":274,"column_start":8,"column_end":11},"name":"sup","qualname":"::sup","value":"fn <N, R, C> (a: &MatrixMN<N, R, C>, b: &MatrixMN<N, R, C>) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns the supremum of `a` and `b`.\n","sig":null,"attributes":[{"value":"/ Returns the supremum of `a` and `b`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":7338,"byte_end":7378,"line_start":271,"line_end":271,"column_start":1,"column_end":41}},{"value":"deprecated(note = \"use the inherent method `Matrix::sup` instead\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":7379,"byte_end":7448,"line_start":272,"line_end":272,"column_start":1,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":7449,"byte_end":7458,"line_start":273,"line_end":273,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8004},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":7813,"byte_end":7820,"line_start":285,"line_end":285,"column_start":8,"column_end":15},"name":"inf_sup","qualname":"::inf_sup","value":"fn <N, R, C> (a: &MatrixMN<N, R, C>, b: &MatrixMN<N, R, C>) -> (MatrixMN<N, R, C>, MatrixMN<N, R, C>)","parent":null,"children":[],"decl_id":null,"docs":" Returns simultaneously the infimum and supremum of `a` and `b`.\n","sig":null,"attributes":[{"value":"/ Returns simultaneously the infimum and supremum of `a` and `b`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":7654,"byte_end":7721,"line_start":282,"line_end":282,"column_start":1,"column_end":68}},{"value":"deprecated(note = \"use the inherent method `Matrix::inf_sup` instead\")","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":7722,"byte_end":7795,"line_start":283,"line_end":283,"column_start":1,"column_end":74}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":7796,"byte_end":7805,"line_start":284,"line_end":284,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8008},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":8117,"byte_end":8128,"line_start":298,"line_end":298,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"::partial_cmp","value":"fn <T> (a: &T, b: &T) -> Option<Ordering>","parent":null,"children":[],"decl_id":null,"docs":" Compare `a` and `b` using a partial ordering relation.\n","sig":null,"attributes":[{"value":"/ Compare `a` and `b` using a partial ordering relation.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":8041,"byte_end":8099,"line_start":296,"line_end":296,"column_start":1,"column_end":59}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":8100,"byte_end":8109,"line_start":297,"line_end":297,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8010},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":8284,"byte_end":8294,"line_start":304,"line_end":304,"column_start":8,"column_end":18},"name":"partial_lt","qualname":"::partial_lt","value":"fn <T> (a: &T, b: &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff `a` and `b` are comparable and `a < b`.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff `a` and `b` are comparable and `a < b`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":8204,"byte_end":8266,"line_start":302,"line_end":302,"column_start":1,"column_end":63}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":8267,"byte_end":8276,"line_start":303,"line_end":303,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8012},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":8430,"byte_end":8440,"line_start":310,"line_end":310,"column_start":8,"column_end":18},"name":"partial_le","qualname":"::partial_le","value":"fn <T> (a: &T, b: &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff `a` and `b` are comparable and `a <= b`.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff `a` and `b` are comparable and `a <= b`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":8349,"byte_end":8412,"line_start":308,"line_end":308,"column_start":1,"column_end":64}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":8413,"byte_end":8422,"line_start":309,"line_end":309,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8014},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":8575,"byte_end":8585,"line_start":316,"line_end":316,"column_start":8,"column_end":18},"name":"partial_gt","qualname":"::partial_gt","value":"fn <T> (a: &T, b: &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff `a` and `b` are comparable and `a > b`.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff `a` and `b` are comparable and `a > b`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":8495,"byte_end":8557,"line_start":314,"line_end":314,"column_start":1,"column_end":63}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":8558,"byte_end":8567,"line_start":315,"line_end":315,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8016},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":8721,"byte_end":8731,"line_start":322,"line_end":322,"column_start":8,"column_end":18},"name":"partial_ge","qualname":"::partial_ge","value":"fn <T> (a: &T, b: &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff `a` and `b` are comparable and `a >= b`.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff `a` and `b` are comparable and `a >= b`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":8640,"byte_end":8703,"line_start":320,"line_end":320,"column_start":1,"column_end":64}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":8704,"byte_end":8713,"line_start":321,"line_end":321,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8018},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":8865,"byte_end":8876,"line_start":328,"line_end":328,"column_start":8,"column_end":19},"name":"partial_min","qualname":"::partial_min","value":"fn <'a, T> (a: &'a T, b: &'a T) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Return the minimum of `a` and `b` if they are comparable.\n","sig":null,"attributes":[{"value":"/ Return the minimum of `a` and `b` if they are comparable.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":8786,"byte_end":8847,"line_start":326,"line_end":326,"column_start":1,"column_end":62}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":8848,"byte_end":8857,"line_start":327,"line_end":327,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8021},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":9189,"byte_end":9200,"line_start":341,"line_end":341,"column_start":8,"column_end":19},"name":"partial_max","qualname":"::partial_max","value":"fn <'a, T> (a: &'a T, b: &'a T) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Return the maximum of `a` and `b` if they are comparable.\n","sig":null,"attributes":[{"value":"/ Return the maximum of `a` and `b` if they are comparable.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":9110,"byte_end":9171,"line_start":339,"line_end":339,"column_start":1,"column_end":62}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":9172,"byte_end":9181,"line_start":340,"line_end":340,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8024},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":9558,"byte_end":9571,"line_start":355,"line_end":355,"column_start":8,"column_end":21},"name":"partial_clamp","qualname":"::partial_clamp","value":"fn <'a, T> (value: &'a T, min: &'a T, max: &'a T) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n `min` or `max`.\n","sig":null,"attributes":[{"value":"/ Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":9431,"byte_end":9520,"line_start":352,"line_end":352,"column_start":1,"column_end":90}},{"value":"/ `min` or `max`.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":9521,"byte_end":9540,"line_start":353,"line_end":353,"column_start":1,"column_end":20}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":9541,"byte_end":9550,"line_start":354,"line_end":354,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8027},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":10045,"byte_end":10058,"line_start":371,"line_end":371,"column_start":8,"column_end":21},"name":"partial_sort2","qualname":"::partial_sort2","value":"fn <'a, T> (a: &'a T, b: &'a T) -> Option<(&'a T, &'a T)>","parent":null,"children":[],"decl_id":null,"docs":" Sorts two values in increasing order using a partial ordering.\n","sig":null,"attributes":[{"value":"/ Sorts two values in increasing order using a partial ordering.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":9961,"byte_end":10027,"line_start":369,"line_end":369,"column_start":1,"column_end":67}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":10028,"byte_end":10037,"line_start":370,"line_end":370,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8030},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":10499,"byte_end":10505,"line_start":394,"line_end":394,"column_start":8,"column_end":14},"name":"center","qualname":"::center","value":"fn <N, D> (p1: &Point<N, D>, p2: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" The center of two points.","sig":null,"attributes":[{"value":"/ The center of two points.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":10342,"byte_end":10371,"line_start":387,"line_end":387,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":10372,"byte_end":10375,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":10376,"byte_end":10391,"line_start":389,"line_end":389,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":10392,"byte_end":10395,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ * [distance](fn.distance.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":10396,"byte_end":10430,"line_start":391,"line_end":391,"column_start":1,"column_end":35}},{"value":"/ * [distance_squared](fn.distance_squared.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":10431,"byte_end":10481,"line_start":392,"line_end":392,"column_start":1,"column_end":51}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":10482,"byte_end":10491,"line_start":393,"line_end":393,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8033},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":10862,"byte_end":10870,"line_start":408,"line_end":408,"column_start":8,"column_end":16},"name":"distance","qualname":"::distance","value":"fn <N, D> (p1: &Point<N, D>, p2: &Point<N, D>) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" The distance between two points.","sig":null,"attributes":[{"value":"/ The distance between two points.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":10702,"byte_end":10738,"line_start":401,"line_end":401,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":10739,"byte_end":10742,"line_start":402,"line_end":402,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":10743,"byte_end":10758,"line_start":403,"line_end":403,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":10759,"byte_end":10762,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/ * [center](fn.center.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":10763,"byte_end":10793,"line_start":405,"line_end":405,"column_start":1,"column_end":31}},{"value":"/ * [distance_squared](fn.distance_squared.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":10794,"byte_end":10844,"line_start":406,"line_end":406,"column_start":1,"column_end":51}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":10845,"byte_end":10854,"line_start":407,"line_end":407,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8036},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":11210,"byte_end":11226,"line_start":425,"line_end":425,"column_start":8,"column_end":24},"name":"distance_squared","qualname":"::distance_squared","value":"fn <N, D> (p1: &Point<N, D>, p2: &Point<N, D>) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" The squared distance between two points.","sig":null,"attributes":[{"value":"/ The squared distance between two points.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":11058,"byte_end":11102,"line_start":418,"line_end":418,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":11103,"byte_end":11106,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":11107,"byte_end":11122,"line_start":420,"line_end":420,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":11123,"byte_end":11126,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ * [center](fn.center.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":11127,"byte_end":11157,"line_start":422,"line_end":422,"column_start":1,"column_end":31}},{"value":"/ * [distance](fn.distance.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":11158,"byte_end":11192,"line_start":423,"line_end":423,"column_start":1,"column_end":35}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":11193,"byte_end":11202,"line_start":424,"line_end":424,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8039},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":11897,"byte_end":11904,"line_start":450,"line_end":450,"column_start":8,"column_end":15},"name":"convert","qualname":"::convert","value":"fn <From, To> (t: From) -> To","parent":null,"children":[],"decl_id":null,"docs":" Converts an object from one type to an equivalent or more general one.","sig":null,"attributes":[{"value":"/ Converts an object from one type to an equivalent or more general one.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":11437,"byte_end":11511,"line_start":438,"line_end":438,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":11512,"byte_end":11515,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ See also [`try_convert`](fn.try_convert.html) for conversion to more specific types.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":11516,"byte_end":11604,"line_start":440,"line_end":440,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":11605,"byte_end":11608,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":11609,"byte_end":11624,"line_start":442,"line_end":442,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":11625,"byte_end":11628,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":11629,"byte_end":11669,"line_start":444,"line_end":444,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":11670,"byte_end":11730,"line_start":445,"line_end":445,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":11731,"byte_end":11789,"line_start":446,"line_end":446,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":11790,"byte_end":11830,"line_start":447,"line_end":447,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":11831,"byte_end":11879,"line_start":448,"line_end":448,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":11880,"byte_end":11889,"line_start":449,"line_end":449,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8042},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12403,"byte_end":12414,"line_start":466,"line_end":466,"column_start":8,"column_end":19},"name":"try_convert","qualname":"::try_convert","value":"fn <From, To> (t: From) -> Option<To>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to convert an object to a more specific one.","sig":null,"attributes":[{"value":"/ Attempts to convert an object to a more specific one.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":11977,"byte_end":12034,"line_start":454,"line_end":454,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12035,"byte_end":12038,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ See also [`convert`](fn.convert.html) for conversion to more general types.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12039,"byte_end":12118,"line_start":456,"line_end":456,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12119,"byte_end":12122,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12123,"byte_end":12138,"line_start":458,"line_end":458,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12139,"byte_end":12142,"line_start":459,"line_end":459,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12143,"byte_end":12175,"line_start":460,"line_end":460,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12176,"byte_end":12216,"line_start":461,"line_end":461,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12217,"byte_end":12277,"line_start":462,"line_end":462,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12278,"byte_end":12336,"line_start":463,"line_end":463,"column_start":1,"column_end":59}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12337,"byte_end":12385,"line_start":464,"line_end":464,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12386,"byte_end":12395,"line_start":465,"line_end":465,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8045},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12868,"byte_end":12882,"line_start":481,"line_end":481,"column_start":8,"column_end":22},"name":"is_convertible","qualname":"::is_convertible","value":"fn <From, To> (t: &From) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if [`try_convert`](fn.try_convert.html) will succeed without\n actually performing the conversion.","sig":null,"attributes":[{"value":"/ Indicates if [`try_convert`](fn.try_convert.html) will succeed without","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12487,"byte_end":12561,"line_start":470,"line_end":470,"column_start":1,"column_end":75}},{"value":"/ actually performing the conversion.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12562,"byte_end":12601,"line_start":471,"line_end":471,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12602,"byte_end":12605,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12606,"byte_end":12621,"line_start":473,"line_end":473,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12622,"byte_end":12625,"line_start":474,"line_end":474,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12626,"byte_end":12658,"line_start":475,"line_end":475,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12659,"byte_end":12699,"line_start":476,"line_end":476,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12700,"byte_end":12760,"line_start":477,"line_end":477,"column_start":1,"column_end":61}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12761,"byte_end":12801,"line_start":478,"line_end":478,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12802,"byte_end":12850,"line_start":479,"line_end":479,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12851,"byte_end":12860,"line_start":480,"line_end":480,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8048},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13379,"byte_end":13396,"line_start":497,"line_end":497,"column_start":8,"column_end":25},"name":"convert_unchecked","qualname":"::convert_unchecked","value":"fn <From, To> (t: From) -> To","parent":null,"children":[],"decl_id":null,"docs":" Use with care! Same as [`try_convert`](fn.try_convert.html) but\n without any property checks.","sig":null,"attributes":[{"value":"/ Use with care! Same as [`try_convert`](fn.try_convert.html) but","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":12953,"byte_end":13020,"line_start":485,"line_end":485,"column_start":1,"column_end":68}},{"value":"/ without any property checks.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13021,"byte_end":13053,"line_start":486,"line_end":486,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13054,"byte_end":13057,"line_start":487,"line_end":487,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13058,"byte_end":13073,"line_start":488,"line_end":488,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13074,"byte_end":13077,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13078,"byte_end":13110,"line_start":490,"line_end":490,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13111,"byte_end":13151,"line_start":491,"line_end":491,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13152,"byte_end":13212,"line_start":492,"line_end":492,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13213,"byte_end":13271,"line_start":493,"line_end":493,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13272,"byte_end":13312,"line_start":494,"line_end":494,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13313,"byte_end":13361,"line_start":495,"line_end":495,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13362,"byte_end":13371,"line_start":496,"line_end":496,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8051},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13830,"byte_end":13841,"line_start":511,"line_end":511,"column_start":8,"column_end":19},"name":"convert_ref","qualname":"::convert_ref","value":"fn <From, To> (t: &From) -> To","parent":null,"children":[],"decl_id":null,"docs":" Converts an object from one type to an equivalent or more general one.","sig":null,"attributes":[{"value":"/ Converts an object from one type to an equivalent or more general one.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13471,"byte_end":13545,"line_start":501,"line_end":501,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13546,"byte_end":13549,"line_start":502,"line_end":502,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13550,"byte_end":13565,"line_start":503,"line_end":503,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13566,"byte_end":13569,"line_start":504,"line_end":504,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13570,"byte_end":13602,"line_start":505,"line_end":505,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13603,"byte_end":13663,"line_start":506,"line_end":506,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13664,"byte_end":13722,"line_start":507,"line_end":507,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13723,"byte_end":13763,"line_start":508,"line_end":508,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13764,"byte_end":13812,"line_start":509,"line_end":509,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13813,"byte_end":13822,"line_start":510,"line_end":510,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8054},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":14248,"byte_end":14263,"line_start":525,"line_end":525,"column_start":8,"column_end":23},"name":"try_convert_ref","qualname":"::try_convert_ref","value":"fn <From, To> (t: &From) -> Option<To>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to convert an object to a more specific one.","sig":null,"attributes":[{"value":"/ Attempts to convert an object to a more specific one.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13914,"byte_end":13971,"line_start":515,"line_end":515,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13972,"byte_end":13975,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13976,"byte_end":13991,"line_start":517,"line_end":517,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13992,"byte_end":13995,"line_start":518,"line_end":518,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":13996,"byte_end":14028,"line_start":519,"line_end":519,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":14029,"byte_end":14069,"line_start":520,"line_end":520,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":14070,"byte_end":14130,"line_start":521,"line_end":521,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":14131,"byte_end":14189,"line_start":522,"line_end":522,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":14190,"byte_end":14230,"line_start":523,"line_end":523,"column_start":1,"column_end":41}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":14231,"byte_end":14240,"line_start":524,"line_end":524,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8057},"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":14702,"byte_end":14723,"line_start":540,"line_end":540,"column_start":8,"column_end":29},"name":"convert_ref_unchecked","qualname":"::convert_ref_unchecked","value":"fn <From, To> (t: &From) -> To","parent":null,"children":[],"decl_id":null,"docs":" Use with care! Same as [`try_convert`](fn.try_convert.html) but\n without any property checks.","sig":null,"attributes":[{"value":"/ Use with care! Same as [`try_convert`](fn.try_convert.html) but","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":14337,"byte_end":14404,"line_start":529,"line_end":529,"column_start":1,"column_end":68}},{"value":"/ without any property checks.","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":14405,"byte_end":14437,"line_start":530,"line_end":530,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":14438,"byte_end":14441,"line_start":531,"line_end":531,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":14442,"byte_end":14457,"line_start":532,"line_end":532,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":14458,"byte_end":14461,"line_start":533,"line_end":533,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":14462,"byte_end":14494,"line_start":534,"line_end":534,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":14495,"byte_end":14535,"line_start":535,"line_end":535,"column_start":1,"column_end":41}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":14536,"byte_end":14594,"line_start":536,"line_end":536,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":14595,"byte_end":14635,"line_start":537,"line_end":537,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":14636,"byte_end":14684,"line_start":538,"line_end":538,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":14685,"byte_end":14694,"line_start":539,"line_end":539,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":18905,"byte_end":18921,"line_start":73,"line_end":73,"column_start":67,"column_end":83},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":19544,"byte_end":19560,"line_start":97,"line_end":97,"column_start":57,"column_end":73},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":20443,"byte_end":20449,"line_start":20,"line_end":20,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":21419,"byte_end":21425,"line_start":53,"line_end":53,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":25204,"byte_end":25210,"line_start":202,"line_end":202,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":26419,"byte_end":26425,"line_start":238,"line_end":238,"column_start":76,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":27366,"byte_end":27372,"line_start":271,"line_end":271,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":136},{"krate":0,"index":141},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":37377,"byte_end":37383,"line_start":555,"line_end":555,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":169},{"krate":0,"index":175},{"krate":0,"index":180},{"krate":0,"index":186},{"krate":0,"index":192},{"krate":0,"index":199},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":50882,"byte_end":50888,"line_start":957,"line_end":957,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":224},{"krate":0,"index":230},{"krate":0,"index":235},{"krate":0,"index":243},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":64283,"byte_end":64289,"line_start":1331,"line_end":1331,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":268},{"krate":0,"index":273},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":69617,"byte_end":69629,"line_start":1479,"line_end":1479,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":296},{"krate":0,"index":302},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":77854,"byte_end":77869,"line_start":11,"line_end":11,"column_start":78,"column_end":93},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":78181,"byte_end":78196,"line_start":23,"line_end":23,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":78270,"byte_end":78285,"line_start":27,"line_end":27,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":78359,"byte_end":78374,"line_start":31,"line_end":31,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":79973,"byte_end":79988,"line_start":80,"line_end":80,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":80070,"byte_end":80085,"line_start":84,"line_end":84,"column_start":48,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":80167,"byte_end":80182,"line_start":88,"line_end":88,"column_start":48,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":88369,"byte_end":88385,"line_start":37,"line_end":37,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":89443,"byte_end":89459,"line_start":79,"line_end":79,"column_start":54,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":90383,"byte_end":90399,"line_start":109,"line_end":109,"column_start":58,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":91342,"byte_end":91358,"line_start":143,"line_end":143,"column_start":84,"column_end":100},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":92247,"byte_end":92263,"line_start":173,"line_end":173,"column_start":83,"column_end":99},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":93106,"byte_end":93122,"line_start":201,"line_end":201,"column_start":83,"column_end":99},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":93998,"byte_end":94014,"line_start":230,"line_end":230,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":94441,"byte_end":94457,"line_start":245,"line_end":245,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":94884,"byte_end":94900,"line_start":260,"line_end":260,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":95331,"byte_end":95347,"line_start":275,"line_end":275,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":96187,"byte_end":96194,"line_start":22,"line_end":22,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97008,"byte_end":97015,"line_start":55,"line_end":55,"column_start":20,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97043,"byte_end":97050,"line_start":56,"line_end":56,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97915,"byte_end":97922,"line_start":79,"line_end":79,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":98177,"byte_end":98184,"line_start":96,"line_end":96,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":98333,"byte_end":98340,"line_start":105,"line_end":105,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":101528,"byte_end":101530,"line_start":216,"line_end":216,"column_start":14,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":101816,"byte_end":101818,"line_start":234,"line_end":234,"column_start":18,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":101937,"byte_end":101939,"line_start":243,"line_end":243,"column_start":28,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":104319,"byte_end":104323,"line_start":310,"line_end":310,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":104886,"byte_end":104890,"line_start":323,"line_end":323,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":105752,"byte_end":105756,"line_start":350,"line_end":350,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":106400,"byte_end":106404,"line_start":369,"line_end":369,"column_start":9,"column_end":13},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":106584,"byte_end":106588,"line_start":374,"line_end":374,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":106723,"byte_end":106727,"line_start":380,"line_end":380,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":107155,"byte_end":107159,"line_start":400,"line_end":400,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":107371,"byte_end":107375,"line_start":411,"line_end":411,"column_start":9,"column_end":13},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":112769,"byte_end":112776,"line_start":140,"line_end":140,"column_start":63,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":112973,"byte_end":112980,"line_start":146,"line_end":146,"column_start":76,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":113679,"byte_end":113686,"line_start":175,"line_end":175,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":114100,"byte_end":114110,"line_start":190,"line_end":190,"column_start":66,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":114465,"byte_end":114475,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":115147,"byte_end":115157,"line_start":232,"line_end":232,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":115552,"byte_end":115562,"line_start":252,"line_end":252,"column_start":63,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":115766,"byte_end":115776,"line_start":259,"line_end":259,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":116478,"byte_end":116488,"line_start":289,"line_end":289,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":116908,"byte_end":116921,"line_start":304,"line_end":304,"column_start":66,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":117279,"byte_end":117292,"line_start":319,"line_end":319,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":117967,"byte_end":117980,"line_start":346,"line_end":346,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":118922,"byte_end":118928,"line_start":24,"line_end":24,"column_start":71,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":119157,"byte_end":119163,"line_start":34,"line_end":34,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":783},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":119628,"byte_end":119634,"line_start":54,"line_end":54,"column_start":77,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":119849,"byte_end":119855,"line_start":62,"line_end":62,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":120264,"byte_end":120270,"line_start":84,"line_end":84,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":120872,"byte_end":120878,"line_start":114,"line_end":114,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":132675,"byte_end":132683,"line_start":378,"line_end":378,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":132950,"byte_end":132958,"line_start":388,"line_end":388,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":134027,"byte_end":134035,"line_start":418,"line_end":418,"column_start":74,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":134339,"byte_end":134347,"line_start":428,"line_end":428,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":139921,"byte_end":139927,"line_start":603,"line_end":603,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":140394,"byte_end":140400,"line_start":620,"line_end":620,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":140998,"byte_end":141004,"line_start":639,"line_end":639,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":141491,"byte_end":141497,"line_start":656,"line_end":656,"column_start":74,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":142051,"byte_end":142057,"line_start":675,"line_end":675,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":919},{"krate":0,"index":923},{"krate":0,"index":931},{"krate":0,"index":939},{"krate":0,"index":947},{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":147337,"byte_end":147343,"line_start":836,"line_end":836,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":147956,"byte_end":147963,"line_start":861,"line_end":861,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":148271,"byte_end":148278,"line_start":871,"line_end":871,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":148582,"byte_end":148588,"line_start":881,"line_end":881,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":993},{"krate":0,"index":997},{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":187458,"byte_end":187470,"line_start":51,"line_end":51,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1856}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":187722,"byte_end":187734,"line_start":64,"line_end":64,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1862},{"krate":0,"index":1863}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":188029,"byte_end":188041,"line_start":79,"line_end":79,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1868}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":188287,"byte_end":188299,"line_start":92,"line_end":92,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1873}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":188567,"byte_end":188579,"line_start":106,"line_end":106,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":188797,"byte_end":188809,"line_start":117,"line_end":117,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1882}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":189092,"byte_end":189104,"line_start":133,"line_end":133,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":189271,"byte_end":189283,"line_start":143,"line_end":143,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1891}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":189564,"byte_end":189576,"line_start":157,"line_end":157,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":190697,"byte_end":190709,"line_start":213,"line_end":213,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1909},{"krate":0,"index":1910}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":191137,"byte_end":191149,"line_start":233,"line_end":233,"column_start":53,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":191404,"byte_end":191416,"line_start":244,"line_end":244,"column_start":56,"column_end":68},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":195811,"byte_end":195818,"line_start":23,"line_end":23,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1959},{"krate":0,"index":1960},{"krate":0,"index":1962}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":197097,"byte_end":197104,"line_start":67,"line_end":67,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1966}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":197327,"byte_end":197334,"line_start":75,"line_end":75,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1972},{"krate":0,"index":1973},{"krate":0,"index":1974},{"krate":0,"index":1975},{"krate":0,"index":1976},{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":200673,"byte_end":200685,"line_start":156,"line_end":156,"column_start":5,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1984},{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":1988},{"krate":0,"index":1990},{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":203813,"byte_end":203825,"line_start":251,"line_end":251,"column_start":5,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2000},{"krate":0,"index":2002},{"krate":0,"index":2004},{"krate":0,"index":2006}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":206779,"byte_end":206791,"line_start":337,"line_end":337,"column_start":60,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":2012},{"krate":0,"index":2013}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":208964,"byte_end":208970,"line_start":18,"line_end":18,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2053}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":216831,"byte_end":216837,"line_start":243,"line_end":243,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2060},{"krate":0,"index":2062},{"krate":0,"index":2064}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":218389,"byte_end":218397,"line_start":30,"line_end":30,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2116},{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2120},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":2126},{"krate":0,"index":2129},{"krate":0,"index":2131},{"krate":0,"index":2135}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227793,"byte_end":227800,"line_start":305,"line_end":305,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2139}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":247003,"byte_end":247011,"line_start":740,"line_end":740,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2147},{"krate":0,"index":2148}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":247312,"byte_end":247319,"line_start":756,"line_end":756,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2153}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":247543,"byte_end":247551,"line_start":767,"line_end":767,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2158},{"krate":0,"index":2159}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":247892,"byte_end":247900,"line_start":783,"line_end":783,"column_start":69,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":2164}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":248966,"byte_end":248974,"line_start":818,"line_end":818,"column_start":70,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":2171}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":256685,"byte_end":256692,"line_start":1009,"line_end":1009,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2184},{"krate":0,"index":2185},{"krate":0,"index":2186},{"krate":0,"index":2187},{"krate":0,"index":2188},{"krate":0,"index":2189}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":260505,"byte_end":260518,"line_start":12,"line_end":12,"column_start":5,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2211},{"krate":0,"index":2212}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":262522,"byte_end":262538,"line_start":63,"line_end":63,"column_start":5,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2220},{"krate":0,"index":2221}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":265569,"byte_end":265582,"line_start":135,"line_end":135,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2227},{"krate":0,"index":2228}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":266733,"byte_end":266749,"line_start":160,"line_end":160,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2234},{"krate":0,"index":2235}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":274745,"byte_end":274753,"line_start":33,"line_end":33,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":2312},{"krate":0,"index":2313},{"krate":0,"index":2315}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":285406,"byte_end":285412,"line_start":350,"line_end":350,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2343}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":285878,"byte_end":285884,"line_start":367,"line_end":367,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2350}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":286271,"byte_end":286277,"line_start":381,"line_end":381,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2357}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":286620,"byte_end":286626,"line_start":394,"line_end":394,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2365}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":287098,"byte_end":287104,"line_start":411,"line_end":411,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2372}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":287497,"byte_end":287503,"line_start":425,"line_end":425,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2379}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":287845,"byte_end":287856,"line_start":438,"line_end":438,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2390}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":288924,"byte_end":288935,"line_start":475,"line_end":475,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2401}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":290007,"byte_end":290021,"line_start":512,"line_end":512,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2412}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":291469,"byte_end":291481,"line_start":566,"line_end":566,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2430}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":291646,"byte_end":291661,"line_start":573,"line_end":573,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2434}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":291880,"byte_end":291888,"line_start":581,"line_end":581,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2441}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":292500,"byte_end":292508,"line_start":602,"line_end":602,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2450}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":293216,"byte_end":293224,"line_start":625,"line_end":625,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2459}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":294125,"byte_end":294133,"line_start":652,"line_end":652,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2468}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":296114,"byte_end":296120,"line_start":21,"line_end":21,"column_start":61,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2514},{"krate":0,"index":2515},{"krate":0,"index":2516},{"krate":0,"index":2519}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":298823,"byte_end":298829,"line_start":102,"line_end":102,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":2529},{"krate":0,"index":2530},{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2535},{"krate":0,"index":2537},{"krate":0,"index":2540},{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2545},{"krate":0,"index":2546}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":304521,"byte_end":304527,"line_start":265,"line_end":265,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2551},{"krate":0,"index":2552}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":305764,"byte_end":305770,"line_start":303,"line_end":303,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2558},{"krate":0,"index":2559},{"krate":0,"index":2560},{"krate":0,"index":2561},{"krate":0,"index":2563},{"krate":0,"index":2564},{"krate":0,"index":2566},{"krate":0,"index":2567},{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2572},{"krate":0,"index":2573},{"krate":0,"index":2575},{"krate":0,"index":2576},{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2584},{"krate":0,"index":2585},{"krate":0,"index":2586},{"krate":0,"index":2587},{"krate":0,"index":2590}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":322976,"byte_end":322983,"line_start":817,"line_end":817,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2595}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":323776,"byte_end":323784,"line_start":836,"line_end":836,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2599}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":324748,"byte_end":324756,"line_start":860,"line_end":860,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2603}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":327790,"byte_end":327796,"line_start":962,"line_end":962,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2612}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":329306,"byte_end":329312,"line_start":1010,"line_end":1010,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2617}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":329924,"byte_end":329930,"line_start":1031,"line_end":1031,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2625}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":333234,"byte_end":333239,"line_start":51,"line_end":51,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2657},{"krate":0,"index":2658},{"krate":0,"index":2659},{"krate":0,"index":2660}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":334398,"byte_end":334407,"line_start":95,"line_end":95,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2663},{"krate":0,"index":2664},{"krate":0,"index":2665},{"krate":0,"index":2666}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":335426,"byte_end":335435,"line_start":135,"line_end":135,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":335967,"byte_end":335976,"line_start":163,"line_end":163,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2679}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":336477,"byte_end":336491,"line_start":189,"line_end":189,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2682},{"krate":0,"index":2683},{"krate":0,"index":2684},{"krate":0,"index":2685}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":337996,"byte_end":338003,"line_start":245,"line_end":245,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2688},{"krate":0,"index":2689},{"krate":0,"index":2690},{"krate":0,"index":2691}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":338974,"byte_end":338990,"line_start":285,"line_end":285,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2694},{"krate":0,"index":2695},{"krate":0,"index":2696},{"krate":0,"index":2697}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":344923,"byte_end":344929,"line_start":492,"line_end":492,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2724},{"krate":0,"index":2727},{"krate":0,"index":2730},{"krate":0,"index":2733},{"krate":0,"index":2736},{"krate":0,"index":2739}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":357458,"byte_end":357464,"line_start":88,"line_end":88,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2874}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":358872,"byte_end":358878,"line_start":147,"line_end":147,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2880}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":359280,"byte_end":359286,"line_start":159,"line_end":159,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2886},{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2889},{"krate":0,"index":2890},{"krate":0,"index":2891},{"krate":0,"index":2892},{"krate":0,"index":2893},{"krate":0,"index":2894},{"krate":0,"index":2895},{"krate":0,"index":2896},{"krate":0,"index":2897},{"krate":0,"index":2902},{"krate":0,"index":2907},{"krate":0,"index":2908},{"krate":0,"index":2911},{"krate":0,"index":2912},{"krate":0,"index":2915},{"krate":0,"index":2918},{"krate":0,"index":2922},{"krate":0,"index":2925},{"krate":0,"index":2930},{"krate":0,"index":2937},{"krate":0,"index":2940},{"krate":0,"index":2947},{"krate":0,"index":2951}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":375292,"byte_end":375298,"line_start":685,"line_end":685,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2957},{"krate":0,"index":2958},{"krate":0,"index":2959},{"krate":0,"index":2960},{"krate":0,"index":2961},{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2964},{"krate":0,"index":2968},{"krate":0,"index":2972},{"krate":0,"index":2974},{"krate":0,"index":2976},{"krate":0,"index":2982}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":383224,"byte_end":383230,"line_start":932,"line_end":932,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2996}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":383611,"byte_end":383617,"line_start":942,"line_end":942,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3001}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":384040,"byte_end":384046,"line_start":952,"line_end":952,"column_start":64,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3007}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":384305,"byte_end":384311,"line_start":960,"line_end":960,"column_start":67,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3013}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":384576,"byte_end":384582,"line_start":968,"line_end":968,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3018}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":385060,"byte_end":385066,"line_start":986,"line_end":986,"column_start":64,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3024},{"krate":0,"index":3028},{"krate":0,"index":3029},{"krate":0,"index":3033},{"krate":0,"index":3034},{"krate":0,"index":3036},{"krate":0,"index":3038}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":388030,"byte_end":388036,"line_start":1083,"line_end":1083,"column_start":67,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3045},{"krate":0,"index":3047},{"krate":0,"index":3049}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":388692,"byte_end":388698,"line_start":1103,"line_end":1103,"column_start":59,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3055},{"krate":0,"index":3056}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":389822,"byte_end":389834,"line_start":1139,"line_end":1139,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3061},{"krate":0,"index":3063},{"krate":0,"index":3066}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":391384,"byte_end":391396,"line_start":1196,"line_end":1196,"column_start":56,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":3071},{"krate":0,"index":3072}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":392411,"byte_end":392417,"line_start":1232,"line_end":1232,"column_start":5,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3077}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":393189,"byte_end":393195,"line_start":1253,"line_end":1253,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3082},{"krate":0,"index":3083}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":394143,"byte_end":394149,"line_start":1281,"line_end":1281,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3089}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":394768,"byte_end":394774,"line_start":1299,"line_end":1299,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3095},{"krate":0,"index":3096},{"krate":0,"index":3097}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":395238,"byte_end":395244,"line_start":1320,"line_end":1320,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3104},{"krate":0,"index":3105}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":395702,"byte_end":395708,"line_start":1342,"line_end":1342,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3111},{"krate":0,"index":3112}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":396194,"byte_end":396200,"line_start":1362,"line_end":1362,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3119},{"krate":0,"index":3120},{"krate":0,"index":3122},{"krate":0,"index":3124},{"krate":0,"index":3126}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":398820,"byte_end":398826,"line_start":1450,"line_end":1450,"column_start":35,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":398961,"byte_end":398967,"line_start":1457,"line_end":1457,"column_start":67,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3141}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":402935,"byte_end":402941,"line_start":1576,"line_end":1576,"column_start":5,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3149},{"krate":0,"index":3153}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":406872,"byte_end":406878,"line_start":1675,"line_end":1675,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3160}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":407505,"byte_end":407511,"line_start":1696,"line_end":1696,"column_start":64,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3166}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":408257,"byte_end":408263,"line_start":1719,"line_end":1719,"column_start":5,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3174}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":409030,"byte_end":409034,"line_start":1743,"line_end":1743,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3180},{"krate":0,"index":3182}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":411058,"byte_end":411062,"line_start":1808,"line_end":1808,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3189},{"krate":0,"index":3190},{"krate":0,"index":3191}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":411489,"byte_end":411493,"line_start":1827,"line_end":1827,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3197},{"krate":0,"index":3198}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":411990,"byte_end":411994,"line_start":1850,"line_end":1850,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3204},{"krate":0,"index":3205}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":412379,"byte_end":412385,"line_start":1867,"line_end":1867,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3211}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_simba.rs","byte_start":413093,"byte_end":413101,"line_start":15,"line_end":15,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3225},{"krate":0,"index":3226},{"krate":0,"index":3227},{"krate":0,"index":3228},{"krate":0,"index":3229},{"krate":0,"index":3231},{"krate":0,"index":3233},{"krate":0,"index":3235},{"krate":0,"index":3237}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":418342,"byte_end":418354,"line_start":93,"line_end":93,"column_start":9,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":418469,"byte_end":418481,"line_start":98,"line_end":98,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3280}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":421136,"byte_end":421151,"line_start":182,"line_end":182,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3289},{"krate":0,"index":3290}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":421745,"byte_end":421757,"line_start":202,"line_end":202,"column_start":9,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":421874,"byte_end":421889,"line_start":206,"line_end":206,"column_start":9,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":422009,"byte_end":422024,"line_start":210,"line_end":210,"column_start":9,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":422156,"byte_end":422168,"line_start":215,"line_end":215,"column_start":9,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":422292,"byte_end":422307,"line_start":219,"line_end":219,"column_start":9,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":422434,"byte_end":422449,"line_start":223,"line_end":223,"column_start":9,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":422528,"byte_end":422534,"line_start":227,"line_end":227,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3326}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":442611,"byte_end":442616,"line_start":730,"line_end":730,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3344},{"krate":0,"index":3345}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":442965,"byte_end":442974,"line_start":749,"line_end":749,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3348},{"krate":0,"index":3349},{"krate":0,"index":3350},{"krate":0,"index":3351}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":443333,"byte_end":443340,"line_start":768,"line_end":768,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3354},{"krate":0,"index":3355},{"krate":0,"index":3356},{"krate":0,"index":3357}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":443667,"byte_end":443676,"line_start":787,"line_end":787,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3360},{"krate":0,"index":3361},{"krate":0,"index":3362},{"krate":0,"index":3363}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":444000,"byte_end":444006,"line_start":806,"line_end":806,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3369},{"krate":0,"index":3372},{"krate":0,"index":3374}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":445250,"byte_end":445256,"line_start":845,"line_end":845,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3381},{"krate":0,"index":3384},{"krate":0,"index":3386}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":446579,"byte_end":446590,"line_start":884,"line_end":884,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3395}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":448646,"byte_end":448659,"line_start":49,"line_end":49,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3446},{"krate":0,"index":3450}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":449492,"byte_end":449498,"line_start":83,"line_end":83,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3460},{"krate":0,"index":3465}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":450511,"byte_end":450522,"line_start":120,"line_end":120,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3475},{"krate":0,"index":3480}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":451572,"byte_end":451578,"line_start":157,"line_end":157,"column_start":64,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3493},{"krate":0,"index":3494},{"krate":0,"index":3495},{"krate":0,"index":3499},{"krate":0,"index":3501},{"krate":0,"index":3506},{"krate":0,"index":3507},{"krate":0,"index":3508},{"krate":0,"index":3509},{"krate":0,"index":3510},{"krate":0,"index":3511}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":455893,"byte_end":455899,"line_start":302,"line_end":302,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3517},{"krate":0,"index":3518}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":457087,"byte_end":457093,"line_start":338,"line_end":338,"column_start":67,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3524},{"krate":0,"index":3525}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":458103,"byte_end":458109,"line_start":370,"line_end":370,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":3532}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":458627,"byte_end":458635,"line_start":387,"line_end":387,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3537},{"krate":0,"index":3538},{"krate":0,"index":3539},{"krate":0,"index":3540},{"krate":0,"index":3541}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":459152,"byte_end":459156,"line_start":414,"line_end":414,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3546},{"krate":0,"index":3547}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":459617,"byte_end":459624,"line_start":430,"line_end":430,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3551},{"krate":0,"index":3552},{"krate":0,"index":3553}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":464979,"byte_end":464985,"line_start":12,"line_end":12,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3580},{"krate":0,"index":3581},{"krate":0,"index":3582}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":467224,"byte_end":467230,"line_start":87,"line_end":87,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3588}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":467786,"byte_end":467798,"line_start":104,"line_end":104,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3593},{"krate":0,"index":3594}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/scalar.rs","byte_start":469156,"byte_end":469157,"line_start":24,"line_end":24,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3605}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":469513,"byte_end":469519,"line_start":7,"line_end":7,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3628},{"krate":0,"index":3630},{"krate":0,"index":3632}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":471575,"byte_end":471581,"line_start":76,"line_end":76,"column_start":73,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":3639},{"krate":0,"index":3641},{"krate":0,"index":3643},{"krate":0,"index":3645}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":474340,"byte_end":474346,"line_start":173,"line_end":173,"column_start":80,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":3652},{"krate":0,"index":3654},{"krate":0,"index":3656},{"krate":0,"index":3658},{"krate":0,"index":3661},{"krate":0,"index":3662},{"krate":0,"index":3664},{"krate":0,"index":3666}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":484271,"byte_end":484275,"line_start":74,"line_end":74,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3701},{"krate":0,"index":3702},{"krate":0,"index":3704},{"krate":0,"index":3705},{"krate":0,"index":3706},{"krate":0,"index":3707}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":486627,"byte_end":486631,"line_start":143,"line_end":143,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3710},{"krate":0,"index":3711},{"krate":0,"index":3713},{"krate":0,"index":3714},{"krate":0,"index":3715}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":487656,"byte_end":487660,"line_start":179,"line_end":179,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3718}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":489435,"byte_end":489439,"line_start":251,"line_end":251,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3721},{"krate":0,"index":3722}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":489856,"byte_end":489860,"line_start":264,"line_end":264,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3729}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":490388,"byte_end":490392,"line_start":280,"line_end":280,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3737}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":491002,"byte_end":491006,"line_start":298,"line_end":298,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3745}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":491781,"byte_end":491785,"line_start":320,"line_end":320,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3753}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":493818,"byte_end":493828,"line_start":36,"line_end":36,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3783},{"krate":0,"index":3784},{"krate":0,"index":3785},{"krate":0,"index":3786},{"krate":0,"index":3787}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":495380,"byte_end":495390,"line_start":92,"line_end":92,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3792}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":495575,"byte_end":495585,"line_start":104,"line_end":104,"column_start":59,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":3796},{"krate":0,"index":3797},{"krate":0,"index":3798},{"krate":0,"index":3799},{"krate":0,"index":3800},{"krate":0,"index":3801},{"krate":0,"index":3802},{"krate":0,"index":3803},{"krate":0,"index":3804}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":496538,"byte_end":496548,"line_start":153,"line_end":153,"column_start":63,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3808},{"krate":0,"index":3809},{"krate":0,"index":3810},{"krate":0,"index":3811},{"krate":0,"index":3812},{"krate":0,"index":3813},{"krate":0,"index":3814},{"krate":0,"index":3815},{"krate":0,"index":3816}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":497541,"byte_end":497551,"line_start":207,"line_end":207,"column_start":62,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":3820},{"krate":0,"index":3821}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":497891,"byte_end":497901,"line_start":222,"line_end":222,"column_start":69,"column_end":79},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":498061,"byte_end":498071,"line_start":227,"line_end":227,"column_start":72,"column_end":82},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":498225,"byte_end":498235,"line_start":232,"line_end":232,"column_start":66,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":3831},{"krate":0,"index":3832}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":499005,"byte_end":499015,"line_start":262,"line_end":262,"column_start":73,"column_end":83},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":499179,"byte_end":499189,"line_start":267,"line_end":267,"column_start":76,"column_end":86},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":499308,"byte_end":499318,"line_start":272,"line_end":272,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3842}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":500023,"byte_end":500033,"line_start":288,"line_end":288,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3848}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":500515,"byte_end":500525,"line_start":301,"line_end":301,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3855}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":501432,"byte_end":501442,"line_start":329,"line_end":329,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3859}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":514838,"byte_end":514846,"line_start":33,"line_end":33,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":3920},{"krate":0,"index":3921},{"krate":0,"index":3922},{"krate":0,"index":3923},{"krate":0,"index":3924},{"krate":0,"index":3925},{"krate":0,"index":3926}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":515926,"byte_end":515940,"line_start":86,"line_end":86,"column_start":52,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3929},{"krate":0,"index":3930},{"krate":0,"index":3931},{"krate":0,"index":3932},{"krate":0,"index":3933},{"krate":0,"index":3934},{"krate":0,"index":3935}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":516755,"byte_end":516766,"line_start":126,"line_end":126,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3938},{"krate":0,"index":3939},{"krate":0,"index":3940},{"krate":0,"index":3941},{"krate":0,"index":3942},{"krate":0,"index":3943},{"krate":0,"index":3944}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":518492,"byte_end":518497,"line_start":33,"line_end":33,"column_start":70,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":3971}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":518752,"byte_end":518757,"line_start":43,"line_end":43,"column_start":45,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":520203,"byte_end":520208,"line_start":101,"line_end":101,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3979},{"krate":0,"index":3980},{"krate":0,"index":3981},{"krate":0,"index":3982},{"krate":0,"index":3983},{"krate":0,"index":3984},{"krate":0,"index":3985},{"krate":0,"index":3986},{"krate":0,"index":3987}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":523835,"byte_end":523840,"line_start":221,"line_end":221,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3991},{"krate":0,"index":3992},{"krate":0,"index":3993}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":524251,"byte_end":524256,"line_start":239,"line_end":239,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3997},{"krate":0,"index":3998}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":524732,"byte_end":524737,"line_start":261,"line_end":261,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4002},{"krate":0,"index":4003}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":525109,"byte_end":525114,"line_start":277,"line_end":277,"column_start":41,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":525207,"byte_end":525212,"line_start":279,"line_end":279,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4010}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":525422,"byte_end":525427,"line_start":289,"line_end":289,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4014},{"krate":0,"index":4015},{"krate":0,"index":4016},{"krate":0,"index":4017},{"krate":0,"index":4018}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":526076,"byte_end":526081,"line_start":322,"line_end":322,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4022},{"krate":0,"index":4023},{"krate":0,"index":4024}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":526843,"byte_end":526848,"line_start":351,"line_end":351,"column_start":61,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":4028}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":528218,"byte_end":528223,"line_start":15,"line_end":15,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4079},{"krate":0,"index":4080},{"krate":0,"index":4081},{"krate":0,"index":4082}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":531421,"byte_end":531426,"line_start":118,"line_end":118,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4086},{"krate":0,"index":4087}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":531722,"byte_end":531730,"line_start":133,"line_end":133,"column_start":59,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4091}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs","byte_start":535081,"byte_end":535086,"line_start":28,"line_end":28,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4121},{"krate":0,"index":4122},{"krate":0,"index":4124}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs","byte_start":535773,"byte_end":535778,"line_start":53,"line_end":53,"column_start":62,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4129},{"krate":0,"index":4130},{"krate":0,"index":4131}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs","byte_start":538170,"byte_end":538177,"line_start":134,"line_end":134,"column_start":64,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":4135}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs","byte_start":538444,"byte_end":538449,"line_start":145,"line_end":145,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4139}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs","byte_start":538692,"byte_end":538697,"line_start":156,"line_end":156,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4145}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs","byte_start":539172,"byte_end":539177,"line_start":170,"line_end":170,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4152}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs","byte_start":539741,"byte_end":539746,"line_start":189,"line_end":189,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4159}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs","byte_start":540419,"byte_end":540424,"line_start":212,"line_end":212,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4166}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_ops.rs","byte_start":543022,"byte_end":543027,"line_start":23,"line_end":23,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4238},{"krate":0,"index":4239}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_ops.rs","byte_start":543247,"byte_end":543252,"line_start":35,"line_end":35,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4243}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_ops.rs","byte_start":543487,"byte_end":543492,"line_start":50,"line_end":50,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4247},{"krate":0,"index":4248}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_simba.rs","byte_start":550768,"byte_end":550773,"line_start":9,"line_end":9,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4270},{"krate":0,"index":4271},{"krate":0,"index":4272},{"krate":0,"index":4273},{"krate":0,"index":4274},{"krate":0,"index":4275},{"krate":0,"index":4276},{"krate":0,"index":4277},{"krate":0,"index":4278}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":552713,"byte_end":552721,"line_start":35,"line_end":35,"column_start":70,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":4306}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":552982,"byte_end":552990,"line_start":45,"line_end":45,"column_start":45,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":553148,"byte_end":553156,"line_start":52,"line_end":52,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4314}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":554689,"byte_end":554697,"line_start":114,"line_end":114,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4318},{"krate":0,"index":4319},{"krate":0,"index":4320},{"krate":0,"index":4321},{"krate":0,"index":4322},{"krate":0,"index":4323},{"krate":0,"index":4324},{"krate":0,"index":4325},{"krate":0,"index":4326},{"krate":0,"index":4327},{"krate":0,"index":4328}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564049,"byte_end":564057,"line_start":364,"line_end":364,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4332},{"krate":0,"index":4333},{"krate":0,"index":4334},{"krate":0,"index":4335}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":567093,"byte_end":567101,"line_start":446,"line_end":446,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":567209,"byte_end":567217,"line_start":448,"line_end":448,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4342}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":567408,"byte_end":567416,"line_start":458,"line_end":458,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4346},{"krate":0,"index":4347},{"krate":0,"index":4348}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":567836,"byte_end":567844,"line_start":477,"line_end":477,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4352},{"krate":0,"index":4353}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":568334,"byte_end":568342,"line_start":500,"line_end":500,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4357},{"krate":0,"index":4358}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":568762,"byte_end":568770,"line_start":522,"line_end":522,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4362}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_construction.rs","byte_start":570133,"byte_end":570141,"line_start":11,"line_end":11,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4389}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_construction.rs","byte_start":570728,"byte_end":570736,"line_start":33,"line_end":33,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4393}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":571852,"byte_end":571860,"line_start":33,"line_end":33,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4434},{"krate":0,"index":4435},{"krate":0,"index":4436}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":572481,"byte_end":572490,"line_start":55,"line_end":55,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4440},{"krate":0,"index":4441},{"krate":0,"index":4442}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":573083,"byte_end":573092,"line_start":78,"line_end":78,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4446},{"krate":0,"index":4447},{"krate":0,"index":4448}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":573685,"byte_end":573693,"line_start":101,"line_end":101,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":4454},{"krate":0,"index":4455},{"krate":0,"index":4456}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":574351,"byte_end":574359,"line_start":124,"line_end":124,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":4462},{"krate":0,"index":4463},{"krate":0,"index":4464}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":575074,"byte_end":575082,"line_start":147,"line_end":147,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4470},{"krate":0,"index":4471},{"krate":0,"index":4472}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":576032,"byte_end":576040,"line_start":176,"line_end":176,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":4477},{"krate":0,"index":4478},{"krate":0,"index":4481}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":577646,"byte_end":577653,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4484}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":577790,"byte_end":577797,"line_start":227,"line_end":227,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4487}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":577930,"byte_end":577937,"line_start":234,"line_end":234,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4490}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":578074,"byte_end":578081,"line_start":241,"line_end":241,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4493}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":578264,"byte_end":578272,"line_start":249,"line_end":249,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4499}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":578753,"byte_end":578761,"line_start":265,"line_end":265,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4506}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":579324,"byte_end":579332,"line_start":283,"line_end":283,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4513}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":580060,"byte_end":580068,"line_start":305,"line_end":305,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4520}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_ops.rs","byte_start":581848,"byte_end":581856,"line_start":33,"line_end":33,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4558},{"krate":0,"index":4559}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_simba.rs","byte_start":587314,"byte_end":587322,"line_start":9,"line_end":9,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4572},{"krate":0,"index":4573},{"krate":0,"index":4574},{"krate":0,"index":4575},{"krate":0,"index":4576},{"krate":0,"index":4577},{"krate":0,"index":4578},{"krate":0,"index":4579},{"krate":0,"index":4580}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":589185,"byte_end":589194,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4614},{"krate":0,"index":4615},{"krate":0,"index":4617},{"krate":0,"index":4618},{"krate":0,"index":4619},{"krate":0,"index":4622},{"krate":0,"index":4625},{"krate":0,"index":4626},{"krate":0,"index":4627},{"krate":0,"index":4628},{"krate":0,"index":4629},{"krate":0,"index":4630}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":596756,"byte_end":596764,"line_start":241,"line_end":241,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4633}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":597386,"byte_end":597395,"line_start":270,"line_end":270,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4638},{"krate":0,"index":4640},{"krate":0,"index":4641},{"krate":0,"index":4642},{"krate":0,"index":4644},{"krate":0,"index":4648},{"krate":0,"index":4649},{"krate":0,"index":4650},{"krate":0,"index":4651},{"krate":0,"index":4652},{"krate":0,"index":4655},{"krate":0,"index":4658},{"krate":0,"index":4661},{"krate":0,"index":4664},{"krate":0,"index":4667},{"krate":0,"index":4670},{"krate":0,"index":4671},{"krate":0,"index":4672},{"krate":0,"index":4673},{"krate":0,"index":4674},{"krate":0,"index":4675},{"krate":0,"index":4676}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":619112,"byte_end":619120,"line_start":867,"line_end":867,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4679}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":622209,"byte_end":622219,"line_start":54,"line_end":54,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":622296,"byte_end":622306,"line_start":56,"line_end":56,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4720}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":622632,"byte_end":622642,"line_start":67,"line_end":67,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4724}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":622786,"byte_end":622796,"line_start":73,"line_end":73,"column_start":45,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":622842,"byte_end":622852,"line_start":75,"line_end":75,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4730}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":623619,"byte_end":623629,"line_start":110,"line_end":110,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4733},{"krate":0,"index":4734},{"krate":0,"index":4735},{"krate":0,"index":4736},{"krate":0,"index":4737},{"krate":0,"index":4738},{"krate":0,"index":4739},{"krate":0,"index":4740},{"krate":0,"index":4741},{"krate":0,"index":4742},{"krate":0,"index":4743},{"krate":0,"index":4744},{"krate":0,"index":4745},{"krate":0,"index":4746}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628995,"byte_end":629005,"line_start":300,"line_end":300,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4749},{"krate":0,"index":4750},{"krate":0,"index":4751},{"krate":0,"index":4752},{"krate":0,"index":4753},{"krate":0,"index":4754},{"krate":0,"index":4755},{"krate":0,"index":4756},{"krate":0,"index":4757},{"krate":0,"index":4758},{"krate":0,"index":4761},{"krate":0,"index":4762},{"krate":0,"index":4763},{"krate":0,"index":4764},{"krate":0,"index":4765},{"krate":0,"index":4768},{"krate":0,"index":4769},{"krate":0,"index":4770},{"krate":0,"index":4771},{"krate":0,"index":4772},{"krate":0,"index":4773},{"krate":0,"index":4774},{"krate":0,"index":4776},{"krate":0,"index":4778},{"krate":0,"index":4779},{"krate":0,"index":4780},{"krate":0,"index":4781},{"krate":0,"index":4782},{"krate":0,"index":4783},{"krate":0,"index":4784},{"krate":0,"index":4785},{"krate":0,"index":4786},{"krate":0,"index":4787},{"krate":0,"index":4788},{"krate":0,"index":4789}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":648929,"byte_end":648939,"line_start":915,"line_end":915,"column_start":59,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":4792},{"krate":0,"index":4793},{"krate":0,"index":4794}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":649455,"byte_end":649465,"line_start":931,"line_end":931,"column_start":61,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":4798},{"krate":0,"index":4799}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":650056,"byte_end":650066,"line_start":950,"line_end":950,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4803},{"krate":0,"index":4804}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":650566,"byte_end":650576,"line_start":964,"line_end":964,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4808}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":650930,"byte_end":650940,"line_start":977,"line_end":977,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4813},{"krate":0,"index":4814},{"krate":0,"index":4815},{"krate":0,"index":4816},{"krate":0,"index":4817}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":651402,"byte_end":651416,"line_start":1001,"line_end":1001,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4820},{"krate":0,"index":4821},{"krate":0,"index":4822},{"krate":0,"index":4823},{"krate":0,"index":4824},{"krate":0,"index":4825},{"krate":0,"index":4826},{"krate":0,"index":4827},{"krate":0,"index":4828},{"krate":0,"index":4829},{"krate":0,"index":4831},{"krate":0,"index":4832},{"krate":0,"index":4833},{"krate":0,"index":4834},{"krate":0,"index":4835},{"krate":0,"index":4837},{"krate":0,"index":4838},{"krate":0,"index":4839},{"krate":0,"index":4840},{"krate":0,"index":4841},{"krate":0,"index":4842},{"krate":0,"index":4843},{"krate":0,"index":4844},{"krate":0,"index":4845},{"krate":0,"index":4846},{"krate":0,"index":4847}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":669917,"byte_end":669931,"line_start":1539,"line_end":1539,"column_start":52,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":4850}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":670546,"byte_end":670560,"line_start":1561,"line_end":1561,"column_start":59,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":4853},{"krate":0,"index":4854},{"krate":0,"index":4855}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":670899,"byte_end":670913,"line_start":1575,"line_end":1575,"column_start":61,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":4858},{"krate":0,"index":4859}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":671326,"byte_end":671340,"line_start":1593,"line_end":1593,"column_start":53,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4862},{"krate":0,"index":4863}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":672233,"byte_end":672243,"line_start":22,"line_end":22,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4895},{"krate":0,"index":4896}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":673235,"byte_end":673245,"line_start":50,"line_end":50,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4899},{"krate":0,"index":4900},{"krate":0,"index":4902},{"krate":0,"index":4903}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":674803,"byte_end":674813,"line_start":104,"line_end":104,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4906}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":675338,"byte_end":675348,"line_start":122,"line_end":122,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4910}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":675494,"byte_end":675504,"line_start":132,"line_end":132,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4913},{"krate":0,"index":4914}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":675768,"byte_end":675776,"line_start":147,"line_end":147,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4917}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":676346,"byte_end":676360,"line_start":173,"line_end":173,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4922},{"krate":0,"index":4923},{"krate":0,"index":4925},{"krate":0,"index":4926},{"krate":0,"index":4927},{"krate":0,"index":4934},{"krate":0,"index":4935},{"krate":0,"index":4936},{"krate":0,"index":4939},{"krate":0,"index":4942},{"krate":0,"index":4945},{"krate":0,"index":4948},{"krate":0,"index":4951},{"krate":0,"index":4954},{"krate":0,"index":4957},{"krate":0,"index":4960},{"krate":0,"index":4962},{"krate":0,"index":4964},{"krate":0,"index":4966},{"krate":0,"index":4968}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":700006,"byte_end":700020,"line_start":793,"line_end":793,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4974}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":700193,"byte_end":700201,"line_start":803,"line_end":803,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":4977}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":702832,"byte_end":702842,"line_start":35,"line_end":35,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5011},{"krate":0,"index":5012},{"krate":0,"index":5013}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":703374,"byte_end":703388,"line_start":58,"line_end":58,"column_start":47,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5017},{"krate":0,"index":5018},{"krate":0,"index":5019}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":703946,"byte_end":703960,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":5023},{"krate":0,"index":5024},{"krate":0,"index":5025}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":704544,"byte_end":704558,"line_start":102,"line_end":102,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5030},{"krate":0,"index":5031},{"krate":0,"index":5032}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":705144,"byte_end":705158,"line_start":124,"line_end":124,"column_start":53,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5037},{"krate":0,"index":5038},{"krate":0,"index":5039}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":705779,"byte_end":705793,"line_start":146,"line_end":146,"column_start":52,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5044},{"krate":0,"index":5045},{"krate":0,"index":5046}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":706397,"byte_end":706411,"line_start":168,"line_end":168,"column_start":79,"column_end":93},"value":"","parent":null,"children":[{"krate":0,"index":5050},{"krate":0,"index":5051},{"krate":0,"index":5052}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":707757,"byte_end":707764,"line_start":221,"line_end":221,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":5055}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":707952,"byte_end":707961,"line_start":231,"line_end":231,"column_start":52,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5058}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":708148,"byte_end":708162,"line_start":241,"line_end":241,"column_start":47,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5061}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":708357,"byte_end":708364,"line_start":251,"line_end":251,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":5064}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":708567,"byte_end":708577,"line_start":261,"line_end":261,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5067}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":708747,"byte_end":708757,"line_start":268,"line_end":268,"column_start":76,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":5072}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":709065,"byte_end":709075,"line_start":279,"line_end":279,"column_start":76,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":5078}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":709472,"byte_end":709482,"line_start":295,"line_end":295,"column_start":76,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":5084}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":709988,"byte_end":709998,"line_start":315,"line_end":315,"column_start":77,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":5090}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":710742,"byte_end":710756,"line_start":344,"line_end":344,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5096}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":711120,"byte_end":711134,"line_start":356,"line_end":356,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5102}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":711599,"byte_end":711613,"line_start":373,"line_end":373,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5108}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":712211,"byte_end":712225,"line_start":394,"line_end":394,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5114}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_coordinates.rs","byte_start":713209,"byte_end":713219,"line_start":11,"line_end":11,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5127},{"krate":0,"index":5128}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_coordinates.rs","byte_start":713396,"byte_end":713406,"line_start":20,"line_end":20,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5131}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_ops.rs","byte_start":715073,"byte_end":715083,"line_start":65,"line_end":65,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5164},{"krate":0,"index":5165}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_ops.rs","byte_start":715250,"byte_end":715260,"line_start":74,"line_end":74,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5168}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_ops.rs","byte_start":728594,"byte_end":728604,"line_start":553,"line_end":553,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5174},{"krate":0,"index":5175}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_simba.rs","byte_start":732743,"byte_end":732753,"line_start":7,"line_end":7,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5191},{"krate":0,"index":5192},{"krate":0,"index":5193},{"krate":0,"index":5194},{"krate":0,"index":5195},{"krate":0,"index":5196},{"krate":0,"index":5197},{"krate":0,"index":5198},{"krate":0,"index":5199}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_simba.rs","byte_start":733740,"byte_end":733754,"line_start":50,"line_end":50,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5202},{"krate":0,"index":5203},{"krate":0,"index":5204},{"krate":0,"index":5205},{"krate":0,"index":5206},{"krate":0,"index":5207},{"krate":0,"index":5208},{"krate":0,"index":5209},{"krate":0,"index":5210}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":735257,"byte_end":735264,"line_start":13,"line_end":13,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5234},{"krate":0,"index":5235},{"krate":0,"index":5236},{"krate":0,"index":5237},{"krate":0,"index":5238}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736010,"byte_end":736021,"line_start":43,"line_end":43,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5241},{"krate":0,"index":5242},{"krate":0,"index":5243},{"krate":0,"index":5244},{"krate":0,"index":5245},{"krate":0,"index":5246},{"krate":0,"index":5247},{"krate":0,"index":5248},{"krate":0,"index":5249},{"krate":0,"index":5250},{"krate":0,"index":5251},{"krate":0,"index":5252},{"krate":0,"index":5253},{"krate":0,"index":5254},{"krate":0,"index":5255},{"krate":0,"index":5256},{"krate":0,"index":5257},{"krate":0,"index":5258},{"krate":0,"index":5259}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":746189,"byte_end":746200,"line_start":365,"line_end":365,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5262}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":746364,"byte_end":746375,"line_start":371,"line_end":371,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5265},{"krate":0,"index":5266},{"krate":0,"index":5267}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":746720,"byte_end":746731,"line_start":385,"line_end":385,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5270},{"krate":0,"index":5271}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":747167,"byte_end":747178,"line_start":403,"line_end":403,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5274},{"krate":0,"index":5275}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":747927,"byte_end":747938,"line_start":16,"line_end":16,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5299},{"krate":0,"index":5300},{"krate":0,"index":5301},{"krate":0,"index":5302},{"krate":0,"index":5303},{"krate":0,"index":5305},{"krate":0,"index":5306},{"krate":0,"index":5307},{"krate":0,"index":5308},{"krate":0,"index":5309},{"krate":0,"index":5310},{"krate":0,"index":5313},{"krate":0,"index":5316},{"krate":0,"index":5319}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":757300,"byte_end":757311,"line_start":283,"line_end":283,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5324}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":757481,"byte_end":757489,"line_start":293,"line_end":293,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5327}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":758858,"byte_end":758869,"line_start":29,"line_end":29,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5358},{"krate":0,"index":5359},{"krate":0,"index":5360}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":759401,"byte_end":759412,"line_start":50,"line_end":50,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5364},{"krate":0,"index":5365},{"krate":0,"index":5366}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":760004,"byte_end":760015,"line_start":73,"line_end":73,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5371},{"krate":0,"index":5372},{"krate":0,"index":5373}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":760601,"byte_end":760612,"line_start":95,"line_end":95,"column_start":53,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5378},{"krate":0,"index":5379},{"krate":0,"index":5380}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":761233,"byte_end":761244,"line_start":117,"line_end":117,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5385},{"krate":0,"index":5386},{"krate":0,"index":5387}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":761848,"byte_end":761859,"line_start":139,"line_end":139,"column_start":79,"column_end":90},"value":"","parent":null,"children":[{"krate":0,"index":5391},{"krate":0,"index":5392},{"krate":0,"index":5393}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":762331,"byte_end":762340,"line_start":157,"line_end":157,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5396}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":762524,"byte_end":762535,"line_start":167,"line_end":167,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5399}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":762727,"byte_end":762734,"line_start":177,"line_end":177,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5402}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":762922,"byte_end":762929,"line_start":187,"line_end":187,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5405}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":763163,"byte_end":763174,"line_start":197,"line_end":197,"column_start":84,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":5410}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":763585,"byte_end":763596,"line_start":211,"line_end":211,"column_start":84,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":5416}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":764051,"byte_end":764062,"line_start":225,"line_end":225,"column_start":84,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":5422}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":764700,"byte_end":764711,"line_start":245,"line_end":245,"column_start":85,"column_end":96},"value":"","parent":null,"children":[{"krate":0,"index":5428}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":766631,"byte_end":766642,"line_start":45,"line_end":45,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5456},{"krate":0,"index":5457}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":767141,"byte_end":767152,"line_start":66,"line_end":66,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5466},{"krate":0,"index":5467}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":767726,"byte_end":767737,"line_start":91,"line_end":91,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5476},{"krate":0,"index":5477}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":768305,"byte_end":768316,"line_start":115,"line_end":115,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5486},{"krate":0,"index":5487}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":775111,"byte_end":775122,"line_start":323,"line_end":323,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5498}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":775330,"byte_end":775341,"line_start":333,"line_end":333,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":5502}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":775575,"byte_end":775586,"line_start":344,"line_end":344,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5505}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":775794,"byte_end":775805,"line_start":354,"line_end":354,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":5509}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":776038,"byte_end":776049,"line_start":365,"line_end":365,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5512}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":776303,"byte_end":776314,"line_start":376,"line_end":376,"column_start":63,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":5516}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":776592,"byte_end":776603,"line_start":388,"line_end":388,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5519}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":776857,"byte_end":776868,"line_start":399,"line_end":399,"column_start":63,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":5523}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":777145,"byte_end":777153,"line_start":411,"line_end":411,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5526}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":777430,"byte_end":777438,"line_start":422,"line_end":422,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":5530}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":777739,"byte_end":777747,"line_start":434,"line_end":434,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5533}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":778024,"byte_end":778032,"line_start":445,"line_end":445,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":5537}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_simba.rs","byte_start":778449,"byte_end":778460,"line_start":9,"line_end":9,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5547},{"krate":0,"index":5548},{"krate":0,"index":5549},{"krate":0,"index":5550},{"krate":0,"index":5551},{"krate":0,"index":5552},{"krate":0,"index":5553},{"krate":0,"index":5554},{"krate":0,"index":5555}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":780539,"byte_end":780550,"line_start":35,"line_end":35,"column_start":70,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":5586}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":780771,"byte_end":780782,"line_start":45,"line_end":45,"column_start":45,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":780900,"byte_end":780911,"line_start":52,"line_end":52,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5594}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":782378,"byte_end":782389,"line_start":114,"line_end":114,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5598},{"krate":0,"index":5599},{"krate":0,"index":5600},{"krate":0,"index":5601}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":785438,"byte_end":785449,"line_start":207,"line_end":207,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5605}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":786047,"byte_end":786058,"line_start":227,"line_end":227,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5609}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":786639,"byte_end":786650,"line_start":245,"line_end":245,"column_start":41,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":786755,"byte_end":786766,"line_start":247,"line_end":247,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5616}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":786987,"byte_end":786998,"line_start":257,"line_end":257,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5620},{"krate":0,"index":5621},{"krate":0,"index":5622}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":787409,"byte_end":787420,"line_start":275,"line_end":275,"column_start":57,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":5626},{"krate":0,"index":5627}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":787896,"byte_end":787907,"line_start":297,"line_end":297,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5631},{"krate":0,"index":5632}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":788323,"byte_end":788334,"line_start":318,"line_end":318,"column_start":61,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":5636}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs","byte_start":789701,"byte_end":789712,"line_start":18,"line_end":18,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5684}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs","byte_start":790385,"byte_end":790396,"line_start":42,"line_end":42,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5688}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs","byte_start":790585,"byte_end":790593,"line_start":52,"line_end":52,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":5692}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs","byte_start":793669,"byte_end":793680,"line_start":25,"line_end":25,"column_start":59,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":5728},{"krate":0,"index":5729},{"krate":0,"index":5730}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs","byte_start":794306,"byte_end":794317,"line_start":49,"line_end":49,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":5736},{"krate":0,"index":5737},{"krate":0,"index":5738}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs","byte_start":794938,"byte_end":794949,"line_start":72,"line_end":72,"column_start":64,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":5744},{"krate":0,"index":5745},{"krate":0,"index":5746}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs","byte_start":795627,"byte_end":795638,"line_start":95,"line_end":95,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5752},{"krate":0,"index":5753},{"krate":0,"index":5754}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs","byte_start":796439,"byte_end":796450,"line_start":122,"line_end":122,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":5759},{"krate":0,"index":5760},{"krate":0,"index":5762}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs","byte_start":797582,"byte_end":797589,"line_start":158,"line_end":158,"column_start":70,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":5766}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs","byte_start":797881,"byte_end":797892,"line_start":169,"line_end":169,"column_start":53,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5770}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs","byte_start":798140,"byte_end":798151,"line_start":180,"line_end":180,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5776}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs","byte_start":798609,"byte_end":798620,"line_start":196,"line_end":196,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5783}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs","byte_start":799148,"byte_end":799159,"line_start":214,"line_end":214,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5790}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs","byte_start":799828,"byte_end":799839,"line_start":236,"line_end":236,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5797}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_simba.rs","byte_start":808683,"byte_end":808694,"line_start":10,"line_end":10,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5861},{"krate":0,"index":5862},{"krate":0,"index":5863},{"krate":0,"index":5864},{"krate":0,"index":5865},{"krate":0,"index":5866},{"krate":0,"index":5867},{"krate":0,"index":5868},{"krate":0,"index":5869}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":812057,"byte_end":812065,"line_start":74,"line_end":74,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5901}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":812375,"byte_end":812383,"line_start":86,"line_end":86,"column_start":9,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":812539,"byte_end":812547,"line_start":93,"line_end":93,"column_start":74,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":5911}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":812786,"byte_end":812794,"line_start":103,"line_end":103,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5916}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":813676,"byte_end":813684,"line_start":130,"line_end":130,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":5921},{"krate":0,"index":5922},{"krate":0,"index":5923},{"krate":0,"index":5924},{"krate":0,"index":5925},{"krate":0,"index":5926},{"krate":0,"index":5927},{"krate":0,"index":5928},{"krate":0,"index":5929},{"krate":0,"index":5930}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":822147,"byte_end":822155,"line_start":357,"line_end":357,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5935}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":823335,"byte_end":823343,"line_start":391,"line_end":391,"column_start":46,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":823491,"byte_end":823499,"line_start":398,"line_end":398,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5944}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":823792,"byte_end":823800,"line_start":409,"line_end":409,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5949},{"krate":0,"index":5950},{"krate":0,"index":5951}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":824349,"byte_end":824357,"line_start":429,"line_end":429,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5956},{"krate":0,"index":5957}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":825024,"byte_end":825032,"line_start":455,"line_end":455,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5962},{"krate":0,"index":5963}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":825615,"byte_end":825623,"line_start":479,"line_end":479,"column_start":67,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":5968}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":827635,"byte_end":827643,"line_start":22,"line_end":22,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":6021},{"krate":0,"index":6022}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":829194,"byte_end":829202,"line_start":70,"line_end":70,"column_start":71,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":6027}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":829472,"byte_end":829480,"line_start":82,"line_end":82,"column_start":71,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":6032}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":830290,"byte_end":830298,"line_start":116,"line_end":116,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6037},{"krate":0,"index":6038},{"krate":0,"index":6039}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":831391,"byte_end":831399,"line_start":154,"line_end":154,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6042},{"krate":0,"index":6043},{"krate":0,"index":6044}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs","byte_start":842561,"byte_end":842569,"line_start":22,"line_end":22,"column_start":68,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":6080},{"krate":0,"index":6081},{"krate":0,"index":6082}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs","byte_start":843457,"byte_end":843465,"line_start":50,"line_end":50,"column_start":70,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":6089},{"krate":0,"index":6090},{"krate":0,"index":6091}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs","byte_start":844201,"byte_end":844209,"line_start":74,"line_end":74,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":6098},{"krate":0,"index":6099},{"krate":0,"index":6100}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs","byte_start":845373,"byte_end":845381,"line_start":108,"line_end":108,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":6106},{"krate":0,"index":6107},{"krate":0,"index":6110}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs","byte_start":847086,"byte_end":847093,"line_start":154,"line_end":154,"column_start":67,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":6115}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs","byte_start":847492,"byte_end":847500,"line_start":167,"line_end":167,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6123}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs","byte_start":848231,"byte_end":848239,"line_start":186,"line_end":186,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6132}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs","byte_start":849194,"byte_end":849202,"line_start":215,"line_end":215,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6141}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs","byte_start":850466,"byte_end":850474,"line_start":252,"line_end":252,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6150}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_simba.rs","byte_start":872121,"byte_end":872129,"line_start":10,"line_end":10,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":6204},{"krate":0,"index":6205},{"krate":0,"index":6206},{"krate":0,"index":6207},{"krate":0,"index":6208},{"krate":0,"index":6209},{"krate":0,"index":6210},{"krate":0,"index":6211},{"krate":0,"index":6212}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":875883,"byte_end":875893,"line_start":71,"line_end":71,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6246}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":876206,"byte_end":876216,"line_start":83,"line_end":83,"column_start":9,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":876379,"byte_end":876389,"line_start":90,"line_end":90,"column_start":81,"column_end":91},"value":"","parent":null,"children":[{"krate":0,"index":6256}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":876616,"byte_end":876626,"line_start":100,"line_end":100,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6261},{"krate":0,"index":6262},{"krate":0,"index":6263}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":877591,"byte_end":877601,"line_start":131,"line_end":131,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6268}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":877851,"byte_end":877861,"line_start":142,"line_end":142,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6273},{"krate":0,"index":6274},{"krate":0,"index":6275},{"krate":0,"index":6276},{"krate":0,"index":6277},{"krate":0,"index":6278},{"krate":0,"index":6279},{"krate":0,"index":6280},{"krate":0,"index":6281},{"krate":0,"index":6282},{"krate":0,"index":6283},{"krate":0,"index":6284},{"krate":0,"index":6285},{"krate":0,"index":6286},{"krate":0,"index":6287}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":885004,"byte_end":885014,"line_start":334,"line_end":334,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6292}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":885639,"byte_end":885649,"line_start":356,"line_end":356,"column_start":46,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":885797,"byte_end":885807,"line_start":363,"line_end":363,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6301}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":886092,"byte_end":886102,"line_start":374,"line_end":374,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":6306},{"krate":0,"index":6307},{"krate":0,"index":6308}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":886643,"byte_end":886653,"line_start":394,"line_end":394,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6313},{"krate":0,"index":6314}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":887312,"byte_end":887322,"line_start":420,"line_end":420,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6319},{"krate":0,"index":6320}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":887858,"byte_end":887868,"line_start":443,"line_end":443,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6325}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":889541,"byte_end":889551,"line_start":22,"line_end":22,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6376}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":890255,"byte_end":890265,"line_start":49,"line_end":49,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6381}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":890570,"byte_end":890578,"line_start":62,"line_end":62,"column_start":73,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":6386}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":891006,"byte_end":891016,"line_start":79,"line_end":79,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6393}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":892599,"byte_end":892609,"line_start":134,"line_end":134,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6396}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":893412,"byte_end":893422,"line_start":160,"line_end":160,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6399}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs","byte_start":903326,"byte_end":903336,"line_start":23,"line_end":23,"column_start":70,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":6436},{"krate":0,"index":6437},{"krate":0,"index":6438}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs","byte_start":904237,"byte_end":904247,"line_start":51,"line_end":51,"column_start":57,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":6445},{"krate":0,"index":6446},{"krate":0,"index":6447}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs","byte_start":905401,"byte_end":905411,"line_start":85,"line_end":85,"column_start":65,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":6453},{"krate":0,"index":6454},{"krate":0,"index":6457}],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs","byte_start":908838,"byte_end":908845,"line_start":174,"line_end":174,"column_start":69,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":6462}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs","byte_start":909255,"byte_end":909265,"line_start":187,"line_end":187,"column_start":58,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":6470}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs","byte_start":910005,"byte_end":910015,"line_start":206,"line_end":206,"column_start":58,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":6479}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs","byte_start":910959,"byte_end":910969,"line_start":235,"line_end":235,"column_start":58,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":6488}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs","byte_start":912182,"byte_end":912192,"line_start":272,"line_end":272,"column_start":59,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":6497}],"docs":"","sig":null,"attributes":[]},{"id":746,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_simba.rs","byte_start":934088,"byte_end":934098,"line_start":9,"line_end":9,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6552},{"krate":0,"index":6553},{"krate":0,"index":6554},{"krate":0,"index":6555},{"krate":0,"index":6556},{"krate":0,"index":6557},{"krate":0,"index":6558},{"krate":0,"index":6559},{"krate":0,"index":6560}],"docs":"","sig":null,"attributes":[]},{"id":747,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":940103,"byte_end":940105,"line_start":53,"line_end":53,"column_start":37,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":748,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":940648,"byte_end":940656,"line_start":72,"line_end":72,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6613}],"docs":"","sig":null,"attributes":[]},{"id":749,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":940891,"byte_end":940902,"line_start":83,"line_end":83,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6617}],"docs":"","sig":null,"attributes":[]},{"id":750,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":941154,"byte_end":941161,"line_start":94,"line_end":94,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6621},{"krate":0,"index":6622}],"docs":"","sig":null,"attributes":[]},{"id":751,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":941872,"byte_end":941873,"line_start":122,"line_end":122,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6629}],"docs":"","sig":null,"attributes":[]},{"id":752,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":942490,"byte_end":942491,"line_start":146,"line_end":146,"column_start":44,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":753,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":943502,"byte_end":943511,"line_start":177,"line_end":177,"column_start":69,"column_end":78},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":754,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":943726,"byte_end":943735,"line_start":184,"line_end":184,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":6641}],"docs":"","sig":null,"attributes":[]},{"id":755,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":944976,"byte_end":944985,"line_start":224,"line_end":224,"column_start":65,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":756,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":945145,"byte_end":945154,"line_start":229,"line_end":229,"column_start":67,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":6650}],"docs":"","sig":null,"attributes":[]},{"id":757,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":945398,"byte_end":945407,"line_start":239,"line_end":239,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6655},{"krate":0,"index":6656},{"krate":0,"index":6657},{"krate":0,"index":6658},{"krate":0,"index":6659},{"krate":0,"index":6660},{"krate":0,"index":6662},{"krate":0,"index":6663},{"krate":0,"index":6664},{"krate":0,"index":6665},{"krate":0,"index":6666},{"krate":0,"index":6667}],"docs":"","sig":null,"attributes":[]},{"id":758,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":953633,"byte_end":953642,"line_start":473,"line_end":473,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6672},{"krate":0,"index":6673}],"docs":"","sig":null,"attributes":[]},{"id":759,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":954460,"byte_end":954469,"line_start":500,"line_end":500,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6678},{"krate":0,"index":6679}],"docs":"","sig":null,"attributes":[]},{"id":760,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":955349,"byte_end":955358,"line_start":525,"line_end":525,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6683}],"docs":"","sig":null,"attributes":[]},{"id":761,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":955800,"byte_end":955809,"line_start":537,"line_end":537,"column_start":67,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":6688},{"krate":0,"index":6689},{"krate":0,"index":6690}],"docs":"","sig":null,"attributes":[]},{"id":762,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":956269,"byte_end":956278,"line_start":555,"line_end":555,"column_start":68,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":6695},{"krate":0,"index":6696}],"docs":"","sig":null,"attributes":[]},{"id":763,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":956807,"byte_end":956816,"line_start":577,"line_end":577,"column_start":64,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":6701},{"krate":0,"index":6702}],"docs":"","sig":null,"attributes":[]},{"id":764,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":958659,"byte_end":958668,"line_start":11,"line_end":11,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6742}],"docs":"","sig":null,"attributes":[]},{"id":765,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":959772,"byte_end":959781,"line_start":49,"line_end":49,"column_start":61,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":6747}],"docs":"","sig":null,"attributes":[]},{"id":766,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_conversion.rs","byte_start":960314,"byte_end":960323,"line_start":9,"line_end":9,"column_start":69,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":6771},{"krate":0,"index":6772},{"krate":0,"index":6773}],"docs":"","sig":null,"attributes":[]},{"id":767,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_conversion.rs","byte_start":961148,"byte_end":961157,"line_start":37,"line_end":37,"column_start":74,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":6779},{"krate":0,"index":6780},{"krate":0,"index":6781}],"docs":"","sig":null,"attributes":[]},{"id":768,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_conversion.rs","byte_start":961934,"byte_end":961941,"line_start":64,"line_end":64,"column_start":64,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":6786}],"docs":"","sig":null,"attributes":[]},{"id":769,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_ops.rs","byte_start":964244,"byte_end":964253,"line_start":82,"line_end":82,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":6835},{"krate":0,"index":6836}],"docs":"","sig":null,"attributes":[]},{"id":770,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_ops.rs","byte_start":964609,"byte_end":964618,"line_start":96,"line_end":96,"column_start":52,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":6840}],"docs":"","sig":null,"attributes":[]},{"id":831,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_simba.rs","byte_start":985896,"byte_end":985905,"line_start":10,"line_end":10,"column_start":56,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":6860},{"krate":0,"index":6861},{"krate":0,"index":6862},{"krate":0,"index":6863},{"krate":0,"index":6864},{"krate":0,"index":6865},{"krate":0,"index":6866},{"krate":0,"index":6867},{"krate":0,"index":6868}],"docs":"","sig":null,"attributes":[]},{"id":832,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs","byte_start":987737,"byte_end":987747,"line_start":16,"line_end":16,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":6901},{"krate":0,"index":6902},{"krate":0,"index":6903},{"krate":0,"index":6904},{"krate":0,"index":6908},{"krate":0,"index":6912},{"krate":0,"index":6917}],"docs":"","sig":null,"attributes":[]},{"id":833,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":992091,"byte_end":992104,"line_start":24,"line_end":24,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":834,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":992141,"byte_end":992154,"line_start":26,"line_end":26,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6947}],"docs":"","sig":null,"attributes":[]},{"id":835,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":992304,"byte_end":992317,"line_start":33,"line_end":33,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6950}],"docs":"","sig":null,"attributes":[]},{"id":836,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":992462,"byte_end":992475,"line_start":39,"line_end":39,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6953}],"docs":"","sig":null,"attributes":[]},{"id":837,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":993214,"byte_end":993227,"line_start":68,"line_end":68,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6956},{"krate":0,"index":6957},{"krate":0,"index":6958},{"krate":0,"index":6959},{"krate":0,"index":6960},{"krate":0,"index":6961},{"krate":0,"index":6962},{"krate":0,"index":6963},{"krate":0,"index":6964},{"krate":0,"index":6965},{"krate":0,"index":6966},{"krate":0,"index":6967},{"krate":0,"index":6968},{"krate":0,"index":6969},{"krate":0,"index":6970},{"krate":0,"index":6971},{"krate":0,"index":6972},{"krate":0,"index":6973},{"krate":0,"index":6974},{"krate":0,"index":6976},{"krate":0,"index":6977},{"krate":0,"index":6978},{"krate":0,"index":6979},{"krate":0,"index":6980},{"krate":0,"index":6981},{"krate":0,"index":6982},{"krate":0,"index":6983},{"krate":0,"index":6984}],"docs":"","sig":null,"attributes":[]},{"id":838,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1017294,"byte_end":1017302,"line_start":687,"line_end":687,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6987}],"docs":"","sig":null,"attributes":[]},{"id":839,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1018355,"byte_end":1018362,"line_start":720,"line_end":720,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6994}],"docs":"","sig":null,"attributes":[]},{"id":840,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1019104,"byte_end":1019116,"line_start":25,"line_end":25,"column_start":29,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":841,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1019153,"byte_end":1019165,"line_start":27,"line_end":27,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7021}],"docs":"","sig":null,"attributes":[]},{"id":842,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1019315,"byte_end":1019327,"line_start":34,"line_end":34,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7024}],"docs":"","sig":null,"attributes":[]},{"id":843,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1019472,"byte_end":1019484,"line_start":40,"line_end":40,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7027}],"docs":"","sig":null,"attributes":[]},{"id":844,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1020221,"byte_end":1020233,"line_start":69,"line_end":69,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7030},{"krate":0,"index":7031},{"krate":0,"index":7032},{"krate":0,"index":7033},{"krate":0,"index":7034},{"krate":0,"index":7035},{"krate":0,"index":7036},{"krate":0,"index":7037},{"krate":0,"index":7038},{"krate":0,"index":7039},{"krate":0,"index":7040},{"krate":0,"index":7041},{"krate":0,"index":7042},{"krate":0,"index":7043},{"krate":0,"index":7044},{"krate":0,"index":7045},{"krate":0,"index":7047},{"krate":0,"index":7048},{"krate":0,"index":7049},{"krate":0,"index":7050},{"krate":0,"index":7051}],"docs":"","sig":null,"attributes":[]},{"id":845,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1026884,"byte_end":1026892,"line_start":271,"line_end":271,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":7054}],"docs":"","sig":null,"attributes":[]},{"id":846,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1027685,"byte_end":1027692,"line_start":295,"line_end":295,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7061}],"docs":"","sig":null,"attributes":[]},{"id":847,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1033211,"byte_end":1033221,"line_start":53,"line_end":53,"column_start":54,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":848,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1033579,"byte_end":1033589,"line_start":65,"line_end":65,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7129},{"krate":0,"index":7130},{"krate":0,"index":7131},{"krate":0,"index":7132},{"krate":0,"index":7133},{"krate":0,"index":7136},{"krate":0,"index":7137},{"krate":0,"index":7138},{"krate":0,"index":7140},{"krate":0,"index":7142}],"docs":"","sig":null,"attributes":[]},{"id":849,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1044132,"byte_end":1044138,"line_start":363,"line_end":363,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":7148}],"docs":"","sig":null,"attributes":[]},{"id":850,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1045618,"byte_end":1045626,"line_start":33,"line_end":33,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":851,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1045753,"byte_end":1045761,"line_start":40,"line_end":40,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7180},{"krate":0,"index":7181},{"krate":0,"index":7182},{"krate":0,"index":7183},{"krate":0,"index":7184},{"krate":0,"index":7185},{"krate":0,"index":7189},{"krate":0,"index":7193},{"krate":0,"index":7194},{"krate":0,"index":7197},{"krate":0,"index":7200},{"krate":0,"index":7201}],"docs":"","sig":null,"attributes":[]},{"id":852,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1057285,"byte_end":1057297,"line_start":329,"line_end":329,"column_start":64,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":7210}],"docs":"","sig":null,"attributes":[]},{"id":853,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1058010,"byte_end":1058016,"line_start":9,"line_end":9,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7232},{"krate":0,"index":7235},{"krate":0,"index":7238}],"docs":"","sig":null,"attributes":[]},{"id":854,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/determinant.rs","byte_start":1062150,"byte_end":1062162,"line_start":10,"line_end":10,"column_start":70,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":7254}],"docs":"","sig":null,"attributes":[]},{"id":855,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1065497,"byte_end":1065506,"line_start":40,"line_end":40,"column_start":54,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":856,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1065737,"byte_end":1065746,"line_start":48,"line_end":48,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7283},{"krate":0,"index":7284},{"krate":0,"index":7285},{"krate":0,"index":7286},{"krate":0,"index":7287},{"krate":0,"index":7288},{"krate":0,"index":7289}],"docs":"","sig":null,"attributes":[]},{"id":857,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1069200,"byte_end":1069209,"line_start":163,"line_end":163,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":7293},{"krate":0,"index":7297},{"krate":0,"index":7301},{"krate":0,"index":7302},{"krate":0,"index":7303}],"docs":"","sig":null,"attributes":[]},{"id":858,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1072462,"byte_end":1072468,"line_start":269,"line_end":269,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":7309}],"docs":"","sig":null,"attributes":[]},{"id":859,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1073300,"byte_end":1073314,"line_start":19,"line_end":19,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7329},{"krate":0,"index":7330},{"krate":0,"index":7331},{"krate":0,"index":7333},{"krate":0,"index":7334},{"krate":0,"index":7336},{"krate":0,"index":7338},{"krate":0,"index":7339},{"krate":0,"index":7340},{"krate":0,"index":7341},{"krate":0,"index":7345}],"docs":"","sig":null,"attributes":[]},{"id":860,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1079291,"byte_end":1079301,"line_start":37,"line_end":37,"column_start":47,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":861,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1079492,"byte_end":1079502,"line_start":45,"line_end":45,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":7370},{"krate":0,"index":7371},{"krate":0,"index":7372},{"krate":0,"index":7373},{"krate":0,"index":7375},{"krate":0,"index":7377},{"krate":0,"index":7378}],"docs":"","sig":null,"attributes":[]},{"id":862,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1082563,"byte_end":1082575,"line_start":135,"line_end":135,"column_start":59,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":7383}],"docs":"","sig":null,"attributes":[]},{"id":863,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/inverse.rs","byte_start":1087799,"byte_end":1087811,"line_start":10,"line_end":10,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":7431}],"docs":"","sig":null,"attributes":[]},{"id":864,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/inverse.rs","byte_start":1088254,"byte_end":1088266,"line_start":27,"line_end":27,"column_start":55,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":7436}],"docs":"","sig":null,"attributes":[]},{"id":865,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1096982,"byte_end":1096984,"line_start":39,"line_end":39,"column_start":54,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":866,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1098323,"byte_end":1098325,"line_start":87,"line_end":87,"column_start":45,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7478},{"krate":0,"index":7479},{"krate":0,"index":7480},{"krate":0,"index":7481},{"krate":0,"index":7482},{"krate":0,"index":7483},{"krate":0,"index":7484},{"krate":0,"index":7485}],"docs":"","sig":null,"attributes":[]},{"id":867,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1102101,"byte_end":1102103,"line_start":209,"line_end":209,"column_start":49,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7489},{"krate":0,"index":7493},{"krate":0,"index":7497},{"krate":0,"index":7498},{"krate":0,"index":7500},{"krate":0,"index":7501}],"docs":"","sig":null,"attributes":[]},{"id":868,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1107466,"byte_end":1107472,"line_start":383,"line_end":383,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":7517}],"docs":"","sig":null,"attributes":[]},{"id":869,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1108789,"byte_end":1108808,"line_start":35,"line_end":35,"column_start":23,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":870,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1108930,"byte_end":1108949,"line_start":42,"line_end":42,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7537}],"docs":"","sig":null,"attributes":[]},{"id":871,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1109245,"byte_end":1109264,"line_start":54,"line_end":54,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7539}],"docs":"","sig":null,"attributes":[]},{"id":872,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1109547,"byte_end":1109566,"line_start":65,"line_end":65,"column_start":14,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7542},{"krate":0,"index":7543},{"krate":0,"index":7544},{"krate":0,"index":7549},{"krate":0,"index":7554},{"krate":0,"index":7559},{"krate":0,"index":7564},{"krate":0,"index":7565}],"docs":"","sig":null,"attributes":[]},{"id":873,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1113654,"byte_end":1113656,"line_start":40,"line_end":40,"column_start":54,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":874,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1113865,"byte_end":1113867,"line_start":48,"line_end":48,"column_start":45,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7601},{"krate":0,"index":7602},{"krate":0,"index":7604},{"krate":0,"index":7606},{"krate":0,"index":7607},{"krate":0,"index":7608},{"krate":0,"index":7609}],"docs":"","sig":null,"attributes":[]},{"id":875,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1117884,"byte_end":1117886,"line_start":165,"line_end":165,"column_start":49,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7616},{"krate":0,"index":7620},{"krate":0,"index":7624},{"krate":0,"index":7628},{"krate":0,"index":7629}],"docs":"","sig":null,"attributes":[]},{"id":876,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1121745,"byte_end":1121751,"line_start":298,"line_end":298,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":7635}],"docs":"","sig":null,"attributes":[]},{"id":877,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1123285,"byte_end":1123290,"line_start":42,"line_end":42,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":878,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1123405,"byte_end":1123410,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7671},{"krate":0,"index":7672},{"krate":0,"index":7674},{"krate":0,"index":7675},{"krate":0,"index":7676},{"krate":0,"index":7677},{"krate":0,"index":7678},{"krate":0,"index":7679},{"krate":0,"index":7680}],"docs":"","sig":null,"attributes":[]},{"id":879,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1138055,"byte_end":1138067,"line_start":493,"line_end":493,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":7695},{"krate":0,"index":7696},{"krate":0,"index":7697},{"krate":0,"index":7698}],"docs":"","sig":null,"attributes":[]},{"id":880,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1141408,"byte_end":1141420,"line_start":9,"line_end":9,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":7722},{"krate":0,"index":7726},{"krate":0,"index":7730},{"krate":0,"index":7734},{"krate":0,"index":7737},{"krate":0,"index":7741},{"krate":0,"index":7745},{"krate":0,"index":7748},{"krate":0,"index":7752},{"krate":0,"index":7756},{"krate":0,"index":7762},{"krate":0,"index":7768},{"krate":0,"index":7772},{"krate":0,"index":7776},{"krate":0,"index":7782},{"krate":0,"index":7788},{"krate":0,"index":7793}],"docs":"","sig":null,"attributes":[]},{"id":881,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1156203,"byte_end":1156206,"line_start":57,"line_end":57,"column_start":54,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":882,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1156563,"byte_end":1156566,"line_start":68,"line_end":68,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":7837},{"krate":0,"index":7838},{"krate":0,"index":7841},{"krate":0,"index":7842},{"krate":0,"index":7843},{"krate":0,"index":7844},{"krate":0,"index":7846},{"krate":0,"index":7847},{"krate":0,"index":7849}],"docs":"","sig":null,"attributes":[]},{"id":883,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1175803,"byte_end":1175809,"line_start":606,"line_end":606,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":7858},{"krate":0,"index":7859},{"krate":0,"index":7860},{"krate":0,"index":7861},{"krate":0,"index":7862}],"docs":"","sig":null,"attributes":[]},{"id":884,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1181229,"byte_end":1181243,"line_start":44,"line_end":44,"column_start":40,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":885,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1181423,"byte_end":1181437,"line_start":52,"line_end":52,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7892},{"krate":0,"index":7893},{"krate":0,"index":7895},{"krate":0,"index":7896},{"krate":0,"index":7897}],"docs":"","sig":null,"attributes":[]},{"id":886,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1189480,"byte_end":1189492,"line_start":304,"line_end":304,"column_start":59,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":7904},{"krate":0,"index":7905},{"krate":0,"index":7906}],"docs":"","sig":null,"attributes":[]},{"id":887,"kind":"Direct","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1194496,"byte_end":1194516,"line_start":37,"line_end":37,"column_start":47,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":888,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1194707,"byte_end":1194727,"line_start":45,"line_end":45,"column_start":38,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":7928},{"krate":0,"index":7929},{"krate":0,"index":7930},{"krate":0,"index":7931},{"krate":0,"index":7932},{"krate":0,"index":7934},{"krate":0,"index":7935},{"krate":0,"index":7936}],"docs":"","sig":null,"attributes":[]},{"id":889,"kind":"Inherent","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1198548,"byte_end":1198560,"line_start":166,"line_end":166,"column_start":59,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":7941}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4097,"byte_end":4101,"line_start":125,"line_end":125,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs","byte_start":14904,"byte_end":14913,"line_start":3,"line_end":3,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":8}},{"kind":"Mod","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs","byte_start":14933,"byte_end":14943,"line_start":5,"line_end":5,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":316}},{"kind":"Mod","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs","byte_start":14953,"byte_end":14964,"line_start":6,"line_end":6,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":360}},{"kind":"Mod","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs","byte_start":14974,"byte_end":14991,"line_start":7,"line_end":7,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":380}},{"kind":"Mod","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs","byte_start":15001,"byte_end":15010,"line_start":8,"line_end":8,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":463}},{"kind":"Mod","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs","byte_start":15020,"byte_end":15024,"line_start":9,"line_end":9,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":584}},{"kind":"Mod","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs","byte_start":15043,"byte_end":15050,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1005}},{"kind":"Mod","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs","byte_start":15206,"byte_end":15214,"line_start":22,"line_end":22,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2627}},{"kind":"Mod","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/mod.rs","byte_start":15472,"byte_end":15478,"line_start":38,"line_end":38,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3861}},{"kind":"Mod","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4152,"byte_end":4160,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":3883}},{"kind":"Mod","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/lib.rs","byte_start":4205,"byte_end":4211,"line_start":131,"line_end":131,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":7080}},{"kind":"Mod","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs","byte_start":1027877,"byte_end":1027886,"line_start":3,"line_end":3,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":7081}},{"kind":"Mod","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs","byte_start":1027977,"byte_end":1027983,"line_start":9,"line_end":9,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":7310}},{"kind":"Mod","span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/mod.rs","byte_start":1028009,"byte_end":1028020,"line_start":11,"line_end":11,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":7384}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":16612,"byte_end":16615,"line_start":19,"line_end":19,"column_start":54,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":2383},"to":{"krate":0,"index":21}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":16618,"byte_end":16623,"line_start":19,"line_end":19,"column_start":60,"column_end":65},"kind":"SuperTrait","from":{"krate":2,"index":1887},"to":{"krate":0,"index":21}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":17376,"byte_end":17385,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":21},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":17405,"byte_end":17414,"line_start":37,"line_end":37,"column_start":34,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":21},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":18608,"byte_end":18617,"line_start":62,"line_end":62,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":21},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":18631,"byte_end":18640,"line_start":62,"line_end":62,"column_start":28,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":21},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":18905,"byte_end":18921,"line_start":73,"line_end":73,"column_start":67,"column_end":83},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":19297,"byte_end":19306,"line_start":88,"line_end":88,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":21},"to":{"krate":0,"index":54}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":19316,"byte_end":19325,"line_start":88,"line_end":88,"column_start":24,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":21},"to":{"krate":0,"index":54}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":19351,"byte_end":19369,"line_start":88,"line_end":88,"column_start":59,"column_end":77},"kind":"SuperTrait","from":{"krate":0,"index":42},"to":{"krate":0,"index":54}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/allocator.rs","byte_start":19544,"byte_end":19560,"line_start":97,"line_end":97,"column_start":57,"column_end":73},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":54}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":20443,"byte_end":20449,"line_start":20,"line_end":20,"column_start":49,"column_end":55},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":21419,"byte_end":21425,"line_start":53,"line_end":53,"column_start":56,"column_end":62},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":25204,"byte_end":25210,"line_start":202,"line_end":202,"column_start":60,"column_end":66},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":26419,"byte_end":26425,"line_start":238,"line_end":238,"column_start":76,"column_end":82},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":27366,"byte_end":27372,"line_start":271,"line_end":271,"column_start":46,"column_end":52},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":37377,"byte_end":37383,"line_start":555,"line_end":555,"column_start":20,"column_end":26},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":50882,"byte_end":50888,"line_start":957,"line_end":957,"column_start":53,"column_end":59},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":64283,"byte_end":64289,"line_start":1331,"line_end":1331,"column_start":53,"column_end":59},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/blas.rs","byte_start":69617,"byte_end":69629,"line_start":1479,"line_end":1479,"column_start":44,"column_end":56},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":77759,"byte_end":77764,"line_start":9,"line_end":9,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":333},"to":{"krate":0,"index":323}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":77854,"byte_end":77869,"line_start":11,"line_end":11,"column_start":78,"column_end":93},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":323}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":78181,"byte_end":78196,"line_start":23,"line_end":23,"column_start":30,"column_end":45},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":78270,"byte_end":78285,"line_start":27,"line_end":27,"column_start":40,"column_end":55},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":78359,"byte_end":78374,"line_start":31,"line_end":31,"column_start":40,"column_end":55},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":79727,"byte_end":79743,"line_start":73,"line_end":73,"column_start":5,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":8060},"to":{"krate":0,"index":347}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":79754,"byte_end":79773,"line_start":73,"line_end":73,"column_start":32,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":8073},"to":{"krate":0,"index":347}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":79973,"byte_end":79988,"line_start":80,"line_end":80,"column_start":38,"column_end":53},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":347}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":80070,"byte_end":80085,"line_start":84,"line_end":84,"column_start":48,"column_end":63},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":347}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/constraint.rs","byte_start":80167,"byte_end":80182,"line_start":88,"line_end":88,"column_start":48,"column_end":63},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":347}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":88369,"byte_end":88385,"line_start":37,"line_end":37,"column_start":38,"column_end":54},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":21}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":89443,"byte_end":89459,"line_start":79,"line_end":79,"column_start":54,"column_end":70},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":21}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":90383,"byte_end":90399,"line_start":109,"line_end":109,"column_start":58,"column_end":74},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":21}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":91342,"byte_end":91358,"line_start":143,"line_end":143,"column_start":84,"column_end":100},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":92247,"byte_end":92263,"line_start":173,"line_end":173,"column_start":83,"column_end":99},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":93106,"byte_end":93122,"line_start":201,"line_end":201,"column_start":83,"column_end":99},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":93998,"byte_end":94014,"line_start":230,"line_end":230,"column_start":9,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":94441,"byte_end":94457,"line_start":245,"line_end":245,"column_start":9,"column_end":25},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":94884,"byte_end":94900,"line_start":260,"line_end":260,"column_start":9,"column_end":25},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/default_allocator.rs","byte_start":95331,"byte_end":95347,"line_start":275,"line_end":275,"column_start":9,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":96187,"byte_end":96194,"line_start":22,"line_end":22,"column_start":6,"column_end":13},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":9635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97008,"byte_end":97015,"line_start":55,"line_end":55,"column_start":20,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":9635},"to":{"krate":0,"index":491}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97043,"byte_end":97050,"line_start":56,"line_end":56,"column_start":25,"column_end":32},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":9635},"to":{"krate":0,"index":492}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97233,"byte_end":97236,"line_start":60,"line_end":60,"column_start":16,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2383},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97239,"byte_end":97244,"line_start":60,"line_end":60,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":5977},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97247,"byte_end":97251,"line_start":60,"line_end":60,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1892},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97254,"byte_end":97263,"line_start":60,"line_end":60,"column_start":37,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":1618},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97266,"byte_end":97270,"line_start":60,"line_end":60,"column_start":49,"column_end":53},"kind":"SuperTrait","from":{"krate":2,"index":1882},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97273,"byte_end":97277,"line_start":60,"line_end":60,"column_start":56,"column_end":60},"kind":"SuperTrait","from":{"krate":2,"index":1894},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":97915,"byte_end":97922,"line_start":79,"line_end":79,"column_start":14,"column_end":21},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":9635},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":98177,"byte_end":98184,"line_start":96,"line_end":96,"column_start":21,"column_end":28},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":9635},"to":{"krate":2,"index":1945}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":98333,"byte_end":98340,"line_start":105,"line_end":105,"column_start":21,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":9635},"to":{"krate":2,"index":1950}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":100942,"byte_end":100945,"line_start":193,"line_end":193,"column_start":20,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":495},"to":{"krate":0,"index":512}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":101261,"byte_end":101266,"line_start":207,"line_end":207,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1887},"to":{"krate":0,"index":516}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":101269,"byte_end":101272,"line_start":207,"line_end":207,"column_start":29,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2383},"to":{"krate":0,"index":516}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":101275,"byte_end":101283,"line_start":207,"line_end":207,"column_start":35,"column_end":43},"kind":"SuperTrait","from":{"krate":34,"index":568},"to":{"krate":0,"index":516}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":101528,"byte_end":101530,"line_start":216,"line_end":216,"column_start":14,"column_end":16},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":9841},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":101816,"byte_end":101818,"line_start":234,"line_end":234,"column_start":18,"column_end":20},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":9841},"to":{"krate":0,"index":512}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":101937,"byte_end":101939,"line_start":243,"line_end":243,"column_start":28,"column_end":30},"kind":{"Impl":{"id":36}},"from":{"krate":34,"index":2261},"to":{"krate":0,"index":516}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":104319,"byte_end":104323,"line_start":310,"line_end":310,"column_start":20,"column_end":24},"kind":{"Impl":{"id":37}},"from":{"krate":34,"index":6146},"to":{"krate":0,"index":516}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":104886,"byte_end":104890,"line_start":323,"line_end":323,"column_start":15,"column_end":19},"kind":{"Impl":{"id":38}},"from":{"krate":34,"index":6146},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":105752,"byte_end":105756,"line_start":350,"line_end":350,"column_start":19,"column_end":23},"kind":{"Impl":{"id":39}},"from":{"krate":34,"index":6146},"to":{"krate":0,"index":512}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":106400,"byte_end":106404,"line_start":369,"line_end":369,"column_start":9,"column_end":13},"kind":{"Impl":{"id":40}},"from":{"krate":34,"index":6146},"to":{"krate":0,"index":492}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":106584,"byte_end":106588,"line_start":374,"line_end":374,"column_start":9,"column_end":13},"kind":{"Impl":{"id":41}},"from":{"krate":34,"index":6146},"to":{"krate":0,"index":516}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":106723,"byte_end":106727,"line_start":380,"line_end":380,"column_start":9,"column_end":13},"kind":{"Impl":{"id":42}},"from":{"krate":34,"index":6146},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":107155,"byte_end":107159,"line_start":400,"line_end":400,"column_start":9,"column_end":13},"kind":{"Impl":{"id":43}},"from":{"krate":34,"index":6146},"to":{"krate":0,"index":512}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/dimension.rs","byte_start":107371,"byte_end":107375,"line_start":411,"line_end":411,"column_start":9,"column_end":13},"kind":{"Impl":{"id":44}},"from":{"krate":34,"index":6146},"to":{"krate":0,"index":492}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":112769,"byte_end":112776,"line_start":140,"line_end":140,"column_start":63,"column_end":70},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":13231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":112973,"byte_end":112980,"line_start":146,"line_end":146,"column_start":76,"column_end":83},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":13231},"to":{"krate":2,"index":4772}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":113679,"byte_end":113686,"line_start":175,"line_end":175,"column_start":9,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":13231},"to":{"krate":2,"index":4727}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":114100,"byte_end":114110,"line_start":190,"line_end":190,"column_start":66,"column_end":76},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":114465,"byte_end":114475,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":623},"to":{"krate":2,"index":4772}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":115147,"byte_end":115157,"line_start":232,"line_end":232,"column_start":9,"column_end":19},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":623},"to":{"krate":2,"index":4727}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":115552,"byte_end":115562,"line_start":252,"line_end":252,"column_start":63,"column_end":73},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":13246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":115766,"byte_end":115776,"line_start":259,"line_end":259,"column_start":9,"column_end":19},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":13246},"to":{"krate":2,"index":4772}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":116478,"byte_end":116488,"line_start":289,"line_end":289,"column_start":9,"column_end":19},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":13246},"to":{"krate":2,"index":4727}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":116908,"byte_end":116921,"line_start":304,"line_end":304,"column_start":66,"column_end":79},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":117279,"byte_end":117292,"line_start":319,"line_end":319,"column_start":9,"column_end":22},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":681},"to":{"krate":2,"index":4772}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/iter.rs","byte_start":117967,"byte_end":117980,"line_start":346,"line_end":346,"column_start":9,"column_end":22},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":681},"to":{"krate":2,"index":4727}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":118922,"byte_end":118928,"line_start":24,"line_end":24,"column_start":71,"column_end":77},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":16809},"to":{"krate":2,"index":2132}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":119157,"byte_end":119163,"line_start":34,"line_end":34,"column_start":54,"column_end":60},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":16809},"to":{"krate":2,"index":2132}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":119628,"byte_end":119634,"line_start":54,"line_end":54,"column_start":77,"column_end":83},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":16809},"to":{"krate":2,"index":2136}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":119849,"byte_end":119855,"line_start":62,"line_end":62,"column_start":57,"column_end":63},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":16809},"to":{"krate":2,"index":2136}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":120264,"byte_end":120270,"line_start":84,"line_end":84,"column_start":36,"column_end":42},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":16809},"to":{"krate":2,"index":1972}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":120872,"byte_end":120878,"line_start":114,"line_end":114,"column_start":28,"column_end":34},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":132675,"byte_end":132683,"line_start":378,"line_end":378,"column_start":47,"column_end":55},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":4638}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":132950,"byte_end":132958,"line_start":388,"line_end":388,"column_start":31,"column_end":39},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":4638}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":134027,"byte_end":134035,"line_start":418,"line_end":418,"column_start":74,"column_end":82},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":4638}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":134339,"byte_end":134347,"line_start":428,"line_end":428,"column_start":64,"column_end":72},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":4638}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":139921,"byte_end":139927,"line_start":603,"line_end":603,"column_start":9,"column_end":15},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":16809},"to":{"krate":2,"index":1955}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":140394,"byte_end":140400,"line_start":620,"line_end":620,"column_start":9,"column_end":15},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":16809},"to":{"krate":2,"index":1955}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":140998,"byte_end":141004,"line_start":639,"line_end":639,"column_start":66,"column_end":72},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":16809},"to":{"krate":2,"index":1986}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":141491,"byte_end":141497,"line_start":656,"line_end":656,"column_start":74,"column_end":80},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":16809},"to":{"krate":2,"index":1986}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":142051,"byte_end":142057,"line_start":675,"line_end":675,"column_start":31,"column_end":37},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":147337,"byte_end":147343,"line_start":836,"line_end":836,"column_start":66,"column_end":72},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":147956,"byte_end":147963,"line_start":861,"line_end":861,"column_start":39,"column_end":46},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1093},"to":{"krate":2,"index":4642}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":148271,"byte_end":148278,"line_start":871,"line_end":871,"column_start":62,"column_end":69},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1093},"to":{"krate":2,"index":4642}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/ops.rs","byte_start":148582,"byte_end":148588,"line_start":881,"line_end":881,"column_start":54,"column_end":60},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":153730,"byte_end":153735,"line_start":39,"line_end":39,"column_start":59,"column_end":64},"kind":"SuperTrait","from":{"krate":2,"index":5977},"to":{"krate":0,"index":1035}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":153738,"byte_end":153743,"line_start":39,"line_end":39,"column_start":67,"column_end":72},"kind":"SuperTrait","from":{"krate":2,"index":1887},"to":{"krate":0,"index":1035}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":156934,"byte_end":156941,"line_start":120,"line_end":120,"column_start":62,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":1035},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":159301,"byte_end":159308,"line_start":178,"line_end":178,"column_start":5,"column_end":12},"kind":"SuperTrait","from":{"krate":0,"index":1035},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":159720,"byte_end":159737,"line_start":188,"line_end":188,"column_start":5,"column_end":22},"kind":"SuperTrait","from":{"krate":0,"index":1065},"to":{"krate":0,"index":1069}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/storage.rs","byte_start":159749,"byte_end":159759,"line_start":188,"line_end":188,"column_start":34,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":1053},"to":{"krate":0,"index":1069}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":187458,"byte_end":187470,"line_start":51,"line_end":51,"column_start":24,"column_end":36},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":6168}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":187722,"byte_end":187734,"line_start":64,"line_end":64,"column_start":25,"column_end":37},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":2053}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":188029,"byte_end":188041,"line_start":79,"line_end":79,"column_start":28,"column_end":40},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":2064}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":188287,"byte_end":188299,"line_start":92,"line_end":92,"column_start":25,"column_end":37},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":188567,"byte_end":188579,"line_start":106,"line_end":106,"column_start":24,"column_end":36},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":1892}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":188797,"byte_end":188809,"line_start":117,"line_end":117,"column_start":25,"column_end":37},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":1592}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":189092,"byte_end":189104,"line_start":133,"line_end":133,"column_start":22,"column_end":34},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":189271,"byte_end":189283,"line_start":143,"line_end":143,"column_start":29,"column_end":41},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":1618}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":189564,"byte_end":189576,"line_start":157,"line_end":157,"column_start":43,"column_end":55},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1843},"to":{"krate":0,"index":1035}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":190697,"byte_end":190709,"line_start":213,"line_end":213,"column_start":46,"column_end":58},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1843},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":191137,"byte_end":191149,"line_start":233,"line_end":233,"column_start":53,"column_end":65},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1843},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/array_storage.rs","byte_start":191404,"byte_end":191416,"line_start":244,"line_end":244,"column_start":56,"column_end":68},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1843},"to":{"krate":0,"index":1069}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":195811,"byte_end":195818,"line_start":23,"line_end":23,"column_start":21,"column_end":28},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":197097,"byte_end":197104,"line_start":67,"line_end":67,"column_start":20,"column_end":27},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":197327,"byte_end":197334,"line_start":75,"line_end":75,"column_start":20,"column_end":27},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":200673,"byte_end":200685,"line_start":156,"line_end":156,"column_start":5,"column_end":17},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":203813,"byte_end":203825,"line_start":251,"line_end":251,"column_start":5,"column_end":17},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/cg.rs","byte_start":206779,"byte_end":206791,"line_start":337,"line_end":337,"column_start":60,"column_end":72},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":208964,"byte_end":208970,"line_start":18,"line_end":18,"column_start":54,"column_end":60},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/componentwise.rs","byte_start":216831,"byte_end":216837,"line_start":243,"line_end":243,"column_start":46,"column_end":52},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":218389,"byte_end":218397,"line_start":30,"line_end":30,"column_start":33,"column_end":41},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":227793,"byte_end":227800,"line_start":305,"line_end":305,"column_start":17,"column_end":24},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":247003,"byte_end":247011,"line_start":740,"line_end":740,"column_start":42,"column_end":50},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1089},"to":{"krate":16,"index":373}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":247312,"byte_end":247319,"line_start":756,"line_end":756,"column_start":29,"column_end":36},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1093},"to":{"krate":16,"index":383}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":247543,"byte_end":247551,"line_start":767,"line_end":767,"column_start":45,"column_end":53},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1089},"to":{"krate":16,"index":87}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":247892,"byte_end":247900,"line_start":783,"line_end":783,"column_start":69,"column_end":77},"kind":{"Impl":{"id":125}},"from":{"krate":21,"index":1980},"to":{"krate":21,"index":537}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":248966,"byte_end":248974,"line_start":818,"line_end":818,"column_start":70,"column_end":78},"kind":{"Impl":{"id":126}},"from":{"krate":21,"index":1980},"to":{"krate":21,"index":537}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction.rs","byte_start":256685,"byte_end":256692,"line_start":1009,"line_end":1009,"column_start":21,"column_end":28},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":260505,"byte_end":260518,"line_start":12,"line_end":12,"column_start":5,"column_end":18},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":262522,"byte_end":262538,"line_start":63,"line_end":63,"column_start":5,"column_end":21},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":265569,"byte_end":265582,"line_start":135,"line_end":135,"column_start":37,"column_end":50},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/construction_slice.rs","byte_start":266733,"byte_end":266749,"line_start":160,"line_end":160,"column_start":37,"column_end":53},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":274745,"byte_end":274753,"line_start":33,"line_end":33,"column_start":65,"column_end":73},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1089},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":285406,"byte_end":285412,"line_start":350,"line_end":350,"column_start":9,"column_end":15},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":16809},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":285878,"byte_end":285884,"line_start":367,"line_end":367,"column_start":9,"column_end":15},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":16809},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":286271,"byte_end":286277,"line_start":381,"line_end":381,"column_start":9,"column_end":15},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":16809},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":286620,"byte_end":286626,"line_start":394,"line_end":394,"column_start":9,"column_end":15},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":16809},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":287098,"byte_end":287104,"line_start":411,"line_end":411,"column_start":9,"column_end":15},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":16809},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":287497,"byte_end":287503,"line_start":425,"line_end":425,"column_start":9,"column_end":15},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":16809},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":287845,"byte_end":287856,"line_start":438,"line_end":438,"column_start":9,"column_end":20},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":17035},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":288924,"byte_end":288935,"line_start":475,"line_end":475,"column_start":9,"column_end":20},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":17035},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":290007,"byte_end":290021,"line_start":512,"line_end":512,"column_start":9,"column_end":23},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":17091},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":291469,"byte_end":291481,"line_start":566,"line_end":566,"column_start":46,"column_end":58},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1481},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":291646,"byte_end":291661,"line_start":573,"line_end":573,"column_start":50,"column_end":65},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1780},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":291880,"byte_end":291888,"line_start":581,"line_end":581,"column_start":9,"column_end":17},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":292500,"byte_end":292508,"line_start":602,"line_end":602,"column_start":9,"column_end":17},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":293216,"byte_end":293224,"line_start":625,"line_end":625,"column_start":9,"column_end":17},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/conversion.rs","byte_start":294125,"byte_end":294133,"line_start":652,"line_end":652,"column_start":9,"column_end":17},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":296114,"byte_end":296120,"line_start":21,"line_end":21,"column_start":61,"column_end":67},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":298823,"byte_end":298829,"line_start":102,"line_end":102,"column_start":57,"column_end":63},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":304521,"byte_end":304527,"line_start":265,"line_end":265,"column_start":49,"column_end":55},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":305764,"byte_end":305770,"line_start":303,"line_end":303,"column_start":54,"column_end":60},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":322976,"byte_end":322983,"line_start":817,"line_end":817,"column_start":17,"column_end":24},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1096},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":323776,"byte_end":323784,"line_start":836,"line_end":836,"column_start":25,"column_end":33},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":324748,"byte_end":324756,"line_start":860,"line_end":860,"column_start":25,"column_end":33},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":327790,"byte_end":327796,"line_start":962,"line_end":962,"column_start":29,"column_end":35},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":16809},"to":{"krate":2,"index":4688}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":329306,"byte_end":329312,"line_start":1010,"line_end":1010,"column_start":26,"column_end":32},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":16809},"to":{"krate":2,"index":4688}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/edition.rs","byte_start":329924,"byte_end":329930,"line_start":1031,"line_end":1031,"column_start":53,"column_end":59},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":16809},"to":{"krate":2,"index":4688}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":333234,"byte_end":333239,"line_start":51,"line_end":51,"column_start":35,"column_end":40},"kind":{"Impl":{"id":159}},"from":{"krate":2,"index":27894},"to":{"krate":0,"index":2643}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":334398,"byte_end":334407,"line_start":95,"line_end":95,"column_start":35,"column_end":44},"kind":{"Impl":{"id":160}},"from":{"krate":2,"index":27916},"to":{"krate":0,"index":2643}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":335426,"byte_end":335435,"line_start":135,"line_end":135,"column_start":43,"column_end":52},"kind":{"Impl":{"id":161}},"from":{"krate":2,"index":27916},"to":{"krate":0,"index":2643}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":335967,"byte_end":335976,"line_start":163,"line_end":163,"column_start":35,"column_end":44},"kind":{"Impl":{"id":162}},"from":{"krate":2,"index":27880},"to":{"krate":0,"index":2643}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":336477,"byte_end":336491,"line_start":189,"line_end":189,"column_start":35,"column_end":49},"kind":{"Impl":{"id":163}},"from":{"krate":2,"index":27960},"to":{"krate":0,"index":2643}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":337996,"byte_end":338003,"line_start":245,"line_end":245,"column_start":35,"column_end":42},"kind":{"Impl":{"id":164}},"from":{"krate":2,"index":27937},"to":{"krate":0,"index":2643}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":338974,"byte_end":338990,"line_start":285,"line_end":285,"column_start":35,"column_end":51},"kind":{"Impl":{"id":165}},"from":{"krate":2,"index":27968},"to":{"krate":0,"index":2643}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":340062,"byte_end":340067,"line_start":326,"line_end":326,"column_start":76,"column_end":81},"kind":"SuperTrait","from":{"krate":2,"index":1887},"to":{"krate":0,"index":2698}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":341277,"byte_end":341288,"line_start":362,"line_end":362,"column_start":5,"column_end":16},"kind":"SuperTrait","from":{"krate":0,"index":2698},"to":{"krate":0,"index":2709}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/indexing.rs","byte_start":344923,"byte_end":344929,"line_start":492,"line_end":492,"column_start":54,"column_end":60},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":357458,"byte_end":357464,"line_start":88,"line_end":88,"column_start":63,"column_end":69},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":16809},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":358872,"byte_end":358878,"line_start":147,"line_end":147,"column_start":36,"column_end":42},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":359280,"byte_end":359286,"line_start":159,"line_end":159,"column_start":54,"column_end":60},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":375292,"byte_end":375298,"line_start":685,"line_end":685,"column_start":57,"column_end":63},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":383224,"byte_end":383230,"line_start":932,"line_end":932,"column_start":43,"column_end":49},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":383611,"byte_end":383617,"line_start":942,"line_end":942,"column_start":46,"column_end":52},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":384040,"byte_end":384046,"line_start":952,"line_end":952,"column_start":64,"column_end":70},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":384305,"byte_end":384311,"line_start":960,"line_end":960,"column_start":67,"column_end":73},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":384576,"byte_end":384582,"line_start":968,"line_end":968,"column_start":49,"column_end":55},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":385060,"byte_end":385066,"line_start":986,"line_end":986,"column_start":64,"column_end":70},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":388030,"byte_end":388036,"line_start":1083,"line_end":1083,"column_start":67,"column_end":73},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":388692,"byte_end":388698,"line_start":1103,"line_end":1103,"column_start":59,"column_end":65},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":389822,"byte_end":389834,"line_start":1139,"line_end":1139,"column_start":46,"column_end":58},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":391384,"byte_end":391396,"line_start":1196,"line_end":1196,"column_start":56,"column_end":68},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":392411,"byte_end":392417,"line_start":1232,"line_end":1232,"column_start":5,"column_end":11},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":393189,"byte_end":393195,"line_start":1253,"line_end":1253,"column_start":57,"column_end":63},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":394143,"byte_end":394149,"line_start":1281,"line_end":1281,"column_start":57,"column_end":63},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":394768,"byte_end":394774,"line_start":1299,"line_end":1299,"column_start":42,"column_end":48},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":16809},"to":{"krate":15,"index":12}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":395238,"byte_end":395244,"line_start":1320,"line_end":1320,"column_start":43,"column_end":49},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":16809},"to":{"krate":15,"index":56}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":395702,"byte_end":395708,"line_start":1342,"line_end":1342,"column_start":39,"column_end":45},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":16809},"to":{"krate":15,"index":92}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":396194,"byte_end":396200,"line_start":1362,"line_end":1362,"column_start":43,"column_end":49},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":16809},"to":{"krate":2,"index":1655}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":398820,"byte_end":398826,"line_start":1450,"line_end":1450,"column_start":35,"column_end":41},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":16809},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":398961,"byte_end":398967,"line_start":1457,"line_end":1457,"column_start":67,"column_end":73},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":16809},"to":{"krate":2,"index":1618}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":402935,"byte_end":402941,"line_start":1576,"line_end":1576,"column_start":5,"column_end":11},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":406872,"byte_end":406878,"line_start":1675,"line_end":1675,"column_start":44,"column_end":50},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":407505,"byte_end":407511,"line_start":1696,"line_end":1696,"column_start":64,"column_end":70},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":408257,"byte_end":408263,"line_start":1719,"line_end":1719,"column_start":5,"column_end":11},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":409030,"byte_end":409034,"line_start":1743,"line_end":1743,"column_start":46,"column_end":50},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":17195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":411058,"byte_end":411062,"line_start":1808,"line_end":1808,"column_start":42,"column_end":46},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":17195},"to":{"krate":15,"index":12}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":411489,"byte_end":411493,"line_start":1827,"line_end":1827,"column_start":43,"column_end":47},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":17195},"to":{"krate":15,"index":56}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":411990,"byte_end":411994,"line_start":1850,"line_end":1850,"column_start":39,"column_end":43},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":17195},"to":{"krate":15,"index":92}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix.rs","byte_start":412379,"byte_end":412385,"line_start":1867,"line_end":1867,"column_start":27,"column_end":33},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":16809},"to":{"krate":2,"index":6168}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_simba.rs","byte_start":413093,"byte_end":413101,"line_start":15,"line_end":15,"column_start":29,"column_end":37},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":1089},"to":{"krate":28,"index":442}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":418342,"byte_end":418354,"line_start":93,"line_end":93,"column_start":9,"column_end":21},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":16928},"to":{"krate":2,"index":1892}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":418469,"byte_end":418481,"line_start":98,"line_end":98,"column_start":9,"column_end":21},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":16928},"to":{"krate":2,"index":1592}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":421136,"byte_end":421151,"line_start":182,"line_end":182,"column_start":9,"column_end":24},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":16984},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":421745,"byte_end":421757,"line_start":202,"line_end":202,"column_start":9,"column_end":21},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":16928},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":421874,"byte_end":421889,"line_start":206,"line_end":206,"column_start":9,"column_end":24},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":16984},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":422009,"byte_end":422024,"line_start":210,"line_end":210,"column_start":9,"column_end":24},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":16984},"to":{"krate":0,"index":1069}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":422156,"byte_end":422168,"line_start":215,"line_end":215,"column_start":9,"column_end":21},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":16928},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":422292,"byte_end":422307,"line_start":219,"line_end":219,"column_start":9,"column_end":24},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":16984},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":422434,"byte_end":422449,"line_start":223,"line_end":223,"column_start":9,"column_end":24},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":16984},"to":{"krate":0,"index":1069}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":422528,"byte_end":422534,"line_start":227,"line_end":227,"column_start":54,"column_end":60},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":442611,"byte_end":442616,"line_start":730,"line_end":730,"column_start":32,"column_end":37},"kind":{"Impl":{"id":213}},"from":{"krate":2,"index":27894},"to":{"krate":0,"index":3328}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":442965,"byte_end":442974,"line_start":749,"line_end":749,"column_start":32,"column_end":41},"kind":{"Impl":{"id":214}},"from":{"krate":2,"index":27916},"to":{"krate":0,"index":3328}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":443333,"byte_end":443340,"line_start":768,"line_end":768,"column_start":32,"column_end":39},"kind":{"Impl":{"id":215}},"from":{"krate":2,"index":27937},"to":{"krate":0,"index":3328}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":443667,"byte_end":443676,"line_start":787,"line_end":787,"column_start":32,"column_end":41},"kind":{"Impl":{"id":216}},"from":{"krate":2,"index":27880},"to":{"krate":0,"index":3328}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":444000,"byte_end":444006,"line_start":806,"line_end":806,"column_start":54,"column_end":60},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":445250,"byte_end":445256,"line_start":845,"line_end":845,"column_start":57,"column_end":63},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/matrix_slice.rs","byte_start":446579,"byte_end":446590,"line_start":884,"line_end":884,"column_start":9,"column_end":20},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":17035},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":448646,"byte_end":448659,"line_start":49,"line_end":49,"column_start":39,"column_end":52},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3437},"to":{"krate":0,"index":3424}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":449492,"byte_end":449498,"line_start":83,"line_end":83,"column_start":39,"column_end":45},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3439},"to":{"krate":0,"index":3424}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":450511,"byte_end":450522,"line_start":120,"line_end":120,"column_start":39,"column_end":50},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3442},"to":{"krate":0,"index":3424}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":451572,"byte_end":451578,"line_start":157,"line_end":157,"column_start":64,"column_end":70},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":455893,"byte_end":455899,"line_start":302,"line_end":302,"column_start":60,"column_end":66},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":457087,"byte_end":457093,"line_start":338,"line_end":338,"column_start":67,"column_end":73},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":458103,"byte_end":458109,"line_start":370,"line_end":370,"column_start":63,"column_end":69},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":458627,"byte_end":458635,"line_start":387,"line_end":387,"column_start":54,"column_end":62},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":1089},"to":{"krate":0,"index":3693}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":459152,"byte_end":459156,"line_start":414,"line_end":414,"column_start":53,"column_end":57},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":17195},"to":{"krate":2,"index":1972}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/norm.rs","byte_start":459617,"byte_end":459624,"line_start":430,"line_end":430,"column_start":35,"column_end":42},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":1172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":464979,"byte_end":464985,"line_start":12,"line_end":12,"column_start":54,"column_end":60},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":467224,"byte_end":467230,"line_start":87,"line_end":87,"column_start":60,"column_end":66},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/properties.rs","byte_start":467786,"byte_end":467798,"line_start":104,"line_end":104,"column_start":49,"column_end":61},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/scalar.rs","byte_start":468630,"byte_end":468635,"line_start":8,"line_end":8,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1592},"to":{"krate":0,"index":3599}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/scalar.rs","byte_start":468638,"byte_end":468647,"line_start":8,"line_end":8,"column_start":27,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":1618},"to":{"krate":0,"index":3599}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/scalar.rs","byte_start":468650,"byte_end":468655,"line_start":8,"line_end":8,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":5977},"to":{"krate":0,"index":3599}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/scalar.rs","byte_start":468658,"byte_end":468661,"line_start":8,"line_end":8,"column_start":47,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":2383},"to":{"krate":0,"index":3599}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/scalar.rs","byte_start":469156,"byte_end":469157,"line_start":24,"line_end":24,"column_start":52,"column_end":53},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3604},"to":{"krate":0,"index":3599}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":469513,"byte_end":469519,"line_start":7,"line_end":7,"column_start":54,"column_end":60},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":471575,"byte_end":471581,"line_start":76,"line_end":76,"column_start":73,"column_end":79},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/statistics.rs","byte_start":474340,"byte_end":474346,"line_start":173,"line_end":173,"column_start":80,"column_end":86},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":484271,"byte_end":484275,"line_start":74,"line_end":74,"column_start":17,"column_end":21},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":17195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":486627,"byte_end":486631,"line_start":143,"line_end":143,"column_start":9,"column_end":13},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":17195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":487656,"byte_end":487660,"line_start":179,"line_end":179,"column_start":22,"column_end":26},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":17195},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":489435,"byte_end":489439,"line_start":251,"line_end":251,"column_start":19,"column_end":23},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":17195},"to":{"krate":2,"index":2053}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":489856,"byte_end":489860,"line_start":264,"line_end":264,"column_start":53,"column_end":57},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":17195},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":490388,"byte_end":490392,"line_start":280,"line_end":280,"column_start":53,"column_end":57},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":17195},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":491002,"byte_end":491006,"line_start":298,"line_end":298,"column_start":53,"column_end":57},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":17195},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/unit.rs","byte_start":491781,"byte_end":491785,"line_start":320,"line_end":320,"column_start":54,"column_end":58},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":17195},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":493818,"byte_end":493828,"line_start":36,"line_end":36,"column_start":25,"column_end":35},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":17221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":495380,"byte_end":495390,"line_start":92,"line_end":92,"column_start":42,"column_end":52},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":17221},"to":{"krate":2,"index":1803}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":495575,"byte_end":495585,"line_start":104,"line_end":104,"column_start":59,"column_end":69},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":17221},"to":{"krate":0,"index":1035}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":496538,"byte_end":496548,"line_start":153,"line_end":153,"column_start":63,"column_end":73},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":17221},"to":{"krate":0,"index":1035}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":497541,"byte_end":497551,"line_start":207,"line_end":207,"column_start":62,"column_end":72},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":17221},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":497891,"byte_end":497901,"line_start":222,"line_end":222,"column_start":69,"column_end":79},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":17221},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":498061,"byte_end":498071,"line_start":227,"line_end":227,"column_start":72,"column_end":82},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":17221},"to":{"krate":0,"index":1069}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":498225,"byte_end":498235,"line_start":232,"line_end":232,"column_start":66,"column_end":76},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":17221},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":499005,"byte_end":499015,"line_start":262,"line_end":262,"column_start":73,"column_end":83},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":17221},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":499179,"byte_end":499189,"line_start":267,"line_end":267,"column_start":76,"column_end":86},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":17221},"to":{"krate":0,"index":1069}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":499308,"byte_end":499318,"line_start":272,"line_end":272,"column_start":31,"column_end":41},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":17221},"to":{"krate":2,"index":4688}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":500023,"byte_end":500033,"line_start":288,"line_end":288,"column_start":50,"column_end":60},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":17221},"to":{"krate":2,"index":4688}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":500515,"byte_end":500525,"line_start":301,"line_end":301,"column_start":50,"column_end":60},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":17221},"to":{"krate":2,"index":4688}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/base/vec_storage.rs","byte_start":501432,"byte_end":501442,"line_start":329,"line_end":329,"column_start":23,"column_end":33},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":17221},"to":{"krate":2,"index":4688}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":513861,"byte_end":513870,"line_start":8,"line_end":8,"column_start":52,"column_end":61},"kind":"SuperTrait","from":{"krate":2,"index":1618},"to":{"krate":0,"index":3907}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":513873,"byte_end":513882,"line_start":8,"line_end":8,"column_start":64,"column_end":73},"kind":"SuperTrait","from":{"krate":28,"index":147},"to":{"krate":0,"index":3907}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":513885,"byte_end":513890,"line_start":8,"line_end":8,"column_start":76,"column_end":81},"kind":"SuperTrait","from":{"krate":2,"index":1592},"to":{"krate":0,"index":3907}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":514838,"byte_end":514846,"line_start":33,"line_end":33,"column_start":63,"column_end":71},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":17647},"to":{"krate":0,"index":3907}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":515926,"byte_end":515940,"line_start":86,"line_end":86,"column_start":52,"column_end":66},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":4809},"to":{"krate":0,"index":3907}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/abstract_rotation.rs","byte_start":516755,"byte_end":516766,"line_start":126,"line_end":126,"column_start":52,"column_end":63},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":5230},"to":{"krate":0,"index":3907}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":518492,"byte_end":518497,"line_start":33,"line_end":33,"column_start":70,"column_end":75},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":17257},"to":{"krate":2,"index":6168}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":518752,"byte_end":518757,"line_start":43,"line_end":43,"column_start":45,"column_end":50},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":17257},"to":{"krate":2,"index":1892}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":520203,"byte_end":520208,"line_start":101,"line_end":101,"column_start":29,"column_end":34},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":17257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":523835,"byte_end":523840,"line_start":221,"line_end":221,"column_start":55,"column_end":60},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":17257},"to":{"krate":15,"index":12}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":524251,"byte_end":524256,"line_start":239,"line_end":239,"column_start":57,"column_end":62},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":17257},"to":{"krate":15,"index":56}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":524732,"byte_end":524737,"line_start":261,"line_end":261,"column_start":49,"column_end":54},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":17257},"to":{"krate":15,"index":92}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":525109,"byte_end":525114,"line_start":277,"line_end":277,"column_start":41,"column_end":46},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":17257},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":525207,"byte_end":525212,"line_start":279,"line_end":279,"column_start":43,"column_end":48},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":17257},"to":{"krate":2,"index":1618}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":525422,"byte_end":525427,"line_start":289,"line_end":289,"column_start":57,"column_end":62},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":17257},"to":{"krate":2,"index":1655}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":526076,"byte_end":526081,"line_start":322,"line_end":322,"column_start":46,"column_end":51},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":17257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point.rs","byte_start":526843,"byte_end":526848,"line_start":351,"line_end":351,"column_start":61,"column_end":66},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":17257},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":528218,"byte_end":528223,"line_start":15,"line_end":15,"column_start":29,"column_end":34},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":17257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":531421,"byte_end":531426,"line_start":118,"line_end":118,"column_start":51,"column_end":56},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":17257},"to":{"krate":16,"index":87}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_construction.rs","byte_start":531722,"byte_end":531730,"line_start":133,"line_end":133,"column_start":59,"column_end":67},"kind":{"Impl":{"id":275}},"from":{"krate":21,"index":1980},"to":{"krate":21,"index":537}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs","byte_start":535081,"byte_end":535086,"line_start":28,"line_end":28,"column_start":44,"column_end":49},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":17257},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs","byte_start":535773,"byte_end":535778,"line_start":53,"line_end":53,"column_start":62,"column_end":67},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":17257},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs","byte_start":538170,"byte_end":538177,"line_start":134,"line_end":134,"column_start":64,"column_end":71},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":1172},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs","byte_start":538444,"byte_end":538449,"line_start":145,"line_end":145,"column_start":53,"column_end":58},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":17257},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs","byte_start":538692,"byte_end":538697,"line_start":156,"line_end":156,"column_start":9,"column_end":14},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":17257},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs","byte_start":539172,"byte_end":539177,"line_start":170,"line_end":170,"column_start":9,"column_end":14},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":17257},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs","byte_start":539741,"byte_end":539746,"line_start":189,"line_end":189,"column_start":9,"column_end":14},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":17257},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_conversion.rs","byte_start":540419,"byte_end":540424,"line_start":212,"line_end":212,"column_start":9,"column_end":14},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":17257},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_ops.rs","byte_start":543022,"byte_end":543027,"line_start":23,"line_end":23,"column_start":46,"column_end":51},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":17257},"to":{"krate":2,"index":2132}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_ops.rs","byte_start":543247,"byte_end":543252,"line_start":35,"line_end":35,"column_start":49,"column_end":54},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":17257},"to":{"krate":2,"index":2136}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_ops.rs","byte_start":543487,"byte_end":543492,"line_start":50,"line_end":50,"column_start":49,"column_end":54},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":17257},"to":{"krate":2,"index":1972}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/point_simba.rs","byte_start":550768,"byte_end":550773,"line_start":9,"line_end":9,"column_start":55,"column_end":60},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":17257},"to":{"krate":28,"index":442}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":552713,"byte_end":552721,"line_start":35,"line_end":35,"column_start":70,"column_end":78},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":17647},"to":{"krate":2,"index":6168}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":552982,"byte_end":552990,"line_start":45,"line_end":45,"column_start":45,"column_end":53},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":17647},"to":{"krate":2,"index":1892}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":553148,"byte_end":553156,"line_start":52,"line_end":52,"column_start":39,"column_end":47},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":17647},"to":{"krate":2,"index":1592}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":554689,"byte_end":554697,"line_start":114,"line_end":114,"column_start":29,"column_end":37},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":17647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":564049,"byte_end":564057,"line_start":364,"line_end":364,"column_start":36,"column_end":44},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":17647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":567093,"byte_end":567101,"line_start":446,"line_end":446,"column_start":41,"column_end":49},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":17647},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":567209,"byte_end":567217,"line_start":448,"line_end":448,"column_start":55,"column_end":63},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":17647},"to":{"krate":2,"index":1618}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":567408,"byte_end":567416,"line_start":458,"line_end":458,"column_start":35,"column_end":43},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":17647},"to":{"krate":15,"index":12}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":567836,"byte_end":567844,"line_start":477,"line_end":477,"column_start":36,"column_end":44},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":17647},"to":{"krate":15,"index":56}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":568334,"byte_end":568342,"line_start":500,"line_end":500,"column_start":32,"column_end":40},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":17647},"to":{"krate":15,"index":92}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation.rs","byte_start":568762,"byte_end":568770,"line_start":522,"line_end":522,"column_start":38,"column_end":46},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":17647},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_construction.rs","byte_start":570133,"byte_end":570141,"line_start":11,"line_end":11,"column_start":21,"column_end":29},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":17647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_construction.rs","byte_start":570728,"byte_end":570736,"line_start":33,"line_end":33,"column_start":29,"column_end":37},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":17647},"to":{"krate":16,"index":383}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":571852,"byte_end":571860,"line_start":33,"line_end":33,"column_start":56,"column_end":64},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":17647},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":572481,"byte_end":572490,"line_start":55,"line_end":55,"column_start":47,"column_end":56},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4370},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":573083,"byte_end":573092,"line_start":78,"line_end":78,"column_start":44,"column_end":53},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4368},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":573685,"byte_end":573693,"line_start":101,"line_end":101,"column_start":62,"column_end":70},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":17647},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":574351,"byte_end":574359,"line_start":124,"line_end":124,"column_start":64,"column_end":72},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":17647},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":575074,"byte_end":575082,"line_start":147,"line_end":147,"column_start":54,"column_end":62},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":17647},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":576032,"byte_end":576040,"line_start":176,"line_end":176,"column_start":62,"column_end":70},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":17647},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":577646,"byte_end":577653,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":1102},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":577790,"byte_end":577797,"line_start":227,"line_end":227,"column_start":43,"column_end":50},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":1100},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":577930,"byte_end":577937,"line_start":234,"line_end":234,"column_start":43,"column_end":50},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":578074,"byte_end":578081,"line_start":241,"line_end":241,"column_start":43,"column_end":50},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":1102},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":578264,"byte_end":578272,"line_start":249,"line_end":249,"column_start":9,"column_end":17},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":17647},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":578753,"byte_end":578761,"line_start":265,"line_end":265,"column_start":9,"column_end":17},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":17647},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":579324,"byte_end":579332,"line_start":283,"line_end":283,"column_start":9,"column_end":17},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":17647},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_conversion.rs","byte_start":580060,"byte_end":580068,"line_start":305,"line_end":305,"column_start":9,"column_end":17},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":17647},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_ops.rs","byte_start":581848,"byte_end":581856,"line_start":33,"line_end":33,"column_start":55,"column_end":63},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":17647},"to":{"krate":2,"index":2132}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_simba.rs","byte_start":587314,"byte_end":587322,"line_start":9,"line_end":9,"column_start":26,"column_end":34},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":17647},"to":{"krate":28,"index":442}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":589185,"byte_end":589194,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":4368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":596756,"byte_end":596764,"line_start":241,"line_end":241,"column_start":55,"column_end":63},"kind":{"Impl":{"id":373}},"from":{"krate":21,"index":1980},"to":{"krate":21,"index":537}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":597386,"byte_end":597395,"line_start":270,"line_end":270,"column_start":24,"column_end":33},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":4370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/rotation_specialization.rs","byte_start":619112,"byte_end":619120,"line_start":867,"line_end":867,"column_start":55,"column_end":63},"kind":{"Impl":{"id":375}},"from":{"krate":21,"index":1980},"to":{"krate":21,"index":537}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":622209,"byte_end":622219,"line_start":54,"line_end":54,"column_start":36,"column_end":46},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":17903},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":622296,"byte_end":622306,"line_start":56,"line_end":56,"column_start":38,"column_end":48},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":17903},"to":{"krate":2,"index":1618}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":622632,"byte_end":622642,"line_start":67,"line_end":67,"column_start":52,"column_end":62},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":17903},"to":{"krate":2,"index":6168}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":622786,"byte_end":622796,"line_start":73,"line_end":73,"column_start":45,"column_end":55},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":17903},"to":{"krate":2,"index":1892}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":622842,"byte_end":622852,"line_start":75,"line_end":75,"column_start":39,"column_end":49},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":17903},"to":{"krate":2,"index":1592}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":623619,"byte_end":623629,"line_start":110,"line_end":110,"column_start":24,"column_end":34},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":17903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":628995,"byte_end":629005,"line_start":300,"line_end":300,"column_start":24,"column_end":34},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":17903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":648929,"byte_end":648939,"line_start":915,"line_end":915,"column_start":59,"column_end":69},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":17903},"to":{"krate":15,"index":12}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":649455,"byte_end":649465,"line_start":931,"line_end":931,"column_start":61,"column_end":71},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":17903},"to":{"krate":15,"index":56}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":650056,"byte_end":650066,"line_start":950,"line_end":950,"column_start":53,"column_end":63},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":17903},"to":{"krate":15,"index":92}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":650566,"byte_end":650576,"line_start":964,"line_end":964,"column_start":52,"column_end":62},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":17903},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":650930,"byte_end":650940,"line_start":977,"line_end":977,"column_start":35,"column_end":45},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":17903},"to":{"krate":0,"index":3693}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":651402,"byte_end":651416,"line_start":1001,"line_end":1001,"column_start":24,"column_end":38},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":4809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":669917,"byte_end":669931,"line_start":1539,"line_end":1539,"column_start":52,"column_end":66},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":4809},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":670546,"byte_end":670560,"line_start":1561,"line_end":1561,"column_start":59,"column_end":73},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":4809},"to":{"krate":15,"index":12}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":670899,"byte_end":670913,"line_start":1575,"line_end":1575,"column_start":61,"column_end":75},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":4809},"to":{"krate":15,"index":56}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion.rs","byte_start":671326,"byte_end":671340,"line_start":1593,"line_end":1593,"column_start":53,"column_end":67},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":4809},"to":{"krate":15,"index":92}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":672233,"byte_end":672243,"line_start":22,"line_end":22,"column_start":29,"column_end":39},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":17903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":673235,"byte_end":673245,"line_start":50,"line_end":50,"column_start":24,"column_end":34},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":17903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":674803,"byte_end":674813,"line_start":104,"line_end":104,"column_start":24,"column_end":34},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":17903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":675338,"byte_end":675348,"line_start":122,"line_end":122,"column_start":32,"column_end":42},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":17903},"to":{"krate":16,"index":383}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":675494,"byte_end":675504,"line_start":132,"line_end":132,"column_start":33,"column_end":43},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":17903},"to":{"krate":16,"index":373}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":675768,"byte_end":675776,"line_start":147,"line_end":147,"column_start":56,"column_end":64},"kind":{"Impl":{"id":398}},"from":{"krate":21,"index":1980},"to":{"krate":21,"index":537}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":676346,"byte_end":676360,"line_start":173,"line_end":173,"column_start":24,"column_end":38},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":4809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":700006,"byte_end":700020,"line_start":793,"line_end":793,"column_start":32,"column_end":46},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":4809},"to":{"krate":16,"index":383}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_construction.rs","byte_start":700193,"byte_end":700201,"line_start":803,"line_end":803,"column_start":60,"column_end":68},"kind":{"Impl":{"id":401}},"from":{"krate":21,"index":1980},"to":{"krate":21,"index":537}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":702832,"byte_end":702842,"line_start":35,"line_end":35,"column_start":43,"column_end":53},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":17903},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":703374,"byte_end":703388,"line_start":58,"line_end":58,"column_start":47,"column_end":61},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":4809},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":703946,"byte_end":703960,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":4809},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":704544,"byte_end":704558,"line_start":102,"line_end":102,"column_start":51,"column_end":65},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":4809},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":705144,"byte_end":705158,"line_start":124,"line_end":124,"column_start":53,"column_end":67},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":4809},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":705779,"byte_end":705793,"line_start":146,"line_end":146,"column_start":52,"column_end":66},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":4809},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":706397,"byte_end":706411,"line_start":168,"line_end":168,"column_start":79,"column_end":93},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":4809},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":707757,"byte_end":707764,"line_start":221,"line_end":221,"column_start":52,"column_end":59},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":707952,"byte_end":707961,"line_start":231,"line_end":231,"column_start":52,"column_end":61},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":4370},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":708148,"byte_end":708162,"line_start":241,"line_end":241,"column_start":47,"column_end":61},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":4809},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":708357,"byte_end":708364,"line_start":251,"line_end":251,"column_start":52,"column_end":59},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":1102},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":708567,"byte_end":708577,"line_start":261,"line_end":261,"column_start":50,"column_end":60},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":17903},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":708747,"byte_end":708757,"line_start":268,"line_end":268,"column_start":76,"column_end":86},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":17903},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":709065,"byte_end":709075,"line_start":279,"line_end":279,"column_start":76,"column_end":86},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":17903},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":709472,"byte_end":709482,"line_start":295,"line_end":295,"column_start":76,"column_end":86},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":17903},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":709988,"byte_end":709998,"line_start":315,"line_end":315,"column_start":77,"column_end":87},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":17903},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":710742,"byte_end":710756,"line_start":344,"line_end":344,"column_start":9,"column_end":23},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":4809},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":711120,"byte_end":711134,"line_start":356,"line_end":356,"column_start":9,"column_end":23},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":4809},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":711599,"byte_end":711613,"line_start":373,"line_end":373,"column_start":9,"column_end":23},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":4809},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_conversion.rs","byte_start":712211,"byte_end":712225,"line_start":394,"line_end":394,"column_start":9,"column_end":23},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":4809},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_coordinates.rs","byte_start":713209,"byte_end":713219,"line_start":11,"line_end":11,"column_start":39,"column_end":49},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":17903},"to":{"krate":2,"index":2053}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_coordinates.rs","byte_start":713396,"byte_end":713406,"line_start":20,"line_end":20,"column_start":42,"column_end":52},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":17903},"to":{"krate":2,"index":2064}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_ops.rs","byte_start":715073,"byte_end":715083,"line_start":65,"line_end":65,"column_start":41,"column_end":51},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":17903},"to":{"krate":2,"index":2132}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_ops.rs","byte_start":715250,"byte_end":715260,"line_start":74,"line_end":74,"column_start":44,"column_end":54},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":17903},"to":{"krate":2,"index":2136}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_ops.rs","byte_start":728594,"byte_end":728604,"line_start":553,"line_end":553,"column_start":32,"column_end":42},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":17903},"to":{"krate":2,"index":1972}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_simba.rs","byte_start":732743,"byte_end":732753,"line_start":7,"line_end":7,"column_start":43,"column_end":53},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":17903},"to":{"krate":28,"index":442}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/quaternion_simba.rs","byte_start":733740,"byte_end":733754,"line_start":50,"line_end":50,"column_start":43,"column_end":57},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":4809},"to":{"krate":28,"index":442}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":735257,"byte_end":735264,"line_start":13,"line_end":13,"column_start":35,"column_end":42},"kind":{"Impl":{"id":471}},"from":{"krate":29,"index":471},"to":{"krate":0,"index":3693}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":736010,"byte_end":736021,"line_start":43,"line_end":43,"column_start":24,"column_end":35},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":5230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":746189,"byte_end":746200,"line_start":365,"line_end":365,"column_start":52,"column_end":63},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":5230},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":746364,"byte_end":746375,"line_start":371,"line_end":371,"column_start":34,"column_end":45},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":5230},"to":{"krate":15,"index":12}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":746720,"byte_end":746731,"line_start":385,"line_end":385,"column_start":35,"column_end":46},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":5230},"to":{"krate":15,"index":56}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex.rs","byte_start":747167,"byte_end":747178,"line_start":403,"line_end":403,"column_start":31,"column_end":42},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":5230},"to":{"krate":15,"index":92}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":747927,"byte_end":747938,"line_start":16,"line_end":16,"column_start":24,"column_end":35},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":5230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":757300,"byte_end":757311,"line_start":283,"line_end":283,"column_start":32,"column_end":43},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":5230},"to":{"krate":16,"index":383}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_construction.rs","byte_start":757481,"byte_end":757489,"line_start":293,"line_end":293,"column_start":57,"column_end":65},"kind":{"Impl":{"id":479}},"from":{"krate":21,"index":1980},"to":{"krate":21,"index":537}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":758858,"byte_end":758869,"line_start":29,"line_end":29,"column_start":44,"column_end":55},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":5230},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":759401,"byte_end":759412,"line_start":50,"line_end":50,"column_start":42,"column_end":53},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":5230},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":760004,"byte_end":760015,"line_start":73,"line_end":73,"column_start":51,"column_end":62},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":5230},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":760601,"byte_end":760612,"line_start":95,"line_end":95,"column_start":53,"column_end":64},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":5230},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":761233,"byte_end":761244,"line_start":117,"line_end":117,"column_start":52,"column_end":63},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":5230},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":761848,"byte_end":761859,"line_start":139,"line_end":139,"column_start":79,"column_end":90},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":5230},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":762331,"byte_end":762340,"line_start":157,"line_end":157,"column_start":49,"column_end":58},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":4368},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":762524,"byte_end":762535,"line_start":167,"line_end":167,"column_start":47,"column_end":58},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":5230},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":762727,"byte_end":762734,"line_start":177,"line_end":177,"column_start":49,"column_end":56},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":1102},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":762922,"byte_end":762929,"line_start":187,"line_end":187,"column_start":49,"column_end":56},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":1100},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":763163,"byte_end":763174,"line_start":197,"line_end":197,"column_start":84,"column_end":95},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":5230},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":763585,"byte_end":763596,"line_start":211,"line_end":211,"column_start":84,"column_end":95},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":5230},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":764051,"byte_end":764062,"line_start":225,"line_end":225,"column_start":84,"column_end":95},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":5230},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_conversion.rs","byte_start":764700,"byte_end":764711,"line_start":245,"line_end":245,"column_start":85,"column_end":96},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":5230},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":766631,"byte_end":766642,"line_start":45,"line_end":45,"column_start":38,"column_end":49},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":5230},"to":{"krate":2,"index":1955}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":767141,"byte_end":767152,"line_start":66,"line_end":66,"column_start":56,"column_end":67},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":5230},"to":{"krate":2,"index":1955}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":767726,"byte_end":767737,"line_start":91,"line_end":91,"column_start":38,"column_end":49},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":5230},"to":{"krate":2,"index":1960}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":768305,"byte_end":768316,"line_start":115,"line_end":115,"column_start":56,"column_end":67},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":5230},"to":{"krate":2,"index":1960}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":775111,"byte_end":775122,"line_start":323,"line_end":323,"column_start":54,"column_end":65},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":5230},"to":{"krate":2,"index":1986}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":775330,"byte_end":775341,"line_start":333,"line_end":333,"column_start":62,"column_end":73},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":5230},"to":{"krate":2,"index":1986}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":775575,"byte_end":775586,"line_start":344,"line_end":344,"column_start":54,"column_end":65},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":5230},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":775794,"byte_end":775805,"line_start":354,"line_end":354,"column_start":62,"column_end":73},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":5230},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":776038,"byte_end":776049,"line_start":365,"line_end":365,"column_start":55,"column_end":66},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":5230},"to":{"krate":2,"index":1986}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":776303,"byte_end":776314,"line_start":376,"line_end":376,"column_start":63,"column_end":74},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":5230},"to":{"krate":2,"index":1986}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":776592,"byte_end":776603,"line_start":388,"line_end":388,"column_start":55,"column_end":66},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":5230},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":776857,"byte_end":776868,"line_start":399,"line_end":399,"column_start":63,"column_end":74},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":5230},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":777145,"byte_end":777153,"line_start":411,"line_end":411,"column_start":54,"column_end":62},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":17647},"to":{"krate":2,"index":1986}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":777430,"byte_end":777438,"line_start":422,"line_end":422,"column_start":62,"column_end":70},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":17647},"to":{"krate":2,"index":1986}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":777739,"byte_end":777747,"line_start":434,"line_end":434,"column_start":54,"column_end":62},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":17647},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_ops.rs","byte_start":778024,"byte_end":778032,"line_start":445,"line_end":445,"column_start":62,"column_end":70},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":17647},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/unit_complex_simba.rs","byte_start":778449,"byte_end":778460,"line_start":9,"line_end":9,"column_start":38,"column_end":49},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":5230},"to":{"krate":28,"index":442}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":780539,"byte_end":780550,"line_start":35,"line_end":35,"column_start":70,"column_end":81},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":18472},"to":{"krate":2,"index":6168}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":780771,"byte_end":780782,"line_start":45,"line_end":45,"column_start":45,"column_end":56},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":18472},"to":{"krate":2,"index":1892}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":780900,"byte_end":780911,"line_start":52,"line_end":52,"column_start":39,"column_end":50},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":18472},"to":{"krate":2,"index":1592}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":782378,"byte_end":782389,"line_start":114,"line_end":114,"column_start":29,"column_end":40},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":18472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":785438,"byte_end":785449,"line_start":207,"line_end":207,"column_start":41,"column_end":52},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":18472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":786047,"byte_end":786058,"line_start":227,"line_end":227,"column_start":41,"column_end":52},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":18472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":786639,"byte_end":786650,"line_start":245,"line_end":245,"column_start":41,"column_end":52},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":18472},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":786755,"byte_end":786766,"line_start":247,"line_end":247,"column_start":55,"column_end":66},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":18472},"to":{"krate":2,"index":1618}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":786987,"byte_end":786998,"line_start":257,"line_end":257,"column_start":55,"column_end":66},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":18472},"to":{"krate":15,"index":12}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":787409,"byte_end":787420,"line_start":275,"line_end":275,"column_start":57,"column_end":68},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":18472},"to":{"krate":15,"index":56}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":787896,"byte_end":787907,"line_start":297,"line_end":297,"column_start":49,"column_end":60},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":18472},"to":{"krate":15,"index":92}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation.rs","byte_start":788323,"byte_end":788334,"line_start":318,"line_end":318,"column_start":61,"column_end":72},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":18472},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs","byte_start":789701,"byte_end":789712,"line_start":18,"line_end":18,"column_start":36,"column_end":47},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":18472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs","byte_start":790385,"byte_end":790396,"line_start":42,"line_end":42,"column_start":56,"column_end":67},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":18472},"to":{"krate":16,"index":383}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_construction.rs","byte_start":790585,"byte_end":790593,"line_start":52,"line_end":52,"column_start":65,"column_end":73},"kind":{"Impl":{"id":547}},"from":{"krate":21,"index":1980},"to":{"krate":21,"index":537}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs","byte_start":793669,"byte_end":793680,"line_start":25,"line_end":25,"column_start":59,"column_end":70},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":18472},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs","byte_start":794306,"byte_end":794317,"line_start":49,"line_end":49,"column_start":62,"column_end":73},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":18472},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs","byte_start":794938,"byte_end":794949,"line_start":72,"line_end":72,"column_start":64,"column_end":75},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":18472},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs","byte_start":795627,"byte_end":795638,"line_start":95,"line_end":95,"column_start":54,"column_end":65},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":18472},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs","byte_start":796439,"byte_end":796450,"line_start":122,"line_end":122,"column_start":62,"column_end":73},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":18472},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs","byte_start":797582,"byte_end":797589,"line_start":158,"line_end":158,"column_start":70,"column_end":77},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":1093},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs","byte_start":797881,"byte_end":797892,"line_start":169,"line_end":169,"column_start":53,"column_end":64},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":18472},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs","byte_start":798140,"byte_end":798151,"line_start":180,"line_end":180,"column_start":9,"column_end":20},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":18472},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs","byte_start":798609,"byte_end":798620,"line_start":196,"line_end":196,"column_start":9,"column_end":20},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":18472},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs","byte_start":799148,"byte_end":799159,"line_start":214,"line_end":214,"column_start":9,"column_end":20},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":18472},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_conversion.rs","byte_start":799828,"byte_end":799839,"line_start":236,"line_end":236,"column_start":9,"column_end":20},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":18472},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/translation_simba.rs","byte_start":808683,"byte_end":808694,"line_start":10,"line_end":10,"column_start":55,"column_end":66},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":18472},"to":{"krate":28,"index":442}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":812057,"byte_end":812065,"line_start":74,"line_end":74,"column_start":9,"column_end":17},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":18630},"to":{"krate":2,"index":6168}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":812375,"byte_end":812383,"line_start":86,"line_end":86,"column_start":9,"column_end":17},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":18630},"to":{"krate":2,"index":1892}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":812539,"byte_end":812547,"line_start":93,"line_end":93,"column_start":74,"column_end":82},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":18630},"to":{"krate":2,"index":1592}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":812786,"byte_end":812794,"line_start":103,"line_end":103,"column_start":56,"column_end":64},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":18630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":813676,"byte_end":813684,"line_start":130,"line_end":130,"column_start":63,"column_end":71},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":18630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":822147,"byte_end":822155,"line_start":357,"line_end":357,"column_start":39,"column_end":47},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":18630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":823335,"byte_end":823343,"line_start":391,"line_end":391,"column_start":46,"column_end":54},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":18630},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":823491,"byte_end":823499,"line_start":398,"line_end":398,"column_start":53,"column_end":61},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":18630},"to":{"krate":2,"index":1618}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":823792,"byte_end":823800,"line_start":409,"line_end":409,"column_start":49,"column_end":57},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":18630},"to":{"krate":15,"index":12}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":824349,"byte_end":824357,"line_start":429,"line_end":429,"column_start":50,"column_end":58},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":18630},"to":{"krate":15,"index":56}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":825024,"byte_end":825032,"line_start":455,"line_end":455,"column_start":46,"column_end":54},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":18630},"to":{"krate":15,"index":92}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry.rs","byte_start":825615,"byte_end":825623,"line_start":479,"line_end":479,"column_start":67,"column_end":75},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":18630},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":827635,"byte_end":827643,"line_start":22,"line_end":22,"column_start":63,"column_end":71},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":18630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":829194,"byte_end":829202,"line_start":70,"line_end":70,"column_start":71,"column_end":79},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":18630},"to":{"krate":16,"index":383}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":829472,"byte_end":829480,"line_start":82,"line_end":82,"column_start":71,"column_end":79},"kind":{"Impl":{"id":584}},"from":{"krate":21,"index":1980},"to":{"krate":21,"index":537}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":830290,"byte_end":830298,"line_start":116,"line_end":116,"column_start":24,"column_end":32},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":18630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_construction.rs","byte_start":831391,"byte_end":831399,"line_start":154,"line_end":154,"column_start":24,"column_end":32},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":18630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs","byte_start":842561,"byte_end":842569,"line_start":22,"line_end":22,"column_start":68,"column_end":76},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":18630},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs","byte_start":843457,"byte_end":843465,"line_start":50,"line_end":50,"column_start":70,"column_end":78},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":18630},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs","byte_start":844201,"byte_end":844209,"line_start":74,"line_end":74,"column_start":57,"column_end":65},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":18630},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs","byte_start":845373,"byte_end":845381,"line_start":108,"line_end":108,"column_start":65,"column_end":73},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":18630},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs","byte_start":847086,"byte_end":847093,"line_start":154,"line_end":154,"column_start":67,"column_end":74},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":1093},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs","byte_start":847492,"byte_end":847500,"line_start":167,"line_end":167,"column_start":9,"column_end":17},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":18630},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs","byte_start":848231,"byte_end":848239,"line_start":186,"line_end":186,"column_start":9,"column_end":17},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":18630},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs","byte_start":849194,"byte_end":849202,"line_start":215,"line_end":215,"column_start":9,"column_end":17},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":18630},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_conversion.rs","byte_start":850466,"byte_end":850474,"line_start":252,"line_end":252,"column_start":9,"column_end":17},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":18630},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/isometry_simba.rs","byte_start":872121,"byte_end":872129,"line_start":10,"line_end":10,"column_start":53,"column_end":61},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":18630},"to":{"krate":28,"index":442}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":875883,"byte_end":875893,"line_start":71,"line_end":71,"column_start":9,"column_end":19},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":19238},"to":{"krate":2,"index":6168}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":876206,"byte_end":876216,"line_start":83,"line_end":83,"column_start":9,"column_end":19},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":19238},"to":{"krate":2,"index":1892}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":876379,"byte_end":876389,"line_start":90,"line_end":90,"column_start":81,"column_end":91},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":19238},"to":{"krate":2,"index":1592}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":876616,"byte_end":876626,"line_start":100,"line_end":100,"column_start":39,"column_end":49},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":19238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":877591,"byte_end":877601,"line_start":131,"line_end":131,"column_start":32,"column_end":42},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":19238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":877851,"byte_end":877861,"line_start":142,"line_end":142,"column_start":39,"column_end":49},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":19238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":885004,"byte_end":885014,"line_start":334,"line_end":334,"column_start":39,"column_end":49},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":19238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":885639,"byte_end":885649,"line_start":356,"line_end":356,"column_start":46,"column_end":56},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":19238},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":885797,"byte_end":885807,"line_start":363,"line_end":363,"column_start":53,"column_end":63},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":19238},"to":{"krate":2,"index":1618}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":886092,"byte_end":886102,"line_start":374,"line_end":374,"column_start":49,"column_end":59},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":19238},"to":{"krate":15,"index":12}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":886643,"byte_end":886653,"line_start":394,"line_end":394,"column_start":50,"column_end":60},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":19238},"to":{"krate":15,"index":56}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":887312,"byte_end":887322,"line_start":420,"line_end":420,"column_start":46,"column_end":56},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":19238},"to":{"krate":15,"index":92}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity.rs","byte_start":887858,"byte_end":887868,"line_start":443,"line_end":443,"column_start":41,"column_end":51},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":19238},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":889541,"byte_end":889551,"line_start":22,"line_end":22,"column_start":39,"column_end":49},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":19238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":890255,"byte_end":890265,"line_start":49,"line_end":49,"column_start":47,"column_end":57},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":19238},"to":{"krate":16,"index":383}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":890570,"byte_end":890578,"line_start":62,"line_end":62,"column_start":73,"column_end":81},"kind":{"Impl":{"id":672}},"from":{"krate":21,"index":1980},"to":{"krate":21,"index":537}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":891006,"byte_end":891016,"line_start":79,"line_end":79,"column_start":39,"column_end":49},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":19238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":892599,"byte_end":892609,"line_start":134,"line_end":134,"column_start":24,"column_end":34},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":19238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_construction.rs","byte_start":893412,"byte_end":893422,"line_start":160,"line_end":160,"column_start":24,"column_end":34},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":19238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs","byte_start":903326,"byte_end":903336,"line_start":23,"line_end":23,"column_start":70,"column_end":80},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":19238},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs","byte_start":904237,"byte_end":904247,"line_start":51,"line_end":51,"column_start":57,"column_end":67},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":19238},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs","byte_start":905401,"byte_end":905411,"line_start":85,"line_end":85,"column_start":65,"column_end":75},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":19238},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs","byte_start":908838,"byte_end":908845,"line_start":174,"line_end":174,"column_start":69,"column_end":76},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":1093},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs","byte_start":909255,"byte_end":909265,"line_start":187,"line_end":187,"column_start":58,"column_end":68},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":19238},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs","byte_start":910005,"byte_end":910015,"line_start":206,"line_end":206,"column_start":58,"column_end":68},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":19238},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs","byte_start":910959,"byte_end":910969,"line_start":235,"line_end":235,"column_start":58,"column_end":68},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":19238},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_conversion.rs","byte_start":912182,"byte_end":912192,"line_start":272,"line_end":272,"column_start":59,"column_end":69},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":19238},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/similarity_simba.rs","byte_start":934088,"byte_end":934098,"line_start":9,"line_end":9,"column_start":53,"column_end":63},"kind":{"Impl":{"id":746}},"from":{"krate":0,"index":19238},"to":{"krate":28,"index":442}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":938734,"byte_end":938737,"line_start":21,"line_end":21,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2383},"to":{"krate":0,"index":6597}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":938740,"byte_end":938745,"line_start":21,"line_end":21,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":5977},"to":{"krate":0,"index":6597}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":938748,"byte_end":938752,"line_start":21,"line_end":21,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1892},"to":{"krate":0,"index":6597}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":938755,"byte_end":938764,"line_start":21,"line_end":21,"column_start":43,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":1618},"to":{"krate":0,"index":6597}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":938767,"byte_end":938771,"line_start":21,"line_end":21,"column_start":55,"column_end":59},"kind":"SuperTrait","from":{"krate":2,"index":1882},"to":{"krate":0,"index":6597}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":939461,"byte_end":939470,"line_start":39,"line_end":39,"column_start":43,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":6597},"to":{"krate":0,"index":6602}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":939853,"byte_end":939862,"line_start":47,"line_end":47,"column_start":47,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":6597},"to":{"krate":0,"index":6605}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":940054,"byte_end":940063,"line_start":52,"line_end":52,"column_start":45,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":6597},"to":{"krate":0,"index":6607}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":940103,"byte_end":940105,"line_start":53,"line_end":53,"column_start":37,"column_end":39},"kind":{"Impl":{"id":747}},"from":{"krate":0,"index":6610},"to":{"krate":0,"index":6607}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":940648,"byte_end":940656,"line_start":72,"line_end":72,"column_start":20,"column_end":28},"kind":{"Impl":{"id":748}},"from":{"krate":0,"index":19905},"to":{"krate":0,"index":6597}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":940891,"byte_end":940902,"line_start":83,"line_end":83,"column_start":20,"column_end":31},"kind":{"Impl":{"id":749}},"from":{"krate":0,"index":19920},"to":{"krate":0,"index":6597}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":941154,"byte_end":941161,"line_start":94,"line_end":94,"column_start":20,"column_end":27},"kind":{"Impl":{"id":750}},"from":{"krate":0,"index":19935},"to":{"krate":0,"index":6597}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":941872,"byte_end":941873,"line_start":122,"line_end":122,"column_start":40,"column_end":41},"kind":{"Impl":{"id":751}},"from":{"krate":0,"index":6628},"to":{"krate":0,"index":6602}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":942490,"byte_end":942491,"line_start":146,"line_end":146,"column_start":44,"column_end":45},"kind":{"Impl":{"id":752}},"from":{"krate":0,"index":6632},"to":{"krate":0,"index":6605}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":943502,"byte_end":943511,"line_start":177,"line_end":177,"column_start":69,"column_end":78},"kind":{"Impl":{"id":753}},"from":{"krate":0,"index":19965},"to":{"krate":2,"index":1892}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":943726,"byte_end":943735,"line_start":184,"line_end":184,"column_start":63,"column_end":72},"kind":{"Impl":{"id":754}},"from":{"krate":0,"index":19965},"to":{"krate":2,"index":1592}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":944976,"byte_end":944985,"line_start":224,"line_end":224,"column_start":65,"column_end":74},"kind":{"Impl":{"id":755}},"from":{"krate":0,"index":19965},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":945145,"byte_end":945154,"line_start":229,"line_end":229,"column_start":67,"column_end":76},"kind":{"Impl":{"id":756}},"from":{"krate":0,"index":19965},"to":{"krate":2,"index":1618}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":945398,"byte_end":945407,"line_start":239,"line_end":239,"column_start":53,"column_end":62},"kind":{"Impl":{"id":757}},"from":{"krate":0,"index":19965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":953633,"byte_end":953642,"line_start":473,"line_end":473,"column_start":31,"column_end":40},"kind":{"Impl":{"id":758}},"from":{"krate":0,"index":19965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":954460,"byte_end":954469,"line_start":500,"line_end":500,"column_start":53,"column_end":62},"kind":{"Impl":{"id":759}},"from":{"krate":0,"index":19965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":955349,"byte_end":955358,"line_start":525,"line_end":525,"column_start":39,"column_end":48},"kind":{"Impl":{"id":760}},"from":{"krate":0,"index":19965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":955800,"byte_end":955809,"line_start":537,"line_end":537,"column_start":67,"column_end":76},"kind":{"Impl":{"id":761}},"from":{"krate":0,"index":19965},"to":{"krate":15,"index":12}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":956269,"byte_end":956278,"line_start":555,"line_end":555,"column_start":68,"column_end":77},"kind":{"Impl":{"id":762}},"from":{"krate":0,"index":19965},"to":{"krate":15,"index":56}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform.rs","byte_start":956807,"byte_end":956816,"line_start":577,"line_end":577,"column_start":64,"column_end":73},"kind":{"Impl":{"id":763}},"from":{"krate":0,"index":19965},"to":{"krate":15,"index":92}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":958659,"byte_end":958668,"line_start":11,"line_end":11,"column_start":53,"column_end":62},"kind":{"Impl":{"id":764}},"from":{"krate":0,"index":19965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_construction.rs","byte_start":959772,"byte_end":959781,"line_start":49,"line_end":49,"column_start":61,"column_end":70},"kind":{"Impl":{"id":765}},"from":{"krate":0,"index":19965},"to":{"krate":16,"index":383}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_conversion.rs","byte_start":960314,"byte_end":960323,"line_start":9,"line_end":9,"column_start":69,"column_end":78},"kind":{"Impl":{"id":766}},"from":{"krate":0,"index":19965},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_conversion.rs","byte_start":961148,"byte_end":961157,"line_start":37,"line_end":37,"column_start":74,"column_end":83},"kind":{"Impl":{"id":767}},"from":{"krate":0,"index":19965},"to":{"krate":28,"index":173}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_conversion.rs","byte_start":961934,"byte_end":961941,"line_start":64,"line_end":64,"column_start":64,"column_end":71},"kind":{"Impl":{"id":768}},"from":{"krate":0,"index":1093},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_ops.rs","byte_start":964244,"byte_end":964253,"line_start":82,"line_end":82,"column_start":63,"column_end":72},"kind":{"Impl":{"id":769}},"from":{"krate":0,"index":19965},"to":{"krate":2,"index":2132}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_ops.rs","byte_start":964609,"byte_end":964618,"line_start":96,"line_end":96,"column_start":52,"column_end":61},"kind":{"Impl":{"id":770}},"from":{"krate":0,"index":19965},"to":{"krate":2,"index":2136}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/transform_simba.rs","byte_start":985896,"byte_end":985905,"line_start":10,"line_end":10,"column_start":56,"column_end":65},"kind":{"Impl":{"id":831}},"from":{"krate":0,"index":19965},"to":{"krate":28,"index":442}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/reflection.rs","byte_start":987737,"byte_end":987747,"line_start":16,"line_end":16,"column_start":49,"column_end":59},"kind":{"Impl":{"id":832}},"from":{"krate":0,"index":6891},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":992091,"byte_end":992104,"line_start":24,"line_end":24,"column_start":29,"column_end":42},"kind":{"Impl":{"id":833}},"from":{"krate":0,"index":6940},"to":{"krate":2,"index":1892}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":992141,"byte_end":992154,"line_start":26,"line_end":26,"column_start":30,"column_end":43},"kind":{"Impl":{"id":834}},"from":{"krate":0,"index":6940},"to":{"krate":2,"index":1592}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":992304,"byte_end":992317,"line_start":33,"line_end":33,"column_start":35,"column_end":48},"kind":{"Impl":{"id":835}},"from":{"krate":0,"index":6940},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":992462,"byte_end":992475,"line_start":39,"line_end":39,"column_start":34,"column_end":47},"kind":{"Impl":{"id":836}},"from":{"krate":0,"index":6940},"to":{"krate":2,"index":1618}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":993214,"byte_end":993227,"line_start":68,"line_end":68,"column_start":20,"column_end":33},"kind":{"Impl":{"id":837}},"from":{"krate":0,"index":6940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1017294,"byte_end":1017302,"line_start":687,"line_end":687,"column_start":55,"column_end":63},"kind":{"Impl":{"id":838}},"from":{"krate":21,"index":1980},"to":{"krate":21,"index":537}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/orthographic.rs","byte_start":1018355,"byte_end":1018362,"line_start":720,"line_end":720,"column_start":47,"column_end":54},"kind":{"Impl":{"id":839}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1019104,"byte_end":1019116,"line_start":25,"line_end":25,"column_start":29,"column_end":41},"kind":{"Impl":{"id":840}},"from":{"krate":0,"index":7014},"to":{"krate":2,"index":1892}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1019153,"byte_end":1019165,"line_start":27,"line_end":27,"column_start":30,"column_end":42},"kind":{"Impl":{"id":841}},"from":{"krate":0,"index":7014},"to":{"krate":2,"index":1592}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1019315,"byte_end":1019327,"line_start":34,"line_end":34,"column_start":35,"column_end":47},"kind":{"Impl":{"id":842}},"from":{"krate":0,"index":7014},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1019472,"byte_end":1019484,"line_start":40,"line_end":40,"column_start":34,"column_end":46},"kind":{"Impl":{"id":843}},"from":{"krate":0,"index":7014},"to":{"krate":2,"index":1618}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1020221,"byte_end":1020233,"line_start":69,"line_end":69,"column_start":20,"column_end":32},"kind":{"Impl":{"id":844}},"from":{"krate":0,"index":7014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1026884,"byte_end":1026892,"line_start":271,"line_end":271,"column_start":54,"column_end":62},"kind":{"Impl":{"id":845}},"from":{"krate":21,"index":1980},"to":{"krate":21,"index":537}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/geometry/perspective.rs","byte_start":1027685,"byte_end":1027692,"line_start":295,"line_end":295,"column_start":46,"column_end":53},"kind":{"Impl":{"id":846}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1033211,"byte_end":1033221,"line_start":53,"line_end":53,"column_start":54,"column_end":64},"kind":{"Impl":{"id":847}},"from":{"krate":0,"index":20658},"to":{"krate":2,"index":1892}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1033579,"byte_end":1033589,"line_start":65,"line_end":65,"column_start":45,"column_end":55},"kind":{"Impl":{"id":848}},"from":{"krate":0,"index":20658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/bidiagonal.rs","byte_start":1044132,"byte_end":1044138,"line_start":363,"line_end":363,"column_start":66,"column_end":72},"kind":{"Impl":{"id":849}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1045618,"byte_end":1045626,"line_start":33,"line_end":33,"column_start":40,"column_end":48},"kind":{"Impl":{"id":850}},"from":{"krate":0,"index":20676},"to":{"krate":2,"index":1892}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1045753,"byte_end":1045761,"line_start":40,"line_end":40,"column_start":43,"column_end":51},"kind":{"Impl":{"id":851}},"from":{"krate":0,"index":20676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/cholesky.rs","byte_start":1057285,"byte_end":1057297,"line_start":329,"line_end":329,"column_start":64,"column_end":76},"kind":{"Impl":{"id":852}},"from":{"krate":0,"index":2841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/convolution.rs","byte_start":1058010,"byte_end":1058016,"line_start":9,"line_end":9,"column_start":49,"column_end":55},"kind":{"Impl":{"id":853}},"from":{"krate":0,"index":2845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/determinant.rs","byte_start":1062150,"byte_end":1062162,"line_start":10,"line_end":10,"column_start":70,"column_end":82},"kind":{"Impl":{"id":854}},"from":{"krate":0,"index":2841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1065497,"byte_end":1065506,"line_start":40,"line_end":40,"column_start":54,"column_end":63},"kind":{"Impl":{"id":855}},"from":{"krate":0,"index":20688},"to":{"krate":2,"index":1892}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1065737,"byte_end":1065746,"line_start":48,"line_end":48,"column_start":45,"column_end":54},"kind":{"Impl":{"id":856}},"from":{"krate":0,"index":20688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1069200,"byte_end":1069209,"line_start":163,"line_end":163,"column_start":49,"column_end":58},"kind":{"Impl":{"id":857}},"from":{"krate":0,"index":20688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/full_piv_lu.rs","byte_start":1072462,"byte_end":1072468,"line_start":269,"line_end":269,"column_start":66,"column_end":72},"kind":{"Impl":{"id":858}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/givens.rs","byte_start":1073300,"byte_end":1073314,"line_start":19,"line_end":19,"column_start":23,"column_end":37},"kind":{"Impl":{"id":859}},"from":{"krate":0,"index":20705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1079291,"byte_end":1079301,"line_start":37,"line_end":37,"column_start":47,"column_end":57},"kind":{"Impl":{"id":860}},"from":{"krate":0,"index":20717},"to":{"krate":2,"index":1892}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1079492,"byte_end":1079502,"line_start":45,"line_end":45,"column_start":38,"column_end":48},"kind":{"Impl":{"id":861}},"from":{"krate":0,"index":20717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/hessenberg.rs","byte_start":1082563,"byte_end":1082575,"line_start":135,"line_end":135,"column_start":59,"column_end":71},"kind":{"Impl":{"id":862}},"from":{"krate":0,"index":2841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/inverse.rs","byte_start":1087799,"byte_end":1087811,"line_start":10,"line_end":10,"column_start":52,"column_end":64},"kind":{"Impl":{"id":863}},"from":{"krate":0,"index":2841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/inverse.rs","byte_start":1088254,"byte_end":1088266,"line_start":27,"line_end":27,"column_start":55,"column_end":67},"kind":{"Impl":{"id":864}},"from":{"krate":0,"index":2841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1096982,"byte_end":1096984,"line_start":39,"line_end":39,"column_start":54,"column_end":56},"kind":{"Impl":{"id":865}},"from":{"krate":0,"index":20730},"to":{"krate":2,"index":1892}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1098323,"byte_end":1098325,"line_start":87,"line_end":87,"column_start":45,"column_end":47},"kind":{"Impl":{"id":866}},"from":{"krate":0,"index":20730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1102101,"byte_end":1102103,"line_start":209,"line_end":209,"column_start":49,"column_end":51},"kind":{"Impl":{"id":867}},"from":{"krate":0,"index":20730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/lu.rs","byte_start":1107466,"byte_end":1107472,"line_start":383,"line_end":383,"column_start":66,"column_end":72},"kind":{"Impl":{"id":868}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1108789,"byte_end":1108808,"line_start":35,"line_end":35,"column_start":23,"column_end":42},"kind":{"Impl":{"id":869}},"from":{"krate":0,"index":20746},"to":{"krate":2,"index":1892}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1108930,"byte_end":1108949,"line_start":42,"line_end":42,"column_start":18,"column_end":37},"kind":{"Impl":{"id":870}},"from":{"krate":0,"index":20746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1109245,"byte_end":1109264,"line_start":54,"line_end":54,"column_start":6,"column_end":25},"kind":{"Impl":{"id":871}},"from":{"krate":0,"index":20746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/permutation_sequence.rs","byte_start":1109547,"byte_end":1109566,"line_start":65,"line_end":65,"column_start":14,"column_end":33},"kind":{"Impl":{"id":872}},"from":{"krate":0,"index":20746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1113654,"byte_end":1113656,"line_start":40,"line_end":40,"column_start":54,"column_end":56},"kind":{"Impl":{"id":873}},"from":{"krate":0,"index":20756},"to":{"krate":2,"index":1892}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1113865,"byte_end":1113867,"line_start":48,"line_end":48,"column_start":45,"column_end":47},"kind":{"Impl":{"id":874}},"from":{"krate":0,"index":20756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1117884,"byte_end":1117886,"line_start":165,"line_end":165,"column_start":49,"column_end":51},"kind":{"Impl":{"id":875}},"from":{"krate":0,"index":20756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/qr.rs","byte_start":1121745,"byte_end":1121751,"line_start":298,"line_end":298,"column_start":66,"column_end":72},"kind":{"Impl":{"id":876}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1123285,"byte_end":1123290,"line_start":42,"line_end":42,"column_start":40,"column_end":45},"kind":{"Impl":{"id":877}},"from":{"krate":0,"index":20772},"to":{"krate":2,"index":1892}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1123405,"byte_end":1123410,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"kind":{"Impl":{"id":878}},"from":{"krate":0,"index":20772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/schur.rs","byte_start":1138055,"byte_end":1138067,"line_start":493,"line_end":493,"column_start":52,"column_end":64},"kind":{"Impl":{"id":879}},"from":{"krate":0,"index":2841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/solve.rs","byte_start":1141408,"byte_end":1141420,"line_start":9,"line_end":9,"column_start":52,"column_end":64},"kind":{"Impl":{"id":880}},"from":{"krate":0,"index":2841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1156203,"byte_end":1156206,"line_start":57,"line_end":57,"column_start":54,"column_end":57},"kind":{"Impl":{"id":881}},"from":{"krate":0,"index":20785},"to":{"krate":2,"index":1892}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1156563,"byte_end":1156566,"line_start":68,"line_end":68,"column_start":45,"column_end":48},"kind":{"Impl":{"id":882}},"from":{"krate":0,"index":20785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/svd.rs","byte_start":1175803,"byte_end":1175809,"line_start":606,"line_end":606,"column_start":66,"column_end":72},"kind":{"Impl":{"id":883}},"from":{"krate":0,"index":16809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1181229,"byte_end":1181243,"line_start":44,"line_end":44,"column_start":40,"column_end":54},"kind":{"Impl":{"id":884}},"from":{"krate":0,"index":20802},"to":{"krate":2,"index":1892}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1181423,"byte_end":1181437,"line_start":52,"line_end":52,"column_start":31,"column_end":45},"kind":{"Impl":{"id":885}},"from":{"krate":0,"index":20802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_eigen.rs","byte_start":1189480,"byte_end":1189492,"line_start":304,"line_end":304,"column_start":59,"column_end":71},"kind":{"Impl":{"id":886}},"from":{"krate":0,"index":2841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1194496,"byte_end":1194516,"line_start":37,"line_end":37,"column_start":47,"column_end":67},"kind":{"Impl":{"id":887}},"from":{"krate":0,"index":20815},"to":{"krate":2,"index":1892}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1194707,"byte_end":1194727,"line_start":45,"line_end":45,"column_start":38,"column_end":58},"kind":{"Impl":{"id":888}},"from":{"krate":0,"index":20815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aras/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.21.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1198548,"byte_end":1198560,"line_start":166,"line_end":166,"column_start":59,"column_end":71},"kind":{"Impl":{"id":889}},"from":{"krate":0,"index":2841},"to":{"krate":4294967295,"index":4294967295}}]}